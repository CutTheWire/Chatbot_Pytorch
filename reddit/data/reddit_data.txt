I was just wondering,  1 year ago, what were you doing and did you have IT experience before this ?
Hey this is a great write-up.  Thanks for sharing what you have learned along the way.
This is very inspiring. I am like you were in the beginning and need a way out of this pit!

How many of these interviews did you do till it worked out?

Is there a lot of demand for junior level django / python?

What are these kinds of jobs paying?

How did you manage in your first week there? Did you feel overwhelmed or were you very confident?
Thank you so much for posting this! May I ask how long it was from the time you started learning to program until you were in a position to look for a job?

I am near the beginning of this path and, like you, am interested in a web developer route. I also do NOT have a CS degree (I'm a lawyer) and am teaching myself Python in my spare time (HTML/CSS/JS are next on the docket).

My wife suggested that I might think about ways to translate my skills as an attorney to the world of software development when the day comes for job interviews. For example, I am trained to understand complicated legal and regulatory schemes and break them down  into parts and explain them to lay persons. I know how to write in a proscribed language and syntax (ever hear of 'legalese'?) in order to attempt to produce a desired outcome. I am trained to read and understand long, complex text that is often self-referential and has a looping structure that contains LOTS of conditional logic (i.e. - laws and regulations). And I know how to take a big project and break it down to small, manageable steps that must all fit together to complete a larger task. 

Do you think there is any value in t any of that, assuming that I build the knowledge and portfolio to go with it?
Sir.... I have only read the first two paragraphs of your post but can tell this is the exact content I was looking for. I already appreciate the value and just wanted to thank you for taking the time to write all of this!
It is a very inspiring post, thank you!

What kind of projects did you have in your portfolio at the time of applying and how many of them?
[deleted]
please don't delete this post, i will follow this from step 1 to step Z.  whoever you are you have become an inspiration to me. Congrats on you for getting through it all!
Congratulations! 

Approximately how long did it take to go through each book?
Another question.... did you enjoy python from the off? Was it enjoyment/passion, or a desire to be good at it, that drove you ?
amazing, how old are you?
This post has a ton of valuable info and your dedication and grit are inspiring in the middle of a 3 month long job search. Thanks for writing it.
>	TLDR: If you want to change your life. Read it.

Probably the best one liner I‚Äôve seen lately. 

Kudos.
>Dress smart! Yes they may wear tshirt and jeans to work. You do not work there yet. Business dress all the time! Shirt, tie, suit if you can!

I disagree strongly about this for software engineer interviews. This is largely dependent on the company, sure, but I've done a lot of face-to-face interviews now with 5-person companies to super giant companies. If you dress in a suit and tie, you'll actually be overdressed and viewed less favorably by your interviewers.

You ought to aim, instead, for one "notch" better dressed than what you'd typically wear to work at these places. For a typical software engineering interview, a guy is fine coming to an interview in jeans or khakis and a button-down shirt and a woman can wear whatever the analog of that is. If you're interviewing for FinTech or at some old school place, a suit and tie might, indeed, be a requirement. But for most places, your advice is bad in this regard.
Did you have a full time job while you were studying? What was your schedule like?
Dude! What a great write up. My experience has been extremely similar to yours (though I‚Äôm only at the Django REST stage).. but we‚Äôve read the same books.. as well as I have Obey the testing goat patiently waiting for me after I finish Django REST. This post gave me so much motivation.. thank you!
Thanks for sharing! Will save this and read in more detail. Awesome.
Thanks for the post! Well written and very informative:) congrats on your results and determination
Super-hero.
Hey please never delete this post!!
Well done. I employ quite a few developers on the other side of the world and in my experience it is the self taught, motivated (read you,) devs that are keepers 

I hope quite a few youngsters read your post and take the advice to heart.
Thank you so much!

I know I'm "a bit" late to comment, but I just had to write some words of appreciation.
I hope you're doing fine since posting this.

Even though I got my Bsw degree almost an year ago, I'm realizing Social Work is NOT for me.
It's a fu¬©king nightmare!
With all due respect, I honestly don't understand how or why people do it. It's horrible.

The other day, I had a small chit chat with the ice cream seller, while waiting for my Smoothie.
To my surprise - He told me he loves his job, and doing it for almost 6 years.

It blew my mind! Not because it's weird to enjoy selling ice cream or something -
But because I didn't think people are actually waking up in the morning WITHOUT wanting to die, regardless of the type of their job.

Right there and then, I realized that I'M DONE.  

For the last couple of days (since quitting my unbearable job), I'm thinking about going into "Python".

I've seen a lot of people write about it as well - Except most of them already had experience working in High tech.
That's why I didn't believe I had a chance.

You really gave me hope and faith.
Thank you for that, and best of luck!!!!
I'm finishing up python crash course. Grasping everything up until matplotlib and pyplot stuff. Did you work on those until you got them down solid before moving on?
Hi mate. Just started learning python in the last couple of days, not sure how I stumbled into it, but loving it so far.

This post is class, and just wanted to say cheers
I'm 75% through book 1. It's great to see that we both started on the same book. It's taken my roughly 2 months to get this far but I've only been able to devote 1-3 hours per day at best.  


You are an inspiration for me to keep going! You rock, dude! And thank you so much for sharing all this!
This is a great summary, thanks so much. Corey Schafer is a favorite of mine as well.
Question: you mentioned that you wrote a few programs and uploaded them to github. Are these programs that can be used in the workplace? I‚Äôm looking to switch careers from accounting to programming and have written 5 programs that can be used in the workplace. I‚Äôd like to demonstrate my coding skills but at the same time protect my code that I‚Äôve spent countless hours of researching and writing. So I‚Äôm a bit leery of uploading my code to github where others can just grab it and use it for themselves. Any advice would be greatly appreciated.
Did you learn any database/ORM stuff as well?  You didn't mention it in your post, and figured I'd ask.  I've pretty much been going down the same route as you have, except with flask + using sqlalchemy.  I only have one web app on my resume, but it is pretty large.  I'm hoping I can start applying to places come Monday.  Thanks for your time.
For book 2, you read the whole 1,400 pages!?
great post and inspirational story! One question; now that you have realised your goals and are working as a software develloper how do you enjoy it compared to your previous job?
Thank you for this..
this is amazingly helpful, thank you for all of this!
What an inspiration!!!!! I saved this, I am currently learning Java and my next class is Python. We‚Äôre gonna knock it out! ‚úäüèº
Many congrats, where you based usa ?

self taught programmer is a good book he also run his video course now pretty expansive though.
Congrats bb, so proud of you
[deleted]
Congrats man your my hero, how many projects did you have in your portfolio? What did they say when then asked you about your past working experience or did you leave that part out? Why did you choose django? What's your title junior python dev?
Amazing post, your tips on dealing with recruiters should almost be a separate post, good stuff there. Please post follow up as your career develops. My advice would be to maybe slow down a little but don't stop learning.
This is the most inspiring motivating story I've read on this sub so far. I can't wait to read the update. It actually gives me hope for my own future and development.
Way to go! Thank you for sharing your path with everyone!
Congratulations!
Now this is what we call ULTRALEARNING
Congratulations!!!!
[deleted]
Wow first of all congrats. and Second of all, this is exactly what I needed to read. Thanks.
Looks like you burned through a lot of books in not a lot of time. 
How long would you say you spent roughly on each book? Did you take time to make any notes or did you just plop on to the projects as your main learning tool. Any other resources/websites you found particular useful on your speedy journey?
Amazing to see a story like this, really makes me want to get my head down and do the same, keep it up!
Wow! That is really impressive for only 1 year! May I ask, how much time did you spend daily on studying and building projects?
[deleted]
What about HTML, CSS AND JAVA? I have to go through all those before I even get to Python. I did HTML AND CSS last year, but haven‚Äôt touched it since.
This is amazing! Exactly what I've been looking for actually.

Already have python crash course and working my way through. This seems like a really good structure I think I'm going to try sticking to
Damn,  that's incredible, Am motivated
Wow, this was a great read. I'm on a similar journey of self-teaching and it's very hard to find a concrete learning path that people have taken. You really are an inspiration, I hope to one day be posting a similar story here. Treating learning like a full-time job is something I'm definitely interested in as I'm currently taking a gap year with supportive relatives.  
I read below that you were formerly working as a manual laborer, do you have a formal education (a university degree)?  
Also, I'd love to hear where you were hindered in your learning journey, i.e. rabbit holes of resources, books and such that were not worth your time, so as that I can avoid them.  
Good luck at your new job, man. You're a beast.
I really wish I could find similar guide like this but for data analyst role for someone with no IT experience.

Congrats by the way! üëçüëç
awesome post, congrats!
Thank you for the post, even though it is long, it was really interesting to read. Congratulations on your new job!
I think you are friggin awesome for this!  Thank you so much!!!!!  Big fan in Vegas.
Congratulations. 

I just started to learn Python and I settled on some of the books you recommend, thanks for confirming that I made some good choices. 

Have you seen [How to Design Programs](https://htdp.org)? What are your thoughts? Should I study with it?
Remindme!
[deleted]
How long did it take you to crush through all that material?
Really.  Thanks for putting this together.  I and I‚Äôm sure many others will use this.
Congratulations! And do you have fun programming?
I'm having your post saved. Thank you. Very insightful and loaded with practicals.
Post saved! Thanks mate! Excellent write up!
I dont have any questions. I wanted to say I'm genuinely happy for you, mate. Your post is inspiring and amazing. Wish you the very best. Hope you climb your way up in your career and settle in a job with fat pay and good working environment. Thank you for sharing with us.
Damn man, that's fucking motivating. I feel better about learning python. I am a bit on and off right now about python but your post has made me rethink the amount of work I am putting in learning it. 

Thanks for taking the time. Increible!!
Is there a way to bookmark posts? Commenting so that reddit remembers.
Hey man, congratulations! I am on a similar route for the last couple of months. Reading your post really motivates me and gives good advice on what to read.
You are what all of us are trying to be in the future. Thanks for posting this and, good luck!
This gives me some confidence, I picked up a few books six months ago and started reading through them but stopped - this makes me want to start again and make it through. Thanks for your post.
Great read! I think a lot of us are in a similar situation. It's nice to hear some perspective from someone a bit further. Thanks!
[deleted]
Wow. Your story and advices are so inspirational to me. I always underrated myself. I knew I could learn by myself, but sometimes I asked myself: ‚ÄúShould I go to college to learn these stuff?‚Äù. This kind of posts always inspire me. Good luck on new job, my friend!
Woah what a great story . Also quite impressive considering your background as a laborer and delivery driver. NOOOICE
If you dont mind me asking though. (i dont know people are shy about it) though what does someone with no IT experience and history in the sort as a JR dev make in England. 

Im gauging because i know about a good portion of what you written about (although i still think my coding skills suck) and waana know my general worth...(even though your in England and Im in cybersec)


Edit: also good tis on dealing with pesky recruiters. I havent had to deal with them for about 2 years but since im getting ready to quit. I forget how much of a headache and slimy (at least in the US) they are.
My problem with automate the boring stuff is that the exercises are out of the league you are learning at that point. For example, the comma project ... I cannot do it and when I try to find clues on internet people is talking about complicated things that I didn't read. But the book is amazing and teaches you how to build up little projects.
Awesome work mate
epic my brother, gives me loads of hope
Hey I really appreciate your post! I have one question though. How much $$ can a junior developer expect to make? I ask because I have always (naively) answered the question of how much I currently make and I feel like they use that to literally halve my pay since I seem like a push over. Maybe I'm just paranoid. It would help me to gauge from your experience. I can take a PM if you don't want it public. Thanks again!
I‚Äôm at chapter 10 in your first book suggestion looking to change careers also. Looks like a long road but at least I took a good first step.
So is it as lucrative as you hoped?
Are you able to name and shame the bad recruiter companies? UK based here too. Always looking to add more to my shitlist.
This is great story OP! Congratulations for being so motivated about this and making more people, me included, motivated to learn. Where are you located, in which city in UK did you look for jobs?
Dear god. Huge props to you
What kind of projects did you upload to your GitHub?
Awesome inspiring post, thank you!
You deserve a medal. Thank you for doing this. I hope to follow in your footsteps.
as others have said, extremely impressive.  how were you able to retain so much information in such a short period of time.  if i were to read so many books in succession, particularly the ones heavy in theory, i would forget most of what i've read by the time im halfway through the next book.
Congratulations man! I'm so proud of you. Good fucking job! Reading this post made me smile and gave me lots of motivation. Thank you so much for the great tips and suggestions. Lovely. I wish you well and have fun programming.
Awesome, thanks for sharing!!
Wow, that is impressive! This shows you have determination and a good work ethic. And the BEST advice of all, "...if you don't know the answer, just say "I don't know the answer" its good to be honest...". Absolutely. Good job!
Really motivating stuff - Well done and good luck in your new career!
Hey i can‚Äôt get an excel file to be imported into python. Making me so frustrated! Always an error and I‚Äôm following the steps from YouTube precisely! Any tips? I‚Äôm on Windows and I have pandas installed.
@brandybitch hopplakaas
need more details about interview and how it went. what they asked. did you freak out etc. 

thanks!
Didn't have time to go through the entire post but can confirm the resources you've listed are really good
Man that‚Äôs awesome, love the effort you put into creating a quality post. Enjoy your new career!
Learn the basics of DNS as devs. No, us sysadmins WILL NOT let you change DNS settings.
Sorry if this is in the other comments, and feel free to tell me it's none of my business, but how old are you? I'm also UK based , pretty similar story, trying to retrain from chef to developer and it seems like a lot of junior roles are specially geared towards younger people (I'm 30)
Man, thank you for posting this. Very inspiring, and a great collection of resources. 

I'm on a similar journey. I got a degree in political science and realized after I graduated I wanting nothing to do with anything my degree applies to, and i don't want to go to law school. 

So I ended up becoming a elevator mechanic apprentice (This is a GREAT job in terms of benefits, pay, and a strong union, but it's very dangerous and I don't enjoy it. Very hard, dirty work. You earn every dollar you make.)

And now I've been studying python the past month or so. How did you balance your time between work, studying, job interviews, etc? Anything you would do differently in that regard? Anything you know now you wish you knew when you started?
I am 35 yo IP engineer. Is it too late to change career. And how old are you by the way
This is a fantastic resource, thank you for taking the time to write it up!
Dude this is exactly the kind of inspiration I‚Äôve been looking for. I‚Äôve been doing courses over at DataCamp, looking into Dataquest as well. Do you have any insights on this way of learning? Also, when would I know I‚Äôm ready for pursuing a job in this field? I do not have any IT background whatsoever and in a similar position as the one you did when you started.
How did you motivate yourself to learn all of this books? Did something fall into you from the sky?
Thank you so much for sharing mate. Machallah

my question is : did u get into the freelance ?.

Best of Luck
Don't mention newboston. Bots and elitists will come to insult him and you for following him. He is the og legend which those guys will never understand
I hope some one else share his path in the cybersecurity field, that will be greattt!.

PS: i study IT but my problem is that i can't find a path so i always procrastinate.
Thanks for giving me a light at the end of the tunnel, well done mate
Great job man. I would of hired you based on your dedication and work ethic.
Pretty inspirational stuff OP. Thanks for taking the time to write it up and share your experience.
Congrats! Success story through and through. Also 100% what I‚Äôve been planning on doing, just needed the time and motivation to start the journey. Could you comment something, anything, so I can save it? I need as many reminders of this post as possible ha, can‚Äôt let this resource fade from memory
Great write up,thanks for sharing and good luck with new job :)
Great writeup. This assured me that I'm following the right path. I'm already working on my personal project and now I'll update my LinkedIn and resume as well.

&#x200B;

One question: Did you have anyone to guide you when you started with the preparation? Because choosing the right books is very important.
[removed]
RemindMe! 6 hours
One last question from me, sorry for bothering. 

Did you consider python wouldn‚Äôt work out during this struggle / process, and if so what would you have studied instead? Meaning, in general there‚Äôs not as many python jobs as there is java for example.
Thanks for this. Been learning Python for a week now and this gave me the little nudge to keep going. Great story, congrats.
I‚Äôm not interested in changing careers but I have a lot of free time, is it worth me learning and trying to get part time work?
keeping your post saved for later this month, thanks for your feedback :)
Dude, you are such a motivation. Thank you for this post!
Could you PM the links to the PDFs you found online? I just started learning Python yesterday.
Loved reading this! Is it worth going through all 3 projects in python crash course? I am almost done with the first half and wondering if I should go through the projects or start reading Learning Python and then coming back to them?
Excellent. Thanks for the insight!
Awesome job, man! Congrats!  


Does anyone recommend Python Crash Course: A Hands-On, Project-Based Introduction to Programming as opposed to Automate the Boring Stuff with Python: Practical Programming for Total Beginners for first Python book to read? Which is better for learning how to program in Python and really understanding the fundamentals?
There are very good advices on this page. I'm writing this post to remember this page and get back later. Thanks for informing us and thanks for your time.
Hey, thank you so much for everything you have written out and all the replies you have given. It has all been a massive help and congratulations.

But my question is, This is literally what I want to do. I have a HNC in Chemistry, dropped out of uni due to personal reasons and I am not happy where I am right now. And my friend is a junior software engineer right now and has inspired me to self teach as well reading your post has sealed the deal and it is 100% what I am going to do.

But basically, one of my projects is to build a website for my dad for his driving school and again I have no knowledge of this so far. Is it better for me to learn how to build a website and I assume using HTML/CSS or go straight into python and make the website at the end?
Saved this As I am from UK and doing a conversion software development MSci at University

Well done btw
This post giving me the motivation im lacking atm
This is fantastic! Well done, and thank you very much for taking your time to write this!
!remind me 18 hours
Does anyone has any views if I start learning Python from the Official Documentation will it be worth reading or should I start it from any reference book.
Do you recommend reading Automate Boring Stuff with Python first as opposed to Python Crash Course: A Project-Based Approach
I know I'm late but thanks, this is inspiring. I'm currently using "python crash course", I'd like to use python for maths and I'm curious about Django. Hope it's going to turn out well.
I came here from your latest AmA thread. Thanks a lot for sharing this.
Commenting you read later
Dude that was very inspiring. I‚Äôm struggling with list comprehensions, functions and knowing when to implement them when trying projects from scratch. I had no programming experience before recently completely my 9 hour Udemy course. Now I‚Äôm reading Python Crash Course and Automate the Boring stuff.
Can you link your GitHub page? I'd like to see the projects that you worked on to land your first job.
Thank you a lot for sharing! I have just started learning python online free, watching youtube, using some exercises, i love it!
Well done mate. This winter you'll be toasty inside instead of freezing your nuts off outside lugging bricks around üòÖüëçüèº
Hello. That's great. What do you add to it for the updated version for this year?
And for the computer networking book, do you need to have any background like a course on computer architecture or so to understand it?
Just came across this and wow, what a fantastic post! congratulations OP! I'm actually in a huge debate mentally with myself now whether I go down the JavaScript rabbit hole or I go down the Python/Django rabbit hole. I struggle learning JavaScript, and I find Python much easier to learn, but my focus is Web Dev, so I'm thinking either I struggle through with JavaScript, or I try and learn Django, and then eventually pick up JavaScript later when/if I need it.

&#x200B;

I'm London based and didn't see that many Django jobs, saw A LOT more JavaScript jobs, so wondered how you're luck has been since this post?
I've also been in a rut myself. Contemplating my situation and currently following more bad news regarding my process to join the navy. I've got 4 - 5 months of low wages jobs to apply to and deal with until I hear if I've been selected or not. Then restart the application process for the next selection board. Its a goal of mine to join the military but in the meantime I want to learn other avenue's before embarking into the navy 
So I took the initiative and decided to enroll back into junior college. Got classes for a fire tec and wildland firefighting. But the fire tec is from jan 4th ‚Äî Feb 14, hybrid courses. While the wildland is in March 14-18th. In-between I want to work on getting knowledge on front end developing.
I recently borrowed a book from the local library to begin with HTML, CSS and some HTML5.

I am interested in Js to but want to learn python as well. I feel Js is more  prevalent for jobs here in the US. But python does have a nice salary to go with it. 

I wanted to ask how long it took you to go through your self study's that ultimately landed you a job?  Like from your first days to you attaining your first job?
Love this! Thanks!!!
Thank you .I am studying Eric M. at the moment. Are you happy with your career path after 2 years ?
TC?
This is amazing to hear. I'm very happy for your success. I'm trying to learn Python myself. I've been back and forth over the last couple of months to years about what I want to do with my life after thinking I knew, and now I'm kind of back where I started. I'm pursuing Python development, but I got so frustrated trying to figure out whether or not boot camps are worth it that I'd rather just try and learn it myself. Thanks for all the information you've provided here.
Commenting for later reference!
Hi everyone, I actually found the first book on z lib . org, here's the link: 

[https://u1lib.org/book/4995914/5d84d3](https://u1lib.org/book/4995914/5d84d3)
Thank you so much for this post!
I wish I were you I am self taught but it is hard to land a job in this country.
Noice
I took a bootcamp a few months ago over 4-5 months. You may not remember but how long ddi you feel you spent learning and working on the django/api/development portion compared to the learning python itself?
do you have any links to your projects? or at least describe some of them?
Saving me this. Congratulations for the job
wow! this is a lot. thanks for sharing. it is much appreciated.
Thanks for the detailed post. It is really helpful!
Thank your for sharing this, it's great. Congratulations!
How long since you started your self taught journey till you got your first job as a developer did it take? 
Also great job on your journey!
Great job! üëè
Does this guide still hold up with learning Python?
Thank you broda for sharing how to learn
Good read.
\+1 for reading automation with python, great book to give you an idea of the depth of python.
This is so inspiring mate, thank you so much for your post!  


Literally, I been following this learning path. I read the book Crash Course on Python, Automate Boring Stuff with Python, Learning Python - Mark Lutz - finishing book soon. I want to follow the path soon starting Django.   


This post was made 5 years ago, do u think this path is still relevant, like the source materials from where to study ? Would u change something in your path now in terms of learning materials ? Because it has been 5 years maybe there is a different approach now and strategy
Thanks for the informative information!!!!
Zero IT experience, was working as a manual laborer and delivery driver
Thanks a lot! Just trying to help guide someone who is looking for some guidance
About 40 applications.
5-6 responses.
4 Face to face interviews (including technical tests)
2 offers! *edited

Is there a lot of demand for junior level django / python? Im in the UK. I have found the answer is usually no, you will find some junior adverts occasionally, however roles that I have seen that require 1-2 years experience I have still applied for with a good cover letter as I have had some companies get back to me saying they would be prepared to interview for a junior role.
Tell recruiters you are also looking for a junior role, as I have found they may call the company managers directly and find out if they are prepared to proceed with a junior level role.

I have found junior roles range immensely, from 23k-50k. I have been told many times what you get offered depends on how well you come across and how well you do in the technical test.

I am due to start soon. Only just accepted my offer but will definitely update!
Hi Marlowe,

You're very welcome!

From reading my first book up until today was about 11 months total. I started applying to roles about 2 months ago.

Unfortunately I dont think im qualified to comment on whether your current skills translate over to programming. I think it comes down to getting in front of an employer and nailing the technical test as well as being a good fit for the team.

I only know what I have learnt from the above post :)

Good luck with your journey!
[deleted]
I'm not sure how much there will be web dev / law crossover but one area I have heard of that might be a good match for your legal skills is in compliance. Particularly with things like medical records or other valuable data. Lots of places where the data needs to be protected or controlled to follow various regulations but actually setting up the system to do that is not easy of you don't understand both the law and how the tech actually works.
Out of sheer curiosity I‚Äôm just wondering why would you leave the legal profession where there is a certain level of certification or license requirements to a field that has no barrier to entry and that you can learn on nights and weekends on the computer  even as a teenager?
You're very welcome. I truly struggled to know what the right path was as I couldn't find a path from beginning to being job ready, so just wanted to share to hopefully help guide someone on the same path.
Thank you so much! I did mention in the post! 2 small projects, a REST API and a working website
All i can truly say is that i was not happy with my current life and financial situation and I truly wanted to have a better future. Yes I had days where I could not stomach looking at code and would not even turn the computer on. But those days over the year I could count on one hand.
I had to grind it out and get on with it. 11 months have gone so fast but at times it felt like it was never going to end. 
Commit to the process, read the books, watch the videos, build the projects, and you will eventually get there.

Everyone has their own motivations. I wish you all the best!
[deleted]
Thanks a lot :)
Thank you !
Roughly 4-6 weeks each book
I found python very boring up until I read django for beginners, thats when my interest for python jumped a mile. In terms of drive it was mainly a better future for myself.
Almost 30
I wish you all the best! Don't give up!
I don't think any reasonable person would look down on you for making an effort. I would rather take the risk of dressing too smart than not dressing smart enough.
If they look down on you for dressing smart and making an effort, do you want to work there?

Ofcourse, this is based on my experience, dress as you like.
I would agree with that, it depends on the place you are aiming for but I have interviewed and recruited several people with python skills in the UK over the past 7 years. The ones who came in wearing a suit and tie never seemed to relax in the interview and that did go against them in terms of how we saw them fitting in with the team. In all honesty it didn't actually matter to us what someone was wearing though, if they came across as relaxed, confident, engaged and assertive then they would be fine, for some people they will do that naturally wearing a suit and tie, for many people they won't and it doesn't reflect well in the interview. 

It also comes across as a cultural thing in regards to how the business operates, if I interviewed somewhere that expected a shirt and tie for interview then I really wouldn't want to work there in the first place as I wouldn't fit in with their culture, this is a two way street so I would never even bother going to interview if a suit and tie was required and would reject them as a possible employer.
So ... no tuxedo?
No, I quit my job. I was living with a family member. I have been broke for longer than I can remember. 

I treated this like my full time job. 7.30-8am, wake up, shower, breakfast. 9am-7pm learning.
Rinse repeat.

I estimated it would take me about a year to be job ready. I knew the only way I could learn and change my life was to commit to it full time.
Thanks a lot and I wish you all the best!
You're welcome
Thanks, you're welcome :)
Haha, not quite but many thanks :)
Thanks a lot! Hope it helps someone!
I made some shitty decisions in my life and I didn't finish even high school. Recently (less then month ago) I started learning Python. I'm not sure if I find a job as a Junior Python Developer or something similar. Probably not, but I'm learning becouse I like it. When I wrote a program for a very first time without help I was very satissfied. It was very easy calculator, type number x and y. but it still made me feel proud of myself and happy.
No. Don‚Äôt spend time on that. You won‚Äôt get anything out of it.
I've been worried about this too.  But, I think at the end of the day, you need to realize there are literally thousands of open source projects available for people to steal so if yours gets stolen, who gives a shit?  You created it.  Make it uniquely yours.  Someone may tweak your ideas, but I'm sure you've tweaked other ideas you've gotten from the net, books, videos, etc.
basic SQL for beginners tutorial as in my post on freecodecamp. I've used django orm for any database work.
Every page of every book. Think book 2 and book 3 were both 1600 pages each.
Compared to delivering parcels in the rain from 6.30am to 9pm. And doing manual labor in the winter. I‚Äôll let you answer your own question.
Thanks! üí™
UK, i will edit my post! :) and thanks!
You're welcome :)
Two projects, left out my prior work history as it wasn't relevant. Do what you need to do to get a face to face, and nail the tech test. Nail the test, work history is long forgotten.

Junior python dev.

Why did I chose django? Because in the UK thats where the money is.
Thanks a lot :) I appreciate your advice, will definitely update in few months.
Thanks a lot! and i wish you all the best! Never give up!
Thank you :) and you're very welcome
Many thanks :)
haha :)
Thanks a lot :)
You're very welcome :)
Thankyou and you're welcome :)
I read books alongside watching videos to get a better understanding, 4-6 weeks per book plus following the projects in the book.

Then building my own two projects from scratch. 

Any other resources? Is that not enough? haha. to be honest I have only put in the post what is worth learning. I have watched many videos and read many tutorials that are useless. The cream of the crop is in the post. I have filtered out just the best to help guide someone else.
No less than 6 hours every day, most days 8 hours, some days 12 hours.

Thanks :)
You're welcome and good luck. 

I'll be waiting for your post in a years time. Get it done!
I mentioned in the post i watched a 40 video series on HTML/CSS.
Good luck!
Zero education, nada. 

As far as books go im generally quite picky so I always look for good reviews first. I have not purchased a bad book to date, I did my best to try and find them all online for free. What I couldnt find I purchased.

It's easier to get stuck going from one 4hour long python tutorial to the next tutorial on youtube (I did this for too long) which is why I have only given two main youtube channels as resources. Please believe me when I say I have watched many youtubers and the ones in the post are all you need!
Sorry I can't give any advice on that particular book. Try to look for good reviews online of books. Generally at a junior level you will be required to have a better knowledge of python and your chosen framework rather than designing programs. 

Both corey schafer and WS vincent both have recommended books on their website. Check it out.
**Defaulted to one day.**

I will be messaging you on [**2019-08-23 00:39:45 UTC**](http://www.wolframalpha.com/input/?i=2019-08-23%2000:39:45%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/ctkypf/im_100_self_taught_landed_my_first_job_my/exml9ue/)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fctkypf%2Fim_100_self_taught_landed_my_first_job_my%2Fexml9ue%2F%5D%0A%0ARemindMe%21%202019-08-23%2000%3A39%3A45) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20ctkypf)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/c5l9ie/remindmebot_info_v20/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=Feedback)|
|-|-|-|-|
It depends on the demand in you local area. For every 10 jobs I found near me I would say 80-90% web based python roles were django, 10% flask.

Best to do your own research and commit to learning one in good detail. Most questions in interviews were regarding HTTP protocol, how requests work, rather than a specific django question (although this did come up once).
Check my post history. I picked up my first book 11 months ago.
Some days yes, some days no :)
I have no education what so ever. No qualifications. I will add this into my post.

I understand everyones situation is different. Good luck :)
if you're stuck dont get caught up on it. Move on and come back in future.
Comma project? What?
Junior roles salary vary massively depending on the company. Like I said in other comments, I've seen them from low 20s all the way up to 50k. I've also had recruiters tell me it depends on how well you pass the tech test. I never went in expecting my first job to pay handsomely. It was always about going somewhere I could learn and receive support from. The money will come later. (Although it is good now)
Yes :)
I would rather not. Like I said if they aren't prepared to get over a job spec, if they rush you on the phone, if they are not prepared to answer any questions you may have, then in my experience beware. Recruiters are meant to be representing you. Ask as many questions as you want. And don't let them steamroll you on the phone into sending your CV over. I always used to say "let me look at the website/company in more detail before I send my CV over" that gave me an hour just to reflect before giving the go ahead.
London
almost 30
Anything I would of done differently? Yeah, wish I had done this 5 years ago.
I am almost 30, I will probably be working for another 30+ years, it is too late to start? Absolutely not! Do what you enjoy. You are still young! If you are up to the task, pass the technical tests, and capable, you will eventually get your foot in the door.
You're very welcome :)
I did look into DataCamp when I first started learning. Decide which area of python you want to specialize in then become tunnel focused.

Data science is a different area of python compared to django.

Knowing when you're ready for a job takes personal confidence in your own ability. Take a loot at job advert postings and look at the requirements. Do jobs require a specific framework? pandas? numpy? etc. 

Learn one in good depth, build a project in it. And only put on your CV what you can genuinely answer questions in depth about.

Did I know I was ready for a job 8 weeks ago? Absolutely not. I gave it my best shot. If it didnt work out I was prepared to go back to the drawing board for another 3-4 months, build more projects then apply again. All interview experiences will help you learn even if its not a positive outcome!

Good luck!
No, I had to do all the research etc myself
It took me a while to be confident enough to move on to another subject as there was no feedback from anyone. All I can say is follow the projects in the books/videos etc, if you can read the code, understand it, and are able to customise/add to it then you should be confident enough to move on.
I looked up the demand for python developers where I live before I started learning. So I cant answer this question. Look what is in demand in your area. If the demand was for something else then I most likely would of learnt that.
I only skipped the projects as I felt there was no point in me copy/pasting code from the book as I always like to understand what is actually happening and what each line of code is doing.

Tkinter itself is poorly documented so you wont find yourself ever being paid to use it. Do the matplotlib project, its good to see how code can transform into readable graphs.

Only do the django project if you know how http/requests work. If not come back to it imo.
Read my post :) learn how requests are sent from the browser otherwise you will have big headache trying to write backend code.
I think I have detailed a video in the post regarding how requests work. But apart from that its up to you :)
Any book / video / documentation is good enough to learn the language, one is not necessarily better than another.
The python docs are great but sometimes a video such as the youtube channels i recommended might explain it in easier terms.

https://docs.python.org/3/tutorial/
I haven't read Automate the boring stuff. But from what I've read if you are able to read both then I think you should read Python Crash Course first.
Thank you. There are plenty of good youtube videos on different aspects of python, so you should be able to find someone to clearly explain it to you.
haha you're not wrong there pal. Thanks :) been there done that
Thats great you have taken a book from the library. Make sure you read it!

It took me just over a year to land my first job from the first day. 

I have heard stories about people doing it in 6 months and other stories taking a few years. 

So it completely depends on your own situation, how much time you spend on learning etc. 

Good luck :)
Yes definitely :)
I dont remember the exact amount of time. But your goal should be to only spend the amount of time on a project to learn what you wanted to learn.
Thanks! I think I‚Äôve answered it elsewhere in here but from memory it was less than 12months. Around 9-10 if im correct
For learning python alone, I would say try and find the most updated resources to ensure you‚Äôre learning the up to date versions of the language. 

The programming fundamentals are the same. If there are newer versions of books / videos etc make sure to get any updates.
Holy fucking shit, that's fucking epic. Wow that's what I call motivation. I have absolutely no reason to sit here thinking I can't do it. Sir, madame, or other thank you for taking the time to inspire us all by sharing your story. This is truly an inspiration to continue my path to python. Thanks.
[deleted]
[deleted]
Seems similar to my experience, I worked at a fast food restaurant (In n Out) then landed my first IT job as a sysadmin. Now I'm a devops engineer at Cigna, python has helped me in every position I've had so far, keep at it.
That‚Äôs awesome! Good on you, man!
I'm a warehouse worker, also just bought crash course last week, thanks for posting your experience this far!
I know i'm 2 years late but I just want to thank you for this post. I'm in a similar position right now to where you were and i'm looking to learn Python right now. This really gave me the inspiration i needed. Congrats on your achievement.
Really fucking amazing... great job.
How many hours a day would you estimate you spent over the year to get through 6 books of material?

Also what did your GitHub portfolio look like?
Congratulations!! 

You have given me hope! Currently a bank teller and I dislike it.
Damn that is absolutely great. Good on you man
Just came here to say congrats. Hope I had your commitment so I could change my career also
Congrats! I switched careers later in life as well best decision. Keep on learning! Great job!
You inspire and give me hope for a better tomorrow. Godspeed.
Very brilliant indeed. Keep up the good work, sir.
That's both mega inspirational and motivational!
Fucking legend.
hell yeah dude. this is what it's all about
Well, you are a genius or something?
What kind of Manual labour were you doing and how long were you in it for? 

I work in construction so I'm always interested in things like this. And also, how is it going 3 years on?

Thank you for your post! :)
Well done. All the best \^\_\^
that's so inspiring
You become a junior python developer in just 1 year? (I'm sorry I'm new to this) I've started my python journey too, just the beginning but I'm ready to give my all in.
I'm currently an admin, but I'm trying to build some python skills to bolster my skillset.
One more question if I could trouble you:

I'm wondering about portfolio/Github boosting projects. My idea for a first project is this - there is a small local museum in my city that my wife has some connection with. They desperately need a new website. But they also need some way to catalog the books and other papers they have accumulated over the years, both for their own records and for the benefit of historical researchers.

If I were to build them a new website that included a web-based cataloging application, do you think that would that be a good start?
That's fair enough. Either way, your post was inspiring and encouraging.
Did you have blank time on your resume and if so how did you respond to recruiters?

If you worked while self-studying, how did you manage doing this?
I will freely confess that I am one of those people who don't really understand what blockchain is. Maybe I should finally get around to learning about it. :)
That's interesting, I never thought about that but I will definitely look into it.

Thanks!
Because the law is a miserable profession that attracts some of the worst personality types. It rewards questionable ethics and poor behavior. The profession also typically holds one of the top 5 spots on lists of alcoholism, substance abuse, clinical depression and anxiety. There are lots of reasons for that but I won't derail this thread too much. Suffice to say, it's an awful profession. The statistics I've seen say that 10 years after law school graduation, somewhere between 50-60% of your graduating class won't be practicing law any more.

I'm 12 years in at this point...

And I say that as someone who works at a non-profit doing feel-good work for disadvantaged populations - it's STILL full of backstabbing bullshit!
Oh, I guess I missed it, thanks! 

By the way, have you already started working? If yes, then what it is like? Do you have any difficulties with onboarding as a person without IT background?

I am going to start to apply for junior Python jobs this fall and I do not have any IT background as well, so it is very interesting how the first days of work looks like.
I do hate my job actually. Despise it. This thread inspired me to work on a few practice problems for the first time in many months. Hopefully I can compound this initiative and eventually put in 4 hours a day like OP
Thanks
That's interesting. It has definitely made me want to look into Django.
wow even more impressive !
I've only had 1 place specifically say not wear a shirt and tie. Otherwise its always a 2 piece suit no question.
Company culture and self-awareness are both important, and there is absolutely such a thing as being overdressed. I agree with u/lanemik: aim to dress one notch above. Generally, for most engineering positions (and especially software positions), that means business casual, and jeans are usually fine.

At best, wearing a suit and tie would be viewed as silly at virtually every company I've interviewed at (in both the engineering and software worlds), and would not be seen favorably. There are exceptions, of course, but they constitute a minority. If it's for a management position, though, a suit is often appropriate, but not for a developer or individual contributor.

As a general rule, I always ask my point-of-contact at the company (usually someone from HR) what kind of dress is expected/appropriate for the interview. Can't go wrong this way.
I‚Äôm with you on this for the UK; you can‚Äôt go wrong with a shirt and tie for an interview for almost any job.

I now live Perth, Australia and it is far more casual, and it has taken me a long time to get used to. It‚Äôs very unusual for anyone at any level to wear a tie. Pretty much the only time you see a tie is in a court building! In almost a decade, the only times I have worn a tie was twice, for interviews. Haven‚Äôt worn one since, and probably never will again. I work with people at all levels of business, right up to top-level political offices and a tie is not required nor expected.

Bottom line; do your research on dress code!

Incidentally, I thought your advice for speaking to recruitment consultants was very good. If they ask you about other jobs that you have applied for, it‚Äôs purely so they can go and contact that company to get candidates in there; you may end up not getting a job because they put another candidate in! I was an IT recruitment consultant for a short time, and I also worked as IT Manager for a recruitment company. I know all their tricks! It‚Äôs just sales; most don‚Äôt care about the candidates (although there are exceptions).

Well done on your hard work. I hope you enjoy your new job.
I can tell you that, for example, amazon specifically says that dressing in business attire is not required and you should wear business casual to your interview. Inasmuch as you are evaluated by what you wear, and we seem to both agree that you probably are, you should dress the part. Too fancy is too fancy just like too casual is too casual. If you're trying to give advice that gives people the best chance at landing a software engineering job, and that seems to be a goal of your post, then business attire is bad advice except in the cases I noted previously.
in my experience this means wear clothes that fit you and are typically brand new (washed once) , so just smart casual basically. New shoes, hair cut. Comes off casual but very put together.
Maybe in several years when I go for mid developer :)
Only if it is one of those tuxedo t-shirts
man this is exactly what I‚Äôm doing. It‚Äôs been about a little over 5 months for me. thanks for the motivation man, wish you nothing but the best
I quit my job to learn programming last September, so it's almost been a year now. I started with Python, because I understood it's one of the most powerful programming languages, but after 6 months I switched to 
Html, CSS, Javascript. Now I am teaching myself React, Gatsby. I have started applying for jobs since last month and have got zero answers til now. I find it hard to actually practice what I learn, which tells me I haven't learned it well enough. I want to produce a project that will attract recruiters to me. I would love any advice you can offer.
Ah makes sense, explains how you progressed so much in a year. I was thinking you simply did not sleep for an entire year; work during the day, code at night.

Still very impressive progress. 

For anyone reading that cannot simply quit their job. Try and wiggle your python abilities into your current job. Is there task that could be automated which will reduce wasted time at work and boost productivity? Automate it, show your manager and stick it on your GitHub.
9This is actually the most important bit that you forgot to mention in your story. Some people might read this and think they can do it while having a full time job, kids and a rent/mortgage to pay. 

You managed to learn something while living rent free and getting all your bills paid by a family member. That is a luxury that most people can't afford. You should've started your story with this. I've actually not met any 30 years old men that can afford this. Was your family member paying for food everything else? 

When you take all this into account - is your story actually that impressive? You don't see students who've had their university fees and rent paid by their parents making a big deal out of the fact that they managed to learn something.

The impressive thing in this story isn't the fact that you managed to learn something in one year, but the fact that a 30 years old man managed to find him self in such an exceptional circumstance which allowed him not to work for one year and not starve himself to death.
You as well!
Dude stories like that inspire people. Not need for epic soundtracks nor special effects. Just seeing what one can achieve in only one year of time is something amazing. Big up!
Thanks for responding! Kind of what I figured. I felt like I was having to learn an all new type of language in a sense and I was getting frustrated.
I give a shit. üòÅ
Dude, let me just tell you something. That dedication is straight up awe inspiring. Thank you so much.
Yeah I could imagine as such, I was more so asking generally how you are going in your career, how you are enjoying it.
How did you find out where the money is? I find the multitude of career platforms more confusing than informative - yes there is a lot of information but it‚Äôs not as if I feel like getting the bigger picture, just lots of jobs.
You too.
Time to get started!!!
I relate to the watching those long python tutorials just to go and watch another with the same content, good to hear that those will indeed not help. I've found pdf versions of the first three books you recommended and will be starting them promptly.

I'm glad to read that you haven't had a formal education. I've seen way too many self-taught stories where the person has an engineering or science related degree which kind of skews the idea of whether a truly self-taught programmer from any background can get into the field.

I hope to see an update post in the future when you start at the job. :)
OK, thank you.
Damn, that is a ton in a relatively short window. I really appreciate your post. Going to try to follow your first couple read suggestions. I‚Äôve been in finance for the past 4 years, but I‚Äôve been most interested with getting involved with automation projects. Just concluded a python training through my employer last week, and this week we have been covering BluePrism. Wish me luck! Thanks, again!
 Yeah. In chapter 4. Page 102. Comma code exercise where you need to create a list and need to separate the arguments in the list with a comma and the last one must be returned with and "and " before it. I think I need to implement the separate() function but I cannot make it work. I'm reading the next chapters and return later like the other commenter said.
Thanks dude! You are an inspiration!
Oh cool, same bere.
That's reassuring to hear, I applied to one place who told me in no uncertain terms they would only get government funding for a teenager , and thus weren't interested ... Quite a blow to the moralle
Guess I better get to it then, thanks again for the post.
Personally there are a ton of "python" job listings but if I type in specifically django (and flask, etc.), I'm only seeing at best around 20ish jobs on indeed for my state. This leads me to question what these other hundreds of python listings are looking for as I'm trying to get into web development.
Thank you. I will be trying to get myself out of my current woes. 

I wish you the best. And appreciate your response. 
Maybe I'll have to respond here with my success story in the future :)

Best regards
Yeah I think my goal was to be good at Django and apis and do something similar to you with creating a project website. Are you still a junior python developer? Or did you end up promoting or getting a new job as a python developer.
That is amazing! Thanks for sharing your journey!
Yea this was pretty inspiring for a beginner like me, and I have IT experience. 

Hats off, OP
Thank you for "Sir, madame, or other" :)
If your still on Reddit after 4y how as your python journey taken you
Thanks a lot!
Amen
Thanks a lot! Hope it helps :)
Congrats :)
Can your share your path like this great guy did please ?
Much appreciated :)
Thanks a lot! Good luck!
Thanks a lot!
Please don't get caught up in the intricacies of hours spent per book. I was learning 6-8hours on average every day, sometimes more. Roughly 4-6 weeks per book as most things in the book would require me looking up videos in more depth to gain an understanding of the subject in front of me.

Two projects, covered this in my post :)
Absolutely! That sounds much more detailed than what I built! I'm sure that will satisfy any employer! Although I recommend making your own post in /r/learnpython for any additional help!

Good luck
Not starting working yet, just accepted an offer today. But will definitely update in a few months.

Good luck
Hang in there man. I'm rooting for you.
Why? 30 seems old ? :-(
Thanks a lot!
Thanks, I appreciate it can differ from companies and countries!
I usually leave the jacket at home unless I'm interviewing for something in management.
I agree with this, best to ask what the dress code is.
I am not in america, I am in the UK. I was also not interviewing anywhere that had a dress code specified for the interview. Amazon may have their own dress code. But they do not reflect majority of UK businesses towards dress code.
well, guess I'm totally boned. I have a full time job and cant quit. I program 4AM-7AM, but thats nothing compared to a full day.
Thank you! I wish you all the best aswell!
I had this problem when I first started learning python. It was hard to know what to learn as there was so many things out there. My advice would be to see what jobs near you are looking for. Pick front end only or backend only and focus specifically on that. Chose a framework, could be a javascript framework or backend django/flask etc. build the projects and ram them in employers faces.

Either focus on python with a framework, or front end with a framework. Dont try and balance too many plates.
What a horrible nasty comment. It‚Äôs a learn python sub. To try and help each other. 

Where is your post or comment trying to point people in the right direction?

Congratulations on contributing nothing to this post except vile, negative drivel.
Thank you so much :)
I‚Äôm enjoying it a lot thank you :) its definitely going well :)
Look on a job board website, indeed, monster, glassdoor, linkedin jobs.

Type in "python developer" and voila.
Thanks and good luck!
Oh ok I got you. I realize I never fully read this book or did it's all of it's practice tests.LOL.

I did have it open on my computer and just looked at it (as I often use it for quick layperson realworld reference).

Though, I dont know what that chapter taught as that's one of the chapters I skipped. Though, if taught you about the `list.pop()` function that is what I would use while checking the `len(list)` on each iteration to see how many remain and if it equals to one then add the `"and , "`  + `last item` before the final building of the string.

Though I dont know what they taught you up in that chapter so maybe they didnt. Though check out `help(list)` for all their methods
make no mistake, you are competing against graduates with very good degrees, some no doubt have very good corresponding projects on github.

What do you need funding for? Learn on the internet, build your profile and put yourself out there. Contact as many companies need be. Applying to 1 or 2 companies won't get you anywhere.
Wishing you the best. Stick with it! It will come off eventually if you keep putting the hours in! I know because it worked for me!
Sir, madame or alien
You are most welcome indeed kind individual
Bloody hell! This is amazing!!
Yea I can do a similar write-up sometime tomorrow.
> I was learning 6-8hours on average every day, sometimes more. Roughly 4-6 weeks per book 

Wow, that's a lot of time!

>
>Two projects, covered this in my post :)

Sorry. I missed that part.
I'm 30, in a similar world and feel quite confident in my chances :)
[deleted]
Anyway, I think the rest of your post and advice is pretty good, and thanks for sharing!
There are lots of Americans or people applying to jobs in America on this subreddit. You should consider updating your advice to reflect this.
Don't be silly! Just keep learning! You can still do it! Its just I chose to do what was best for me! Everyone has their own situation. Wish you all the best mate. Please dont give up!
>I estimated it would take me about a year to be job ready. I knew the only way I could learn and change my life was to commit to it full time.

Don't be crazy, 3 hours a day is still 21 hours a week. You may also learn faster or utilize different (or more effective) resources. You can probably also catch up on weekends as well.
If you have existing knowledge and experience, you can apply that and build on it.

Learning is a journey, and everyone has strengths and weaknesses. Just got to keep at it!
I greatly appreciate the time and effort that went into this post and your answers to everyone's questions. I am soaking it all up, will focus my efforts. Thank you man!
Hummm that's interesting. I'll try later and check if I can finish the project. I didn't have problems to finish the MIT projects in the course from edx but seems like the exercises from ATBS are more advanced and based on real life problems.

Thank you for the advice :)
Hey hi. I don't know why but I feel like I need to tell you. Right now I'm on chapter6 of ATBS and it's talking about string manipulation. Now I understand how to do it, and with your tip it's very easy.

Even doing the edxMIT course about python i forgot about this. Thank you again.
It was funding for the employer, basically they don't pay the salary, they have the government do that for them, I guess some sort of apprentice thing... And yeah I'm used to applying to 50 odd jobs at a time, it's a numbers game for sure..
I know it's a little late now, But hey can you share a write up like this guy did please?
I'm excited to read it.
Still waiting on thay write up...
No problem :)
I'm actually 31 and i restarted a master degree 2 years ago.
I dont feel old yet, seems that i wrong :)
Gj OP anyway !
37 (and a half) and strongly considering the same thing. I think it‚Äôs more dangerous these days to expect your career will be around as long as you are. I have 30 years of working life left and am sure my job will have been ravaged by coders before I get to retirement.
Most people change careers several times in their life. Hell, my wife changed careers just shy of 50. My sister-in-law changed to nursing around 50 as well. 30 is very young.
Many thanks
Thanks I have done that!
I only go to college classes 2 days a week (programming robots) and they are 3 hour classes with projects at home. And I still learn. So all together maybe 8 hours a week?
No problem brother. Glad I could assist. And this message is ver appreciated as I still consider myself a python newbie. Hah!
[https://www.reddit.com/r/learnpython/comments/tf3929/my\_career\_path\_going\_from\_zero\_experience\_to\_a\_sr/](https://www.reddit.com/r/learnpython/comments/tf3929/my_career_path_going_from_zero_experience_to_a_sr/) There ya go
True story, gimme a sec
I don't think age is a barrier anymore into something like this. Employers never ever ask your age through an interview process, I assume to avoid any age discrimination type problems.

If you are capable of doing the job what does it matter 28 , 39 or 48?
I'm 52 and changing careers for the 3rd time. Learning Python, with a minimal coding background, but 18 years in IT support, so it's more of a shift rather than starting over from zero experience or knowledge. 

I have to admit, every time I get an error message, I'm more excited than when the code runs perfectly. Heh, way more fun going on a bug hunt! This week, Tabs are devious little bastards! But, I'm learning and enjoining the challenge.
The compound interest of life - doesnt matter if its half an hour or 4 hours a day, consistency leads to growth, growth leads to change, change leads to a new life.
> Okay, this is probably going to sound super dumb

Nope. Enjoy that feeling.
Victories are victories, regardless of size.  Enjoy the feeling! :)
Now you‚Äôll be trying to automate everything‚Ä¶ and you won‚Äôt be satisfied with ‚Äúgood enough‚Äù. Plodding through hours upon hours trying to optimize some inconsequential details when just doing it manually would save you all the time that you spent working on it already. 

Oh the humanity!

But also, congrats. It does make you feel like you have an ‚Äúinsiders‚Äù view of things once you build your first program.
THIS is why we do what we do. :-)
Congrats. Soon you‚Äôll be fiddling with classes and objects and building APIs, maybe training some models along the way. Good luck on your long learning journey ahead.
No matter how simple the script, the first time it runs and executes properly, it's magical.
welcome to the fold üßô
You feel like it because you ARE a sorceress, you literally just rearranged electricity to travel through rocks and do your bidding.

So hell yeah! You earned that confidence boost.
[The two states of every programmer](https://i.imgur.com/dzbQCj4.png)
> Okay, this is probably going to sound super dumb....   

This line kinda does a bit. The rest of your post however is awesome. Don't pull yourself down. It's a victory for you. Enjoy it and share the happiness like you're doing now. Your enthusiasm is your drive to keep going so don't make it a small thing even to others. It'll affect you too.    

I think what you built is awesome. I often talk with API's and handle the data but I have no idea how to download a file yet. I'd have to look it up. I never had the need to.     

What do you mean with a folder of your choosing? Did you struggle on where to specify it?
Congrats! :)
I‚Äôm a full time software engineer and this isn‚Äôt dumb at all. This is the exact feeling I try to chase at work every day. Good on you and keep up the awesome work
If I can offer anything for you to take away from this, it's that anything is achievable if you work towards it.

You'll undoubtedly encounter more barriers and such gong forward, each one seemingly harder than any prior. Don't ever stop - all the past ones will seem easy, but they've only easy *after* you did the work - this next problem will be hard, and then it'll be easy.

That's what learning is.
I feel you, it reminds me of my first project.  At work we had to take pictures of several things daily, but we only ever needed to look up a few pictures every one or two months.  Most of it was pointless cya.  

My script took the files and sorted them into nested folders year > month > day based off the meta data of the picture that stated what day the picture was taken.  And it was so much easier to keep track of and find things, and instead of unloading the camera daily it void be done weekly or once it's almost full.  That was 5 years ago and I'm still proud of it.
GET IN!
Come back in a year and try to refactor your original code. You‚Äôll be amazed at the progress and look back at your original code with a second sense of accomplishment. Well done. Go you! Cheers üçª!!!
I've grown to learn that part of programming is spending hours to do something that only takes a minute. 

I've personally spent longer automating tasks that are so quick that it's still a net negative in time spent not having to do that task anymore. But what you get is the experience doing it, so your next ones take less time.
Great! Im feeling that too in a small project that im building. Seeing it work does feel like we are wizards :)
Now you must never touch the code again, or it will break and never work
Congrats! Automate all the things now!
With great power comes great responsibility. Remember that Popularweb6321, remember that
nah. its real. welcome to the world. your journey now begins
> You're a wizard PopularWeb6231!

- Hagrid
$$$$$$ headed your way
That‚Äôs awesome.

I got a new work machine and set up a virtual environment for an existing script and felt like a genius when I was done.
becoming a programmer sometimes is just chasing that 1st high ... enjoy, its incredible
This is the entire reason most people learn coding. 

You're speaking the language of a rock here, *and it's doing what you tell it to do*. I mean, seriously. We took a weird rock, shoved lightning into it, and forced it to think about things for us. *And you're ordering it around with a pile of magic spells*. Who wouldn't feel amazing when it actually listens?
I‚Äôm just getting started and I‚Äôm really excited for you and can‚Äôt wait til I can take my first victory lap around the living room. Enjoy it!!
As Arthur C Clarke said, "Any sufficiently advanced technology is indistinguishable from magic."



You really are a sorceress.
My boss handed me a task to do when I got hired. Basically, it involved downloading an attachment, opening it up in excel, saving it in another format and then importing it. It was a simple task that only took up 5 minutes of my time, but it got boring, and if I took a holiday or sick day had to schedule someone else to do it.

After discovering python, it does it all for me and I never have to worry about it not getting done.

Like you, I was seriously impressed with myself and tried to show my wife. She called me a nerd. I told her yeah, I am, but I'm your nerd.
You‚Äôre one of us now. Expect your sorceress hat and robe shorty.
Add your script as your first entry into your ‚Äúcookbook‚Äù.. will be interesting to look back after some time has passed and your skill level has increased. Also a great tool for portfolio building if you decide to eventually turn coding into a career choice. GL OP!
Congratulations!!!! 
This is an awesome achievement!   
Despite how it looks, these things are can be very tricky to get a grip on. They might look simple to people who don't know anything about it, it can all be pretty complex under the hood.  
Bask in the glory of your achievement!
There is one important thing for you to think about it!
Progranning is Not like walking.
Everyone here learned it with lots and lots of time.
So.... We remember our first wins... And our numerous losses üòÖ

That makes those communities much more supportive üòä

So dont feel sheepish telling anyone your win.
Just enjoy it ‚ù§Ô∏è
You're not a wizard, you're a python tamer
The only two feelings of a programmer:

- I am God and you all need to worship me.

- I have no idea what I'm doing.

About what you did, it's not dumb, programming is super cool and be proud of yourself (because I am proud of you (I love when people learn things and see the value of that)).
And this is how SkyNet started!
I've been coding for 30 years and still have these moments. Celebrate them every time.
Dude, the feeling that you have is AMAZING. we have all had it at *EVERY* level. Getting it to work (doesn‚Äôt matter what ‚Äúit‚Äù is) is a fantastic feeling and you should never feel bad for having it. Don‚Äôt let yourself get jaded by the ‚Äúscope of an accomplishment‚Äù. Was it meaningful to you? Yes -> then it was meaningful, period. Hard stop. That‚Äôs it.  

Good for you. I‚Äôm proud of you. I‚Äôm happy for you. Keep up the hard AND good work!
Congrats. By solving the problems you've managed to become a programmer.
Totally with you! I have just made my calculator without looking for ready decisionsüòÖ Same overwhelming feeling of success! And the best is that i so much enjoyed the process of working on my task‚ò∫Ô∏è! Its total meditationüòá
You are a SORCERESS!!!
Congratulations
If you show us the code, we might be able to give you some pointers? But whatever the case, congratulations!!!
I feel this way everytime I do something small and stupid or  big and complex with python. It's amazing you feel that way, you will probably have a bright future with python if you keep building things. no matter how stupid they may seem, it takes a lot of effort and I'm sure you learned a lot.
It‚Äôs like George Hotz said, it‚Äôs magic.
Congratulations and keep up the good work!
Congratulations! It feels amazing when things work!
Fuck yeah! The more you practice magic (programming) the more powerful you will become. Building yourself a useful tool is a challenging task, no matter what your experience level is.
Great work!! It‚Äôs so satisfying taking a boring tedious manual task and consolidating it to hitting run. Or even scheduling the script to run if you want to get really fancy!

Sometimes others aren‚Äôt impressed until they‚Äôre the ones dong that mind numbing task and you say, ‚Äúyou don‚Äôt have to do that anymore!‚Äù
It's just a beginning! Congrats!
Love it! Congrats!
Great work! I would like to create a script that scans all of my photos exif data and then renames them based on the date in the exif, compiles the dates by month and then puts them in folders for the year. I am sure this already exists but making it myself would be a rewarding challenge.
Cool! Keep doing this - it's the way to get good at it. But bask in your greatness for a while - you've earnt it.
Cool. Just curious, what is the purpose of the files? Or were you just messing around to see if you could set it up? Either way good job! This will definitely translate to w/e job you have. Start automating and then sit back.
That‚Äôs awesome!!! I haven‚Äôt gotten to that point yet. I get excited when I write a block of code and it does what I want. I haven‚Äôt used it for a real life problem yet. 

I show my non tech wife code I‚Äôm proud of sometimes, but it is lost on her, but she is happy I‚Äôm excited. Lol
It doesn't matter the scope of the problem, joy of programming is to solve the said problem. When you write something that works and solves a problem that you are invested in, the dopamine hit is something else.
Enjoy it! Even the smallest things are quite awesome, especially when it gets you out of doing manual work üòÅ
This is the way
Nothing has been more satisfying in my career than solving a problem and saving time via coding.
Awesome! Great job and keep learning and growing.
> it's just a file but .... 

no it isn't.

You had a problem, and you killed it :)
Mind if I ask you how you do this? I am interested in doing something similar
"and I feel like a goddamn SORCERESS"

this made my day
Best part is there's always something new to learn so you never have to stop feeling how you're feeling now
This rings so true to me right now!

I spent a lot of time earlier this week figuring out a python script (one of my first real world ones) to auto fill my timesheet.

It sounds pretty basic but since I know how to find web elements and select them I realized I can use a similar script to auto submit tickets for me when I needed to put in ~120 tickets yesterday.

If I hadn't done the "smaller" timesheet one I wouldn't have had the confidence to even start the "larger" one.
Awesome!!  I learned late in my life, that I‚Äôm a project based learner, since then life has changed.  Keep it up, don‚Äôt ever let that curiosity flame fade.
Success! Well done.
Congrats, I remember the first day I wrote a program that opened a file (it was on a floppy disk)  and wrote to it, nowhere near as an achievement as yours, but I was happy as a pig in shit, a long time ago, but your post made think of that moment.
Its amazing that feeling! You got it girl!
Woo-hoo - this should motivate you to try something harder on a Friday
Congrats! Welcome to the club :)

> but I had to navigate around so many barriers to make it work, and now that I've mastered this, so many other amazing projects feel accessible and understandable to me

This is the core of being a programmer--what experienced programmers understand and new programmers struggle to learn: programming isn't about a language; it's about problem-solving.
direful cooperative scale aspiring dolls uppity reach piquant humor humorous -- mass edited with redact.dev
It always feels sooooooo good when a code works the way you wanted it to. Congrats!
Cherish this feeling! You're doing awesome
That feeling never goes away, enjoy it.

Yeah, it's pretty trivial, but that's ok. The process from 0 to functional thing is a chasm. Bridging that is worth being proud of.
office wide profit gullible deranged sip summer skirt school fuel ` this message was mass deleted/edited with redact.dev `
Congratulations! Also welcome to the never ending rabbit hole of learning, that is called programming lol
Well frikken done! Bask in your achievement and may there be many many more.
That‚Äôs awesome! How long have you been learning?!?
Congrats
Take that W
Scripting is incredible. I have to download monthly pdf statements for my business and I just download them - my scripts and crontab sorts them for me!
This is EXACTLY the kind of thing I learned Python for. Way to go, you deserve a crown!!
Enjoy every second.  It gets better üòÅ
Excellent work.
Hell yeah, keep it up!
I can‚Äôt upvote this enough!
Well done, each accomplishment accumulates, that feeling never goes away at least not for me.
Don‚Äôt even know you, but I am feeling proud of you right now!
Yesssss ... it's like crack!

It keeps you going through those stretches where you're banging your head and spewing profanities at the machine  ... and then you get something else to work and you fist pump the air and keep going!!
This is the only way to learn, in my opinion. I could do hundreds of tutorials and never retain a thing, but one simple project where I had an actual tangible goal that was important to me was all it took to finally stick and start the momentum toward being a successful developer.

Keep it up!
Someone told me when I started that no one just RUNS A MARATHON. They train and start small. 

Every victory is a victory, enjoy that feeling of it all working‚Ä¶until you start a new project and do it all again lmfao
Congratuations
Man.. same feeling when i finish coding something that took me 3-7 days to make it work.
Fantastic! Absolutely love hearing about these successes! ü•∞‚ô•Ô∏è
You have discovered the joy of programming! Getting a dumb machine to do what you want is incredibly satisfying!
Congratulations
Here are a few ideas: https://github.com/NARKOZ/hacker-scripts

The story in the read me is funny. Found this because a coworker asked if I was the person behind this in an article talking about this repo! ü§£ Automating anything always feels good!
Congrats!!! Being really new to the learning experience I can only imagine how gratifying that must feel.
I don‚Äôt how to reference other files or write other files, I‚Äôm super new but I have to put everything in the script that is m going to use.  I wish I knew what you know.  I have written stuff for work(super minimal) but it‚Äôs a great feeling when it works, even at my level.
When something you created works, it feels goooooooooooodüòÑ.
That's awesome! Congrats, it sounds like a great feeling, savor it!
Congrats. It's moments like this that make the learning worthwhile.
Congrats on your success & thanks for sharing‚Ä¶i‚Äôm feeling inspired!
Well done :-)   
This is something you can build on  :-))
I love how supportive everyone is good job bros
Excellent job!  You should never feel dumb when you complete a project and it works.  That is what's called learning.  Next time you'll be right on top of it.  You are taking the steps to becoming a developer.  Congratulations!
Bask in that feeling and let it motivate you to continue to learn python
Congratz! It really feels great and accomplished to complete a proj that helps your daily task
Very nice! My advice would be to use the post() method from Python's request library. Doing it this way means you can bypass mocking the button click with Selenium, and since post() is a blocking call you don't need to manually insert any sleep statements. 

Though, all that said, if it works it works!
omg aww ü•πü•πcongrats
This is a common problem! There's actually a book about it, "Automate the boring stuff with Python."

We have all kinds of mundane, repetetive talks that we do, constantly. With our devices, these sequences get really annoying. It's the same thing, over and over.

When we create a tool to do these things, we get excited, because all the frustration gets released when the script runs. Other people don't have this reaction, because they didn't experience life without the tool.

Explaining your creation to someone that has no use for it will always end up like this. They have no common ground, and therefore can't have empathy.

This is not your fault, and it's not theirs, either.

You can come here and share, and we'll give you praise and high fives, cuz we've been there.

Keep coding!
We all started somewhere! It feels sooooo good having your first victory in the form of something that has actual utility for you vs a tutorial or learning assignment. Keep it up!

I just set up a system that forwards webhooks from a service I register notifications to, onto another service that forwards these hooks to my local machine where I have a little Flask server running that grabs the JSON data from the POST results and updates a local JSON file with it where It will then be queued before it uses that data to look up the relevant objects in a local encrypted JSON store. Just gotta implement a functional file locking system and then that last part will be automated. I freaking love python.

Although the open ended nature of it has led me astray from conventional design patterns and has me shaking my damn head at how sloppily I‚Äôve thrown everything together.
I'm a WHAT?
Now the fun part is improving it üòä

Try using https://pypi.org/project/requests/ and https://pypi.org/project/beautifulsoup4/ to ditch the full browser-in-memory (selenium)

Also, try using pathlib https://docs.python.org/3/library/pathlib.html
Sincere congratulations! This is *the* most important step on your way to programming - exiting the world of toy programs, scratching a personal itch and realizing on a gut level that this is largely what it's about. I hope you'll be able to retain at least part of that wonder as you become more proficient. Sky's the limit!
Be careful, this gets edictive!!
Wizard! Wizard! WIZARD!
This is amazing, I'm really glad for you. It's really important to celebrate every single victory like this, no matter how big. Soon you'll be addicted to writing automation scripts for everything. You're just scratching the surface in terms of the joy you'll have with programming.

Remember that you only need to figure out something once, and once you do, you'll be able to implement it really easily (just look at the source of your script), making you more and more efficient with every program.

I took a look at your script, and I'll provide you with some criticism. Do not take this negatively, but instead as an opportunity for feedback.

* `driver.implicitly_wait(int x)` \- according to documentantion, this function dynamically waits for DOM elements to load before searching them, not for things to download, and that's why it won't wait for the file to download.
* Using a simple `time.sleep(int x)` to wait for a file to download is suboptimal: what if the file takes more than the specified seconds to download? Instead, try using a loop that waits for 5 seconds and checks for the file, that will continue to wait if the file isn't downloaded yet. This is probably not very important in your case, but it's good to know possible breakpoints in general.
* This is more of a personal preference, and many might disagree, but I believe you're overusing comments, especially in `rename_file.py`. I believe your code is cleanly written, and as such, self-evident -- there's no need to clutter it with comments. If you feel like they help, then by all means ignore this advice.

Either way, this is a great start (definitely better than mine lmao)
Is Indescribable the feeling of having it done by your own hands. Keep up...
The word wizard origins from the word wise (source: something related to Harry Potter. Can't remember more)

Next step: r/learnjava (or .NET, but I think java will give you an experience that is more different to python than the C family)! JetBrains IDEs heavily recommend.
Fuck yea dude it‚Äôs the greatest feeling usually followed by ‚Äúlooking over‚Äù some ancient legacy code and then the feel goods go away.
Enjoy the victory! It‚Äôs when you start putting programming to real life problems (small or big) that you start falling in love with it. And that‚Äôs only the beginning of a hell of a rollercoaster ride!
I remember that feeling. I wrote a webscraper that wrote excel spreadsheets for different items/models/prices/recently sold prices. I built/sold it to a resale business for some change.

Looking at it now, it's terrible lol. There's virtually no error handling, I could've used csv's and made it run 10x faster, a gui or some other features like progress bar would've been super easy to implement and polish a bit.

The beauty of coming back.
OP I‚Äôm proud of you! My wife and I are both learning too, and we‚Äôre not at your level yet it hoping through more studies and trial and error we‚Äôll make this breakthrough one day too!

Edit: just looked at your code, my goodness that looks complex! Great job!
Good one
be careful, wizard powers can be dangerous. but you should be proud. congrats!
Solving a real life problem by coding for the first time is a really awesome feeling.
For me it was just recently when a professor was really late putting out the exam results and no one liked the constant refreshing of the page, so I decided to make a python script that runs every 5 minutes and uses two text files to store the content of the exam results page. One text file stored content from previous run and other stored content from current run.
After collecting data, it compared the two to each other. If there were no differences, it would just overwrite the old file. But if there were differences found, it would send me an email, alerting me of the differences. I was super proud of myself for coding that piece.
Congrats. Keep the üî• burning
Keep it up!
Learning Python can be hard, or even frustrating at times, but it's well worth it.
As for your project, great job!
Yeah, knowledge turns muggles into wizards
for it won't last long.
It's dopamine.
Still remembers 2 years ago when first starting out ! I would feel like a real life god for making a system 32 deleting app lol ( while playing some random goofy music)
Two relevant xkcd:

Automation: https://xkcd.com/1319/

Is it worth the time? https://xkcd.com/1205/

I try to keep the premise of both of these in mind whenever I feel the itch to get clever with a script versus simply brute forcing a task manually.
I am already feeling the temptation to do this!!! This is going to be super dangerous for me because I have terrible ADHD that makes me forgetful, so my brain is whirring with the possibilities of all the things I could automate so as not forget. When in reality I should probably just like, set a timer on my phone for myself or something ‚Ä¶
Yessss, I somehow end up editing my scripts everyday lmao
>It does make you feel like you have an ‚Äúinsiders‚Äù view of things once you build your first program.

So true. When I had been coding for a few months, I was finally starting to understand the basic logic behind some general stuff. But as a result, everytime I saw a cool feature in an app or website, I immediately started thinking about how the code behind it could look like. It was so much fun
I never like this notion, to me automation implies it's done more than once. Over time you're definitely saving time.
Exactly what I intended to write. :-)

And congrats to OP.
Thank you so much! My end project goal is to use Python to analyze campaign finance data to (hopefully) promote transparency/shine a light on some of the ‚Äúdark money‚Äù moving around
I started learning 100 days of python and gave up as soon as she introduced classes. Is it considered an advanced concept? Your comment suddenly made me wonder.
Yeahhh that's another perspective to look at it haha
Enjoy!
Hell yeah Bobby Pine you‚Äôre a rock star
happy_tear.drip() ü•π
Thank you so much! This means a lot. Baby steps, you know? :)
Yeah, I‚Äôd love to!! What‚Äôs the best way to do this, in your opinion? Should I put it on GitHub or something?
You need to learn about imports! I actually made a module that needed to imported in the program I mentioned above (the re-name the file by date function ‚Äî I figured that could be recycled for other programs later.) Plus this allows you to access all the cool content other developers have already built for Python integration. Here‚Äôs a good tutorial: https://www.digitalocean.com/community/tutorials/how-to-import-modules-in-python-3
OMG, I saw this when I was scrolling Amazon to find the first textbook I used. Thank you for reminding me! Can‚Äôt wait!

And yes, I will be sharing my victories with this community from now on! I‚Äôm honestly blown away by how wonderful and supportive everyone has been.
I tried this but it kept getting hung up on the fact that it‚Äôs an ASP form!! I kept getting access forbidden messages when using request. Is there a better way to access data through these types of forms? I have a bunch of different exports I need to automate that use this type and right now I‚Äôm writing scripts that go through and individually click all the buttons üò≠ it‚Äôs laborious. Definitely open to an easier way!
Thank you so much for the constructive feedback! I really appreciate the explanation as to why driver.implicitly_wait() wasn‚Äôt working. That makes a lot of sense. Your solution is excellent and absolutely applicable to further downloads I want to automate, as this particular file is on the smaller side of the exports I need.

I also appreciate your perspective on the comments. At this point, the comments are more to help guide myself! Since I‚Äôm so new, when I‚Äôm going back to look at previous code blocks they provide helpful guideposts for me. As I become more comfortable coding I will keep that in mind and will write fewer comments that may seem superfluous to other programmers. Also, thanks for saying my code is clean ü•≤
Eh it always comes back each triumph.
im having a hard time understanding the relationship in the second link, anyone care to explain?
You also have to consider the enjoyment. I‚Äôd rather spend 3 hrs writing a script to do 2 hours of monotonous excel work.
Neither of those take into account the fact that working on automating the task is far more fun than working on the task is.
My CS teacher has the second one in his bookmarks bar.
I have ADHD as well as High Functioning Autism. I really resonate with your comment, and I literally have thoughts going in all directions with my code and ideas for tons of different things. Upon trial and error, I‚Äôve developed my own system that may help you:
Write down everything you think of. Every thought that you don‚Äôt want to forget. The anxiety of being scared you‚Äôre gonna forget your good ideas is very real for people with lots of thoughts running marathons in our minds. I‚Äôm about 2 years from graduating with a B.S. in C.S., and I‚Äôve picked up on some things here and there, but there‚Äôs real power in actually writing down every idea/thought of ‚ÄúIs this the best way to do this?‚Äù, ‚ÄúIs this how I could approach this?‚Äù, ‚ÄúHow will this work if I do it this way?‚Äù, ‚ÄúI think this will work, but if it doesn‚Äôt, how can I find an alternate way of doing it?‚Äù

Writing down all of these ideas, questions, and thoughts are how I ‚Äúproblem solve‚Äù when designing my code. This for me is a way of thinking through things and evaluating multiple ways of implementing certain data structures or algorithms. It also gives you a general direction of the way you want to write your code, and eliminates the anxiety/worry of forgetting your tiny unique way of implementing something. I use a big white board and take screenshots of all my thoughts before I erase it to keep thinking and writing before I start to write my code. That‚Äôs the gist of my design process and workflow. 

I hope this is helpful and if value to you or anyone reading this thread with similar issues. I‚Äôm just a 22 year old, intuitive, high-functioning autistic guy pushing through my goals to succeed as an example for others, and I won‚Äôt be successful unless I share what I know to give back value to others, so I‚Äôm happy to help.
Just do the best with what you‚Äôve got and what you‚Äôre given until the right opportunity. Success occurs when preparation meets opportunity, and I can attest to that. I‚Äôve used a system with notecards for setting my goals that has allowed and continues to allow me to prepare properly for a Java Midterm. I ended up making a 100 on it and a 94 on the Final. I‚Äôve done my other exams the same way. Clearly defined goals are definitely the way to go. The main issue for an individual is not a lack of time, but a lack of direction. My DMs are open to anyone in CS, and anyone that also has ADHD and struggles with their coding process. I‚Äôd be happy to offer advice to anyone while drawing from my own experience(s). 
I hope this helps.
Try using git tickets.
>When in reality I should probably just like, set a timer on my phone for myself or something ‚Ä¶


Pomodoro technique, look it up.
One of us, one of us
Ugh, quite jealous of your ADHD, as strange as that may sound. I have primarily inattentive ADHD and it usually feels more like a curse than a gift. It's why I can't really sit down and learn anything with a lot of depth or difficulty unless I'm in the rare right mood for it or am really into it in a certain way. Learning to code is one thing I flirt with the idea of like twice per year but nothing really comes of it. But even that aside, what I'm most jealous of is your ability to generate a flurry of ideas. 

One significant reason I cant get off the ground with learning is that I'm utterly blank on reasons or things I would want to use it for. No ideas, no projects, no nothing. But I've got forgetfulness in spades, so it's like all of the drawbacks and basically none of the positives, hence my jealousy.
Great goal! Keep building your skills and and you can certainly do it!
That's so cool! If you want someone to work with, I'd love to help in my spare time. I've been wanting to put my (relatively meager) skills to work for a good cause and politics is something I've thought about doing in the past. I also relate to feeling like a wizard when something finally works. Let me know if you're interested in having a programming buddy!
Very admirable and ambitious! Good luck I‚Äôm confident you‚Äôll succeed üòÅ
You should defend learn pandas library
Consider it like a container for actions (or if that is easier, a box of tools). And that container can be moved around (instantaneously - it can be at many places at the same time) and the tools in it can be used at the place you need them. Also it will always be the same tools, so if someone says: ‚ÄúMeh‚Ä¶ that is not working with this tool anymore on our [highly] standardised task‚Äù - you can just fix this one tool in this one box of tools and everybody else will have the new working tool at hand. 

And yes, you can get quite far without having to use classes. Especially on one man projects and if you are more on the data analysis / data science side of things and not on the software engineering path.
Thanks man, like your story the sense of achievement you get from learning all this and applying it is rewarding. Even if it‚Äôs pretty simple stuff, in my case at least.
Sure, if you're comfortable with that?

If it's just one file, people sometimes use [pastebin](https://pastebin.com) or just embed the code straight on reddit, though you will want to [read this](https://www.reddit.com/r/learnpython/wiki/faq/#wiki_how_do_i_format_code.3F) if that's your plan. (reddit tends to mangle code‚Äîespecially python code‚Äîbadly unless you mark it as code.)
That‚Äôs really awesome, thanks, I didn‚Äôt even how to start looking for this with out going over of a bunch of the basics.
Can you use import for variables and arrays too?
[I think this is better](https://stackoverflow.com/questions/46867517/how-to-read-file-with-async-await-properly) instead of waiting 5 seconds for the file to download this will pause and wait till the response comes back. Wow, you really got a lot of feedback in this post.
In general, it's showing the break-even point of the benefit from time-saving operation vs the time cost of building that operation in the first place, based on:

- how often the task is performed
- how long the task usually takes
- how long it takes to build the time saver

You can read the chart as:

If over five years, the operation will save `x` amount of time performed at `y` frequency, you can afford to spend `z` duration building/maintaining the operation before you start using more time than you would have had you not tried to increase efficiency.

So if writing a script will save you 30 minutes, but you only run that script once per year, then you should spend no more than 2 hours writing and editing that script during the next five years. If the same script is to be run once per day however, you can spend up to 5 weeks (840 hours) building and maintaining.
Me too
Time saved across 5 years
Especially if it's error prone data entry and you might need to adapt the script later in anyway. Usually worth the scripting then.
Thank you SO much for this! One of my ADHD management techniques IS to write everything down (as soon as I think of it, so I don‚Äôt forget.) This is my first time hearing ADHD summed up as ‚Äúrunning a marathon in the mind‚Äù but this is the most accurate metaphor I‚Äôve come across!

I really appreciate you ADHD into the context of programming. I will definitely be using these methods. Also, love the you use a whiteboard to visualize!! I‚Äôm going to order one on Amazon.

Thank you again for this thoughtful, helpful advice! It also warms my heart to see someone young using their skills and experiences to help others. Great job on your finals, and proud of you, kind internet stranger!
I buy domains.

Neither one works for me ü´†
Just what I was going to suggest. Take my upvote.
Yo thanks never heard of this but it sounds like exactly what I need to get all my shit done at work.
I've had really good results teaching myself by trying to automate games I already was interested in. If you like gaming, I highly reccomend you try a similar strategy. There are lots of free resources available that cover python and game automation too.
That‚Äôs so nice!! Honestly, I‚Äôm not sure how interesting it would be for you since for the time being, everything is super granular & specific to my home state of FL (and its fucked up campaign finance laws.) But in all seriousness, as I‚Äôm new to these subs and VERY new to Python, even having someone to look over my code would be really helpful.
I'm not familiar with pandas library but i keep hearing about it, care to explain?
That‚Äôs my next task! Right now I‚Äôm learning how to automate some of the exports I need, then I‚Äôm going to work on tackling pandas so I can figure out how to make all of my giant spreadsheets link up together in Python üòÅ
Thank you!
No worries! Honestly, it‚Äôs been working with imported modules that has really improved my Python skills. It also helps that I‚Äôm using an IDE (I code in Pycharm) that also provides a lot of great support and helps me understand the syntax. Pycharm makes it super easy to download and install modules.
Yes, absolutely! I think the easiest syntax is:

from filename import funct

But you can also do:

import filename as f

f.funct()
Tricky thing though to calculate.

Maybe you spend 2 gours writing a script for a 30 minute task, but now you have a working script.

Maybe the next task takes 5 minutes to adapt this old script to do a 30 minute task.

Maybe you can do this a dozen times.
You the best, thanks
Fair thing but on the flip side there are tasks that could take a shorter time brute forcing them ( manual data entry / highly repetitive ) but 

If you do it manually it could be more error prone  
It could be so soul crushing that you‚Äôd be depressed at the end of it. 

IMO these cases still make writing a script worth it.
I love Randall, he's one of my heroes. That said, there's something missing from that last chart, an emotional dimension, a personal satisfaction dimension.

The problem I have with these metric charts is that they don't include the joy of learning. I'm no professional coder, so, while I know a bit of code (enough to be dangerous) but not really enough to snap stuff together like Legos.

And, I hate UI design. I'm more apt to just do it all from the CLI, instead of actually writing an app.

There's the trial and error, the frustration, the looking up references, the testing, all before I get a workable script that at least runs and does what I want it to.

There is a satisfaction and fascination with getting a script or program to work that has a value all its own.
This isn't the way üòä. I code open source, so the code I write I barely ever use, but tens of thousands of people do that it saves hundreds of hours each. And I do it for free, like 5 hours a day for the last 25 years üò≠ lol
You‚Äôre welcome! I‚Äôm happy I could be of value to you. Hang in there and you‚Äôll find what works for you!ü§ôüèº
Of course

For whatever it‚Äôs worth, I start my day going over my tasks and I prioritize them. 

Personally, I make a list on paper. Then I start my timers.

Sometimes I get distracted. In that case, when the timer rings, it helps snap me back. If I‚Äôm supposed to take a break, since I was doing something else, I skip it and go back to a regular pomodoro. 

Find what works for you and adapt it.
How are Florida‚Äôs campaign finance laws bad?  It‚Äôs supposed to be the promised land for open records
It's used mostly to read excel, json, csv,  ... data and do interesting things with them. It's heavily recommended if you want to do something in data science field or something similar.
Good luck!
It‚Äôs really easy to hide and/or launder money here through political committees and C4 ‚Äúnon-profit‚Äù organizations. It‚Äôs basically just $$$ get passed around constantly to hide the funding source.
Yeah, I‚Äôm afraid that‚Äôs not unique to Florida.  Patrick Reese with the Sacramento Bee did some good work on tracking that kind of thing in Cali in a series that published about 10 years ago.  Could be worth looking up.

Congrats on python clicking for you.  It‚Äôs a great feeling‚Ä¶.
Omg /u/popularweb6231 I've thought about trying to do this same thing here in Sacramento, but we use NetFile and it exports things as separate, jenky PDFs.... 
If you want to collaborate or just discuss how you worked through your public lookup system that would be cool!
Thank you. Eagerly looking forward to automate ..
Purchased the course a while ago (on sale) and purchased a hard copy of the book because I wanted to support more like this (and I like real books for some applications dammit).  Both are excellent so far :)
I‚Äôve heard so many good things about this course so thank you so much!
Thankyou Ive been looking for something to keep me busy this summer but was having a hard time finding inspiration.
Thank you i love you
Just getting started with python on another udemy course. But from what I have heard you are a legend man. Thank you! I signed up.
Al.. You are a giant amongst men!
Thx u/Alsweigart. Not signing up but really appreciate your work and all the initiatives
I was just about to start your free book. Thank you for generously opening your series up!
Thanks awesome.
[deleted]
Thank you !
I bought the course a few months ago and it got me started in python. Already have a couple of working scripts automating my  work. Thanks Al.
You da man, Al. Bought the course in the past and just got started last week.
‚ÄúThe G.O.A.T.‚Äù
Just got the book in about two weeks ago. This will give me a chance to follow along with the lessons. Nice.l! Thanks, Al, for making such an amazing course!
Hey Al. Thanks for this. I just bought the course lat week, but happy to pay as it is well worth it. 

QUESTION: I am.on a Chromebook and I cannot get the Pyperclip module to work at all. I have tried and tried through the command line and nothing. Then I even tried on repl.it and brought in the package, but then get an error about the copy and paste functions not being the same for my system. Any experience with using Pyperclip in chromeos?
Thank you! Your book is awesome!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/accounting] [The online course for "Automate the Boring Stuff with Python" is free to sign up this week.](https://www.reddit.com/r/Accounting/comments/bz7oqr/the_online_course_for_automate_the_boring_stuff/)

- [/r/actuary] [The online course for "Automate the Boring Stuff with Python" is free to sign up this week.](https://www.reddit.com/r/actuary/comments/bz7oyi/the_online_course_for_automate_the_boring_stuff/)

- [/r/calpolypomona] [Came across this post and thought I would share if anyone is interested in learning python](https://www.reddit.com/r/CalPolyPomona/comments/bzy0rj/came_across_this_post_and_thought_i_would_share/)

- [/r/cybersecurity] [Go get it](https://www.reddit.com/r/cybersecurity/comments/drt8ea/go_get_it/)

- [/r/pentesting] [Got get it](https://www.reddit.com/r/Pentesting/comments/drt8nm/got_get_it/)

- [/r/python] [The online course for "Automate the Boring Stuff with Python" is free to sign up this week.](https://www.reddit.com/r/Python/comments/bzqz6j/the_online_course_for_automate_the_boring_stuff/)

- [/r/u_pmelo93] [The online course for "Automate the Boring Stuff with Python" is free to sign up this week.](https://www.reddit.com/r/u_pmelo93/comments/bzbdnz/the_online_course_for_automate_the_boring_stuff/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Thanks very much for doing this! I have the book and the course from previous purchases, but it's nice seeing this available like this!!
I purchased the course months ago and I also have the book. Thank you! You're the best! :)
Thanks!
Thank you very much sir.
Thank you so much! I have been wanting to get into programming in order to teach my 9 year old son. I found your free online book for Scratch, and my son and I loved it. Looking forward to more advanced programming! Thanks again for all of your hard work!
Thanks so much! I went through this course online 6 months ago when I first started with Python. It was such a great introduction to Python. I can‚Äôt wait to go back and check out some of those final modules that I didn‚Äôt fully understand in January.
It‚Äôs a really great product you‚Äôve made!
Thank you. You are like the Keanu Reeves of the tech world.
thank you so much, great timing. i just quit my job and started focusing on my programming journey
Thank you for this and your book. I will show it to friends and colleagues who want o get into python development.
Thanks very much bro
I actually paid for this course a while ago and it was wroth EVERY penny! AL does an incredible job of providing examples and keeping the course exciting.
I just started learning python, with some C++ background as im an engineering student. Can I also learn how to make apps, GUI's and import/export data from excel?

&#x200B;

Edit: I ask since ive bin reading about something called PyQt5 and wanted to learn that
Was about to throw money at you when I logged in and saw I'd already bought your course last December lol
It looks like I found this sub 1 day too late!
dang I missed the deadline!!
I missed it by a day :(
Really appreciate this as a starting programmer !
sellout
I'm actually reading through your book and have a good grasp on the first 2 chapters, baby steps..  Going to subscribe to this in case I need anymore assistance as I progress. Thank you so much.
Thank you!
Thank you so much! Just enrolled, was looking at the course for a while. Super excited!
TY!
Thank you, will check it out
Thank you. Bought the book a few weeks back so this will be very useful too.
Thanks Al!
Thanks. Really helpful.
Thank you!!
Thank you!
Thank you Al!
Awesome! edX's course just started as well, this will be a nice addition to my learning resources. Thank you!
Thank you for this! Much appreciated.
Thanks
Thanks so much! I'm working my way through the book at the moment but I think I'll use the link as well. Loving the learning so far!
Thanks Al!
Thanks for this! I was just thinking about this course while I was doing some of the book.

I'll do this course and go back to the book for reference.
Thanks for sharing this!
Thank you Al, bought your hard copy book and it has helped so much so far! Looking forward to the course.
I have heard so much! Thank you. Just registered :) looking forward to have a epic time learning !!
You're an absolute legend.
Hello sir, you're a truly amazing human being. Thank you for your amazing course, website, and book!!
Thank you! I just enrolled. I was at the book store not too long ago, but I decided on Violent Python, I'm super glad I saw this.
Thank you,  


I will use this to learn Python.  


I appreciate it.
Many thanks for doing this! I really like your style of teaching and I've been trying to run through your course during my downtime at work. Unfortunately I don't have access to a PC, so I bought a tablet + keyboard specifically for this. I know it's not the best method but just trying to make due with what I got.

Currently I'm using QPython3 and Pydroid as my editor and shell. I dislike both and was wondering if you could recommend another to mess around on and go through your course?
Thanks much
Is this a deeper dive than the amazing YouTube channel? I have the book and was going through YouTube.
I've already read you book three times but i'll check out this online course version. No sure thing as too much fundamentals lol.
Thank you, this is amazing! I love your book.
I did this course and followed the book, very helpful for getting started quickly doing some fun things in Python. Thanks Al
Thxxx I just started reading ATBS but I plan to do this course afterwards just to make sure I learned everything.
Thank you. Have been learning through youtube but looks like this is a next challenge for me!
You are a good man /u/AlSweigart. I've been in and out of Python for about 15 years (currently back in) and purchased Automate a while back on Udemy just to show you some love for what you've done to evangelize the language.
[deleted]
Your the best AI! I'll be starting my computer science degree next year and I actually discovered your book last week from Reddit. I was planning on reading it this week when I saw this post, so thanks a lot for the extra incentive!
Thanks man, the book has been sitting in my shelf for a while, it'll be nice to have the course to go with it!

I promise I'll learn Python at some point!
Thank yoi
allready got the book at home but will also try this. Thanks!
Thanks! This is awesome!
This is so generous, thank you!  I am half way through the book and loving it.

&#x200B;

You, sir, are a genius!
Bought this course a while ago. What a great one! Thanks for sharing OP, hope folks will make the best out of this opportunity.
RemindMe! 12 hours
Thanks a lot, this is awesome! :)
Thank you!
Thanks Al!
Excellent book, excellent course and excellent guy!!!
Damn pretty excited to try this out coming from PowerShell and looking to make a move deeper into everything, thank you!
Also, Al streams on Twitch!
Omg thank you!! Can't wait to start
Thanks Al. Just bought your book a while ago.

I've started refreshing my HTML + CSS and am building myself a personal Django website.

I'm having great fun!
I had previously purchased this course a few months ago (I believe it was on udemy but could have been somewhere else) but it had disappeared from my account. So glad I can have another crack at it. Thank you.
Thank you! I have been lurking here for a long time now, and this made me finally tip the scales and dedicate serious time to learning python. You are an awesome person, and the insight and help you share on this sub is amazing.
Side question: what resources would you recommend for a begginner to dip their toes into the cyber security field?
Many thanks
Hey Al! I just wanted to say I recently finished your course on Udemy, and I flippin' loved it. I had some experience with Python before, but your method is approachable and more immediately useful, which makes the learning applicable and easier. Thanks for all the hard work, we need more pictures of your cat(s), and if you've got any pointers on making a course like this, I'd be appreciative!
This honestly couldn't have happened at a better time. Thank you so much!
Thanks, Al. I've been stuck in an office job for 10 years and have finally started to dive into something that I'm actually interested in. You've made the learning process extremely accessible and easy to follow. I bought your book on Amazon a week ago and haven't been able to put it down since. Appreciate this free course to go along with it!
Just got the course :) thanks!
Thanks Al!
NICE. 100% respect.Awesome stuff for a high schooler. some beginner python programmer
You are the best. Thank you very much!
Sold....thank you for sharing your knowledge.
You are one of the best teachers i ever had.
Oh my god it‚Äôs Al Sweigart...

Wow

I‚Äôm speechless...

I‚Äôm probably your biggest fan ever....

Wow
This course was my first step into python and made it easy to move my work in that direction immediately. 2 years later and I have a python specific data science job. 
Thanks Al
Dude, perfect timing! I'm finishing my exams today and wanted to pick up Python over the summer because a lot of shops here are starting to use it.
When I put it in my shopping basket and proceed to check out, it shows 80% discount down to $10 ?
This free course is well appreciated. I am a Python developer focused on AI stuff, and I don't want my Python skills go rusty.
This course is a hit here. Thank you so much for creating/sharing it!
Thanks
Just signed up! Thank you!
love the course do you think you'll make udemy course for any of your other books ?
This is great!
Thank you
Just signed up, thanks for the heads up.
Thank you thank you thank you!!!
i have seen automate the boring stuff the online book, but it seems it only covers some basics of programming.

so going through the videos, like 15 min 30 min or an hour or so, one can have a very simple code to run boring office stuff already? like changing file names massively?
thank you kind sir!
Thanks, had your book for awhile. It's well done but life always gets in the way. However this should motivate me and give me my visual learning style.
I actually just bought this book last weekend and have been working through it.   Great book!
Just wanted to say: thanks for this! I found ATBS in a Barnes and Noble meandering around. It wasn't my first exposure to programming, but it was the first one that really stuck and made me feel like I could actually do something interesting beyond a simple website. It gave me the foundation to start learning CS more seriously, write a (small) real program used by one of my colleagues doing data science research, etc.
RemindMe!
What a time to be alive!
Thanks a lot!
Thanks for providing it for free :)
Just went through the first hour or so, must say its great so far, I'd encourage anyone to give it a go!
Thank you.
Thank you Swaggy A.
Thank you so much! I hope signing up will keep me from procrastination and give me the actual reason to learn python *excited gasps*
Thanks for this!
Code doesn't seem to be working now.
Thanks for this!  I enrolled due to annoyance (mostly with myself) while getting stuck in LPTHW and within 10 minutes, you'd made me realize what my mistake had been.
Thanks for the freebie. It's a good supplement to the book. 

I seem to have a lot of issues getting Udemy to play this course. My Firefox browsers sit at a black window with a white circle indefinitely. Is it in flash rather than HTML5?
Love watching your twitch stream Al!
Been wanting to check this out, thank you!
thank you, that is really generous. I bought the book a few weeks ago, and considered the course as well.
That's awesome! I had to make the hard choice between your book and Fluent Python a couple weeks ago. This makes it so I get the best of both worlds! Heard your interview on talk python to me from a few years ago and definitely wanted to check it out.
Just grabbed this thanks so much for shareing
Awesome! Thanks so much for providing this. I bought the book recently (along with your super useful Linux one) and this is a perfect kick in the rear to get started.
Thanks u/AlSweigart! I already bought you book a while back. This should get me motivated to finish it.
Just purchased the book!

This is great!
THANK YOU!!
Thank you
I will inform my students and peers about it, thank you!
A few days ago you replied to one of my comments saying you were going to re-film a lot of the content to bring it current. Do you have a timeline? Thanks!

*Already purchased but I will share! =)
OP, thank you.  This is awesome!
This is great, thanks!
Thanks for this. I've been trying to get into Python and structured learning is the best way for me.
Thank you! Been recommending this course to a lot of beginner programmers, its the best!
Thanks for sharing this! I was having issues with signing up on my phone. Signed up on PC...cant wait to start!!!
Thanks!!!
Thank you so much!!
Is this in Python 2 or 3?
Thank you!
It says last updated 07/2017, is this an issue?
looked thru course contents; I like the no fluff just stuff format. I didn't need a thesis on Python - just give me enough about python and get me going. If I need more, I will figure it out. 

Cheers
Going to do this with my ten year old.  He's been doing light python for a bit and this could give us some more structure.

Thanks!
Hi Al, I have your book on Scratch programming, it was excellent.  Well worth the money. 

You are very kind to make these resources available for free.
This is fantastic, thank you so much!
Thanks!
When doing the end-of-chapter Practice Projects, is it expected that you should be able to solve the problems using only what's been taught in the chapter(s) so far? Or is the expectation that you'll be Googling and finding things that haven't been taught in the book yet?

I know that in general in programming StackOverflow is your best friend and it doesn't always matter how a problem is solved as long as it works, but for the sake of learning, it seems to me that if I have to go outside of the course material to try to solve the problem, then it means I haven't properly understood the course/chapter material. Am I wrong?
I've recently started my web Dev classes and I'm hype to learn more about using python! Thank you so much for the link as a pretty poor college student
hey /u/AlSweigart I don't think the coupon is working...

I'm talking about the first one..
Hey AL, I have been programing off and on for years but never really called my self a real programmer and never done python. (wordpress drupal - php. basic javascript ect.)  


I got this deal when you posted it expecting to take a look at it. Man was it a huge help. I blasted my way through most of it and it has saved me a bunch of time and energy. Out of town right now but ill be getting the text book from amazon (not in the USA so cant order it direct easy).  


Thanks so much for posting this exactly when I needed it and taking the time to teach us noobs. Still broke and new but hope to contribute to the community when I can.
god dammit. I havent checked this sub for a while and missed the coupon :(

Oh well.  I'm not really a beginner in python but always like to check out some tutorials or guides and see if there is something I didnt know about and stuff.

Anyways, cool stuff. It's awesome that you made it free (at least for a little while)
Pff I just missed this coupon. Please send a PM when your course is again free to sign up again. 

Thanks!
Bought the course right now. Is 11USD now.
[removed]
Can someone write a bot(for your practice of course) which can remind me if he puts the offer again in coming future? I am currently studying from the book which I love but I am more of the video person so the course would be much helpful certainly.
Super rad!
[deleted]
Thanks Al!
tremendous thanks!
It's crazy because someone else on this sub had mentioned this earlier today as one of the best ways to get started and I can't tell you how grateful I am! I look forward to learning!
Thanks!!
Really appreciate this, thanks so much!
 Sweet!!
RemindMe!
I teach programming to kids and I've had my school buy several of Al's books to use in my classes. They've also made me a better programmer. I highly recommend his content.
:D
Was this comment automated?
Thanks!
I love you too, stranger on the internet.

EDIT: Can I borrow some money? Just make the check out to "cash".
Nah, I'm just standing on their shoulders.
:)
He might have a better time with "Invent Your Own Computer Games with Python", which covers how to make simple text-based games. I also have a collection of these kinds of games at https://github.com/asweigart/pythonstdiogames where the source is designed to be easy to understand by beginners.
[deleted]
:)
player.forceAV hacking 100
Haha, awesome! Thanks!
Thanks!
:)
:)
Thanks! Scratch 3 came out this year, so I'm behind, but I'm now working on a new edition of the book for Scratch 3. But it's similar enough to Scratch 2 to still be useful. Also I have video versions of different Scratch projects here: https://inventwithscratch.com
The course covers how to manipulate Excel files with OpenPyXL, so you'd learn that. It's mostly focused on writing small scripts, rather than full applications. It doesn't cover any desktop gui toolkits like PyQT5.

One route I'm exploring is instead of using wxPython or PyQT5 is just creating offline "browser apps" using Flask or Django. You create the GUI with HTML & CSS, but can use any web frameworks like Bootstrap too.
Just put the cash in an envelope labeled "AL" and hand it to the nearest squirrel. I'll get it.
:)
Thank you!
Thanks! :D
Try this link instead: https://www.udemy.com/automate/?couponCode=SCHOOLS_OUT2
:)
:)
I have for my Scratch book, though it covers Scratch 2 instead of 3. I'm planning on doing an update to the Automate course when the 2nd edition comes out later this year (current students will get these updates for free).

I'd like to also create udemy courses for the Automate sequel book and the recursion book I'm writing right now, as well as one for Cracking Codes with Python, but honestly I have so many book projects that I'm not sure I'll be producing new online courses in the next year or so. Maybe in 2021ish?
Thanks!
:)
:)
The first half of the book covers basic programming concepts, while the second half covers modules to do interesting stuff: web scraping, controlling the mouse and keyboard, parsing Word docs and PDFs, updating Excel spreadsheets, sending email/text notifications, etc.

The book tends to cover stuff that people want to do. For example, massive file name changes are covered in Chapter 9: https://automatetheboringstuff.com/chapter9/
Ya. Also the /r/learnprogramming FAQ has tips on how to stay motivated: https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F
Thank you!
Thanks, I'm really glad my books can help when others didn't.
I only had 30,000 for the original code and they were all used up. Try using https://www.udemy.com/automate/?couponCode=SCHOOLS_OUT2
Haha, awesome. I'll probably be streaming later tonight (Wednesday, June 12th) in the evening Pacific Time UTC -8.
Automate is great if you're a beginner, or you want to learn about these fun modules. But if you want to cover advanced Python topics and master the langugage, Fluent Python is *the* book to read. (Effective Python is also good and much shorter, but of course covers fewer topics.)
Not much more than "sometime this year", probably towards the end of summer though. I'm juggling several other projects at the same time.
Python 3
Expired yesterday...
Thread is 6 days old. Post says is free for the week. Id like to try the course if possible, is the offer still around?

Thanks
Your [comment](https://www.reddit.com/r/learnpython/comments/bz3rxv/the_online_course_for_automate_the_boring_stuff/evbj6cu/) in /r/learnpython was automatically removed because you used a URL shortener.

URL shorteners are not permitted in /r/learnpython as they impair our ability to enforce link blacklists.

Please re-post your comment using direct, full-length URL's only.


*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnpython) if you have any questions or concerns.*
The course follows the book, but doesn't contain all of the same content. (For example, the course doesn't cover image manipulation.)
:)
:D
Thanks, and good luck!
:)
:)
**Defaulted to one day.**

I will be messaging you on [**2019-06-12 05:48:48 UTC**](http://www.wolframalpha.com/input/?i=2019-06-12 05:48:48 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/learnpython/comments/bz3rxv/the_online_course_for_automate_the_boring_stuff/eqqtjyy/)

[**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[https://www.reddit.com/r/learnpython/comments/bz3rxv/the_online_course_for_automate_the_boring_stuff/eqqtjyy/]%0A%0ARemindMe! ) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete Comment&message=Delete! eqqto1n)

_____

|[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=List Of Reminders&message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/)
|-|-|-|-|-|-|
Is this course kept forever or is it a period of time? I enrolled but don't see an expiration.
Me too I love you
[deleted]
Wow! Keep the resources coming ! You‚Äôre a blessing
Even though it was written for Scratch 2, like you said, they are close enough that we were able to figure it out. Thanks again for your dedication and hard work!
Interesting, so for the excel stuff, I currently have all of my works inventory, recipes, supplier info in excel and I want to do inventory scanning in and out and overall inventory control while eventually making a program for it. Will your OpenPyXL guide help with that?
Same here. Love the book and thank you for the course :)
That's one way to get paid
I was actually going to ask what outside resources do you recommend. So perfect thanks again.
Awesome, that worked. Thanks very much.
Thank you for the reply! Yeah that's why I decided to pick up Fluent Python at the time. They're definitely going to compliment each other well, as that book doesn't show much outside of the standard library. I look forward to working through this course!

If anyone else is reading this, I found the Flask blog by Miguel G. to be invaluable in learning a lot useful skills beyond just web development. https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world
Once you sign up, you have lifetime access to the course and any updates.
It doesn't expire - see the first paragraph that says 'lifetime access'.
And I love you, random citizen.
No! you are breathtaking!
Yes. You can open the excel file and read it's contents with a Python program, and then produce other spreadsheets (or whatever format you want) with new data. On Windows, you can also use Python to control the Excel application directly (though I don't cover this in the book): https://pbpython.com/windows-com.html
Much appreciated.
Oh wow, that sounds perfect ill definitely sign up to learn that. My plan is to scan in received inventory and be able to use python to decode the barcode to determine the product code and supplier, then put this in excel with the number of items received summating. Thanks for the info!
This is awesome, thank you so much for doing so! Especially appreciated in a time like this with the pandemic going on and many people unemployed or stuck at home. Will be sure to check it out and support your book!
That's really rad, dude! I'm a beginner and I was thinking of getting books, but I couldn't pay for $20 atm. You're doing great things :)
Thank you, I look forward to going through the course.
[deleted]
I have done python in a long time I wanna learn more about it thank you!
Thank you man, will be a great help to me as a beginner. Have a nice day.
Thanks man!  Your ReportLab book was amazing for me.  I wanted to create PDF's on my webapp and no one could point me to a library to help or answer any questions that I had.  Your book was sooooo crystal clear I didn't need to ask any questions after reading it.
Thank you! This is a great way to start the year.
Hey sorry, kind of out of topic question. About the PDF Processing, are you doing anything with regards to reading the PDFs or is it just creating PDFs, etc etc?
Thank you so much!!

I literally know nothing about programming, but my brother in law told me it's a really useful skill, and I agree. He told me to start with Python, so I joined this subreddit, so one day I would get around to it after my exams and stuff.

And this is absolutely perfect. I had no idea where to start (I haven't done any research on it yet) but this seems like the perfect place to start. (can I just start with this book with no background knowledge?

Again, thank you so much!
Just flipped through some of the pages and it looks great! Can‚Äôt wait to read it in its entirety!
Thanks so much! This is the first python book actually I understand something from when i first started with the first couple pages. Looks very to-the-point!
Appreciate it!
You know, I just bought your book day before yesterday. I'm not even mad. Thanks for what you do!
Love it, finally a detailed book after the basics :)
Thank you
Great! Thank you indeed.
Thank you so much!!!!
Thank you!
You are a true blue bloody legend! Kind regards from Australia
Great work and thanks for sharing, I bought the first edition and found it really useful.
thx a lot
Thank you for this, it looks amazing.
Thank you brother!
Thanks A VERY LOT FELLOW STRANGER! It will help me so much for my exams on May.
Wooow I'm 1 yr late for this booküòÇü•¥
This will be the first book I've touched since school over 10 years ago. Thank you.
Is it possible to create a self destructing pdf file after we distribute them?
Thank you for doing this!
Thank you!
RemindMe! 4 hours
I grabbed a copy, thank you!
Thank you
Thank you very much sir! I really appreciate it. It is a great help especially for me as a beginner. Thanks you üòÅüòÉüòÉ
Not sure it's just me, but neither link is working for me. Both are showing full price. Is there a code that is supposed to be applied?
I already got your physical book but Ill go ahead and grab this digital so I can access it anywhere. Thank you!
Thank you !
Thank you! I really like reading many different books to help me learn, so this is awesome.
Thank you so much, your so kind. Iv just started a beginner course so this is awesome.
Thanks for your generosity :)
thank you bro so much
Thanks
Thank you there‚Äôs some stuff I‚Äôm rusty on and this seems promising. I‚Äôve also gone through some chapters of RealPython‚Äôs ‚ÄòPython Tricks‚Äô text. Will use these two for reference.

Cheers!
Thank you. You now have a new reader.
Thank you
Most dope ill check it out yo 

python away
Awesome. Thanks a lot.
Thank you!
Thank you kind sir this is most giving and very useful for the learning that I will be performing. I wish you only the greatest things for your future.
Just downloaded it, thank you!  

I'm still working on JavaScript proficiency, but will be working on learning and using Python once I'm done with JS and definitely will use this book as a reference.
Thank you, I find myself overwhelmed at times with all the resources out there it‚Äôs tough for me to find a starting point, basically paralysis by analysis
Thank you üôè
Thanks for doing this. That‚Äôs very kind üëçüèª
I just grabbed it, thank you so much! This kinda stuff warms my heart.
I am going to dedicate my day to going through this book as best I can!  Thanks so much!
Just downloaded! Thank you!
Thank you i appreciate this resource. I hope it helps me .
RemindMe! 13 hours
Thank you kindly.
Thank you very much, very kind of you. Take care
Quick question.  I'm using python 3.6.0.  Should I find your specific distribution 3.8.0 and download it or should I just update to 3.9?
Thank you for making this and sharing it
Amazing thanks!
Thank you so much!
Thanks for this OP!
Thank you!
Thank you!
Thank you so much! I'm currently a Physics major and I'm about to take more Python-heavy classes next semester. Again, thank you for this book!!!
Thank you! Really appreciate it.
Thank you!
Thanks mate
Thank you.
Very generous - currently learning Python via a Udemy course. This will definitely help. Hopefully I get to the level in which to check out your other works.
Today is the day I unsubscribe, too much spam.
RemindMe! 20 hours
Thanks will hopefully get a chance to download it tomorrow after work
Thank you so much man.
Many thanks! Wow! Wrape a lot of topics! Even decorators and introspection! And many many other stuff! Gee! You rocks!
Thank you!

After I get through this one I'll have to check out your Jupyter Notebook 101 book.
Thanks!
Thanks alot
Thank you so much!!
you're the Messiah!
I use Python for my job (typically lightweight scripts, but still) and learned a few things from this book. Thanks!!
Thank you so much
Thank you, I just gifted it to my younger brother.
Thanks so much! I hope you get the respect you deserve
Thank you!
Thank you!
Thanks . I have a course on it and I'll definitely check it out.
Thank you! This is gonna be very helpful :)
I like the cover art. Thank you so much
Thank you for doing this! Very generous
Just got mine, thanks so much!! üòÅ
I'll check it out. Thank you for sharing.
Thanks for this, hopefully I will study this time around.
Thank you good sir!
Just a quick ‚Äúthank you‚Äù for making this book free for a few days. I‚Äôm a published author (of a technical book), and I think most people vastly underestimate the effort and dedication required to produce a book like yours. Well done, and thanks again.
Thank you Sir! Great way of sharing knowledge.
Hero
Thanks a lot!
Thank you!
I‚Äôve never clicked a link quicker! Thank you so much. I will take a look at your other publications in due course. Thanks again!
Only had time for a quick glance, but it looks like an AWESOME book.  Thanks VERY much!
Thankyousoooooooooomuchhhhh!!
Thank you
Thank you so much!!!
Thanks a lot, i'll give this a read , starting tonight !
Thank you! Just started CS studies yesterday!
Thank you so much I will use it well
Thank you man. Another resource is much appreciated.
Many thanks, kind sir!
Thank you. Will go through it. And we will do same good thing for the community one day!
I just started Scripting class and...THANK YOU SO MUCH.
Thanks very much!
Thank you so much! I appreciate this! You‚Äôre a good human
This is awesome! I've always been curious about python and definitely will be digging in after seeing this!
Thank you!
Thank you
Thank you..much appreciated
thank you so much! Really appreciated it!
Thank you
Thank you.
Thank you so much!!
This is fantastic, and massively generous. Thank you!
Thank you!
Thank you. I can't thank you enough
You are the 2021 MVP! Thanks!
So excited for this! Thanks a million!
You are the MVP! Thank you.
I grab my copy thanks
print("Thank you soooo much")
‚Ä¢execute program
Thank you for sharing!
RemindMe! 8Hours!
Thank you!
Thanks for the great help.
I have one question that
how do I alphabetically arrange a dictionary??
Help will be greatly appreciated.
Sir, thank you so much. I'm transitioning to the IT/Cybersecurity field after retiring from the military (I did not work in an IT related field...actually, a History major in UG) and learning Python was the first thing an old military buddy reccommended. I've taken two basic Python courses so far and your book goes beyond those courses.
Great work
Absolute Legend.Thanks,Sir
Thanks, 

I am an intermediate python programmer and know a quite a few things, still the book and help is appreciated

Edit:
Just took a look through the book it will truly take you through basics to fairly advanced
best python ebook i've ever seen thanks alot !
Thank you so much. I am so grateful to you.
ty dude, just made a student's day over here <3
Thank you so much. You are the best!
awesome
Thank you
Already downloaded. Truly appreciated as I am learning python. Thanks
Thank you so much! I've started learning Python a while ago and this helps a lot.
Thanks a lot, man!
Thank you for this!
Just downloaded it now.  Thank you very much!  I look forward to learning more!
awesomeee. thank youu. may god bless you
Thank you! Looking forward to study your book
I have not started reading it but man that is a full package to learn Python as far as Content Table is concerned. I am learning How to scrape with Python and now there are something's that i need from you books too. Thanks for sharing it for the community.
Thank you!
Just wanted to take the opportunity to thank you for Python 201!
That's great, thanks for your help!
Thanks a lot!
That's awesome. Just downloaded your book. Thanks a lot!
Cool, I'm working on a cool personal project with python, social media APIS/libraries and Flask/// hopefully this will help
this is great, thank you
Thank you very much. I downloaded it last night and have been reading since. It's very good. I really appreciate it. I like the intermediate level parts as I have the basics down but kind of at a sticking point.
Appreciate your contribution to us beginners! I am in the middle of the Cisco python essentials training version they promoted last month. Interested to see the differences.
Thanks a lot for this!
Thank you for this! As a complete beginner I‚Äôm finding a lot of information has been overwhelming but this is already helping immensely! Much appreciated!
Thank you so much. I want to go beyond the basic syntax understanding and implement with projects. Hope the book does it. 

As a side, I get not everyone can pay for the book/wants to make most of this opportunity, but you could have a little tip jar/kofi kinda setup for everyone who downloads the free book.
Thank you, great to hear that!
Thanks :)
Utmost respect for you man! You are really helping many people here including myself. Thank you.
Really excited to dig into this new to me subject!  Thanks for the materials.
I'm 1/5th of the way through your book.  I really like how you explain things and how you give examples!
[deleted]
I need the book cause I'm a beginner but I can't pay for it, too late :(
But thank you for your nice actüôåüèª
I can‚Äôt believe Reddit notified me of this awesome post 9 days after the fact! I‚Äôm a college kid and I can barely afford my books now lol maybe I‚Äôll catch the next offering! It‚Äôs still amazing that you‚Äôre doing this for the community too bad I missed it
Welp, Reddit notified about this 16d later :(
Woah dude, thanks! You're a lifesaver.
This is awesome, thank you so much!
Reddit just notified me about this 24 days later :(
I guess I'm a little too late üò©
Any more of these codes available? Sample seemed great!
Thanks for checking it out. I hope you enjoy it. Let me know if you have any questions!
Thanks! I hope you like it!
Thanks for checking it out. I appreciate it!
One of my goals is to do a project oriented book where you learn Python while building little applications. Python 101 has some aspects of that in that, but it's not quite what I had in mind.

I do build applications in my wxPython book. And I'm also building mini-applications in my Pillow book though.
Automate the Boring Stuff is pretty good for more "useful" examples, although I think it's lacking in "syntax" lol
I hope this book helps you along in your Python journey!
Thanks for checking it out. Let me know if you have any questions.
That's great to hear. I'm glad you found it so useful.
Thanks! That's good to hear
While most of the book is about using ReportLab to create PDFs with Python, I have a chapter that covers how to use PyPDF2 and pdfrw to extract some information from PDFs. You also learn how to split, merge, and rotate pages.

I cover a little of what you can do with PDFMiner as well for text extraction.

Unfortunately, not all PDFs can be extracted due to the way they are made. For example, scanned in documents would require using OCR to read them.
I hope you enjoy the book. It's aimed at people with little programming background, but I have had total beginners who have enjoyed the book too. Let me know what you think after reading a chapter or two
Excellent! I hope you enjoy it.
Thanks for the kind words. I'm glad you are enjoying it.
Thanks for buying the book. I appreciate all my buyers!
f****ng LEGEND
Thanks for checking it out!
Your tongue reminded me sniper from tf2 :D
That's awesome. Thanks for your support!
That would be great!
Great! I hope you enjoy it!
There is a 14 hour delay fetching comments.

I will be messaging you on [**2021-01-11 21:27:20 UTC**](http://www.wolframalpha.com/input/?i=2021-01-11%2021:27:20%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kv61rj/as_a_gift_to_the_community_im_making_my_python/giwkaq3/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkv61rj%2Fas_a_gift_to_the_community_im_making_my_python%2Fgiwkaq3%2F%5D%0A%0ARemindMe%21%202021-01-11%2021%3A27%3A20%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kv61rj)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Thank you!
The Leanpub link should zero it out. The Gumroad link requires you to use a coupon code: mvp2021
Awesome! Good to hear.
I liked reading lots of books too when I was starting out.
I hope the book helps you along!
That's another good book!
Awesome! Glad to have you
Great. Between JS and Python, you can do just about anything you'd want to do.
There are a lot of resources. Just focus on a couple at a time and you'll figure it out.
Thanks for checking it out!
There is a 14 hour delay fetching comments.

I will be messaging you on [**2021-01-12 08:39:49 UTC**](http://www.wolframalpha.com/input/?i=2021-01-12%2008:39:49%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kv61rj/as_a_gift_to_the_community_im_making_my_python/gix21qx/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkv61rj%2Fas_a_gift_to_the_community_im_making_my_python%2Fgix21qx%2F%5D%0A%0ARemindMe%21%202021-01-12%2008%3A39%3A49%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kv61rj)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
The vast majority of the book will work with 3.6. There's some new cool stuff when it comes to f-strings that you need 3.8 for. 

I also updated the book a couple of months ago for 3.9. The "big" change there is that Python 3.9 changed type hints slightly to make them easier to use. So the chapter on type hinting was updated for that. 

Other than those two chapters, everything else should work fine in 3.6, I think.
I hope my book helps you out!
There is a 14 hour delay fetching comments.

I will be messaging you in 20 hours on [**2021-01-12 16:52:31 UTC**](http://www.wolframalpha.com/input/?i=2021-01-12%2016:52:31%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kv61rj/as_a_gift_to_the_community_im_making_my_python/gixbm07/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkv61rj%2Fas_a_gift_to_the_community_im_making_my_python%2Fgixbm07%2F%5D%0A%0ARemindMe%21%202021-01-12%2016%3A52%3A31%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kv61rj)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Great! Let me know what you think!
Thanks!
Great! Thanks for checking it out!
Great! I hope he likes it
Thanks, I like it too!
Thanks! What's your book about?
Awesome! Let me know if you have any questions.
Awesome! Let me know what you think.
That's great! Good luck!
I didn't know there was a class on scripting. What do they teach? 

And thanks for checking the book out!
There is a 17 hour delay fetching comments.

I will be messaging you on [**2021-01-12 14:07:58 UTC**](http://www.wolframalpha.com/input/?i=2021-01-12%2014:07:58%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kv61rj/as_a_gift_to_the_community_im_making_my_python/giz3lgp/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkv61rj%2Fas_a_gift_to_the_community_im_making_my_python%2Fgiz3lgp%2F%5D%0A%0ARemindMe%21%202021-01-12%2014%3A07%3A58%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kv61rj)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Thanks for the kind words!
Great!
Good luck with your learning. You can do it!
I'm glad to be of service!
Thanks!
Great! I hope you enjoy it!
This is my largest book and it is chock-full of goodies. I hope you'll find it useful!
I'm glad you liked it. That was a fun book to put together.
Great! Thanks for checking it out!
That sounds neat. I hope it goes well.
That's great news! I'm glad to hear it. Let me know if you have any questions.
I'm interested to know as well. If you get a chance, could you tell me what you found out?
Glad to hear it!
Leanpub allows you to use the slider to pay a little. But I think it's against the rules to post anything that requires money on this sub.
I hope you enjoy the book! Thanks so much for checking it out!
I hope you enjoy it!
Thanks! I'm glad you like it!
This link still works for me: https://leanpub.com/py101/c/mvp2021

You can also try the Gumroad link with the coupon code: mvp2021
I just sent you a DM
Send me a DM and I'll hook you up
I just got it today üòÇ
You can send me a DM and I'll help you out
Send me a DM and I will help you out
Send me a DM and I'll still get you a free copy
I can get you one. You'll have to send me a DM though.
does this include an explanation of classes? just wondering!
Thanks for the great help. It was indeed wonderful. 
I have one question that is
how do I alphabetically arrange a dictionary??
Help will be greatly appreciated.
If your book can finally make classes click for me I am going to come back and buy it when it's not free
Thank You! Just by looking at it I know it most definitely will!
As a suggestion, you might consider something on using tesseract to do that. It works surprisingly well
I tried the gumroad link again and it showed. Downloading now. Thanks a lot for the book as well!
This gives me hope that someday I  will feel less like I am just an imposter pretending to code and more like somone who actually knows what she is doing. 
Thanks again!
Woah, that's really motivating!
Great, thx so much.  I might as well update to 3.9 then
Game development. Sorry, I can‚Äôt say more; this is my anonymous account.
Well, I'm in school for Cybersecurity and one of my classes is Intro to Scripting (I think I take a more advanced one next term). It is close to your book in terms of what we are covering but the " interactive book" we use is kinda a mess, so your book has helped a lot.
thanks, hopefully your book can help, but I'm also doing CS50, even though I know how to code
Will do m8!
Tysm! I just downloaded it! Such an awesome book from the very beginning :)
Thank you! Just did
Awesome will do that soon
Oh wow thanks so much for replying like 10 seconds later!
Yes, I cover classes in the book
Great! I'm sorry it didn't work the first time.
You'll get there. Practice, practice, practice. And lots of reading documentation.
Sounds cool. I hope it does well
That's interesting. Which book do you use?

I'm glad my book has been so helpful!
Glad you like it. If you really enjoy the book, you can always write a nice review on Amazon about it. Those are always helpful.

But it's all good if you don't want to.

Either way, let me know if you have any questions about the book.
I just happened to be on Reddit when you sent the message.
Can I write a review through the link you sent to me?
Leanpub doesn't really support reviews for some reason. Here's the Amazon link though: https://amzn.to/2M6zy9P
You the best, Al. Thanks for removing barriers to help people learn Python.
Probably the best python crash course in the planet, especially useful for office workers. I‚Äôve automated so much shit in my job that I‚Äôve made my coworkers lives easier.
Thank you so much!
wow, i am in middle of going through the book. this seriously helps so much! are you really the author of the book? did not expect to find you here, thank you. today is my first day actually using reddit, i think i made a great decision
Al, haven‚Äôt had the time to get started on the course but I am very excited. I‚Äôm a college professor, losing my job in two weeks so I hope this will be the stepping stone to stepping OUT of academia. You are such a great person for helping us out especially in these uncertain times.
Al SWAGart back at it again
Thank you so much! Very excited to take this course! Will also buy a copy of the book to support your work!
Al, can I just say; no single person has had a more positive effect on my career than you.  I owe you such a debt.
Thank you, just starting with python,  this is very helpful.  üëç
Sir what do you mean by  "promo code works until May 7th"?  I just signed up and it's showing all the lessons. So, the free promotional trial is good till 7th of May and after the date you have to purchase the course package to continue?
Recently did it and it‚Äôs a fantastic course. So good to get you started and beyond. Highly recommended
I finished this course last week and it was really great! Having the book for free was also a big help. Thanks, dude.
I'm almost halfway through the course, and I can confirm that it's awesome.
Thank you and may God bless you!!
hi ,sorry for inconvenience but i am not able to buy the course from the given link . every time i try to enroll it return this error on checkout " you have not been charged ,please try again ".but i already tried it several time during the day but no luck .please help is the offer is still valid or what.
Thanks alot. I was planning to buy this by month end.
So amazing.  Thank you very much!
Is this ATBS 1 or 2?
Thanks :D thought the promo was over aha
Thanks, Al!
What does this course teach?
Thank you so much
Thank you!
Thanks Al! You the man!
Thanks alot!
Thank you kind sir.
Thanks a bunch you're a champ Al!
Thanks so much!
You're the best, thank you.
Thank you!
Hey AL, can we get a 2020 update?
I literally just bought this last week, damn it!
Thanks!!
Thank you so much for this!
This is amazing! Thanks so much!
Thanks for this!

About a year ago I entered a Data Analysis job. I had a very minimal skill set when it comes to coding. Originally wanted to learn VB for Microsoft related programs. I did some research on coding, and figured why not learn a flexible code I can use for almost anything? I just started the book not too long ago, so this is an excellent resource now!
Hey thank you so much for this!
Thank you so much!
Glad i subbed to this subreddit!

thanks
Is this the second edition?
Thank you!
Thanks!
Thank you for this! It always helps to have many avenues from which to learn.
Thanks Al, I've been working through your book and it has been amazing! This will be a great help.
Thank you very much!
Thank you very much!
Thank you very much!
RemindMe! 8 hours
Amazing - thank you!
love u man.
I'm almost halfway through the course, and I can confirm that it's awesome.
RemindMe!
Wow I love this.
TY TY TY.

I wanted this specifically too!
The book is kinda awesome.
thank you
Save
Enrolled. Thanks. <3
Much appreciated! I can't wait to start the course :)
Take this course!
Thank you so much! Appreciate you offering the course for free.
Thank you so much!
Juat signed up.  Thank you so much for this resource!
You can't imagine dear sir how eagerly I was waiting for this to happen. Missed the last one but I'm so glad that I joined this sub.
You‚Äôre the best!!
I‚Äôve recently discovered an interest in coding...mainly to do something fun and productive to stay away from the rabbit hole of current events. 
Not only am I having fun, but once I get the hang of Python, I may even look to take on a side gig as a coder. 
Thanks, u/alsweigart your book was next on my reading list as well!
Thank you so much I definitely enrolled
The best online course to learn python programming. Don‚Äôt let this go.
Thank you so much! Plan on giving your book and this course a go after I‚Äôm done with ‚ÄúLearn Powershell in a month of Lunches‚Äù!
Thank you,sir. I was saving my money to buy this course. Really Thank you.
print ('Thanks mate!')
Man, thank you so much.
Thank you very much!!
A friend referred me here. Thank you for doing this.
You're amazing thank you so much for this
As always, thanks for doing these kinds of things, Al.
This was one of my gateways into Python. Highly recommend it to anybody new to programming in general. Thanks, Al.
Thanks
Damn dude, I feel like you are a NPC that gives this really cool side quest that makes the whole experience that much better.

Much respect!
Thank you for the discount code!
This is just amazing. Thank you.
Really good course, I'm following it right now and almost finished! It is easy to follow along with the free pdf book aswell
Hey Al, just wanted to say you're a great guy for doing this. I just finished the course a week ago and I can't recommend it enough.
Al for president! BTW - great streams on Twitch!
The book has also always been available online for free as well.
Love it, my dude!
Thanks for this! You sir, are a star!
Thank you so much. 

I cant wait to pay this forward one day.
Thank you! I just finished a beginner's course and have been actively looking for where I can continue to learn Python for free.
Haven't taken the course yet, but thank you so much for this! Can't wait to learn more!
Thank you for this you‚Äôre amazing. I just started going through this book and barely on chapter 6. This will be a great help to go over everything once more since I‚Äôm not fully understanding everything.
This is great.  Much appreciated Al.
Thanks for sharing! This will be a great help in my job.
THANK YOU!!
Awesome. Thank you so much!
Hi Al, thanks for the initiative. I tried to sign up now but I got the ‚ÄúYou‚Äôre not eligible for this discount‚Äù response. I‚Äôm in Nigeria.
Thank you!
Thanks, Sensei
Awesome, thank you!
Wow this looks like just what I needed. 

Does this automate works for copy paste between programs? 

Like from a bunch of txt with lists to a form (technically sap but not the internet version)
Thank you, it's really good and helpful :)
Thank you üôè
This is so awesome! I've been wanting to do this course. Thank you so much, and I'll be likely buying the book as well. Thanks for all you do for the Python community!
thanks, this is brilliant :D
You're a legend! God bless
Great course, it‚Äôs beginner friendly. Was hoping for something more advanced but this is good for those of you starting out.
Thank you! Just finishing an intro to Python course at my local college. Oh boy is it delivered badly. I learned a little bit so I'm hoping this course helps me actually get a handle on Python.
I'm currently working on automation of reports at work. great material.
You continue to be, as always, one of the best ones out there. Thank you for all you do to encourage the community.
Don't mind if I do.
Is this course good for someone who already knows somewhat programming (CS student) ? Been wanting to learn python, and i was wondering that should i to for python documentation or for this course?
Not all heroes wear capes.
Thank you
Thank you very much, I am currently learning python.  I would like to develop a script that sends me an info via a telegram bot as soon as a new product is published.
Guys, Al's work is a treasure.
Learn, take notes and have fun along the way :-)
On chapter 4 of your book and loving it so fa, just signed up for this. Thank you!
God bless your cotton socks Al.
u/alsweigart - MAY2020FREE2 isn't working today. Do you know if this will be fixed? TIA
thank you!!
It worked for me today but only via laptop / desktop. The link for the mobile still tries to charge you $11.99. Even when manually typing the code.

They could probably use Python to fix that.
Just grabbed it.. your amazing Al..
Is there a code that works today, the 7th?
 [u/alsweigart](https://www.reddit.com/u/alsweigart/) MAY2020FREE2 has expired on my end. Will this course continue to be free in the future? I'm just starting out with Python and I can see recommendations for your course everywhere! Thanks!
You are a King Al 

Great work
Thanks Al you are a Legend!
I really want to learn python, I'm about to start a PhD in psychology and can see it being a maaasssive benefit. 

Can I use my android device for this course and python? Or do I need a Windows/Linux device?
Just bought this today after finishing the YT video portion.  I'm looking forward to finishing the course to help me in my new job as a data conversion engineer.
oh my god i wish i saw this 10 days ago :(
 I completely missed the course being free because silly me doesn't check reddit but instead I was reading your book which is absolutely phenomenal. I cannot even begin to explain how you have changed my life. I wish I could afford for the course but I'm just a high school student with (super) minimal funds  so trust that once I get my footing  together, I'll buy both the book and course and send a full donation your way! You helped thousands and dare I say it, perhaps a million of us beginners rise and I cannot thank your enough. Literally your book is what unlocked my desire to learn more and more. Thank you!
Looks like I just missed.
Al, I just wanted to say I enjoyed this course so much I bought your book to follow along with both. Thank you!
I'm almost halfway through the course, and I can confirm that it's awesome.
[deleted]
I just started that course and indeed its boring stuff.
This should read "Automate the boring stuff with Monty Python".
[deleted]
Did you learn python using this course from scratch?
He also has a twitch channel twitch.tv/alsweigart where he live programs and answers questions
me too!
Stepping out of academia was one of the major and rewarding decisions I made.

I didn't get to the point where I was a professor, as I realized it wasn't for me during grad school, so I can see where it would be harder to leave voluntarily, but there is a lot of opportunity out in the professional space.
It means you have to sign up before may 7th to get the discount. You will still have lifetime access
The 1st edition, though there's no difference between the 1st and 2nd edition when it comes to the basics of Python.
> The 1st edition, though there's no difference between the 1st and 2nd edition when it comes to the basics of Python.
[Source](https://www.reddit.com/r/learnpython/comments/gbp0a1/-/fp85rsx)
There is a 2 hour delay fetching comments.

I will be messaging you in 6 hours on [**2020-05-02 08:18:41 UTC**](http://www.wolframalpha.com/input/?i=2020-05-02%2008:18:41%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/gbp0a1/automate_the_boring_stuff_with_python_udemy/fp7x259/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fgbp0a1%2Fautomate_the_boring_stuff_with_python_udemy%2Ffp7x259%2F%5D%0A%0ARemindMe%21%202020-05-02%2008%3A18%3A41%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20gbp0a1)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Stay a while, and listen!
Sure, you can probably skip the first half and watch the parts that cover various third party modules.
It should be working now.
I think we just missed it :(
bruh let me know if you find anymore either i fucking missed it too
OP is the author of the book, and his post explicitly says :

>[Meanwhile, the first 15 of the course's 50 videos are free on YouTube.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)
I work in a school and I handle all of the student data and testing. So anything from graduation requirements, scheduling classes, contact information, parent teacher conferences, etc. 

My most recent python script saved my team a whole week. Every year around this time, we have to audit transcripts by eye to check which students are on track to graduate on time by looking at the amount of credits per subject they have (which means literally looking at each kids‚Äô transcript, determining which classes belong in which subject, adding the credits up and putting it into google sheet document we share). This is over 500 kids and typically takes 5 of us to complete over the span of a week while we all do other things and even then humans make errors.

So back to Python. I wrote a script that reads the entire PDF file of transcripts,  pulls all of the classes and their credits for the class they took for each kid, puts it into a pre-existing excel sheet that already has formulas to categorize each class by subject and then tallies the total credits and uses conditional formatting to highlight the classes for which students are behind on credit. 

So we went from a 1-week task requiring the entire team to a one day task requiring only me. My boss and coworkers all gifted me a shit ton of gift cards and praised me. I can probably automate enough to the point where we don‚Äôt need one my more useless coworkers.
The simplest and first thing I automated was checking the price of running shoes. Totally silly but it helped make the process click. 

That progressed into checking the price and sending me an email. 

Btw I learned that in this course. Good luck mate.
If it is repeteting, you can propably automate it
Didn't know! Thanks
I wish you the best of luck!
I‚Äôm struggling to find it since all of my skills are largely tailored to teaching at the undergraduate level. I‚Äôm well versed in statistics and data analysis but not python. So any data analyst or data science roles are currently out of reach for me (at least all the ones I‚Äôve found near me). 

I‚Äôm sort of being forced out because of covid, unfortunately.
Ok thank you
Now I want you to be my Deckard Cain and teach me all that knowledge through your scrolls
Yes it is. Thank you very much sir!
Jep...
That's awesome! Do you ever use automation in your daily life though? I've only worked blue collar jobs before, so I don't see myself using this in the workplace.
how did you check the price of running shoes?
Thanks, same to you. Brave new world!
Yep, I was laid off as well. Use this time to retool a bit, and don't feel like you need to match every qualification. The HR people who write most listings are frankly out of their mind.
No because I don‚Äôt really have a lot of tasks I need to repeat daily but I do va w task I need to repeat weekly which I have slowly been automating and some longer ones that are done a couple of times of year that would otherwise require a lot of man hours.
From the lesson that covers web scraping with BeautifulSoup.
Congrats! As a newbie this inspires me.
And for those who don‚Äôt feel comfortable enough or can‚Äôt find a reason to do a PR - you can still contribute to open source software, too. Creating issues for new features, bugs you‚Äôve noticed, writing/editing documentation, etc are all very useful contributions.
Happy for you! Thanks for sharing, this is very encouraging!
I've been learning for 4 months and am now making a user interface for a little hacking project as my first contribution. Just a cli nothing too advanced.
Walking up to a project that's done well is such a pleasant experience. You start to think "maybe I am good at reading code, and I've just been reading bad code this whole time"
Congratulations!
That's great
[deleted]
Good for you! Congratulations. After 4 years since I started learning Python in my spare time, I was offered a junior software engineering position in the company I worked for. I also rejoined an open source project and have been writing documentation for one of their repos :) Keep it up!
That's great. I started learning maybe a couple of weeks back. Open source plugins, git pulls, all are new to me. Hope I will get there some day. I want to do some scraping projects myself.

Btw I'm curious. What's your reg job? P
Thanks a lot for posting this - I hadn‚Äôt considered it could possibly be this simple. I also tend to struggle reading other people‚Äôs code
Great job, keep it up!
congrats !
Is that Pinal Dave??
As someone who is still struggling to come up with things to program -- this is really cool.
Are ya winning son? Oh look at that you already have! Great job buddy, I hope I can one day achieve great heights like you have today. Keep up the good work!
That‚Äôs an awesome story, congratulations! 

I can definitely relate to any other projects i do read just being too confusing haha.

I‚Äôd love to contribute to something one day!
That's amazing
That gives me motivation to continue learning! Thanks for sharing.
Congrats OP!
Nice. I‚Äôm hoping to contribute to open source soon
Congratulations. You helped the community.
Congrats!  Thanks for sharing
Congratulations my dude! <3
This is my INSPIRATION!!!
Wow this is great!!
That's awesome.
I took a look at your pull request and issue. Great noting and great work!
congrats :D
My dream! Congrats :)
That's so cool! I'm interested in contributing to open-source projects too but was convinced I'm not advanced enough yet. But you've inspired me to at least look through some projects code just to get a feel for it :)
you've ascended!
Honestly, my first thought was that you managed to use Git so easily, great job!!
That's awesome! I think everyone should contribute early. My first internship, I was fortunate enough to have someone guide me through a contribution/fix to an open source Azure utility, that's still in the codebase today. That was probably the single most valuable thing I did in any internship.
Congratulations, man. I've been learning Python for about six months now. Like you, I Python as a hobby, unlike most I don't have a job which involves a computer(lucky ducks). I have a manual job. I also create my own projects but I do hope I can contribute to an open-source code someday, too.
This is awesome!  One of my goals for this year is to contribute to an open source project;  I would agree that the most difficult part is finding a project which I can contribute to (and want to contribute to).
Congratulations!
I looking forward to that day when I do something like that. Thank you for anyone who tests and patch issues in open source projects. Even if you don't realize that you are doing God's work. You people have no idea how many people lives you have made better. Even if it is as simple as correcting a spelling mistake in the documentation. You guys are going out of your way and spending your valuable time on something which is not going to pay you, just speak more about your character. Thank you developers once again from a python newbie who is aspiring to become one like you.
Congratulations.
As a newbie you inspire me to continue with my coding.
Congrats. That's awesome!

I'm in a similar boat to yourself (but have only been learning Python sporadically for a year or so). Really enjoying doing practice code questions and learning new things (recently got into Regex, and my god it's handy when working in an office environment - even without using Python!) 

I look forward to being able to post something similar in the future myself. 

Keep up the great work!
you inspired me. Im brand new to this python world. Keep rocking it
Great post! Thanks for sharing.
Inspiring one.
Been wanting to contribute to open source . Can you add the steps which help a first time contributor ?
Keep up the good work!
Kudos. Keep it up.
Thanks for sharing! Im just wondering if you used Python for your needs in those 5 years, and how? To keep learning the language one has to use it. Im asking this to myself too as im a doctor learing python just because its fun! It allows me to totally disconbect from thinking about my main work )) But i have to think of sometjing bigger. Have you thought of actually work in others projects or create sometjing yours in tjose 5 years??
Inspiring and encouraging üëçüëçüëç
Dang good job man. I started python 4 months ago but I‚Äôm kinda lost and at nowhere near you. Perhaps in 4 years and 8 months we shall see ;)
Incredible üòä
Congratulations üéâ
you're hired
[deleted]
Mind sharing which hacking project?
Happy Cake Day!
Yo dawg, I heard you like python, so we put your python code in our python code, so you can code in python while you code python
Has he expanded from SQL to Python?
Can you expand on this I‚Äôm a junior dev and never contributed to open source. I want to start but am a tad lost
of course! I'm just finishing the cli, decided on trying to make it closely resemble metasploit.
python-ception
Is it open source?
Yeah
Great job dude! Make sure your achievement gets properly captured in your employment records so you can reference it next time you're in a review or potential raise situation.
Thanks for the update. Always nice to hear someone gets some value out of a bit of code.
This is why you wait a few weeks before delivering the goods to the customer. That way they think it has to be hard and involve actual work. As an added bonus, you can improve the service for free at any time. I can get my files back within half an hour, at all times? For just another 20 grand? Shut up and take my money.
You guys were paying 40 grand a year to rename files?
gg. 

did u get a bonus ? :P
> My director was so surprised i actually pulled this off that he wants to find every competitor of this specific company and sell them this process (he doesnt know what goes into it yet, just knows it works)

**careful!** it's great that you were able to get this to work, but:

1. do other companies integrate this into their workflow in the *exact same* way?
2. how will you handle distribution
3. it's a simple python script: how will you protect the intellectual property?
4. is this code thoroughly tested, reliable, and, most importantly, **secure**

Be careful before you move forward, especially if you don't have a ton of programming knowledge and your boss is about to make a bunch of promises on your behalf! Definitely bring in a bonafide software engineer at least as a consultant for a day to take a peek at what you are doing and advise whether trying to bring this to other companies in its current state is a good idea, and how much additional work they think it will involve.
"we were apparently paying a company like $40 grand a year to do this"

Don't forget to add this as a bullet point on your resume.
Yeah I agree with everyone else. I made a code that saves around 40 analyst about 15-30 minutes a day. On my year review I brought it up and quantified how much money is now going towards analysis as opposed to redundant reporting and how I deserved a 10% raise because of it. 

It took a good month but they gave it to me. It‚Äôs worth a shot. Just word it well.
No, the company owes you money.  Get a raise.
Best post I've read today.

&#x200B;

Man I can't believe how inmature the software engineering world is that these kinds of problem solving amount to so much. There's like so much things to optimize that honestly I think any idea you can translate to python would be valuable to someone.

&#x200B;

 Also how funny is it that the 40 grand saving didn't even get rid of the Excel spreadsheets. I mean how much money would THAT amount to?
Neat!

Just as a heads-up, though, you don't actually *need* to import `glob` here. `pathlib` already has it as part of its `Path` objects, and your code uses that version, not the one you imported. It's like inviting a friend to help with building a new kitchen but not telling them to do anything when they arrive.
gg, get that bread xD
You just saved your company substantially **more** than $40k/yr...

That vendor didn't exist in a bundle... they probably had some dedicated contacts in your company, so you've just saved part of their payroll.

There was likely a VPN of some sort setup, so you just freed up equipment resources.

It was probably delivered electronically, so you've just freed up bandwidth as well...

and the rabbit hole keeps getting deeper.
Excel? Time to learn some MySQL or sqlite if it's small enough data.
As an FYI I would pop over to data analytics or sql subs and learn to build a good DB outside of excel. You can write to these and build a simple non code UI for retrieving the files. All much much faster than using excel.
40 fucking thousand dollars a year ... for this?

This absolutely should be suable. I'm not saying it is, I'm saying it should.
Well done! But.. was it a good move to just hand it to your company on a golden plate? Just saying..
Cost reduction through automation is part of my sales pitch to potential employers (as a DevOps/SRE).  I‚Äôve saved ‚Ç¨100k‚Äôs over the years on infrastructure costs (AWS can get very expensive, very quickly).

When budget is a major factor (with a hard limit) you can find some interesting solutions!
SO Proud of you dude !!!
Nice! Ring Central has an API - I don‚Äôt know your entire use case, but you might be able to simplify this even further by eliminating the need to save mp4 files to a local directory (presumably RC Meetings recordings?)

I work for a company that is a Ring Central partner, hit me up if you have any questions!
Did or will someone lose their job because of this? Asking from a friend.
what's glob?
[deleted]
If you wrote this code on company time you might not be able to "hold it hostage" legally. A lot of employment contracts state that anything you create on company time is the property of the company.
> Update: I WILL be asking for a raise soon since i just crossed my yearly for this job, possibly a bonus as well. No one has access to this code since it live in a jupyter notebook and isnt automated yet on any local computer. Also if i DONT get a raise ill be taking back my code and holding it for ransom lol

 I know you're probably joking but just incase you aren't, that's almost certainly illegal if you're in the US.
[deleted]
Now ask your boss for a $40k bonus and flex to your friends that you were paid $4.4k per line of code.
They better be paying u $40 grand extra a year now
Congratulations!  Well Done!
hahahaha great story

you go on coding!
If *you were in *my company, my workmates would have dissuaded me to implement this. 'But we can't manej excel filles'
Hope you get some bonus off that.
That's amazing
Congrats!
It's so edifying when you use your skills to make a tangible difference.
Well done OP!
Nice job! As a side note, I'm curious what proportion of us here prefer single quotes `'word'` for strings versus double quotes `"word"`.
This is always such a good feeling especially when you save a whole team thousands of hours on hand jamming some data wrangling or complex manual process.

Well done! Keep killin it and sharpening your Python skills. It really pays off.
I did something similar in the past. Combined our Active Directory data with Payroll exports, shifted and joined tables, exported as a csv file. It saved my company so much money. I just wish I saw some of that saved money for myself :)
Just wait until it time for a raise and they give you a few cents for your hard work or better yet they say they dont have the funds to do it
amazing job bro, that‚Äôs some good shit
"Apart from my wife, ofcourse" üòÇü§åüèª
Be sure to have your company protect any intellectuals, if applicable.  

Saving your employer money always feels good.
While it looks great, this is also why you and everyone should consider selling their services in the free market or licensing them.  Employers do not pay well.
> we were apparently paying a company like $40 grand a year to do this

Jaw on the floor. Good for that company before, and good for you for figuring it out lmao.
No, they owe you a lot of money.
Did you get a RAISE yet???

I'll be mad if you didn't
Holy crap! Good job! I'm so proud of you!
Every business analyst I‚Äôve ever met absolutely LOVES MS Access. Probably because it‚Äôs like Excel but on steroids. 

So they‚Äôll build a cool system. Then show a teammate. Then put it on a shared folder.

Then learn that MS Access wasn‚Äôt built for that.

And that‚Äôs when they call up the software team to convert their steaming pile of denormalized data and forms into a real app.

And that‚Äôs when I cry.
>we were apparently paying a company like $40 grand a year to do this

So they are gonna bump up your pay right? :)
This reminds me of a time back in college where I saved the university a similar sum of money by mass-updating the default settings on all of the printers from single-sided to duplex, and from standard toner darkness to eco mode. üòéüíµ
 
/u/rawrtherapybackup: If you're working with Windows and Excel a lot, you should consider learning /r/PowerShell for scripting tasks like this. Since it's made by Microsoft, it has all kinds of special capabilities for working with other Microsoft products, and its functions can return actual objects, not just text and numbers.
I did this with puzzle images and our inventory database at a puzzle store. I still continue to make minimum wage...
congratulation! this is great to hear. I just started learning python yesterday and im really enjoying it. I've taken C++ and javascript classe bfore and found them painful, but Python has been great thus far.   


PS: Oh make sure you get compensated accordingly, you're an asset to that company. Know your worth king.
Did you quit? /s
I think if you look into hash maps, your job might get even more easier.
Great job!
Your script suggests its a windows system, can't a simple batch script had done the same task?

Nothing wrong with using python, in this case, I felt its like using Fully Loaded Tank for food delivery when a bicycle would have worked just fine.
Great man! Congrats!
I‚Äôm not sure what your contract is like, 

But MOST will have IP clauses around the time of day you did the task. If it was on there time they don‚Äôt actually have to give you anything except a pat on the back. 

Next time, say you spent a weekend doing it
You just admitted to several potential crimes online. They should fire you.
I just started learning python a few weeks ago and am still somewhat lost, your achievement sounds fantastic though, so well done
People pay $40k a year to do THIS?
bet that company is pissed....they were getting $40k a year free lol
Nice, where's the 40k bonus?
Congrats! In addition, one career hack ive learned is to make your boss look good. So for e ample, when review time comes tell your boss' boss that he/she gave your chance to write this program no matter how true or not. Your boss will remember that
Good old grob. 
Next, you can use Tkinter so muggles can use your code to set filepath using a popup.
Add some __main__ as a function at the end and the .py can be an executable so they never need to open the code (just make sure Anaconda is installed, etc etc).

Best of luck! Go get that raise!
Ask for a 13 grand raise (1/3 of what you‚Äôve saved) and settle for a 4 grand raise (1/10 of what you‚Äôve saved) :)
Not enough people do this and I've been severely guilty of it recently.

Everything that makes an impact needs to be recorded as a justification for future pay rises, promotions and general good stuff.
or you could share this thread in your profile.
This is good advice. If OP wants to make the career change someday this is exactly what I leveraged and it works.
[Mr. Scott knew what was up](http://wiki.c2.com/?ScottyFactor)
>This is why you wait a few weeks before delivering the goods to the customer. That way they think it has to be hard and involve actual work.

Do not be this person!

If you have to pad out your achievements and trick people into thinking you're working hard, you're just a shitty person.

Work hard, do your best. Learn a lot along the way. Some employers maybe just want the widget you can produce. But many MANY great ones are more interested in the employee that can create them. Don't let anyone measure your worth by some widget you wrote. Especially yourself!

This is just one thing in a long career of problem solving and software development. If you waste the time you saved the company pretending like you're working you're not showing them that you're worth more.
It was little more complicated than that

This was just one part of like a 10 step process

But yes, the renaming of these files was a bigger part because we have petals thousands of files that come

For example: 08-09-2021_635284636TH74_ajshd-shdy3746-736p

I just had to take that middle portion of numbers and connect that to an excel file that I‚Äôm using a macro for

So it‚Äôs the bigger part, but it‚Äôs not the only part
I fucking better lol
1. ü§∑‚Äç‚ôÇÔ∏è
2. Reddit. The code is already out. See OP.
Yeah, his company should be excited about the savings it will give them, but taking it to market is going to be much harder.  This is just the script, building the infrastructure around it is usually the more time consuming aspect.
\^ this
You don‚Äôt have to protect the ‚Äúintellectual property‚Äù to sell software lol
NOTED lol

Definitely upgrading my resume today for this aha
I think these kinds of tasks will always exist. Most businesses won't be started by software engineers, their first employees as a real business will be finance and sales, so little to no knowledge of any computer systems not directly related to the work they do for the company. Everything will get done, but in a very cobbled together sort of way.

Finally they'll get to be big enough that they hire someone who can write decent python and if that person is ambitious enough, they can spend months cleaning up business processes that once made sense to be done manually in Excel, but now should really be done automatically in a database.
I'm getting a sense that pervasive deliberate computer illiteracy has an effect on such things.
Im gonna bring all this up when I bring up getting a raise, i didnt think about it like that
Why would / should it be suable? The company was providing a service that no one on OP's team was capable of doing themselves.  

I agree that it's way too much money for not nearly enough work, but that's not on the vendor for meeting their contractual obligations. That's the fault of OPs company for not running a smarter business.
What would be the grounds for the suit? "Our management and contract teams are inept, give us money" lol
It‚Äôs probably a solution that sells data connectors and their only using this one feature. At least I‚Äôd hope that‚Äôs the case.
gotta agree they were getting jipped, most of the involvement they had was with this specific task

other than that on their part it was pretty automated work
>This absolutely should be suable. I'm not saying it is, I'm saying it should.

plenty of grifters around.

look at muric with their anti intelligence politicized dieing for being stupid anti vaxxers.

dumb ppl be dumb. if u get to profit a little bit out of their stupidity.. meh . capitalism <3
no one has the code yet, it lives on a jupyter notebook for testing purposes but the process is not fully automated

so no one has seen the code except for you guys and me
Thank you! will definitely reach out!

my biggest issue really is renaming those files to ONLY have that middle like 9 digit number

can the API do that from the start?
i dont think anyone will lose their job

I do think that the company we were working with, will lose a customer though
It's a utility that pattern matches file names. It's similar to grep but for matching filenames.

The name 'glob' is short for 'global'. Just like how 'ls' is short for list, 'cat' is short for concatenate, etc.
no idea what this means, can you expand?
just realized what you mean

ill update it
Gotta assume it‚Äôs their property tbh

I was just kidding about that, but I am gonna ask for a raise
it doesnt :( but im gonana try and get a raise or delete the whole process since im the only one that knows it lol
Double quotes is better, I think, as it lets you use single quotes inside.
Thank you! its a simple task that i had no idea was so simple in theory

im just not gonna tell them that aha
lol thankfully we also use a SQL database, still new to SQL but im starting to query a bunch of stuff on the daily so little by little im getting better
they better! haha i just crossed my yearly back in July and im sure theyre going to evaluate me soon-ish?

Im gonna ask for a raise and a bonus
So they are gonna bump up your pay right?? :/
haha i actually DO use powershell a lot at work!

I use it for email automation and file organization really but good eye!
Gotta fill you in, if your coding well you can find a better job
I don't understand how a batch script would be better than a Python script, other than not requiring the installation of Python itself - which is trivial.

If I have to choose, it's going to be Python every time. If I write it well in Python then it's not tied to an OS, and I have more power to extend it while using a really nice programming language.
This is about the same amount of lines in Powershell yes. Still it doesn't matter and is a nice achievement
If they find me lol
As someone who hasn't worked  a professional job yet, how exactly do you make sure you get stuff like this is in your record (in writing?)
**"I'm giving it all she's got, captain!" -not exactly**
Hmm, depends on the company and position you are in. This sounds like analyst work for a low technology literate company. Chances are, you won't see any % of the money you just saved them. Also looking at the desire of management to sell this to other companies, they are forgetting about the maintenance of the program/other intangibles. Everything else depends on you. If you want to try and become a rockstar go for project after project otherwise take your time.    .
Also your company owns your code, can't hd it for ransom but if breaks...shrug
Shitty people make money. Capitalism was never supposed to be fair. Focus on changing those facts rather than trying to make people act against their best interests. Selling your work for a fair price rather than market value is a guaranteed way to keep the shitty people in power, because they're the only ones playing the game efficiently. If someone is willing to pay 40 grand yearly for a script that took an hour to write, it's because they're making a profit from it. That's how the free market works.

I'll work for free for a good cause if that's what it takes to get the thing done, but if it's a for-profit company footing the bill, I'm bleeding them for everything I can.
>If you have to pad out your achievements and trick people into thinking you're working hard, you're just a shitty person.

Yeah, but I'm a shitty person with a shitload of money.

LOL.  Just kidding.  But I DO do that at least a little bit.  I also sometimes put a "please wait"  spinner up and keep it up for one second even though the task only took a fraction of a second.  I put a lot of work into that spinner and dammit, they are gonna look at it.  ;-)
Now upgrade them from excel to an actual db and blow their minds with what they can accomplish after that

Also, gg
> What happens is this script basically grabs whatever name convention a video file has and shrinks it to a 9 digit number that can then be mapped to an excel file using a macro i also created

What happens if there are collisions between multiple files? Or duplicates?

You're getting some suggestions to use a db, but excel is pretty great for normal people to work in unless you have millions of rows. Don't be super quick to get rid of it.
Ignore the haters. Good job!
Haha keep us posted!
I find it funny that he want to sell it, which they can i think. Could be in the contract or law, that the company owns the code you made for the company, even if you did it at home. I really hope you get a sweet bonus or something
Better brush up that resume incase.
3 years later I would like an update on whether you ever got a bonus
Step 1: Here on Reddit. 
  
[Click here to see my other 9 steps to save you $40k a year!!](https://www.youtube.com/watch?v=SrDSqODtEFM)  
  
/s
It‚Äôs like 4 lines of code that renamed files. How on earth would you ‚Äútake that to market‚Äù
Exactly my case. Everything is cobbled together in many different excel files over many employees with some DB backends. A big part of my work goes to cleaning up these processes that can be automated through the use of python and a VM.
Exactly.   Try to get the number actually quantified, because it'll be handy to have in the future.   If they go and sell it as well?   Suddenly, you're no longer an Expense, you're a Profit Center!   

If they license it at a discount for $30k/yr, how many competitors would it take to completely cover your yearly salary?   Probably not too many.



If you've got a decent relationship with your boss, mention that you certainly hope that the savings and new revenue stream is reflected in your paycheck.

Fuck "recognition", "awards", "gifts", "one time bonuses".... *only* thing that matters long term is your annual rate. 

Let's compare a 3% raise making $30k, to a $900 one-time bonus.

First year?  Basically identical, both are $900.

Second year?   The raise means you get that $900 *again*.... Bonus?  Not so much.
Exactly, and it's frustrating how ridiculously scummy businesses that charge unforgivably large amounts of money for their services can just get away with it and the blame pinned down on who is essentially the victim.

They're stealing money and they know it and they laugh themselves to sleep every night knowing they can't be held liable despite how obviously wrong what they're doing is.
Our company is incompetent so you should have not charged us with this much.
I love automating corporate tasks... great job! 

But it's spelled "gyped" and you probably should try to phase it out of your vocabulary.
Oh! I‚Äôd suggest you look for a way to sell your solution rather than handing it out for free. You company might go behind your back and sell it itself and profit from it; as you mentioned you guys were paying ~$40k/year for this..
I'd probably need to know more about your workflow - you have a bunch of MP4s in a folder on a local drive. Does that mean someone is manually downloading those files and dropping them in the folder? If that's the case, then that task can be automated and bundled up with your file renaming scheme.

You can use the API to retrieve recordings directly from RC servers, and then do your string manipulation on the filename as you're saving it.

[https://developers.ringcentral.com/api-reference/Meeting-Recordings/listAccountMeetingRecordings](https://developers.ringcentral.com/api-reference/Meeting-Recordings/listAccountMeetingRecordings)
I wonder where the burden of proof is. I know you told them you did it on the job, but if I write something on my own time at home, how would I protect myself from a predatory employer?
The reverse also holds true, with the downside of looking really stupid.
I would argue that a small powershell script is much better on a windows server than a whole additional installation of python which adds a ton of vulnerabilities. 

It might be worth it just converting this to Powershell. Now you know the logic it is trivial and you can sell yourself to your boss even more.
This is a late reply, but your best bet is to have quarterly reviews with your manager where you go through your achievements for that quarter, write them out as review minutes and then get you manager to sign off on them. Perfect reference for your annual review
https://www.youtube.com/watch?v=JKRu-xH58E8
>Chances are, you won't see any % of the money you just saved them. 

Yep, that's pretty true. But you will see the intangible rewards, provided the company doesn't suck. And if they do, leave and find another one. Life is too short to be a code monkey in a box!

>Also your company owns your code, can't hd it for ransom but if breaks...shrug

That'll be the case everywhere. Don't be an "information hoarder". As a software developer, you're being paid to write software -- not being paid to run software as a service. If you feel like you need to hold your work ransom, that's a sign that you should not work there.
I don't even know how to respond to this.

If you want to sell a script for 40 grand a year that's fine. You just can't do that with a script they already paid you to write. And you can't do that with a job that is already paying you hourly/salary. And you definitely can't do that without both parties agreeing.

Being paid for the product instead of by the hour is how contact jobs work. Higher risk, higher reward. Negotiate how you want to be paid for your work *before* doing the work, not after. Renegotiations are for future work.
LOL. So long as the spinner is for asthetics and not so you can later remove it to claim a 40% speedup :)

I meant more like, if you spend an hour on a task and spend the rest of the month lying about how hard it is so you don't have to work.
if they aren't technical, would they even care about a database in the backend?
Bigger brain:  Put into a DB then have output be useful excel sheets.
[deleted]
Excel is pretty wicked. Access has too many potholes to step into. 

I always like keeping stuff in Excel for as long as possible.
[deleted]
What is the title of your position?

I am doing this same type of work and I enjoy it, but they are about to do an ERP implementation and I'm worried this will not be as fulfilling.

So anyway if I were to look for a job where I could continue improving business processes with python, I am trying to figure out what type of posting to look out for.
Because the buyer didn't look for alternatives?

I need one small thing done and someone says 40k a year and I accept but they're the bad guy?
I hate it when a plumber steals my money to fix the problems I don't know how to approach
Sounds like a winning case!
honestly had no idea it was worded like that lol

thank you
Upvote for visibility to highlight your second statement
> But it's spelled "gyped" and you probably should try to phase it out of your vocabulary.

No. You need to stop telling people what to do or not do as well as learn some manners while you're at it.
[deleted]
This is bad advice
I would imagine jupyter has edit timestamps. I can't imagine a company would put that much effort into it, but it would at the very least cost op their job if they tried to violate an employment contract.
dont tell them?

id have to argue that doing a similar code or process at home wont be liable to at work policies
Thank you!
also a late reply but thanks!
That's a great Family Guy clip. **"I've lost all credibility, haven't I?"**

I was thinking of this, from TNG: 

https://youtu.be/8xRqXYsksFg
Yes, but the vendor wasn't doing contract work.
for the same reason wall street bankers care about the coca leaf tree harvests in south america, maaang  
SPEED
Have the output csv files printed and pay full time scanners to fax the documents abroad where they can be manually entered in to the database for a fraction of the cost!


Is this Agile development?
That‚Äôs a great question- & one your boss is likely to ask early on too (if it ain‚Äôt broke, leave it be) 
There‚Äôs a lot of advantages to excel from his POV- it‚Äôs readable & improvable by anyone in the company. It‚Äôs quick and familiar..)
Downsides are it‚Äôs easy to mess up formula and calculations & there‚Äôs a maximum number of rows.
Another thing is a database can do sophisticated joins between different types of data: think a list of authors to a list of books- you want a single place for each of these things without duplication.

The language SQL allows you to ask astonishing things of your data- if you learn how to use it!  it might a bit of an unfamiliar way of thinking but practice might make you see how clever it is. (Codewars.com has puzzles in sql & python (& others) you can level up on.)

For db recommendations: Postgres is probably more than you will ever need but I suggest SQLite to get started. It uses a file to store your data in, in a very tangible way. Eg: Makes it easy to nuke the database (on purpose!) & start again with a new exercise.

Mongo I would argue is a special case of sql. Once you get the broad concepts of sql, the pros & cons of not using it will be more obvious. Ymmv & there‚Äôs definitely a place for both in your repertoire. ( I suggest redis as a no sql db too fwiw)

Looking forward to hearing about your journey- & Congrats on your code: All about solving problems - good job!
Different db management systems have different advantages. SQLite is nice if your data is completely local as it doesn‚Äôt rely on a server-client model which can be a little slow starting up and takes up some resources in background. Others like postgresql are good when you need remote access. I know nothing of mongodb so can‚Äôt speak for when you‚Äôd want that. 

DBs are nice when the size of the data is large compared to your ram. They make it easy to read in small subsets of data and work on that rather than trying to read in the entire dataset. They also handle relationships between data efficiently. When people talk of dbs they‚Äôre generally referring to relational databases which can grab data from multiple tables in a single query. So if you‚Äôre keeping track of who‚Äôs accessing your office you might have a table with columns for an employee id, a room id, and a timestamp. The employee id and room id might not mean much to you so you‚Äôll have an employee table and a room table that will associate other data like name, role, email, etc. That way you can ask who entered this room (by room name) on some date and get the names of the employees without having to redundantly store that information in every entry in the main table. And db management system do all this very well. They can sort by an id then do a binary search instead of going down the entire list and keep indexes to find other columns.

That being said if the data is small enough compared to ram you may be better off using csvs and a programming language (many have libraries for working with tables in a SQL style like pandas for python).

As fat as what can‚Äôt excel do? Excel is great as an all in one for someone who doesn‚Äôt know much about computers but, IMO, it is way over used. It‚Äôs intended to be like a simple programming language but as soon as someone starts putting significant time learning it they‚Äôre probably better off learning the basics of a high level language. The actual reasons it‚Äôs not so great: it doesn‚Äôt separate data from code making it not easily reusable (workarounds require copy templates and pasting data into them), this also means it can‚Äôt do anything to the original data without destroying it which means leaving around lots of columns of data, and it also means storing calculations on the original data rather than saving the results meaning recalculating values often, it displays everything all the time and auto updates which is inefficient to the point of being a bottle neck, it doesn‚Äôt have proper variable names or easy to create functions making it hard to follow what has been done (i.e a bunch of As and Bs in a cell isn‚Äôt very informative compared to sample_id and cell_type, it‚Äôs not plain text unlike programming languages so it doesn‚Äôt work with plain text tools  most notably version control software, it doesn‚Äôt scale up well either with complexity (a programming language allows you to break functionality into other files and packages) or with amount of data (again dbs allow you to read in small fractions of the data if it‚Äôs too large), plus Microsoft doesn‚Äôt support linux which is popular amongst people doing data management/on servers so it‚Äôs a pain to convert to another form and that can lose information.

For working with table data R‚Äôs tidyverse packages are the best I‚Äôve used. A ton of thought has gone into what people really need to do to the data and things work intuitively and pipelines are clear in function and easy to throw together quickly.
Highly recommend SQLite. It native to Python (via standard library `sqlite`), easy to use, doesn't require a server/host since its just a single file, is efficient, fast, and ACID-compliant. Learn it once and you learn it for life.

For automation, there not really any better solution for a backend.

I, like you, didn't mess with databases but I forced myself to try it out with a project and it's a serious game-changer. It does have some limitations (eg, concurrency, clustering) but nothing that can't be overcome with some clever engineering or pivoting to another type of backend (MongoDB, for example).
> they dont own the code

They most likely do. Many contracts specifically state that whatever is made in company laptop by employees is company property.
They still own the code tho, also it sounds a little weird that you somehow just lost the code xD   
Also dont think they would they pay you more,  you are already employed by them and they could tell you to do it, I think most contracts are very open when it comes to tasks. And they know you know how to do it :P
Then op is in trouble for losing company property, isn't he?
Yes, that's what I have just said. This is not the topic of this sub so let's stop it here.
No problem! I think we don't really realize the slur with this one because there isn't nearly the racist history against the Romani people in America like there is in Europe.

Sometimes in conversation I still catch myself about to say it. Luckily, there's a lot of fun words we can say as a replacement.
Thank you for your contribution.
OP unknowingly used a slur and got a friendly warning that probably saved him some grief from when someone inevitably gets offended at it. The situation was very adequately handled.

> learn some manners while you're at it.

Since when is telling people that they shouldn't use literal slurs a rude thing to do? You need some people skills lmao.
Yes, I too wouldn‚Äôt listen to whoever on the internet on a matter such as this.. I‚Äôm only saying that he should make sure that he gets what he deserves! 
Cheers.
That's exactly my point.
MVP üòâ
Even worse, some contracts says that the code you made for use at the company, but not made with company computer or time, like OPs program, its enough for the company to own it. Its very good to read up about this in your own country if you been thinking about making programs and stuff for personal use or work use. :)
no.... if you accidently delete the company database as an intern are you responsible to pay a few million to fix it?

of course not
They needed a bicycle and bought a Ferrari, it's the vendor's fault.
it's how capitalism works, wake up
In that case I'm not at all sure what you're disagreeing with.
Some contracts go even beyond that and say that anything you create during your employment, even in your personal time for non-work purposes, belong to the company.
You‚Äôre actually 100% correct. I have this clause in my contract (computer or on company/client time)

Edit: I really would like to know the rationale of downvoting an irrefutable fact

Literally taken from my contract:
‚ÄòEvery intellectual property, regardless of the nature, of which the employee becomes owner or co-owner in the context of the employment contract, belongs to the exclusive ownership of the employer, who will have the exclusive right to exploit the intellectual property, ammend it or transfer it to a third party.‚Äô

Some additional clauses specify a possibility of a remuneration of 1% of the revenues from the IP.
If they dont have a backup for the database and you delete it and fuck over the company, Im pretty sure you will get sued or something.
They bought a bicycle but they paid Ferrari prices.
If you want to do contact work, you have to work for somebody that pays by the contract.

If you work hourly or salary you can't just decide to hold the work you were paid to do for ransom. And you can't just pretend like you're working and expect that to end well.

Edit: To put it another way, if you're being paid by time, "wait a few weeks" is fraud.
yup, its fucked up. I was reading about in and the Swedish law is a bit funky when it comes to ownership. Like you have to take it to court or something, could have just been if the work was for work purposes tho, as creators have automatic ownership otherwise.
It's still their fault though for just paying for it. And btw. if they can afford to pay such amounts for such a task, they must charge their own customers to much for what they are offering. I bet you they also won't lower their prices now that they are saving 40k a year, so it's all relative.
Do you know what the product they purchased can do versus what they're using it for?

I can't imagine a product that literally renames files that can be broken down to a simple python script ish build at 40K a year with no other features.
Who suggested that anyone does that? I didn't.
What if the third party company they hired is a consultant? I wonder how liable they would be for the system they provided when there‚Äôs ways to do it cheaper/ more efficiently ‚Ä¶
You suggested "wait a few weeks".

> This is why you wait a few weeks before delivering the goods to the customer. That way they think it has to be hard and involve actual work.

If you're being paid for your time, that's just fraud.

If the vendor *agrees* to pay you for the product instead of by the hour you spend developing it, that's different. But that's a negotiation that happens *before* they've paid you to develop it.
Not liable at all i'd guess. They set a price for their service and the client accepted it. There is no rule that they are allowed to only make 10-30% profit on their service. Look at Prada, Lamborghini, Rolex etc. They sell their products for way more than it costs to make them and people are still buying them.
I want to share that i have finished your online course some months before. I had already done some python tutorials, but your course helped me feel more confident and i figured out that i can do everything with all these available libraries.

As an office employee i coded many scripts which helped me "automate the boring stuff". I had to put more than  200 stamps and signatures on pdf files. So i made a script turning them to jpg and then copy the sign and stamp jpg file and paste them. I made some web scrapers as well and i gather data. Now im exploring data science and going to start a new project soon with the data im gathering. Also i was accepted for a msc in data science.

You have my deepest thanks.
Alright, no excuses. Skip the netflix and pints each night and let's see what the story is with Python.
Thanks very much Al! I started watching the first 15 episodes on YT around a week ago and they were absolutely phenomenal. Dropped by on this subreddit and noticed last month's giveaway already ended, but then I noticed you have been doing this for quite some time. Finally got to claim it!
Can someone automate taking this course for me?
I'm a little over halfway through the course and I'm really surprised at how much I have learned in such a short period of time. Both the book and the course are worth every penny and I'm so glad I found them. I started learning python from scratch using a little free android app, but I ended up just migrating over to ATBS because the concepts are explained way more thoroughly in your course. 

For anyone starting out with python, I 100% recommend this course.
Thanks so much, got the No Starch Press Humble Bundle mostly for Automate the Boring Stuff and Cracking Codes. Have a great day!
The python community is one of the best i have ever seen. Everyone is here to help each other and grow.
Just finished it! I highly recommend it. Be prepared to watch some sections multiple times. And look for questions asked by other students to help you understand concepts.
Thanks so much, this is really great
Thank you very much!
Thank you so much, I've been waiting for something like this for a while, can't wait to improve my skills during lockdown!
Thank you!
Al is great, worth it even if you end up paying full price.   Good point on finding a study buddy :: work together at a reasonable pace, then do pull requests for each others code on gitlab / github later...
Thank you so much!  This will be my first experience with python and I've very excited :)
I started learning python last month through your book first and was absolutely blown away. I've never been this engrossed in learning something new before and managed to complete the first 15 videos on YouTube. As a broke high school student, I wasn't able to to afford your course so I've been looking forward to June where I knew your generosity would pull me through. Thank you so much.

Once I finally have the funds available, expect a hefty donation by yours truly and I absolutely cannot wait to continue learning with you! You are a blessing in the python community and personality helped me feel a sense of accomplishment during times like these.
Thank you so much for doing this, I already did enrolled a few weeks back when you did this for stay at home for covid. 

I promise to pay you back when I get a job and help others too when I learn and feel confident about python and programming. I hope others will do the same.

Cheers man, you‚Äôre a legend!
Thank you!
Thank you!
Thank you!
thank you so much you‚Äôre actually amazing
Signed up - thanks for your generosity!
Thanks!!!
Thank You
I just finished this course after 2 months slowly absorbing out (the covid19 quarantine helped)  It's been a fantastic learning experience! Thank you so much! Never stop learning!
Thank you very much! Merci Beaucoup!
Thank you very much!!!!!!!!!!!!!!!
Thank you so much for this! I‚Äôm studying python independently and was looking for something with a bit more guidance, this is exactly what I needed. üëçüèª
Thank you very much!
Thanks! This is what I was looking for
Thank You !!!
If I have the 2nd edition book could I still use it along with this course or would that just confuse me?
Nice
I'm really enjoying this course, I recommend it
So glad I saw this! I'm about done with programarcadegames.com and was thinking about doing your guide next. Thank you!
once again Al thanks for what you've done.
Almost finished the course and I am loving it.  I'd given up on learning to code several times in the past but your book/course has gotten me to work through my wall and I love it!  Thank you for doing this
a thousand thank yous
Did anyone do Code In Place and have some familiarity with this? 

I'm wondering if ATBS is a good next step or if I should get into something else.
Thank you Al. I‚Äôm taking your course since last week. It‚Äôs great!
[deleted]
I‚Äôm about half way through this course. The style that you teach in is very smooth and easy to understand. This is definitely a good start for learning how to code in python.
Thanks u/AlSweigart. Your book Python Crash Course was the best python programming book I have ever read.
Thank you! Excited to dive into this one. I‚Äôve been wanting to try Python for a while and now I have no excuses lol.
i'm doing it since the first time you released it for free  this year. thank you so much.
Al, you are an absolute legend
Thank you so much! I was trying to find a way to get started with python after tinkering with arduino for a while, and this is a great start.
Is this course for Python 2 or Python 3?
Am happy to let everyone know I am so happy I did this course, can recommend it to everyone! Worth my money 10/10
Thank you!
Thank you so much! Perfect timing!
Thank you so much! Just completed the basics of PCC and was looking to further my fundamentals. This could not have come at a better time.
I‚Äôm reading this now and it is brilliant.
Anyone looking for an accountabilitybuddy? Just someone to help keep eachother on track?
Awesome! Thanks a lot. 

Just enrolled and can't wait to get started.
Thank you very much.  I think the hardest thing for me has been where to find little real life projects just above the beginner level.  I can't wait to dive in.
YEAH finally didn't see this message a week too late

thanks al "big ally swag" sweigart
God bless you! Getting this course for free us really amazing, I now have both the book as well as the course, absolutely free!!! Thanks a lot!!!
I am currently 25% through this course. Enjoyable and easy to follow. I completed a Python night course with the local college and ATBSWP has been easier to follow.
Thank you! Just what I needed :)
Thank you so much...
Thank you!
Thanks for this - much appreciated!
you sir, you always do this thing. thank you for giving it back.
Just enrolled....thank you very much.

Now i just have to deal with procrastination...
Thank you very much
I can‚Äôt find the link for us noobs, is there a beginner link?
Hi, thanks for showing me this, I just used your code for this, I'm certain it will help me learn Python! :P
Thanks Al!
Thanks a lot for this :)
Discovered it was free by chance following the link on your book's site. Loving it, really can't thank you enough.
Thank you very much!
Hi, just wanted to thank you. I have went through some parts of the notes you have provided free online and really liked how concise and useful it is! Thank you for knowledge sharing and being so generous
Thank you , Completed 20% of the course so far,Excellent teacher!
Thank you! I bought your book a few months ago but haven't started it yet. This will help!
I didn't know you had a course I've been putting this off for sometime now by making excuses. Now I can't. Thank you for doing all you can to get lazy people like me to slowly start learning python. You care and the fact that you care about people you don't know speaks volumes about you. Thank you.
connect psychotic piquant rustic books spectacular bright cooperative steep imagine

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*
Just enrolled thanks!!üëç
About half way through the course and honestly really enjoying it. The hard part is just knowing that you have to know the fundamentals before learning to do cool stuff.
Wow! That's very generous of you. Thank you very much for sharing with us this, and for all the effort you make in the resources you share with the community.
Thank you! This might get me learn some python.
Thanks for making your Udemy course free every month it has helped me in a programming class I am in the online college class won't even cover stuff your book covers they stop at functions 8 week class if anyone asks  but it's help me stay ahead thanks for making it free every month.
This is just an edited version of the stock python tutorial from the official website. Its free anyway without going through this dumb course website

Also did you write a python script to automate these comments?
Thank you! I bought the book a while ago, but only got through the first two chapters. I hope I'm able to get through the videos!
Saving for later, thanks!
Just wanted to say that you sound just like Justin Roiland from Rick and Morty when you talk.
Just signed up and it‚Äôs awesome!!!
Is this worth it if I‚Äôm already proficient in Python? Also is it all videos? Because I‚Äôm not a fan of that and prefer reading.
Thank you so much!
Thank you!!
Thanks for sharing!!
thanks you for sharing udemy code
Nice will definitly check this.
Al is an absolute king
Thank you!
Signed up, and up to the intro video :) Hoping for a quiet night at work tonight to really hook into it.
I'm late to the party, but I'm also just now getting into programming and would appreciate it if someone would be willing to drop the name of the YouTube channel. 

Also to anyone who is using coding for pragramming devices, I want to make prosthetics and I want to understand more about the coding that would go into that. If anyone has some pointers or tips on where I can find the information I'm looking for or is in the field working on something similar I'd love some advice.
Thanks a lot, I just opened an udemy account for this!
Hi. Neither of the free codes seem to be working for me. The first is expired, and the second is apparently incorrect. Is there a new code?
I can't get the codes to work?

JUN2020FREE - "The coupon code entered has expired."

JUN2020FREE2 - "The coupon code entered is not valid for this course. Perhaps you used the wrong coupon code?"

May someone please help me? Thank you!
I just picked up the book from the library and loving it so far. This will be a huuuge help! Thanks a bunch for this!
I can't believe I missed out on this bruh
Hi u/AlSweigart 

I just took opportunity of this free promotion and enrolled into your course. Thanks a lot.

But while doing another Programming 101 course on Udemy, I had to enable flash plugin to watch the videos. And Chrome warned me that Flash wont be supported after December 2020. So will I still be able to watch the videos on your course or any other course on Udemy?

Thanks again for your coupon.
Aw man I missed the deadline. Will there be another free code next month? I'm currently a Java programmer but I know a little C++ and C#. I thought its about time I learn a new language
Unfortunately saw this TOO late, yesterday.
Need an idea for python project linked with sql
RemindME! 2 hours "get this"
!remindme 8 hours
[deleted]
Honestly you don't really have to skip the pint lol.
Nothing says you can't sip on a pint while learning to code, I do it all the time!
For me its mary
This
Way late to the party and your comment but I was sorting by top of all time and noticed I missed out on May until this post lol.
Heheh, PCC is by the incredible [Eric Matthes](https://ehmatthes.github.io/) and is indeed the best Python programming book out there for beginners.
[deleted]
Thank you, it is working now!
I will be messaging you in 2 hours on [**2020-06-02 13:09:52 UTC**](http://www.wolframalpha.com/input/?i=2020-06-02%2013:09:52%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/guu0nq/automate_the_boring_stuff_with_python_online/fsmhou6/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fguu0nq%2Fautomate_the_boring_stuff_with_python_online%2Ffsmhou6%2F%5D%0A%0ARemindMe%21%202020-06-02%2013%3A09%3A52%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20guu0nq)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Wtf this is a thing
There is a 1 hour delay fetching comments.

I will be messaging you in 6 hours on [**2020-06-02 09:31:41 UTC**](http://www.wolframalpha.com/input/?i=2020-06-02%2009:31:41%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/guu0nq/automate_the_boring_stuff_with_python_online/fsl7tz3/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fguu0nq%2Fautomate_the_boring_stuff_with_python_online%2Ffsl7tz3%2F%5D%0A%0ARemindMe%21%202020-06-02%2009%3A31%3A41%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20guu0nq)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
That‚Äôs basically the equivalent of asking ‚Äúdo you need to know how to program to become a programmer‚Äù
Data science is very closely related to software engineering. You need to know how to program to maneuver through different databases as well as visualize them.

Furthermore you need strong interpersonal skills as you need to know how to effectively communicate your results to your product manager or team. Sadly in top tech companies there‚Äôs much politics to play in these roles.

Idk about a graduate program, I‚Äôd take a look at the admissions requirements for the specific program you‚Äôre looking at.

Considering the question asked id assume you‚Äôve got a bit of an incorrect picture of how this job works and what it looks like, id consider watching some YouTube videos. As a project manager for IBM the data scientists on the team were given a task then they went off into corners to code and weren‚Äôt seen for hours. 

To move up in the field in this position you have two options, masters or PhD, or, going into product/project management and focusing on the corporate ladder. Hope this helps!
It is heavily dependent on the program but you still need mathematical/ statistical ECTS credits from your undergraduate degree. Economics and finance degrees are accepted by many programs. But i do not count to learn CS on my master. I keep studying every day. Im refreshing my maths at the moment and learning python data science libraries.
Thank you!!! I‚Äôm so excited!
Just a reminder so I don‚Äôt forget
[deleted]
That‚Äôs fucking cool
I've been through one of the master's programs for data science (technically business analytics on my degree) that says you don't need advanced programming skills. I would not recommend it unless you have a strong math (multi var calc/linear algebra) and/or programming background.

Otherwise you're going to graduate knowing how to plug and play a lot of stuff but struggling with the logic/thinking behind the scenes. (Basically a danger to yourself and others.)
Very cool yep
[removed]
I am also planning to add a number of additional resources to what's currently available:

* Additional exercises and more complex challenges.
* Articles that build on what was presented in the book.
   * Core Python concepts that are useful, but weren't necessary to include in the book.
   * Extensions to the projects, such as how to write a program that plays Alien Invasion automatically according to a playing strategy that you devise.
* Reader profiles.
* Guided walk-throughs of the documentation for libraries used in the book.

I won't post about each of these here when they're available, because that would become pretty spammy. If you'd like to know about each of these when they become available, you can [sign up for an email newsletter here](https://emailoctopus.com/lists/95c27296-f1d4-11e9-be00-06b4694bee2a/forms/subscribe). I do not send frequent emails, and I make it as easy as possible to unsubsucribe if you no longer want these notifications.
The Classes sheet actually helped me IMMENSELY with a coding assignment I'm working on. Thank you thank you!
Working through Crash Course right now. Thank you so much.
[deleted]
Big thanks!!! I use your cheatsheets all the time and just printed them out and sent them to my son to use. So you've gone multigenerational!
Thank you very much for your sheets. I have a question for you which is not directly related to this topic. I haven't been studying Python for two days due to busy lifestyle. I'm afraid that this 2-day break will make me forget some concepts that I have learnt. I mean I am a beginner and not everything has sunk in completely yet, that is, it's pretty easy for me to forget things if I don't practice them, right? OR is my concern pointless because nothing bad could happen in just two days? I'd appreciate it if you answered my question.
Thank you very much. This might be my very first comment (I think) but I feel like it feels wrong to use this without at least saying thank you.
Dude! I've had your sheets since day 1 of learning python. Thank you for updating!
[deleted]
Great resource! Thanks.
Much appreciated!
Man, I came back to learn Py with your book a few years ago and followed up with Mark Lutz's book. I'm very thankful for your book and cheat sheets! Thanks.
>>>Copying a list


>>>copy_of_bikes = bikes[:]

why not just copy_of_bikes = bikes
I've got a question, is it expected to use classes a lot? I've never used them in any of my scripts (one being ~3k lines). I just haven't needed them or so I think.
Wow. Thanks! Even have the link to your thread from 3 years ago save din my bookmarks :)
Am late But thanks man
Hey this is really good.

It helps avoid some common mistakes

Love it, thanks!
Sweet! Thank you so much!
Saved! Great resource, thanks!
Thanks!
Saved. Thanks OP!
Just printed these. Awesome. Thanks!
I have the book right next to me! I am doing Colt Steeles python bootcamp but I use the book to look things up.

This is a god send, thank you so much!!
Loved your book. Thanks.
This is extremely helpful. Thank you.
Thank you so much.
wow thanks for helping and sharing amazing stuff.
Massive THANK YOU.
this is great :)
I think I have the first edition of crash course, is it still valid at all?
Thank you very much! This is indeed very helpful for struggling beginners :)
This i honestly amazing, I've been looking everywhere for a dictionary like this
This is fu\*\*\* gold, I'm in chapter 7, thx !
Many thanks!!!
On a side note what is this Python Crash Course book and is it the best book for learning Python?
You are a scholar and a saint
Holy Conditionals Batman!  Amazing documentation and great book. thanks for the great effort!
Nice job
thanks , it's great reference.
Making my way through Crash Course right now - this is awesome!
These are awesome, thanks! 

Any chance you could make one for slices? I'm still very much a beginner and have the hardest time remembering how to use them.
Thank you!!!!!
Saved!!!! Thank you!
God bless you.
I see good post. I save
You have been sent by god, nothing else explains it
Noice
Thanks man, well cheat sheets were always useful to me. Thanks again.
Thank you, fellow!!!
A sufficiently intelligent person could read these sheets and then write Gears 5.
:)!
Excellent. Thank you!
Remindme! 24 hours
What did you use to make the cheatsheets?
You are ü§ö of God.
Thanks heaps my friend.. this is awesome..
Awesome work. It is missing a gui cheatsheet of tkinter and I'll be all set XD
Thanks for uploading this!
[deleted]
Good God, thank you very much for this!

I usually make similar kind of cheat sheets for all my subjects, but never got to doing the same for python. You just helped me out a ton!
You are breathtaking! Many thanks to you!
I have to do a Python midterm project today, so this is timely and helpful :). Thanks!
I‚Äôm fairly certain I just fell in love with you.
Thank you!!!
First, thanks so much!! 

Second, ‚Äòlooping key-value pairs‚Äô says ‚Äòever‚Äô when I think it should say ‚Äòevan‚Äô
What about bs4 for making web based apps?
Bookmarked and subscribed. Appreciate it!
Just a beginner, Is this for Python 2 or 3? Does it matter that much?
this is awesome!
May I save it to Google Drive?
May I take screenshots of it?
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/u_henrybalzac] [Saving for meeeeee - Beginner's Python Cheat Sheets (updated)](https://www.reddit.com/r/u_HenryBalzac/comments/djyh7f/saving_for_meeeeee_beginners_python_cheat_sheets/)

- [/r/u_salamario] [Beginner's Python Cheat Sheets (updated)](https://www.reddit.com/r/u_salamario/comments/dwlbab/beginners_python_cheat_sheets_updated/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
awesome. Thanks !
The \*Best Python Cheat Sheet: [https://kieranholland.com/best-python-cheat-sheet/](https://kieranholland.com/best-python-cheat-sheet/)
This is great!!!
YES IT FUCKING IS! YOU ARE VERY WELCOME!
[deleted]
Documentation walk-throughs would be nice!
Subscribed! Your book has helped me immensely. Keep the good stuff comingüëçüèº
Fyi, small typo on the sign up page: "announcments" and "udpated".
Thanks for sharing all your hard work!
Would you consider doing an expanded Strings cheat sheet? I look up the docs on that the most when I return after a break, and the docs aren't sorted from most to least used.
You are very welcome. :)
Yes, that he truly is. A god worthy of praise.
Programmers forget concepts all the time. Being good at programming just means you're very good at knowing how to look up stuff. Don't worry if you forget stuff, you can always look it up. Eventually you'll end up remembering the stuff you need the most.
You can always look up syntax that you forget. That's part of what resources like these cheat sheets are for. So I wouldn't worry about any syntax you forget over a two-day period.

What's way more important than memorizing syntax is knowing what you can do as a programmer:

* I can store a bunch of items in order, using a list.
* I can connect pieces of information, using a dictionary.
* I can write code in a function, and use that code any time I want.

You won't forget these big concepts. When you decide which concepts you want to use to tackle a given problem you can look up any specific syntax you need to implement a solution. You'll probably find that you start to remember syntax for the concepts you use most often, and you'll end up looking up syntax that you use less often. I refer to PCC, and many other resources, all the time when working on my own projects.
90% of my programming time is spent looking up stuff I already forgot repeatedly.
\+1! Commenting here to be notified if this happens!

&#x200B;

Also- these are amazing and extremely helpful, they're getting printed and posted next to my desk. Thanks OP!
How did you use Learning Python? That book is a beast! I have a copy from back when it was only \~1150 pages, but the latest edition is over 1600 pages! I think I read through most of it, but as a somewhat experienced programmer it was a fairly quick read.

Did you read it through, or did you just skim the parts that were most interesting to you? How was it as a followup to PCC?
To expand on what u/LarsMarksson wrote, if you use the slice notation (bikes\[:\]), then `copy_of_bikes` and `bikes` each point to separate places in your system's memory. Adding or removing or modifying something in one list will not affect the other list.

If you just use `copy_of_bikes = bikes`, both variables will point to the same place in memory. Modifying one of these lists will modify the other, because the both point to the same list in memory.
That only assigns a reference, and not actually copying the data.
There are people who think you should represent everything as a class, and people who think no one should ever use classes. As with most things in programming, there are situations where classes are really helpful, and situations where other approaches are better.

One reason I will always teach about classes in Python is that you will use classes all the time, even if you never write a class yourself. Many of the libraries we use are structured as classes, and we create objects from those classes. For example when doing data visualization work, the figure you're creating is often an object of a class. Then the data might be an object as well, each axis might be an object...

It's hard to say anything about your 3k-line script without seeing the code, and learning more about the context for that code.
It is. You can see a summary of the differences between the two editions [here](https://ehmatthes.github.io/pcc_2e/new_in_2e/new_in_2e/).
Some of the latter chapters are becoming much more challenging with some libraries being no longer supporting syntax then book uses. I installed old versions when this happened of the notes did not cover these.
Here's the [Amazon link](https://www.amazon.com/Python-Crash-Course-Hands-Project-Based/dp/1593279280/), or if you're interested you can order [direct from the publisher](https://nostarch.com/pythoncrashcourse2e) as well. It has worked quite well for many people, from all kinds of backgrounds.
There's a short section showing the syntax for a slice on the back of the lists sheet. Did you see that?
I will be messaging you on [**2019-10-20 07:58:10 UTC**](http://www.wolframalpha.com/input/?i=2019-10-20%2007:58:10%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/djqm6v/beginners_python_cheat_sheets_updated/f49l5pe/)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fdjqm6v%2Fbeginners_python_cheat_sheets_updated%2Ff49l5pe%2F%5D%0A%0ARemindMe%21%202019-10-20%2007%3A58%3A10%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20djqm6v)

There is currently another bot called u/kzreminderbot that is duplicating the functionality of this bot. Since it replies to the same RemindMe! trigger phrase, you may receive a second message from it with the same reminder. If this is annoying to you, please click [this link](https://np.reddit.com/message/compose/?to=kzreminderbot&subject=Feedback%21%20KZ%20Reminder%20Bot) to send feedback to that bot author and ask him to use a different trigger.

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/c5l9ie/remindmebot_info_v20/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Copy that, **Timmeh159** üßê! Your reminder is in **1 day** on [**2019-10-20 07:58:10Z**](https://www.kztoolbox.com/time?dt=2019-10-20 07:58:10Z&reminder_id=fc51e6e389dc4a26aa6c11df236c56ca&subreddit=learnpython) :

> [**/r/learnpython: Beginners_python_cheat_sheets_updated**](/r/learnpython/comments/djqm6v/beginners_python_cheat_sheets_updated/f49l5pe/?context=3)

[**CLICK THIS LINK**](https://reddit.com/message/compose/?to=kzreminderbot&subject=Reminder&message=%2Acustom_message%2A%0Aremindme%21%202019-10-20T07%3A58%3A10%0A%0A%0A%0Apermalink%21%20%2Fr%2Flearnpython%2Fcomments%2Fdjqm6v%2Fbeginners_python_cheat_sheets_updated%2Ff49l5pe%2F) to also be reminded and to reduce spam. Thread has 1 total reminder and 1 out of 4 maximum confirmation comments. Additional confirmations are sent by PM.

^(Timmeh159 can )[^(**Delete Comment**)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Delete%20Reminder%20Comment&message=deleteReminderComment%21%20fc51e6e389dc4a26aa6c11df236c56ca) ^(|) [^(**Delete Reminder**)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Delete%20Reminder%20%28and%20comment%20if%20exists%29&message=deleteReminder%21%20fc51e6e389dc4a26aa6c11df236c56ca) ^(|) [^(Get Details)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Get%20Reminder%20Details&message=getReminder%21%20fc51e6e389dc4a26aa6c11df236c56ca) ^(|) [^(Update Time)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Update%20Reminder%20Time&message=updateReminderTime%21%20fc51e6e389dc4a26aa6c11df236c56ca%0A24%20hours%0A%0A%2AReplace%20reminder%20time%20above%20with%20new%20time%20or%20time%20from%20created%20date%2A) ^(|) [^(Update Message)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Update%20Reminder%20Message&message=updateReminderMessage%21%20fc51e6e389dc4a26aa6c11df236c56ca%20%0A%0A%0A%2AMessage%20above%20should%20be%20one%20line%2A)



*****

[Bot Information](https://www.kztoolbox.com/learn) | [**Create Reminder**](https://reddit.com/message/compose/?to=kzreminderbot&subject=Reminder&message=%2Ayour_message_here%2A%0A%0Aremindme%21%20%2Atime_or_time_from_now%2A) | [**Your Reminders**](https://reddit.com/message/compose/?to=kzreminderbot&subject=List%20Of%20Reminders&message=listReminders%21) | [Feedback](https://reddit.com/message/compose/?to=kzreminderbot&subject=Feedback%21%20KZReminderBot)
I learned a lot about formatting tables in Word. :)

They are Word documents, which I then convert to pdf. I keep intending to take the plunge and register a copy of Illustrator and design them a little more carefully. But I know they're useful as they are, so I wanted to get them updated first in their original format, and then consider a redesign. Seeing the overwhelmingly positive response here is motivating me to take that step.
Copy that, **DMyndel** ü§ó! Your reminder is in **31 days** on [**2019-11-19 13:42:31Z**](https://www.kztoolbox.com/time?dt=2019-11-19 13:42:31Z&reminder_id=ce17c8ff998743e08b1e164cd1efa31e&subreddit=learnpython) :

> [**/r/learnpython: Beginners_python_cheat_sheets_updated**](/r/learnpython/comments/djqm6v/beginners_python_cheat_sheets_updated/f4actya/?context=3)

[**CLICK THIS LINK**](https://reddit.com/message/compose/?to=kzreminderbot&subject=Reminder&message=%2Acustom_message%2A%0Aremindme%21%202019-11-19T13%3A42%3A31%0A%0A%0A%0Apermalink%21%20%2Fr%2Flearnpython%2Fcomments%2Fdjqm6v%2Fbeginners_python_cheat_sheets_updated%2Ff4actya%2F) to also be reminded and to reduce spam. Thread has 2 total reminders and 2 out of 4 maximum confirmation comments. Additional confirmations are sent by PM.

^(DMyndel can )[^(**Delete Comment**)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Delete%20Reminder%20Comment&message=deleteReminderComment%21%20ce17c8ff998743e08b1e164cd1efa31e) ^(|) [^(**Delete Reminder**)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Delete%20Reminder%20%28and%20comment%20if%20exists%29&message=deleteReminder%21%20ce17c8ff998743e08b1e164cd1efa31e) ^(|) [^(Get Details)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Get%20Reminder%20Details&message=getReminder%21%20ce17c8ff998743e08b1e164cd1efa31e) ^(|) [^(Update Time)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Update%20Reminder%20Time&message=updateReminderTime%21%20ce17c8ff998743e08b1e164cd1efa31e%0A1month%0A%0A%2AReplace%20reminder%20time%20above%20with%20new%20time%20or%20time%20from%20created%20date%2A) ^(|) [^(Update Message)](https://reddit.com/message/compose/?to=kzreminderbot&subject=Update%20Reminder%20Message&message=updateReminderMessage%21%20ce17c8ff998743e08b1e164cd1efa31e%20%0A%0A%0A%2AMessage%20above%20should%20be%20one%20line%2A)



*****

[Bot Information](https://www.kztoolbox.com/learn) | [**Create Reminder**](https://reddit.com/message/compose/?to=kzreminderbot&subject=Reminder&message=%2Ayour_message_here%2A%0A%0Aremindme%21%20%2Atime_or_time_from_now%2A) | [**Your Reminders**](https://reddit.com/message/compose/?to=kzreminderbot&subject=List%20Of%20Reminders&message=listReminders%21) | [Feedback](https://reddit.com/message/compose/?to=kzreminderbot&subject=Feedback%21%20KZReminderBot)
Ever is my son's name. :)
These are for Python 3. Unless you're working on an old legacy codebase, everything should be Python 3 at this point.
I DON'T KNOW WHY WE ARE YELLING, BUT I WOULD LIKE TO THANK YOU AS WELL FROM A NUBLET!!
I think you're being a bit shy and not admitting you are also the author of one of the best books for starting decent Python projects - "Python Crash Course". Am I right?
Thank you, I wish I had editors around all the time!
I will consider that. There was another request for more emphasis on slices. I think a sheet covering strings could be a good example of a use case for slices. Thanks for the suggestion!
Crash Course is a great book. I'm heading into the first project now. I think Eric does a fantastic job of explaining concepts without overloading beginners like me with information.
Thanks for the reassurance :)
I definitely needed to hear this. I beat myself up about this all the time.
I always wondered this. I'm self taught and always considered myself more of a scripter and code stealer (not programs but looked something up and then copied and modified for my use case). I can read a lot of code and piecemeal little things together. When stuff starts becoming more complex then I struggle. I understand ifs, for loops, simple arrays, functions but there are little nuances in code that are over my head that make it difficult. I'm a finance guy and been in finance for over 10 years. But have always loved coding. I would have done it but I hated the class I took in high school.. probably a teacher. I want to learn python for data analytics and because my home automation software is written in it. I guess I just keep learning my doing!
I'm still reading it. I'm missing meta classes and the content after that, but with the previous information, yours and Python packages' documentations I've had enough to code some solutions. 
I think it was great to start with yours since it really made me start coding on the go. With Lutz's I understood more in depth concepts and it's been a great complement to yours. 
After reading both yours and now Lutz's I have made summaries that just come very in handy with your cheat sheets whenever I forget something or need a refresh.
Thanks didn‚Äôt know
>Many of the libraries we use are structured as classes

You know what that's actually true, I do use these, I should probably learn a bit more about classes. Thanks.
Thanks
I did see that, but am hoping for more.
Thanks for the response. I've downloaded the set and I'm sure they will be of use. Thanks for making them.
Oh cool !
Been working through codecadamy and the free one is labeled py2 but as i went on its been explaining the py3 method as well so I guess your reply and cc answered the question i had lol
LOUD NOISES
Yes, you're right, but I think it's pretty clear when you click on the link for the sheets that I'm the author of PCC. And my username is a pretty good giveaway. :)
[deleted]
Dude I just picked python back up today after nearly a year off. I was studying hard for about 6 months and then stopped to make time for other studies. I‚Äôve been missing python and today I came back to it. I won‚Äôt lie, a ton of stuff I knew went missing, but I was able to pick it back up extremely fast. I spent several hours today making a simple ‚Äúguess the word‚Äù game where one person types the word and the other has to guess it. It‚Äôs pretty much useless but it works and I‚Äôm proud I am back in it. Now I feel confident I can move on to bigger things.
Spread the word! I know there are lots of beginning (and even more experienced) programmers who think like you. That shouldn't be necessary :)
AHHHHHHHHHHH
WHY ARE WE USING BOOMER CASE
IT'S OUR WORDS OF THE DAY
Yup. You'll definitely need to do some googling/asking questions on reddit. I'm still a beginner, so take my advice with a grain of salt, but I find it really helpful to go through simple one or two page programs, identifying functions, methods, etc, until I can use the terminology appropriately. This helps me google for more help when I'm stuck.

&#x200B;

Did you find a book or course you liked more? If so I'd love to hear about it. I'm always looking for new reading material.
YOU KNOW WHAT PYTHON NEEDS? MORE EXPLOSIONS!!! MEEDLEY MEEDLEY MOWWWWWWW!!!!
[deleted]
I'll have to check out the python 3 course on udemy when I finish this book.
[deleted]
My bad
You are the best! I just finished it last week and I was wondering how Zophie is doing?
Very cool, and thanks Al. Hope you are doing well.
Thanks, Al. This course was the only thing that got through to me and I managed to learn enough python in two months (from no programming experience) to succeed in my position. About a year later I started a new career involving ML research! I can't thank you enough. Programming is my favourite hobby now.
THANKS SO MUCH AL!!!!!!!!!!!!!!!!!!!!
Wow. This is actually very excellent of you.
[deleted]
Thanks!!
Wow, this looks great. Thank you!
Thank you so much! I did this course 3 years ago. Great resource.
Happy early birthday to me!!!! Thank you so much!
Thank you very much! Can‚Äôt wait to get started
Thanks for posting this, I'm enrolled and have been itching to learn Python. This worked out great, thanks again!
Thanks! Look forward to giving it a go!!
That awesome thanks
Thank you bro!
*Kisses your cheek
This is amazing, thank you so much for doing this!!I just started learning recently so I'm excited to start this course :-)
Double checking, but is this course updated to the more recent version? I don't see any indication off the bat and Udemy says I purchased this course 2+ years ago.
Thank you! I purchased your 2nd edition and then purchased your Udemy so won't help me but I know it will help many other and this is still great!
Thanks a lot! I borrowed the first edition of the book from my university library, and I think it's was the perfect book for me to start learning Python. Since I only borrowed the book and am now getting this course for free, I feel sorry you haven't gotten any $$$ from me. You mentioned other book projects; anything that might interest someone who has completed Automate the Boring Stuff? 

Thanks again!
Awesome! going to start tonight :)
Amazing gesture, thanks a million
Hi, huge fan and completed Automate the Boring  Stuff. Do you have any future plans for books or courses like these?
Thanks Al! I really appreciate it.
Says I'm not eligible to for the course whwn I enter the code. What up wit that?
[deleted]
Bummer the discount code isn't working anymore.
Do you know when it'll be free again? I'd love to take this course. :)
Does this work for the UK? I just tried it but it said I was not eligible for the discount.
Thank you
Amazing! I kinda jumped straight into the deep end with data science so I lack some of the fundamentals. This will definitely help.
This is a great course! I am currently half way through it and it is detailed while being easy to understand.


Great job and thank you Al!
Thanks you! I will make good use of it!
Seriously we all here are very grateful, we appreciate you üôèüèº.
thanks a lot!
Thanks a ton sir!
That is so generous! I literally bought the book/ebook today from your site and was looking over the Udemy course too.  Just signed up!
Thanks Al!
You are awesome Al. Thank you!
Loved the book and am also a robocop fan.
Thanks for sharing, already purchased it and it is a great course. I know others will love it.
Thank you for doing this, I already bought the book but I learn so much better in classes like this.
You are so awesome! Thank you very much
More like Al SWAGart amiright
This is amazing. Thank you so much!
THANK YOU, AL!!!!!!
I just want to force a bot with data, this would help me?
Thank you!
Thank you kindly. I just bought Automate and Code Cracking before everything was locked down. It's definitely helped pass the time while I expand my knowledge base.
Thank you, king
Thank you so much! U brought some lite in these uneasy times! Thank u thank u thank u and stay safe!)
Is this the second edition of the book?
Thank you very much!
R/howtohack has a free ethical hacking too
Upvoteed! Thanks for sharing this brother. Perfect timing!
Thank you!
Thank you!
You are awesome
Remind Me! 10 hours
I have the course already (thanks to your generosity some time last year as well), but I just want to say (and I really hope you see this), that your course was by far the best thing to happen to me and get me into Python. The way you manage to break down concepts, illustrate them with flowcharts, and ELI5.. you‚Äôre a natural at teaching and a truly wonderful, kind person at heart. Also, your voice is so soothing! Okok I‚Äôm done gushing. THANK YOU!
Used the free book and videos. Literally changed my life. Automated myself out of a job and into a consulting position.  Happily bought the course and book and course afterward. Considering the humble bundle to support things but just wanted to say THANK YOU. you‚Äôre amazing.
It works. Bless you my dude.
Just finished watching the course today!
Hella clutchüëå
thanks so much, so excited to start this course!
Thanks a ton !!
Al, I love you. And I love tour book. Thanks to you both I went from no one to "this guy that knows this magic spells to make excel reports generate faster". Months ago I was dispatching delivery drivers, now I have home office and build a we service with flask. You seriously changed my life.
i would like to study data science
It looks like there is another class called Learn Python Programming Masterclass. It is 49.5 hours. Do you have thoughts on one vs the other?
From a struggling newbie, thank you so much!!!!
Thanks a lot, Al!
Thank you!
Heartfelt thank you!
Wow - thank you! I did not realize this was posted by the author - you are a wonderful teacher and person!
Thank You!
Thank you Al. That's very kind of you.
Thank you !!!
Thanks
Thank you
Damn I bought it like two days ago
Hello, first of all thank you!
I've bougth your udemy course a few years ago and i loved it.
For a long time i have your "automate the boring stuuf" book in my wishlist to recap some basic knoledge and I was wondering if it is possible to have some kind of a deal on it in ebook format (i loke to read on my kobo).
If not i'll for some promotion in the future.
Besides that, thank you for sharing.
Have a nice day!
Very cool! Been looking for a course like this. Thanks!!!
Al, this looks essentially identical to your last post. In a tongue-in-cheek fashion, did you happen to generate this with a Python script? ;)
Thank you so much
I love you bad booboo!
Thank you so much! I have to say thank you because your book helps me understand the basic while I was dealing with my challenges during the internship. Eventually, I got a job with the VISA to stay!
What's the best way to maximize the efficiency of both the course and the book? Would love to get your input. 

Also, how do you guys take notes?
Thank you so much!
Haha just bought it a few weeks ago. Knew I should've waited! Definitely worth the money though.
You are amazing. Thank you so so so much!
Good fucking guy. You got my first ever gold.
Ehhh I just signed up last week and paid 12 bucks lol. Still worth it tho
Thanks so much!
Thanks!!
Thank you so much. 

&#x200B;

I am somehow stuck on the 'installing pyperclip' part though. I cannot find an .exe to download, only a .tar.gz. The Video isn't of much help to me either. If I put 'pip.exe install pyperclip', it always gives an error back. I feel stupid... Please send help.
Thanks a lot!!!!
Dang I just bought it a few days ago. Very cool tho
DOPE! I'm already halfway through the book, might as well do the course instead!
Nice, got the ATBSWP book 5 years ago in a Humble Bundle maybe with video I'll finally make it past web scraping lol
you the man!
Much appreciated!
This is great - thank you for this!
I have other courses on Udemy but today everything on the site works for me except this course. The page doesn't load properly and the button to sign up is un-clickable although it still says "1 day left at this price".  It's dead right now and is non-functional. I guess everyone on earth is trying to get this course right now. heh. I won't be getting this course after all.

It began working today so it's all good.
How good is this for beginners?
hey thanks for this
RemindMe! 14 hours
Thank you so much. Mr AL
Hi, Is this for UK as well or for US only?
Apr2020free2 code not working.
Thanks so much, I'm really looking forward to this, I'd been working out of the book and the info in this format/with these videos is way more digestible!

A note: If you're making interim revisions or anything of the like I will say that section 3.8 (Python's Built-In Functions) was really frustrating and could use some better explanation; using command is uncomfortable and you breeze through the pip/module installation process. I found a good walk through in the comments of the lesson, but this is an important step that could really use some explanation.

Thanks a ton, this has been great so far and I'm eager to continue!
Omg thank you so much for this!!!
Thank you! Much appreciated.
Much obliged, Mr. Sweigart. Thank you!
Cheers!
I came a day late. Poor me :(
Fuck just missed this!
Thanks u/AlSweigart I've tried to pick up Python on a couple occasions but just got burnt out early on without seeing practical applications. I should finish the videos today, and I already have a first project in mind utilizing the skills you went over.
Thank you üòä
Missed it
Thanks Al!
RemindMe!  15 hours
[Ring ring ring ring ring ring ring banana phone.](https://imgur.com/vs0sXSO)

I've been inside too long.
Hi. I was wondering what was your level of experience before the starting this and how did you find the course
Whats your position if you don't mind me asking
Hey man, I think you‚Äôd help a lot of people if you could list how exactly (courses, resources, timeframe) you managed to go from no experience to working in ML. 

This is the dream for many of us.
Word!
Happy (early) birthday!
Not working for me either... And I'm trying the 2nd code.
Had the same. Try also adding code ‚ÄûSUPRISE2004‚Äú. That worked for me
I thought the ebook was free on his website.
Are you guys doing any interesting project atm? I have been looking at fun projects to do.
just do it
[deleted]
There is a 28.0 minute delay fetching comments.

I will be messaging you in 13 hours on [**2020-04-04 14:23:21 UTC**](http://www.wolframalpha.com/input/?i=2020-04-04%2014:23:21%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/ft8tv2/automate_the_boring_stuff_with_python_udemy/fmd5ju5/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fft8tv2%2Fautomate_the_boring_stuff_with_python_udemy%2Ffmd5ju5%2F%5D%0A%0ARemindMe%21%202020-04-04%2014%3A23%3A21%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20ft8tv2)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
It is working for me now. Try the link at the top of the OP.
same -___-'


DAMN
There is a 1 hour delay fetching comments.

I will be messaging you in 14 hours on [**2020-04-02 13:26:48 UTC**](http://www.wolframalpha.com/input/?i=2020-04-02%2013:26:48%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/ft8tv2/automate_the_boring_stuff_with_python_udemy/fm5u50e/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fft8tv2%2Fautomate_the_boring_stuff_with_python_udemy%2Ffm5u50e%2F%5D%0A%0ARemindMe%21%202020-04-02%2013%3A26%3A48%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20ft8tv2)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Hey sorry for bothering you, I just wanted to hear your opinion since you are an expert. After completing this course what would you recommend to enhance our python skills.
I'm a research scientist at a biotech company. I do a little bit of everything but ML and big data handling has become a huge part of my new spot.
I've been meaning to for a long time - just been busy! But you're right
I added that code and then added the original one and it worked for me. Not sure if it was due to the additional code you posted or not but thanks!
As i know it is not. And i understand thatbit doesn't need to be free, but it could be on a discount just to help a little bit :)
Thanks for your responds. Yeah, right I am typing it into a Win 10 terminal.

The exact error output is: 'Fatal error in launcher: Unable to create process using'\....\python. exe "c:\Users\\Name\AppData\Local\Programs\Python\Python38-32\Scripts\pip.exe" install pyperclip'.

Am I using the wrong path? If I enter it from 'Name' or 'Scripts' I'm getting the same error output.
Yeah! I tried this morning!
I'd recommend my next book, Python Beyond the Basics. :) But that won't be out until October. So I think Effective Python and Python Cookbook are pretty good. Fluent Python is the best, but it's also 800 pages so it might be a bit much to tackle.
Very nice!
[deleted]
Thank you very much!
I'm so excited that you have another book in the pipeline! I've tried other books and courses after reading ATBS, and none have resonated with me the way that ATBS did. Sadly, I'm not that interested in making games (the topic of some of your other books), but I have used what I've learned from you to deal with some of the repetitive real world tasks that come up in my work as a physician. I've recommended your book to my colleagues at work and we share ideas on how to improve and automate some of our work processes so we can focus on tasks that actually require our brains. Thank you!
Thank you.

Just for clarification. That ->" was just in the error output. I'm just typing in

\>cd \\...\\

\>pip install pyperclip

Then the error appears.

&#x200B;

I tried

\>pip.exe install pyperclip as well

&#x200B;

I have little programming and some Linux Terminal experience so far, but I just don't get it. I do as he did in the video, but get a different result.

&#x200B;

NEVERMIND. Just found a solution on the [web](https://stackoverflow.com/questions/24627525/fatal-error-in-launcher-unable-to-create-process-using-c-program-files-x86).

I typed in

\>python -m pip install pyperclip

&#x200B;

Now, everything is fine.

Thank you very much.
:D

Thanks for writing! I love hearing that people find my books useful. It makes all the effort I put into them worth it.
Can someone give this man a gold
I recently finished your course and find myself overwhelmed with options of how to proceed. I have a very vague understanding of python at the surface level, but I'm still very interested in moving forward with learning.

 Any advice or how to proceed? Projects? Enrolling in other classes, revisiting old concepts till they're concrete? Thank you.
I have so many great things to say about this man and his work. I used the Udemy course and also read the book because it goes more in depth. Once you complete the course, you will ask yourself why in the hell would he give this book away for free on his website? It‚Äôs because he cares.

You person who is reading this now, go to Udemy and buy his course. Even if it was $50, it is worth it. The most useful items for me have been web scraping, regular expression, working with Excel and combining PDFs.

Support this man on Patreon: https://www.patreon.com/AlSweigart. Because of his work, I feel more confident than ever about my Python skills and now I am working on projects that I‚Äôve been looking forward to for years.

üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•
Thanks. Huge fan of your work, Al.
Thanks alot mate. Really appreciate it.
Is it only me who noticed the Coupon Code text?

Thanks for this again, I signed up a few months and now I am gonna make my friends sign up as well.
Thanks man, I really appreciate this. Times are tough and you're helping to pull us out of it.
Hey Al, I have been using your course to learn Python for a month now and it's going great. Thank you!
Bought this earlier in the week, such an amazing course!
Fellas, someone else is ALSO giving free codes on Udemy: https://www.reddit.com/r/learnpython/comments/i2b99x/new_free_python_course_the_art_of_doing_code_40/

It's Christmas in August for newcomers!
Thanks for the course! I paid for it but what you do is amazing

Also, thank you for standing up and fighting for us in Portland!
Thank you!
Thank youuuu
Thank you so much dude, appreciate it
Thanks man! I really appreciate this gesture!
Thanks a ton man !!
Were you really shot in portland?!
Just a question 

Are ever going to make a course for pygame ?
huge thanks for posting, I appreciate ya and I'm excited to learn from this!
thank you! i loved your book. really helped me get into python
Thank you! You are very generous!
Thank you! Hopefully I can use this course to set up a remind me when for when your 2nd edition book comes out:)
Thanks man, great stuff!
Wow thanks man! Just started searching for how to learn and this came up. You are awesome!
I hope you find money in your laundry!!! Thanks!
 that's what heroes do
Thanks a lot. Appreciate it
Thank you!
I just started on my journey of learning Python about two weeks back, and have been struggling both with staying motivated and being confident in my ability to improve. I understand these are things that take time, but I can't help it. 

But you've gone ahead and made this course free to sign up. I promise I won't squander this opportunity, and however long it takes I'll stick with it until I'm confident in what I can do. 

Thank you for the kindness you've provided this community. I wish there was more I could do besides saying my thanks.
Hi Al, just wanted to say thank you so much for your work, automate the boring stuff is amazing and was the first book to truly help me understand coding as a complete beginner.  Anyone who is interested in learning to code should start with this book.  Al does a great job with applying concepts to real world problems and skipping concepts that are difficult to grasp for beginners
Just a silly question, i know some websites offer certificates after finishing a course like edx, but ive not used udemy before, does this offer as well? Thank you guys!
Fantastic, thank you so much! Just got the course and can't wait to get stuck in. For anyone having trouble using the link that autogenerates the code not allowing you to purchase, remove the code then type it in manually worked for me.
I've already got your course and your physical book but I just wanted to say from the bottom of my heart *thank you for being so awesome*.

The book is great and the fact that you offer it free so often is amazing. You're honestly a hero.
I‚Äôm so happy for this! Thank you thank you thank you! I really want to re-start my python learning journey and this has been helpful so far
I just want to say thank you so much.  I recently decided to learn about programming and wanted to learn Python with my friend. None of us can afford strong courses so I was mainly collecting free resources. But thank you so much for this.  I truly wish I could somehow deliver my gratitude in my comment.
If I was gay, I‚Äôd think you‚Äôre one sexy mf, Al.
Thank you!
This is awesome work you‚Äôre doing man thanks a lot!
Thank you, that has been on my wishlist.
Thank you! I‚Äôve been reading the book and it‚Äôs so great, it‚Äôs been helping me a lot
Hi Al, I already purchased your course a while ago and loved it. The only thing I wish was you do an updated version using python 3.x and talking us through IDEs, APIs etc. as the course is a little bit dated.

Any chance of that happening?
Can someone remind me about this in a bit? How do yiu call the remind me bot?
Thanks a lot üëçüèø
Thank you!
r/HumansBeingBros
Please tell me what ‚Äùthe boring stuff‚Äù is
And this is why I love Reddit
Omg thank you so much!
I've been slowly working my way through the course and I'm thoroughly enjoying it. Thanks for making coding accessible to everyone!
Thanks a lot for this man!

I'm currently reading the book and at the same time doing Colte's Python Bootcamp.

It helps a lot to have different views and explanations :)
I just started practicing python with your book and it has helped me a lot. Thank you AI for your contribution in the python community.
Thank you, I recently started learning Python, this just came as a blessing.
I just finished this course and wrote my first script put in production at work. Super happy how it turned out and I credit that to your the course ramping my into it!
Thank you!
Thank you sir
Omg thank you so much!
while (True):
    print("Thanks a Lot")
Thank you so much for sharing!
saving this , thanks!
Thank you!
Dude, if you're wondering who's re-watching the lists video, that'd be me.

Thank you so much.
Thank you. A million thanks!!!!
oh my you are amazing! I've been reading the crash course (on my very limited free time) and was regretting a little because everyone was strongly recommending this book instead, really thank you you've made this available for us!!! 

Here have a kiss x
Al, i am truly appreciative for your work and thankful to your team. Looking forward to getting started on this course! Thank you.
thank you for the share
Just came here to say, this man is the real deal! Thanks for democratizing knowledge. üëèüëèüëè Anyone who asks me how to get started, I always tell them to start with Automate the Boring Stuff. It's a gold mine for refreshing yourself, too.
Thank you! May America heal. Greets from the Netherlands
OP, I just want to say to you personally that I have collected (hoarded) A LOT of Udemy courses over the years, more than 1,000 courses, and I didn't start (let alone completed) any of them until few weeks ago. Your course took my Udemy virginity. It is sooooo good. It has a clear direction (to automate boring stuff), instead of a broad vague direction. Other Python courses are trying to feed me every single detail and want me to become a Python master, but I always give up not even half way because I don't know what to do with all this info overload. Like " yes print('blahblahblah') will do this, but what do i do with it?? where do I even type it???"

Thank you for creating this course with learner's perspective in mind.
Thanks man, really appreciate it.
You can learn to automate using python for free in Coursera.
Honestly, that is awesome. Thank you so much.
"We couldn't complete this purchase, please try again"
Ah well that sucks
Thank you so much!!
Thanks Al! I've just started to watch your YouTube playlist but my Wifi went down the day before yesterday. I was looking at buying your book just yesterday but got distracted and bought a Nintendo Switch instead :D

Thanks for everything you do!
You are a godsend bro! Thank you so much
This is amazing. Thank you so much.
I‚Äôm a teacher learning python. I gotta get good. I got kids in the ghetto that this might help...college ain‚Äôt a good option for them. But some of them will be able to code. First year teaching it. We‚Äôre talking top 5% of at-risk kids. I gotta take a shot on this course....
What should a complete beginner be able to do after this course?
Bless you for this sauce
Thanks! I started doing the course yesterday and I‚Äôm tickled at what I can do with regular expressions already!
Sounds like an interesting course. For beginners, I would recommend going through the course along with a mentor, so that they do not get confused or stuck and lose interest quickly
I need someone to motivate me and do 20 minutes everyday. Anyone up?
Al you‚Äôre such an MVP
The legend!!
Is this written for python2 or 3?

Thank you, so generous!!
Can someone help me out with downloading the modules on Mac? I am running High Sierra but I keep getting error messages which I have no idea what they mean
Thank you Al Sweigart! 
I have used your code to study during quarantine in Miami.
I'm completely sketched out by Udemy right now. Thought I had an account -> couldn't log in -> tried to reset password -> attempted to sign up entering my name, email and added a new suggested very strong password. Udemy signed me in saying welcome back and would not allow me to proceed because the promotion is for new customers only.

If I knew where to rate Udemy, I would be giving that kind of experience a solid 1 star.
OOPS I MISSED IT AHHHH
I want to start this course... But was wondering if it might be better to wait for the updated version later this year? u/AlSweigart

Does anyone know? Thanks!
So i just wanted to say thank you for offering this! I am 2 or so hours into your program, and your explanation is just so clean and easy to follow!   
The only thing ive struggled with so far with the course (that is mostly a personal thing) is the noise feedback from the keyboard. It makes it difficult for me to focus while learning something new!
Much thanks üôå
RemindME! 3 days "check this thread"
With the coupon applied it's not showing as free, there is only a 73% discount :/
Im too afraid to start this. Does rhis course will help me as a complete novice who bad at maths? Also i dont see how i can use it, i work as a physician already but everyone saying that you need to know atleast one programming language.
Bitcoin lol
So a lot of people say 1) work on projects and 2) look at the source code of open source projects. These are sorta bad pieces of advice. "Work on projects" *is* good, but the advice doesn't help you decide what to work on. And a lot of open source projects aren't very friendly to outsiders. It takes a lot of onboarding to get started, even for experienced devs.

I've created a bunch of small, simple, text-based programs (mostly games and animations) for people to use. My idea is that you copy the code directly, run it, make adjustments, and then try to recreate them yourself. You don't need to memorize the code, just the make your own version of it. It's stuff like Blackjack, Tic-Tac-Toe, mad libs, etc.

https://github.com/asweigart/pythonstdiogames

There's a time after you learn the basic syntax, but still don't "know how to make a real program", and this is called *tutorial hell* or *the desert of despair*. Just keep working through it. For concrete advice, I'd encourage you to learn regular expressions and learn how to use git. But yeah, keep doing projects and classes and books too. If you want to learn computer science stuff in particular, the thing to google is "data structures and algorithms". [Coursera has a good free course called "Algorithmic Toolbox"](https://www.coursera.org/learn/algorithmic-toolbox/) that you can do. It's basically a freshmen CS course.
I have a blog post that might help: [I know Python basics, what next?](https://learnbyexample.github.io/curated-resources/python-intermediate/)
I think that the best possible way to learn intermediate python is to pick a package that does something you want to learn and really stick to it.

There‚Äôs a couple different things you can do, which include but are not limited to the following:

- Data Science stuff (computer vision, machine learning, predictive modeling, lots of soles r
- Web Design (Django, Flask)
- 2D games (pygame)

Alternatively, you can learn about lambda functions, arts/kwargs, generators, list comprehension, etc. 

That said, I think you can do everything above and just work on cementing the fundamentals, because more advanced python gets more comp sci and mathy but the packages don‚Äôt require too much but maybe some stats.

I wouldn‚Äôt take my advice though, I think a certain someone else who is on this thread would know far, far better than I.
Simultaneously, with other suggestions, learn docker and what containerizing workloads means. Once you get a decent understanding of that incorporate kubernetes.

The combined knowledge of that, will put you way ahead of the curve of a lot of other py devs.
I‚Äôve been teaching myself python and I‚Äôve taught myself JavaScript and when I am trying to think of something to make I usually try and find a problem in my life that I want to solve or something I actually care about. Its harder to stay focused on something you don‚Äôt really care about and you will probably be willing to put more effort into something interesting to you.
Not op but I found a the 6 hour YouTube course from programming with mosh really helped me nail in concepts I already knew and teach me new things.
Explanation here: https://twitter.com/AlSweigart/status/1288969172337057792
July was Portland, idk what August has next.
Yeah, tear gas canister was aimed at me. Explanation here: https://twitter.com/AlSweigart/status/1288969172337057792
Honestly, no. Pygame is great, and so are the modules built on top of it like Arcade, PursuedPyBear, and Pygame Zero. But I just have too many other projects taking priority first. Like, I'd want to do this, but I'd probably only get around to it in 2023 or something? So, likely never unfortunately.
thanks bro
Yes, and no. I had plans for updating it later this year since the second edition came out, but first I need to finish up a course based on my next book, Python Beyond the Basics. But it's definitely on my list!
You'll get access to the updated version automatically. I'm going to update the current course, rather than create a new one. So go ahead and start now! :)
There is a 49.0 minute delay fetching comments.

I will be messaging you in 3 days on [**2020-08-30 05:41:36 UTC**](http://www.wolframalpha.com/input/?i=2020-08-30%2005:41:36%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/i1w07u/automate_the_boring_stuff_with_python_online/g2ztwof/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fi1w07u%2Fautomate_the_boring_stuff_with_python_online%2Fg2ztwof%2F%5D%0A%0ARemindMe%21%202020-08-30%2005%3A41%3A36%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20i1w07u)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Are you outside the United States? I think people in Asia and Africa have reported that the coupons don't work.
You don‚Äôt need to know advanced math. If you know when you need to do things like add or subtract divide and multiply, it does it for you. You don‚Äôt need to know how those operations work.
Thank you very much. I'm going to start learning regex and work on those small projects and see how I feel.
>Alternatively

As a beginner in data science (I have 2 decent matplotlib programs behind me), I disagree. This should be learnt first it just makes your life so much easier. Lambda functions work great with things that require a key/function, such as comparison based functions (like sort, min, max) and operation based functions (like map, reduce, filter) or to more simply name a function that does a long computation, but doesn't deserve the def keyword. It's a confort I use a lot.

I haven't found a opportunity to use *args **kwargs yet, but at least knowing how to create a keyword argument with a default value can be pretty useful. 

Generators and list comprehensions are very useful tools that help your code be cleaner, more efficient. I don't think you should learn something like np.arange or np.linspace if you can't understand code like list(map(lambda x: x**2, range(20))), as numpy isn't going to replace that (if you don't understand map, you wont understand very well what is an array squared, as I think this is how you do it).

Also, you can learn these stupid fast compared to the time it takes to grasp a big package like numpy, matplotlib or pandas.

Also, basic knowledge of useful modules such as itertools and collections. There are so many programs that would be much worse if we didn't have deque and other useful things from these modules (like Counter, product, combination functions, etc).
Link?
Well, shit. I'm glad it wasn't your face or balls. Glad you're ok.
That looks scary. I am glad to know that you are fine.
Hi, you said "Automate the boring stuff with python" e-book is free but it asks for $31 at checkout for an ebook. Is it a glitch? Thank You!
u/AlSweigart I'm glad to know you're ok, it must have been scary
Whoa! Glad you're OK. Love your books, thanks for your hard work. 

Are you working on a new one? I thought I read you were working on one where you'd set up an http server to serve as a GUI or something, but I may have been mistaken. 

I was the guy who made a long post about my journey into coding a few weeks ago and tagged you when I listed AtBS as a resource.
[ Removed to Protest API Changes ]

If you want to join, [use this tool.](https://codepen.io/j0be/full/WMBWOW/)
Cool. Thanks for the response
Great, thank you for replying and thank you for the original Automate the Boring Stuff course.  I only ever think of spam, eggs, and 42 when coding my totally shite programs.
Maybe its been answered and I have missed it, but will the next book and course be released together? Or will the video follow the book a bit later?   


Also, where can we read/buy the book? I am hoping to get back to python once schools open back up and I dont have to do homeschooling in addition to everything else any more :(
Ok cool thanks! So, if I go through it, and then its updated... it won't be like doing the same material again? Or it wouldnt be better to wait until the updated material?
RemindME! 3 days "check this thread"
I enrolled from india, it's working!! Thank you for it sir
I am also still learning and I usually get project ideas from everyday life, when I think, that would be great, if the computer could do this (I haven't already done all of them, but I wrote them down):
* Sudoku board, that can check and maybe sometime solve the next step
* meal planner with recipes, that I like (not even started, but maybe once)
* a skat card game
* something, that checks YouTube, if a video of a series I like is online and makes a list for me (because I often like only one game from a Youtuber or one type of video and YouTube just shows me all). Also a list Form, where I can see, if I already watched it...
* one of my finished projects is to download results of football games. In the future I'd like to learn about sql and bring it into a database and look at trends.

So, pretty much anything, that you come across can be a project. Categorize your books, buy an internet connected thermometer and watch your inside temperature, use the Google calendar api and make a program, that changes your desktops backgrounds to your weekly schedule.
Yeah, this guy is probably right lol
Here ya go https://youtu.be/_uQrJ0TkZlc
It's free in HTML form at https://automatetheboringstuff.com

The [No Starch Press](https://nostarch.com/automatestuff2) sells nicely formatted ebooks (but you can get the ebook for free if you buy a print book), which Amazon won't do.

Also, where were you buying the ebook?
Yes and no. I don't want to dissuade people from attending protests. You can keep to the back, and it's possible to out-walk the tear gas clouds and riot line of cops. It's hard to convey, but if anything the gassing and being hit with the canister motivate me to come back to protest more. The Portland protests were sort of continuing with the same core group of a couple hundred people, but when the feds showed up and became aggressive, it ballooned into a couple thousand.
Oh yeah, the "browser app" book sort of morphed into something else and was basically dropped. (But I still like the concept.)

The "sequel" (more of a followup) to Automate is coming out later this year: Python Beyond the Basics.

I'm also working on a book that has over a hundred small, simple, text-based games and animations based on the programs in this repo: https://github.com/asweigart/pythonstdiogames

I'm also writing a book on recursion, though I don't know when that'll be out. 2021-ish?
We all do. :) Earlier programmers used [foo and bar for their metasyntactic variables.](https://stackoverflow.com/questions/4868904/what-is-the-origin-of-foo-and-bar)
It'll be on the publisher's site https://nostarch.com (buying it there gets you the ebook for free when you buy the print copy). I'll be releasing the video course later.
It'll be easy enough to just look at the updated material itself. I made a blog post for the "what's new in the second edition of the book" and I'll do the same thing in the course when I update it.
I will be messaging you in 3 days on [**2020-09-02 06:02:23 UTC**](http://www.wolframalpha.com/input/?i=2020-09-02%2006:02:23%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/i1w07u/automate_the_boring_stuff_with_python_online/g3bsf1f/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fi1w07u%2Fautomate_the_boring_stuff_with_python_online%2Fg3bsf1f%2F%5D%0A%0ARemindMe%21%202020-09-02%2006%3A02%3A23%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20i1w07u)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Danke! =)
Cool! Can't wait to check those out, thanks for the reply!
I was talking to a coworker one day and they were copying things from one excel file to another and scrolling and pasting it in the correct position. I asked "how long does this usually take?" She responded "about 8 hours a week". I was astonished and it was a simple task. I set up a quick VLOOKUP script in excel which auto did the task (albeit more accurately since it was hundreds of items). Took less than a second to do what took her 8 hours. She told me she was finally able to the rest of her work done on time.

This wasn't anything complex and a simple fix. I cannot imagine how many other things could be fixed or sped up by basic tasks like that. I dont get how people dont try to search for a better option. She didn't lose her job luckily, but its concerning.
everything aside, I think it's time for you to ask for a raise given you cut significant cost for your firm.
I programmed myself out of a job and then after they fired me the script broke and the company lost their whole contract.
.
The t-shirt "I can replace you with a shell script" is meant as a joke.. a joke... :-)
You didn't automate her *out of* a job, you automated her main task.

That the management have no better use for a trustworthy, known quantity employee with experience of the company and customers, other than firing her is their failing, not yours.

She could have been moved to another team, retrained on another system faster than a new hire who doesn't know your company, doing something higher level with the imaging docs, or working with documents less amenable to automation like work on sales enquiries, minutes of meetings, audit or compliance reports or whatever seems appropriate.

Unless she doesn't want to do anything else, the idea that people can only do exactly one task they were hired for and if that task is gone, they have to go too, is really short-sighted. She'll have to adapt to another job. There's probably *some* way a human can add value to your company other than that data entry.
I used to be a Galactic Entity Greeter, but I put myself out of a job with my first Hello World program.
The first thing I did in my company was automate my job, eventually they decided to cut costs and got rid of the whole team (everyone found somewhere else in the company as it's very big). You know what they did with the tasks they couldn't automate? Send those tasks to a cheap team in India.

If a company is going to fire people they'll find a way to do it with or without you. Although for sure it's human to feel empathy.

What's dumb about this company is they've opened themselves up to a massive risk. While you find Image Processing and OCR very accessible for a company to actually hire a contractor who understands it and can read your code would cost them **a lot**. So they've made you a single point of failure for their whole process, if something breaks they won't know how to fix it.
Rule #1 of automation: never tell anyone about your automation.

EDIT: The promise of automation is that we as a society can earn more for less work. The more we automate, the more we as a whole can be free. In reality this is not the case; we live in a society where people live to serve the bottom line, and not other people. Toying around with automation is fun, and can help free up a lot of time so that you can do more things you enjoy, but just be VERY careful with disclosing your automation work to others, as I have seen time and time again how it can negatively affect other peoples lively hood. If an organization gets even a whiff that a job can be automated, they will do it, cut loose the employee, and MAYBE give you a pat on the back for "increasing efficiency." Efficiency be damned.
Don‚Äôt feel too bad. Someday, someone will do the same to you.
I think a lot more of us will be in this eliminated worker's shoes sooner than we think. AI and programmatic solutions to problems are going to reach wider adoption as time goes on, and that extends to the sphere of programming as much as any other area (eventually, maybe more). 

A huge part of working in the 21st century is going to be fighting to keep ahead of the wave of automation by keeping our skillset out of reach of automated systems. 

It sucks for this individual who's lost her job, but she's the canary in the coal mine for a problem we'll all be facing over the next fifty years.
> I mentioned to her I'd be happy to help her learn Python but she wasn't interested... 

&#x200B;

LMAO no shit
The first job programmers wrote out of existence [was their own.](https://en.wikipedia.org/wiki/History_of_compiler_construction#First_compilers)
The takeaway from this is not "Look out, computers might take yer jerbs". It's "Don't be the person who can only do one thing".

If my boss knocked on my door and said "Hey, /u/Socrato just wrote some Python that makes what you do unnecessary", that shouldn't be followed by "so we're letting you go". It should be followed by "so that should free up some of your time to work on X, Y, and Z."

A lot of the blame falls on the employer that didn't put enough effort into develop their employees - but some of the responsibility is on the employees themselves to be open to learning and diversifying their skill set. You were able to do that in the same environment that she wasn't.

OP - Don't be too hard on yourself about this. You didn't set out to eliminate a job - you set out to make a job easier to do. And you succeeded brilliantly. Had your company not already been looking to get rid of people, this would have instead been an opportunity for her to take on more interesting work and develop new skills.

Definitely ask for a raise. You've earned it. But once word gets out that you're the reason your coworker got axed AND got rewarded for doing it, that might not play too well. When you use this as a bullet point on a resume or talking point in an interview, you may want to emphasize the cost savings in terms of hours of work as opposed to eliminating a person.
Ask for a raise. You just saved them like $75,000 a year
you did it wrong.  You're supposed to apply for her job, then automate it and not tell anyone.  Then you can shitpost on reddit all day while still getting all of your work done.
There's no sense in keeping Blockbuster video around because we feel bad for it if it's not providing a useful function.  It is unfortunate but it wasn't up to the people to dictate how it's business model would account for online videos.  Same with coal mines, if we shouldn't use coal because it's unhealthy/impacts environment, do we keep around that industry because there are people employed in it?  Their skills are transferable as I'm sure this lady's are too.   They need to evolve.
Ask for a raise and if they deny you just put a metaprogramming time bomb that has the code delete itself. (`if==some_datetime: os.system(rmdir(...)`)
Keep in mind, you didn‚Äôt do this to her. You were trying to help (and you did)! It‚Äôs terrible she was let go, but that‚Äôs on the higher ups, not you.
You're getting a lot of advice to intentionally sabotage your code to stop working. Don't do this for many reasons as people have mentioned including legal or criminal issues you open yourself up to. Besides -- it probably isn't necessary. 

&#x200B;

I did something similar once. It didn't involve a person losing their job, but I automated a task that took 6 human hours and got it down to 5 human minutes and like 5 machine minutes. Massive time savings. Was very proud of it. Got a small raise out of it. It became part of my team's usual process.(in retrospect, I should have demanded more) 

&#x200B;

Then one day they laid us all off out of the blue. Outsourcing scenario, etc. Immediately turn in your laptop, leave the building, etc. I was crushed. Never had happened to me before and I felt like I had been doing great work.

&#x200B;

What they didn't know was that I was using a third party API to manage part of the task I automated. I still had access to that API and could see that they were making use of the script I put together.  Then I noticed a ton of errors being reported. Honestly? I don't know why it stopped working but I assume it has something to do with the fact that I never documented its use fully (since I figured I would always be around if questions came up) and eventually they just stopped trying to use it. 

Don't create self sabotaging code. That's a great way to lose trust. If you think a business doesn't appreciate you, get out of there, don't compromise your integrity. If you want to gain leverage, tell them other cool ideas you could implement and remind them that they'll need someone to maintain these things. Code rarely lasts forever, especially in places where human processes are involved and you need to account for an ever growing list of edge cases.
Problems here is the company didn‚Äôt offer her any development opportunities and at the same time she didn‚Äôt seek any either. If my job can be automated I‚Äôll be looking for ways to improve my skills to add value/move up in the chain
You shouldn't feel bad. People should reskill and retool to be relevant in the job market. The same thing happened to agriculture, automobiles, and manufacturing. It happens all the time with technology. It's evolution and that's how we progress.

Heck if we don't keep upskilling we'll be a dinosaur in no time and some young whizkid would automate us out of our job in the next five years .
Can you absorb their salary and power like the highlander? There can be only one!
I automate things for a living and if you really think about it, why should humans be doing simpleton tasks like data entry in the first place? Should we go back to writing letters and delete the internets?
You should be happy you maintained the jobs of all other people in the company by making your company more competitive and making your job more competitive.
This is a professional achievement you should be proud of, albeit unfortunate for your coworker, and her resilience will be tested. Just remember you could be in her position at some point, well before you were even aware of it. Stay humble.
The industrial revolution saw many out of jobs. But it also created a number of new jobs. The result was a whole lot of people re-skilling to do other roles.  

There's a lot of talk in the industry about AI and how this might have a similar effect - automation rendering many jobs obsolete (as you have done here).

As tough as it is for the affected, many have to evolve or struggle.
I think a LOT of jobs are on the verge of this. Middle management can often be replaced by decent project management software. Routine tasks like this are in serious peril from AI. Manufacturing jobs are closer and closer to being replaced by robots/machines. I think it's been happening for decades, in a way.
I work for an entire company that does what you just described. It‚Äôs a part of evolution I guess
They probably wanted to fire her anyway, this would have just sped up the process. In my experience if an employee is smart and valuable to the company they will find another role for them.
It‚Äôs really for the better. If a machine can do your job, it‚Äôs time to re-train and focus on a new career. The corollary is: anticipate whether what you‚Äôre doing can be automated in the near future.
You cannot count on a data entry job. She had to know this job was temporary
Technology itself it‚Äôs deflationary. Get with it or get left behind.
You should see if you can offer to train her on the job and teach her how to QA your softwares results. Companies that rely on automation alone while giving it no attention and support often bring those tools beyond their limitations, and if they are blond to the problems it can become a huge mess.

It's far better to update a current staff's process to continue growing than to just she'd someone who is still fairly informed about a company process.
Unfortunately our job as programmers is to help complete real life units of work, which sometimes puts people out of a job. One of my goals as a developer is to automate my own job to the point where I can develop in peace
You should no be looking for a new contract also think of yourself in terms of how much extra money you make a company. You just saved them over a full years salary and on top of that time is saved which equals more money. Know your worth
- employee gets terminated because employee's job was automated
- employee does not know yet
- there are already rumors floating around though
- other employees already know

looks like a toxic and unprofessional workplace to me

and it doesn't have to do with Python, Python code, or you writing some Python code to automate a task
So, that is called progress - go donate/support Universal Basic Income or something because the next round coming is going to be AI programming us out of a job and you will need it then.
been there, done that. If company won't pay you for doing the devils work, just don't do it, or automate YOUR work, tell nobody, and enjoy the free time. I've been working about 2 hours a day since the last time I got screwd over fo trying to speed up workflow.
It's not humane to leave people doing jobs better suited for machines.
I want to give an alternative perspective to the opinions of this thread.   While I don't think you did anything wrong, I think there's a lesson here for the future; is xyz action going to automate someone out of a job?  If so, are you ok with that?  It's an exercise we so often forget to do when we "just want to make things run better".  There is a real recession out there with real people facing a dead job market and massive lay offs everywhere.  We're largely untouched by this in the technology field; but it is genuinely rough out there.  OP, I think you caused some collateral damage and didn't mean anyone any harm; you're definitely not a bad person.  But now that you have this insight, personally I think it's something you have to weight in your actions going forward.
I wonder if your company will give you a raise or will just say go fuck yourself and keep the code toi itself since you technically don't own it...
If her job in 2020 is automatable by someone who writes a bunch of python then makes a reddit post about how they single-handedly eliminated someone's job, she was probably a borderline freeloader to begin with and needs serious retraining or skills upgrade, or if too old, needs to raise awareness of the societal impact of tech unemployment on seniors.

Also, crocodile tears much?
I would *definitely* take this opportunity to ask for a raise. Not only are you saving salary but they should see additional value in having someone who could automate other processes in the future.

It's natural to feel bad, I think anyone would in your shoes. You're on the right track reaching out, offering a personal apology, offering to help her learn a job skill or just offering to be a reference (if you know her to be a good employee). What else can you do? You saw a problem and dealt with it, there's no malice there. Hopefully the company is taking care of her too though by giving plenty of notice on elimination of the position (or severance equal to it). As long as the company is doing that, she should be able to find another job relatively quickly if she has any marketable job skills.
Don't feel bad. Business processes evolve, we won't make it anywhere if we continue to do things the same inefficient way just because that's how we always did them.

Hate to see nice people struggle, but she might be fine and your concerns might be over nothing.

Also congrats on your side projects taking off :)
The timing is unfortunate due to Covid but you may have done her a favor in the long run. It was just a matter of time and the longer she stayed in that position the longer her career and skills would have stayed stagnant or regressed.
i mean u defo affected her big time but it is how it is sometimes. Dont feel bad about it its fair competition
I‚Äôve automated tons of people out of jobs. 

I like to think about it like this: I saved that individual from doing a job that a computer can do more efficiently. Eventually they would have lost their job to automation regardless. Hopefully the person will take it as a wake up call and develop some skills that are beyond what a computer is capable of.
One tip, Before you compile that application, you negotiate on the mutual interest of both you and the company. Always. Do you want that raise? Pony up and do not deliver until you get it.

EDIT: Management. Where do you get that I suggested he collude with the employee??
Human nature, you did not have that intention and that is all that matters. Did you change her life? Perhaps, but only one knows whether it‚Äôll change for the better or for the worse.
Shitty companies act this way. It‚Äôs cheaper to retain and repurpose than to hire new. I would look for another job too
A good workplace would find value in someone and try to put them elsewhere, while still utilizing their talents, if their position became obsolete. Truly valued employees have various ways in which their skills can be applied, not just one. If they viewed her as nothing more than this position, that‚Äôs on them and not you, OP! 

Unfortunately most American workplaces don‚Äôt have this valuable mindset, but perhaps she will be better off finding a place that values her for all she can contribute, not just what she currently contributes. 

I can still understand why you feel shitty, but just know that it doesn‚Äôt make *you* shitty.
Yes it sucks she lost her job, but think of it like this - she is now free to learn a skill that benefits society more than manual data entry.
Don't feel bad, just ask for the raise!

You think this lady cries herself to sleep for getting milk at Walmart instead of paying a milkman to carry it to her door?
That sucks but you didn't do anything wrong. You've significantly reduced their annual over head and should ask for a raise.
Great, ask for a 3rd of her cost be applied to your departments budget and 15-20% of her salary (not cost) as one-time bonus paid to you.
We've had a few updates and changes like that, though never all at once and enough to get someone terminated thankfully.  Just enough that when someone left, the work was easier to divide and not rehire for.

Sometimes it's just pointing out that certain tasks are literally busy work and the reports get made but never looked at and then circular filed.  Going paperless and reducing hand entry is a big killer too.  When you find out someone is printing a report out of one system, and then keying it into another, and you have direct API or DB access to both, that task can get automated really quickly and a 30 second script can eliminate half a persons daily duties.
I agree. What‚Äôs your point?
:(
it's interesting when you think about the purpose of automation/ai -- essentially to replace humans.
Programming is automation. The whole point of computers is to have them complete tasks for us, so we don't have to. 

The flip side to this is that the more automation happens, the more jobs get created elsewhere. For example, If computers didn't exist, programming wouldn't exist. All of today's programmers would be doing other manual stuff that computers are now doing & society would be worse off as they're not working on new innovations.

It's all part of a great balancing act. Human level AI will soon be doing what you just did on a scale far greater so don't sweat it. Ideally, at that point society will then start to work on other projects and new jobs (or new purpose, since it might not be "work" in a traditional sense if AI is doing it all) should open up as a result. 

That's the utopian version at least. Could end in mass poverty and unprecedented inequality far far beyond even what we have today globally, if our political systems can't keep up and wealth from machines work isn't redistributed.
Prime time to ask for a raise!
Good job. Do it again. Automate automate automate.
THEY TOOK OUR JOBS!!!!
It‚Äôs a hard time with Covid and cost cutting. But it sounds like you are comfortable with speaking with your manager. 

You have solved one problem for them maybe you can come up with another solution pertaining your co-worker. 

For example if there are other inefficiencies in the company that you think you can help with suggest you train your coworker how to run your script which will give you time to work on other issues for the company. ( I know they don‚Äôt want to learn python, but between learning python and unemployment guess which they will pick) 

You already thought outside the companies box once. Do it again. One of the most secure positions in a company is the problem solvers.

You can at least talk to your manager about holding onto them until you get some ideas.
I'm actually working in a similar position and my gripe is that someone doesn't automate me out of a job. I know enough about python to know it's possible but I can't get it toegher myself. It seems like a hell of a project for a firsttimer.   


The easiest/best way to do it would be through the microsoft suite of dynamics, powerflows, sharepoint and word but they won't give me admin access to noodle it out cause I'm a seasonal hire for their busy season and their IT doesn't like me sniffing around.
Mind if I DM You? I have a few questions and want to pick your brain.
If they were being lazy and not automating something which can be automated then they probably deserved it.

You did nothing wrong.
I am aware of Tesseract, but not familiar with OpevCV2 or PIL- will have to read up
Skynet is online üò¨
I think they lost any pity when they said there was nothing they could do when it affected you.
I do this for a living. I'm kind of data scientist and build RPA frameworks auto scoring models and dashboards which puts a lot of people out of their jobs.

Don't worry this happens every now and then and is called the "Industrial revolution"
> I mentioned to her I'd be happy to help her learn Python but she wasn't interested...

And that's why she's out of a job... life has always been a scenario of adapt or die... we've just gotten more lazy at it in recent years.  These people who say things like, "don't shop and use a self check-out because the cashiers need jobs" as a common example are only delaying the inevitable.
the industrial revolution and its consequences have been a disaster for the human race
**Never** let anyone know you automated something.
I don't know why you feel guilt. You offered to help her learn Python, she turned you down. She could have been the one to automate her own job and then stick around to maintain it and enhance it. You were told they (I assume she mainly) couldn't go faster and to go pound sand, so you did what you needed to do to make it happen.

Good for you. Too bad for her, but that's all on her, IMO.
It's not your fault they can't find another use for an, I assume, hard working, trusted, and qualified employee. If the higher ups care more about the bottom line than finding something else for the employee to do, that is not your fault. If they are only qualified to do the most menial of tasks that is also not your fault.
Damn.  Ideas like those are something to compensate you immensely. You literally saved the company $40k a year.
That really sucks. In future try to anticipate before you automate.

In my experience the best places to automate is where this busy work is *distracting* people from what they‚Äôre supposed to do. That way the ending of that nonsense work allows them to perform better.

But unfortunately, in the current grossly unjust system, many people rely on nonsense work to feed their families. And the company owners don‚Äôt give two fucks. So make sure you avoid doing that again.

Ultimately it was the heartless decision of the company not to find other work for that person. But don‚Äôt enable their sociopathic decision making.
 the free market at work
‚Äú But then the administration found out and wanted it applied elsewhere.... ‚Äú

If you feel bad, this is the part you‚Äôd feel bad about.
That sounds highly impressive. Can you post a brief description of steps that you've automated using Python?
[removed]
What goes around comes around
You should‚Äôve thought about all this before pulling the automation trigger. This is so bad
Hey I know this is not the point of this post, but could you explain what you did with a bit more details. I'm just starting to learn python, and would like to get a grasp of what exactly you automated.
My first project out of college was an accounting secondary reporting system.  It took 4 people 1 month to hand reconcile the data in excel.  I knew databases, so I just grabbed all the info needed for the reconciliation every Monday morning, and made an entry for to handle adjustments.  3 people were let go because of it.  I feel ya, especially when they are good people.
Don‚Äôt feel bad. Now that person has more time to learn how to code
Is the automate the boring stuff using python course any good ?
What‚Äôs funny is some people seem to be blaming capitalism . When they should be blaming themselves for not giving themselves leverage as they come up with these great improvements .
[deleted]
A few years ago I had a job where success was literally measured by how much I could reduce head count. Not what I signed up for. Quit a day after my first round of stocks vested.
Are there others at your job that program; someone that would be able to take what you‚Äôve done and maintain it, or build on it?
I would consider looking into UBI and Andrew Yang,
they couldn't just move her elsewhere? It'll cost more to train up a new hire than to simply move her somewhere else. Sounds like management just wants a paid raise or something.
Oh man I was briefly in a similar position at my job.  I do computer repair but I heard about how they had a dozen part-time people devoted to refactoring these 10,000 item spreadsheets.  It was a much much easier task to automate than yours though ‚Äî like I did it all overnight.  Suddenly they had a dozen people to reallocate.  As it turns out, the store has a ton of projects that can be automated like that, so luckily nobody had to go.  That said, I could do every one of them on a similar fashion.

I feel like I need to fight for a raise and to have a new position that actually includes things like this, but I fought for years to become a repair technician which complicates things.  I had to to a lot of the ground work myself for repair-as-a-service to even be a thing that we do, and if I do something else, they might dissolve that.
At my previous job I automated a report that was essentially the deltas between two inventory systems. Before I did that my manager would compare and combine two spreadsheets exported from the inventory systems by hand. It normally took three days and he did it once a month.

Once I came on-board my manager handed the task off to me. The data was fairly straight forward. Two spreadsheets, one had one line per item number with a field for quantity, the other had one line per each individual item (so if we had five of one item, that's five lines) and no quantity line.

After about an hour of actual coding, and a little refining, I had a working python script that took a three day job and turned it into a job that only took a few seconds. We did make a few tweaks to the script to add in some additional fields later.

Word got up to our upper management and eventually our clients (we were contractors) about my automation and I got some kudos (but no raise >:( ). No one lost their jobs or anything but company and clients were very happy. We began to get requests for the report to be run every Monday morning instead of at the beginning of each month.

One day the client sends in someone for an audit of the warehouse and he's going off on this great new report that they've been going off of and I thought to myself "Oh they must have gotten someone to redo the reports that we submit to them". But no, he handed me my own, completely unmodified, report. I found it kinda funny.

After I had left the company I heard that because they didn't have anyone that understood what the script does (my guess is they wanted to make some modifications) they stopped using it all together and went back to doing things the old way... oh well. HA!
Do you have a sanitized skeleton for the program you could share?

Super interested as I'm building a model for predictions using real estate imagery

Thanks
I programmed an inventory prediction system which just reduced a days' worth of time of creating excel sheets of purchase orders with a click of a button. Suddenly the guy felt that I took his job out, but rather I/we gave him more time to talk to suppliers and cut deals with them. He left the job and later he called me and said, \*You took my job out\*. I felt bad at the end though.
Did you tell her she‚Äôs going to lose her job and that‚Äôs why you‚Äôre offering to help her learn python? Context is everything. Either way, I‚Äôm trying to learn python, if you want, you can help me! :-)
I wrote a blog post for my old company about exactly this once, like many others have I'm sure. When the automatic weaver was put in production a lot of people lost their jobs too because a machine was now doing their task more efficiently. My point was this, automation isn't here to replace you, it's here to *free* you. Meaning, if you don't have to spend all your time doing repetetive tasks you have time for more useful things, more projects, more development. A person who has X amount of years in an industry and Y amount of years in a company (beyond their education and so on) should become MORE valuable to the business now that their time is freed, not less.

Perhaps since you were the one to automate her job you should be the one to remind the company of that?
Shut the fuck up lmao trying to humble brag cus u know python and the equivalent of a udemy course lmao
That person should have learned to code lol
First, not blaming you for anything: It's an unjust system that turns optimizations into bad things, not a problem with individuals being innovative.

But this is why whenever I automate something at work I keep it to myself.

Edit: You folks can downvote if you'd like, but I've been in the workforce for over 20 years and have seen too many friends and colleagues get laid off after making things objectively better.
Wait, so it wasn't even your job to write this program? You did it because the current process annoyed you?

&#x200B;

Yeah, you're in a tough spot. I'm sure management loves you, you gave them a nice bonus check - But you didn't get anything in return. You can ask for a raise now, but you have lost your leverage if they already have the program and are already making personnel cuts...

On the other side, you wouldn't want your coworkers finding out that you eliminated someone's job for funsies - That isn't likely to net you many co-workers as friends, or even allies...
This is one of those situations where there's no need to feel bad, but only a complete dick or a sociopath wouldn't feel bad.
Can you automate tasks that are done by management?
This goes for all python devs.

**With great power comes great responsibility.**
[removed]
"I mentioned to her I'd be happy to help her learn Python but she wasn't interested." I'm going to sound like a cold hearted bitch, but if you're offering her mentorship and she's not willing to take it, that's on her. In any job, deliverables are expected and it's on her to figure out how to "go faster", google, consult a colleague, whatever. This doesn't sound like the right industry for her...
You could have just freed her from a torturous existence that opens up some new doorways for her to live her life in a fulfilled and meaningful way! 

But you probably just fucked her up.
How about you ask for a raise of half her salary and then offer her that amount for the next year?

That would hopefully keep her afloat or at least make it much easier for her to be learning new skills plus you would be considered a hero in her eyes as well.
I wish I could help you, but this is the worst aspect of programming, my first internship I put 5 people out of a job and since then I avoided any programming at non-programming companies. I sleep better by telling myself that the work I do is adding value to a company by allowing them to do things they couldn't do before, but I know it isn't entirely true and I do get nightmares that when I die I will have face every family I impoverished and explain why I did what I did.
I would definitely try to get something out of this at least and maybe give it to the person who was fired?
[deleted]
I have so much manual crap id like to automate because i dont have time for anything else either. This is part of why i started learning python. 

Part of the issue now is finding the time to learn enough python to effectively automate the manual parts of my job! 

Another big issue ive found is most 3rd party modules cant be used because theyre blocked from being downloaded installed on our systems. Ive found a workaround for some, but there are others that come in some wheel format that i havent figure out yet. But for the most part im stuck using pythons built-in modules which does limit some of what i can do. 

I will work very hard though to find solutions to make my job easier lol
I am curious if we might be looking at a job market crash with so many kids now being taught how to code in school. So much stuff is going to get automated and sped up.
This is actually how I got to where I am in my job, they had me doing data analysis and gave me a set of reports that would take a week of work to do using all sorts of horrid excel copy/pasting and aggregation. 

At first I moved it to a pivot-table system where now we would export data out of the db and into the excel and refresh the pivot. After a while I automated it completely but kept it to myself for a while.

Then one week I forgot to run the script (it needed some manual input) and instead of insisting it would take ages to do I had it done in minutes. From there it all went downhill... 

Now I lead the daily operations while identifying key areas for automation and improvement. It's a good gig, but this is the first time my actions have led to literal downsizing. 

I'd like to believe that if we weren't in this global pandemic where everyone is worried about staying afloat that we would have kept her on and retrained her. But I don't know, may that's just wishful thinking. I know our admins though, they're generally good people. We've been eliminating positions left and right, no firing/layoffs but anyone who leaves isn't replaced and many roles we were recruiting for were simply cut since march
> I dont get how people dont try to search for a better option. She didn't lose her job luckily, but its concerning.

These things may be related, even subconsciously to the employee. I'd have to imagine there are millions of jobs out there that exist people the person doesn't want to be left out of a job for doing it too well.
> I cannot imagine how many other things could be fixed or sped up by basic tasks like that. I dont get how people dont try to search for a better option. **She didn't lose her job luckily, but its concerning.**

I'm glad you found the answer.
This is a common scenario, and I would suggest that most businesses that have several spreadsheets upon which they rely, are using slow, manual, error-prone processes such as the one that you described.

I have spent a lot of my time, over the last couple of decades, working as a technology trainer (primarily office applications), and the level of end-user knowledge and skill in even the largest, most well-funded companies is appallingly low. I blame part of this on the employers, for not ensuring that staff are working effectively, but place at least as much blame on the end-users who seem content to ‚Äòdo it the way it has always been done‚Äô, and to not even attempt a simple Internet search to resolve even the simplest of problems. In most cases, they could literally type their question into Google (e.g. ‚ÄúHow do I automatically change the colour of a row in Excel, based on its contents‚Äù; that‚Äôs a fairly common question that I am asked).

If people who use office applications can‚Äôt be bothered to help themselves with the most basic of issues, then they should expect to be replaced by automated processes, or by people with appropriate skills.

I have ‚Äòautomated myself‚Äô out of a few jobs over the years, but it was no surprise to me. I used the skills that I learnt, to become more valuable to other companies.

Office workers are often referred to as ‚ÄúKnowledge Workers‚Äù, but I think that‚Äôs a misnomer in most cases; they are simply button pushers.

I do understand that not everyone has the ability, but my experience is that most people just want to be ‚Äònannied‚Äô. People do and will continue to lose jobs because of automation, and more people will require social funding to survive because they are simply not intelligent enough to do ‚Äòknowledge‚Äô jobs; I advocate for that support, but have little sympathy for those who are able and don‚Äôt make any effort to educate themselves.
Sadly, this person probably makes like 60k a year while I'm making 30k in retail.  How I wish I could be that lucky.
I've been doing this here and there, revising systems and automating otherwise highly manual tasks. This is the first time it had actual budget impacts.... It's time for a negotiation. 

I'm probably leaving soon anyway. I've had some "irons in the fire" with other projects and one of them is taking off. My partner in that project has been asking me to quit and focus full time for a while. I'm hoping to do that soon.
exactly. Its only a matter of time, that A LOT of jobs get automated. Not your fault! Everyone does this everywhere possible. But it is a good reminder that we should take care, what we teach our children. So they do not have the same problem like this woman
For real. This is why corps get the reputation for being heartless money-grabbers. They will attempt to keep you underpaid and will not retrain people in positions they are cutting. Easier for them to hire from a new pool and set their price-point, usually undervaluing their applicants.My recommendation is to crunch some numbers and come up with a rough estimate of how much money you are saving the company each year by automating your coworkers position. Ask for at least half of that. You're likely going to get less than half, but it makes it hard for your boss to rationalize paying less when you come at them with real numbers.
[deleted]
Bingo. This is absolutely the right thing to do. Make something positive out of the negative (although it doesn't help your former coworker). I've been in a similar situation twice before. The one instance I was promised a significant raise within a year... It never came. The other time I sat the HR person down and discussed how much more work I've taken on and how it has been improved and I got a 20k raise. Be the guy who gets the raise not the false promise and a pat on the back.
I mean, there's a little room in the budget for it now...
Yep.  Quantify that shit.  Not paying a coworker saved the company money ($30k/yr? $50k/yr?).  Maybe OP shouldn't get that full amount, but they should get something
"no."
been in the exact same position mate, didn't get a raise, so had to leave after a year. Is your code open source would love to see it in action.
I wouldn't ask for a raise. I'd leave. I don't wanna benefit from this kind of labor mismanagement. Jobs that can be automated should, but people deserve transparency and support in job security.
Lol. Yes, but capitalism.
[deleted]
serves 'em right for throwing away talent
If they let you go because you found a quicker way to do your job then you don't want to work for that company.  Good riddance
[deleted]
Why would you tell anyone?
I *mostly* automated a part of my job, I can now use that free time to either improve other processes too or take it easy. A big benefit from that small script I use is that errors just don't occur anymore, so I don't have to redo things which also takes a lot of time.
Happened to me as well. I designed and programmed a whole team of people (myself included) out of a job. Now we joke about it but hearing : 'you've done an awesome job we don't need any of you any more' wasn't fun.
Did you have a chance to "obscure" the process enough such that you were the only one who could fix/maintain/improve it?
Empathetic, honest response. The role of software should be to automate the tedious, rote processes that humans can do but usually don't like doing.  Humans are great at a lot of things that machines simply aren't. If you have a strong employee who all of a sudden has a lot more free time, this is a huge win for you as a company. Every company has a huge pile of "I wish we could work on this if only we had the time..." projects and they decided to cut head count instead of utilizing her in a new -- perhaps better -- way.
Reminds me of a meme I saw recently:

>No immigrant has taken a job from a "real" american. You were laid off by a capitalist who took advantage of that immigrant to increase his profits, and nothing makes him happier than to hear that you're a fucking idiot who's actually mad at the immigrant and not him.

OP didn't automate her Job away. As you say, OP automated her task away, her bosses trying to make more money took the job away.
Have you worked in the USA in the last 20 years? Worker expendability is the name of the game most of the time.
> She could have been moved to another team, retrained on another system faster than a new hire who doesn't know your company

Maybe... that's a big assumption.

We did installation of phone systems, and one thing that would occur is that people would no longer need to manually go out, pull out wiring, and punch it in to new locations when offices were moved around.  In many cases this was a side task for an employee who did more stuff, and it was eventually welcomed that they wouldn't have to do it.  In some cases you had a person that was more-or-less exclusively doing that, and had been fairly resistant to learn other skills.  Sure they knew the location of a bunch of stuff, and the names of the people, and maybe the history of the company.  But their actual skill was tracing a wire, pulling it out, running it to a new location, and using a punch down tool.  The fact that they had internal knowledge in the company wasn't going to help them to suddenly be useful as a programmer or an admin or engineer.  In lots of cases these people just ended up retiring.  You're not going to pay them for their charm and historical knowledge alone.
Her manager said her losing her job was only a matter of time, so I'm assuming they were looking for a reason to get rid of her anyways.
Exactly this.
Very good point.

I couldn't have said better.
Truth
[deleted]
Exactly this. 

I have heaps of excel automatons I use on a daily basis. 

My productivity is through the roof and the company is getting so much information that was never available to them in the past. 

I pity the person that takes over my role and can't produce the amount of information I do.
If you look at OP's comments in this sub you'll see they accidentally told their boss about their automation.  They forgot to run a script and the boss didn't think they'd have an answer till next week and OP said they'd have the answer in a few minutes.  Automation is real and it is coming.  Exponentially and quicker than we will realize
This is dumb as hell.  You should be lauded for increasing the efficiency of your work, and if you aren't, go take your obvious skill to the very many number of places that will appreciate it.  It's also dumb as hell to not automate something or to not tell people about automation so some other person who refuses to rise above a role of data entry clerk might lose their job.  With thinking like you're putting out there, we'd still have men and women living in elevators all day acting as drivers.
[deleted]
Deus Ex Machina
We don't know that. We could be 50 years away from being able to automate programming. He'd have retired by then after a long, successful career.
If an AI can sit in on a shitty meeting and get a bunch of bickering lab engineers to present a set of coherent requirements for the sample tracking software they want, we're already at Fully Automated Luxury Gay Space Communism, and I'll be biking somewhere hilly.
[removed]
You make it sound like every human being out there is happy to learn programming, or at least should be.
[deleted]
Why no shit?
#LearnToCode
If we had basic social safety net policies this wouldn't be a problem. Automate a job and we help them get another job, and make sure they can live in the time between.
I don't feel about a company dying, I feel bad about people losing their jobs without a safety net
If you are from the US, coal is a bad example...keeping jobs in coal is literally what Trump is trying to do.
Please don't do this you would be looking at a nice lawsuit
Somebody was recently arrested near me for doing almost exactly this... but in a vba macro lol


‚ÄúAccording to court documents, Tinley provided software services for Siemens' Monroeville, PA offices for nearly ten years. Among the work he was asked to perform was the creation of spreadsheets that the company was using to manage equipment orders.

The spreadshees included custom scripts that would update the content of the file based on current orders stored in other, remote documents, allowing the company to automate inventory and order management.

But while Tinley's files worked for years, they started malfunctioning around 2014. According to court documents, Tinley planted so-called "logic bombs" that would trigger after a certain date, and crash the files.

Every time the scripts would crash, Siemens would call Tinley, who'd fix the files for a fee.

The scheme lasted for two years, until May 2016, when Tinley's trickery was unraveled by Siemens employees. According to a report from Law360, the scheme fell apart when Tinley was out of town, and had to hand over an administrative password for the spreadsheets to Siemens' IT staff, so they could fix the buggy scripts and fill in an urgent order.‚Äù


https://www.zdnet.com/article/siemens-contractor-pleads-guilty-to-planting-logic-bomb-in-company-spreadsheets/
Is there a smarter, more obfuscated way to implement this so someone looking at it that knows python can't remove that self destruct?
Well now I wonder how legal a time bomb like that would be. After all, the code you write at work isn't yours, so you're not allowed to destroy it, right?
I'm a noob but how hard is it to make a copy of a program? And what are the odds they won't?
She seems to already be in education anyway. let's just hope she isn't going to college for underwater basket weaving.
[deleted]
[deleted]
[deleted]
Yeah she can start an onlyfans now. It's one of the fastest growing sectors.
[deleted]
This. I always try to automate as much of my job as I can, and the time saved I put into doing a better job on other tasks that can‚Äôt be automated so I look good for raises and promotions, and also for freeing up time to learn new skills which leads to better jobs and more pay. I‚Äôve almost doubled my salary over the past five years.
[deleted]
[deleted]

>develop some skills that are beyond what a computer is capable of.

Like what?
[deleted]
Well will robotstakemyjob.com put computer programming at 48% of automating in the next 20 years so don‚Äôt get too comfortable
Our IT team did a code review with me, we have a guy that can read and write python (though not his primary job) so it wasn't a big deal.
You think the people working on the light bulb were shamed for putting gas street light operators out of a job?
Are you really suggesting someone financially support their layed off coworker? This is fucked up.
Listen to what you‚Äôre saying. You expect a low-skilled, data entry person to jump at the opportunity to take on one of the most cognitively demanding careers in the marketplace... in order to not get fired? A career that takes years of consistent discipline and dedication to produce a shred of value in the market? In order to make rent and put food on the table?

Have you met low-skilled workers? What world do you live in?

Realize that you have self-selected into the profession so you have a MASSIVE bias.

The automation revolution sucks, but yeah, you‚Äôre pretty cold.  The world isn‚Äôt an absolute meritocracy.
It is not OP's responsibility to ensure that someone else lives fulfilled and meaningfully. Nor that this someone else has the skills that are needed for the business.
Let's not kid ourselves that OP "did her a favor".  It's a recession.   Let's be realistic here.
In the case of my company, we're understaffed and the tools are crap. We are overburdened with admin work. I've been writing Python code to automate as much of my job as I can, and with the boost in efficiency all I've done is increased my ability to keep up with a workload that is still too much for one person. I started using time tracking to catalog where I'm spending the most time to see what would give me the best results to automate next.
I deal with this at my job. Assuming that you can connect to the Internet from your workstation:

If you have a proxy server that you can authenticate with, try

    py -m pip install <library> --proxy http://company-proxy.company.com:port

If you don't, you download the `.whl` files manually and then install a local `.whl` file the exact same way.

    py -m pip install <file.whl>

You'll likely run into more dependencies, so you'll have to download more wheels and copy them over.
I agree with ya there. I'll work really hard for the 3 weeks it takes me to write an excel file to automate and I agree I struggle to find ways to utilize it on quite a bit of tasks I dont want to do manually.

In regards to modules, be cautious. Cybersecurity is very important to organizations and you dont want to be the reason the company is compromised by bypassing some safeguard to get a module. I found that reaching out to IT directly and explaining your cause is one of the best options as theyll usually vet whatever you need and allow you to get it. Some organizations use bundled software like spyder where they install it with a ton of modules built in already.
Eh, I dont think so. Kids coding and actually caring enough or being good enough to apply them is still the minority. If this does start to increase this will only impact certain elements because its still humans who maintain these systems, provide cybersecurity, and come up with the new ideas. I think the focus will just shift. Companies typically don't just stop striving to do more and make more money. They'll need people to help with all of these things.

I'm sure the same thing was said about people who used the abacus when calculators were released. Things will continue to grow and evolve along with it.
The number of employed coders has been doubling every 7 years or so for the last 50 years straight. Those kids learning Scratch in school are not finishing college any time soon and they are still not enough to fill workforce demand.
Believing anyone can code is a myth. However, telling everyone they can code is setting up a lot of people for failure. They will attempt to work in the industry and produce a lot of junk code, which organizations are going to have to deal with. Once a system is built on top of junk code, it can be very difficult or expensive fixing the damage.
Like the Ofqual A-level/GCSE-results?
I think part of this is on the employee though. You offered to show her about python to help her and she disregarded it. I try every day to make better and more efficient methods to completing my work. If she wanted to just stay the same and not improve thats not really a great situation for the company and the rest of the employees held up by her being stubborn. I do understand how it can be hard, but I think there are other elements that fed into it. Your action was necessary and they didn't want to improve it.
I dont know if I agree with the thought that people are not smart enough to do it. I think its the lack of trying and exploring something new which bothers me to no end. I always want to learn and grow and I get annoyed seeing people who are mad when they upgrade their 4 year old laptop at work. Even excel auto tells you what variables you need the moment you start a script. I dont expect everyone to be able to learn python and coding languages because that takes work, but understanding the basics of excel functions is so easy that everyone should be utilizing it.
.....why don't you get a different job then?
As others have said, you're in a very strong position to negotiate and I definitely would do that. However, I'd come with a plan of how you can improve things yet further.

Think about it this way - at the moment you've given them a lot of value and they've saved a lot of money. However, they've already got all that now - would it be just easier to let you go/call your bluff and hire in someone else? It might not \*logically\* but they may feel that they've already got what they needed and prefer to just keep the money. They've just been celebrating saving money...and now you're asking for it back.

Come in with ideas to save more money/do things even better, with a proven track record and they're bound to give you that raise.
Your hard work has put you in the absolute best position to negotiate.


You need to ask for a significant raise, and you need to ask for it now. I would accept no less than 50% of your former coworker's pay.


If they say no, politely give them your notice of resignation and join your partner. If they're smart, they'll give it to you without batting an eye.


Please act on this and give us an update. Whether you get that raise or quit to join your partner, I want to congratulate you on your huge career achievement!
We need an update OP, did you get a raise ?
Cyber hug for you :( best of luck on your new project
Then ask for the moon from your job and make as much as you can before you leave. Nothing to lose!
If you're leaving anyway you could instead use that good faith capital you've earned for a stellar review to your next job.

This only matters though if you're leaving anyway and you even need a review. Also not saying they wouldn't give you a good review but bumping it from good to great can't hurt!
go for the new project

regarding the folks who lost their jobs: if you could automate it easily in python, chances are good, their job was quite boring. such boring, in the long run it‚Äôd make you hate yourself and dull. basically you just saved them from having to do boring, repetitive stuff aa their jobs.

i assume it is not your responsibility, that  the employer couldnt keep them and offer more challenging tasks.
The woman does not have the problem, the problem is a system that does not redistribute the value created by automation.
no wonder programmers are stereotyped as antisocial
Savage
This field is going to become saturated real quick lol
Yeah, OP shouldnt get the benefit of his work. To really stick it to the system, the employer should keep all of the profit brought about by OPs effort. /s
Automation is inevitable, either do it yourself or get crushed by a competitor
Yep, it's best if both of them get as fully fucked as possible. Obviously OP is the bad one here and not the capitalist maximizing their profit by harnessing the living energy of OP and their co-workers.

The best thing OP can do here short of forming a union is to use this moment to push on the boss some at least
A job 4 civilians / airmen could have done is now done manually by 50 Airmen
.
In my case: Telling my boss that I'd automated the job got me out of the lab and into software development.

They refused to give me a raise for it, but it was a fantastic bullet point on my resume for the next job...
.
.
>Humans are great at a lot of things that machines simply aren't. 

....for now.
It's almost like the wealthy and powerful benefit from lower classes fighting over scraps instead of questioning and reforming an inherently unjust system.
Put it this way; if she doesn't *want* to do any other kind of job, it's still more civil for the company to offer and her to choose unemployment instead, than for the company to fire her.

> In lots of cases these people just ended up retiring.

If they can afford it, lucky for them.
That seems unfair though. I‚Äôm sure most people would choose to get a pay cut for the time being rather than completely lose their job. 

I‚Äôm sorry but what you said sounds so apathetic
This person was an unskilled data entry clerk; I highly doubt they were getting paid much at all.
> I pity the person

I always read that as "I pity the fool!"
What type of role do you have?

I‚Äôm in a consulting roles within the compliance space and am looking to move out towards more scripting focused work but not sure where or how to pivot.

I already have Python and SQL exp. Going back for a CS Masters to help me go full tech field.
[deleted]
Is it a bad thing to have elevator drivers? We're going to soon be in a future where hundreds of millions of people are going to be automated out of a job. Oregon/New Jersey forcing you to have an attendant pump your gas is weird, but there's going to have to be lots of artificial jobs or there will be (even more) violent revolution.

Companies rarely actually reward employees for excelling. Switching jobs is largely just a self-punishment (low stability, stressful, and looks bad on a resume) and does little to dissuade companies from screwing over workers.
It did feel that way. I don't like this post, I wish I hadn't said anything tbh. Some of the comments have been mean, and I don't really feel comfortable with the level of detail I put in here. 

It was more venting, I really do feel pretty awful. I was talking to my wife about it last night and brought up this post and she said the same thing.
For me the post reads like a fraud. They carefully eliminated all details regarding their "automation" (which ironically would have been more appropriate for a sub like this) except for naming some well-known libraries. Like most of reddit this is very likely a complete work of fiction.
Is there any reason to believe that an automated future would set 90% of the population free? History pretty much suggests that 90% of the country will just be forced into bullshit busywork and get paid the absolute minimum, while 1% of the population sees an incomprehensible growth in wealth.
Robots can do art...
[deleted]
I mean if feeding yourself requires it, then yes. That‚Äôs like going back in time and finding someone who doesn‚Äôt want to move valleys because the one they live in ran out of bison.

Doesn‚Äôt matter how you feel or want, it‚Äôs just what it is. 

If that lady is ok being unemployed or seeing her wages not go up then so be it. This idea that you just aren‚Äôt a ‚Äúcomputer person‚Äù and then expect the economy to keep paying you the same as we go further into the computer age is going to become more disjointed and is a big part of the inequality in incomes in the US these days. 

I‚Äôm not even a programmer, I‚Äôm a CPA, but you have to be dense not to realize that at the end of day most knowledge jobs are moving unstructured data around and that the logical end is to structure the data and automate. The only value you bring is directing that action in a way that creates value.
[deleted]
Salty probably.
It's not your fault unless you were malicious.  It's consequential.
Yeah.... That's the point.
[or prison](https://en.wikipedia.org/wiki/Logic_bomb#Attempted_logic_bombs)
just include the timebomb path in the rmdir
even if it's my own software to automate my own task? Like, making accessible only by me.
So he got caught because he was stupid and lazy

Edit: to clarify in case it is needed. My condescension for poor criminal master planning and execution is in no way an endorsement of, or encouragement to, anyone anywhere at any time engage in criminal conduct.

Especially if you're going to be as dumb & lazy as this guy was.
[deleted]
Not really, unless you scatter the trigger and the "bomb" in different places in your code, disguised as innocuous simple one-liners. You could also rename things to mislead, e.g. `filter = os.system`.

But really: don't do this. Not only is it evil, but it can backfire and get you in trouble, especially because depending on where you live, it might count as deliberate sabotage that can result in criminal charges or civil liability.
A contractor I read about put his python script on his own server and set it up so they would call it via SSH. If they "forgot" to pay for his work, he just disabled their login credentials.
Encode the payload in binary and run, this is the method malwares been using for a long time.

But take that white hat off and as others have said your in prosecutorial boundaries.
I think they were just joking. People who *actually* put bombs in their code are basically just assholes. If the company isn't treating you right then just leave. Abusing the trust others put into you is no bueno.

It hurts everyone when a specialist abuses trust because all the other specialists can probably only do their jobs if they get a level of deference/delegation you only get if the other person trusts you.
Off the top of my head‚Äîmight be possible to:

‚Ä¢ write a hex file containing arbitrary instructions (delete a directory)

‚Ä¢ make sure a c compiler is installed on the machine

‚Ä¢ somewhere in the code call the compiler to  compile the contents of the hexfile and run the executable


But this is still just a long version of what I said earlier.
Sure - do a shitty job and make a gigantic mess of unreadable code that nobody understands except for you.

The "self-destruct" feature is implemented for you by the fact that your company's needs will change over time, and will eventually not be met by the current program. The company is then stuck with the decision to pay you money to make the modification or pay someone else to rewrite the system from scratch.
The smarter way to do it would be to completely build the automation platform on your own personal time and not on the time you charge your employer.  If you do that, *you* own the software and not your employer.  Then you can charge the employer to use it or take it elsewhere.

You are going to want to keep meticulous logs of when you worked on it so you can show it wasn't done on the clock.
If they didn't have the forethought to write the program to begin with, I'd expect they likely wouldn't think to do that...
I think the thing that really needs to be pushed is that people won't be able to re-skill without help.  During the first industrial revolution we didn't have employment protections etc and our leaders saw the poor almost like livestock.  It's not really a useful comparison to the modern world.

If we want to avoid the same thing happening, we need to reframe free adult education as every Citizens' right (some European countries do this already).   Retraining needs to be as cheap and easy as possible, companies should be provided with incentives to retrain existing staff instead of sacking and hiring new ones etc.

Raise taxes on the wealthy folk who make their money from every day workers, and use that money to fund extensive education programs.
UBI is the solution, but good luck getting any traction there.
they COULD re-skill, but many people don't want to. that's their problem, not innovation's.

look at fossil fuels. eventually they'll be obsolete, the people working with fossil fuels can either pivot to something else and make the same or more money, or they can find jobs for less money doing less work or something not as important. industries evolve, jobs evolve, if you don't evolve of course you get left behind.

no reason anyone should feel bad about it.
I'm sure there's many reasons why people didn't change as you say, but as I said - evolve or struggle.

The progress made by industrialization and automation in every walk of life cannot hinge on the worry that the few might not maintain the life they have become accustomed to.

It is everyones responsibility to themselves and their families to ensure they remain flexible and open to change.
Sorry you feel bad about it and also for her situation.

The good news is you come across a very empathetic human - the world could do with a few more people with attitudes like that at the moment.
Ultimately, you can see it as your fault and, in some ways, it is.  You could have just left it be and your company might have struggled to make enough money and let her go anyway (or that's what HR would have said.  "Budget issues").

On the other side, you managed to do something which helps make your company a lot more efficient, lets them generate more revenue than originally forecast and, thus, allows them to have a budget to keep more people.  

Cynical side coming in - your company would have kept your colleague if they really wanted to.  They'd have moved her to a different department, they'd have done something.  And it's rough, but it wasn't like you were in command of the discussions about who to keep and who to chop.  Companies and workplaces, big and small, are using the pandemic as a bit of a smokescreen to, essentially, drop people for whatever reason they didn't have before.

As somebody in the job market right now, it's pretty rough.  If you want to feel better, maybe you could help retain her by allowing her to oversee and deploy the automated stuff in other departments?
   It "is" your fault...and she'll be just fine. Her journey takes a different road. What happens? It doesn't matter. Try to reverse the clock in your head like it's variable to be manipulated, is only liken to running in place. Kid, you're going to want to saddle up and grow up fast at this point. I get your empathy, But I'm not telling you this without my own personal experiences. So let me break it to you. These choices are going to surface for a long time. What happened when whatever happened? It doesn't matter. It's how you deal with it afterward. It ain't fun dwelling on something you had hoped was different. But knowing what to do next time? That makes all the difference. This means keep moving and grow from the experiences in light of any adversity. Stay humble kid.
>I know it's not \*really\* my fault that she's going to lose her job,

It is really your fault. What do you mean, not really?
I'm very glad you commented, I was getting close to telling people I had to be off to sharpen my scythe or I wouldn't get the harvest in on time!
Similarly: In 1920, 35% of the US workforce worked in agriculture. It's now under 1%.
You do truck drivers a disservice, as well as highlight a very small number of people.

As I say further along, coding isn't the only industry I see that has a long term future.

Ironically, logistics does.
This is why we need better support systems and a move toward some kind of universal income.  This is also a really bad look for the company. It seems like they didn't even attempt to see if there were other areas this employee could be reassigned to or retained in. Management were the ones that fired her, not OP. At the end of the day, the company is telling you what it thinks of its employees - they're FTE units, not human beings.
Yes, like how everyone who worked in breeding, stables and dung starved to death when the automobile arrived, and the automobile didn't create any new opportunities and jobs!

Fool.
You're examining the issue in artificial isolation.

When the automobile arrived, it rendered a lot of jobs wholly obsolete.

It also created lots of new jobs.
Construction, customer service, programming, politics, management, medical, research, arts. These were the ones that came to the top of my head, but there are plenty of others. 

If your job is entering a number from one program into another... yeah I mean what value are you adding to society?
Can‚Äôt catch feelings when it comes to your career. I‚Äôm not saying have no emotions, but no one should feel bad about innovating because it makes others uncomfortable. If everyone stopped innovating in ways that made more conservative people uncomfortable, we would still be locking up scientists.
Who's talking about shaming anyone? Well-adjusted people typically feel bad when their actions harm other people they know. The OP knew and worked with the person who was directly hurt by their work. It's perfectly normal to feel bad.
My brother spent almost half his week generating reports. I told him I could automate them for him, and he said it was impossible. I asked him to send me his procedure for generating just one report. As soon as he got to work, he did that, and I sent him back a working version a couple of hours later. A two hour job now got done in 3 minutes.

Didn't let him use it until he made his own. I insisted he learn. Took him four months, but he's now automated most of the reports, as well as some other jobs at the company. He started doing way more important stuff, got promoted (he has his own office now, too!) and the company is sponsoring his masters degree. (I also partially automated another part-time job of his, netting him an extra $1000-ish for 6-ish hours of actual work a month.)
Smart. In the same boat here!
Thanks for the tip! Ill give that a shot
I think to an extent that's true, but I don't think automation creates as many new jobs as it replaces. Take, say, a factory. If you automate 60 jobs, you only need a few people to maintain the machines and a few to maintain the code. It's a net loss in the jov environment, and once machines are able to maintain themselves physically and maybe even their codebases, then even those jobs will be lost too.
Amen. I had a co-worker who was fired from a tech job because he didn't know how to do it. I offered to loan him a book on it and he said "I don't do books".  In the end, he got what he deserved. 
  
Some people are not cut out for the industry they get into, and they drag their co-workers down.
There are definitely a lot of people who don‚Äôt make any additional effort; they just go to work, do what they were shown to do, and go home. Some because they are lazy, and some because that‚Äôs all they‚Äôre looking for in a job, or perhaps it‚Äôs just a personality trait (I know plenty of people who are more ambitious then I am)! Life opportunities also affect the way we think about our own abilities; I know plenty of people who think they are only capable of a doing a ‚Äòbasic‚Äô office job (because that‚Äôs what they have always been told they are capable of), but who are definitely capable of excelling with the appropriate education and encouragement. Mostly women fall into this category, in my experience, because of ‚Äòsocial norms‚Äô.

However, there are definitely people who don‚Äôt have the ability; it‚Äôs something that I didn‚Äôt really start to appreciate until I was in my 20s, and did not grasp fully until my early 30s when I completed a degree in education (I‚Äôm in my 50s now). An example might be two administrative staff doing the same job; filing documents, following ‚Äòpaperwork‚Äô processes, entering data in Excel, etc. one of the two may only have the mental capacity to follow the instructions, whereas the other may see opportunities for refining the process, or even learn how to automate it, either taking the initiative themselves, or asking for training. I see these scenarios fairly frequently.

My wife is very good at spotting ‚Äòtalent‚Äô, particularly people who underestimate their own abilities; she is in a relatively high-level technology role in a government department, and half of her team were previously ‚Äònon-technical‚Äô. Given the opportunity and training, they have excelled in their new technical roles, bringing their expertise from other domains.

There are always some people who simply don‚Äôt have the ability, but there‚Äôs a place for everyone. I remember wondering, when I was a teenage apprentice, how the guy who swept the factory floor remained sane doing such a simple task all day every day. After a while, I learnt that he was very happy with his job; he did it well, and went home at the end of the day knowing that he ad fulfilled his duties.

One of the main problems in work-life is the people who have reached the limit of their ability, but think they are capable of more. They can be (literally) dangerous in the workplace, or can cause major problems with morale. Similarly, people who are prompted beyond their ability (and left in the role, rather than being ‚Äòmanaged out‚Äô); they can cause significant negative issues within a business. This is a common phenomenon known as the ‚ÄòPeter Principle‚Äô.
Thanks, I'm cured. Three years of job searching and 10 years getting two degrees and all I had to do was "just get a new job".  Of course, silly me and my retarded brain.
[deleted]
To be blunt: the company doesn‚Äôt give an F about your automation skills. OP already did it and implemented it. The company then was able to get rid of an entire position and save that money. They have no incentive to negotiate for a pay increase. They have won. Now hopefully some management are more empathetic and recognize OP‚Äôs talent and flora a small raise to keep them on, but again there‚Äôs no real hard reason for the corporation at large to negotiate with OP. It‚Äôs the hard truth.
All the businesses I‚Äôve worked for won‚Äôt give a raise unless you ask
Adding to this...

Brainstorm some other automation projects too. If you walk in with a list of ‚ÄúStuff I can do to save money‚Äù it‚Äôs a pretty strong bargaining position. You‚Äôve shown you can. They‚Äôve shown it has value to them. They‚Äôll look at that list and imagine the money they‚Äôll save. You just have to frame it as, ‚ÄúIf I‚Äôm offered substantially more to do this somewhere else, I don‚Äôt want to bail half-way through the project. As long as I‚Äôm fairly compensated it‚Äôll save both of us that pain.‚Äù Know how much it would cost to replace you and name that figure. If you put your recent accomplishment on your LinkedIn profile that will probably improve your argument. They‚Äôll understand that if they‚Äôre not competing for your talent they‚Äôll lose you.
Even though I agree with the principle to ask for a raise, if management is smart they will give him a reasonable raise (a few %, not 50%) and ask him in exchange to automate more.

Let's also not forget they can hire a temporary resource to automate a lot of processes as well so they can argue they don't need to give him 50% of the previous employee salary.

OP should keep this in mind when negotiating.
[deleted]
Remember that 50 percent of a worker's pay doesn't represent his or her full compensation package: most notably, benefits (as well as the taxes paid by the employer) add up to more than just an employee's salary. So, don't be shy about asking for *a lot* more money than you're making now.
Maybe before you negotiate, update your code with a cutting edge feature that will need regular/semi regular maintenance to continue working. Just saying, you have more leverage with "This fancy new system works as long as I regularly update it" than "This fancy new system will continue working for the foreseeable future whether or not i am here"
This is such a bizarre outlook. The vast majority of jobs are boring as fuck but people would much rather have them than have nothing.
Most people work to earn money. Hating yourself because your job is boring is like hating yourself because grocery shopping or brushing your teeth is boring. It's just something you need to do to get by.
Thank god you saved that person and now they're unemployed in the middle of a pandemic and economic meltdown!  At least they won't be bored while they starve and get evicted.
Believe it or not, standing in line at the food pantry is still boring during a global pandemic and economic recession. You're mistaking uncertainty for excitement.
hahaha
are you shaming them in your cv now? :)
That‚Äôs so fucked, I‚Äôm sorry that happened
A smart company would have given you a big promotion and said that improving workflows is now your job
Yep.  Try to get as much as you can now while you can.  Invest for the future, but make sure you have the necessities if automation happens exponentially
[deleted]
> Put it this way; if she doesn't want to do any other kind of job, it's still more civil for the company to offer and her to choose unemployment instead, than for the company to fire her.

How do you offer someone unemployment?  They cannot remain working for a company, so the only option is for her to be separated from the company.  To get unemployment (in general terms) you need to not be working, and not be dismissed due to cause.  If they said, "your job is eliminated" then she would be eligible for unemployment, but similarly would not need to say she was fired from a company in a future interview or on something like an SF87 background check, since those are asking about being fired "for cause".
The real answer here is that the company eliminated that job entirely and are saving the whole cost of employing that individual. They aren't going to replace them, they just wanted to save that money.
https://www.reddit.com/r/learnpython/comments/icpt8d/comment/g25687f?context=1
> Is it a bad thing to have elevator drivers? We're going to soon be in a future where hundreds of millions of people are going to be automated out of a job.

So what's the solution when everyone is out of work due to automation? Do we all go on welfare while the 1% enjoy owning everything?

> but there's going to have to be lots of artificial jobs

Okay, I guess that's one type of solution, but that's not feasible a capitalist society. Corporations are always going to have financial pressure to squeeze their workforce to be as small as possible.
> Is it a bad thing to have elevator drivers? 

Are you serious?  Yes.  It is a bad thing to have elevator drivers.  It is a bad thing to have unions that exist to have people forcibly pump gas for you in NJ and OR.  It's completely fucking astoundingly moronic to think that the solution for automating a job is to force society to re-implement jobs that have already been automated out 50 years ago.

If you want to be concerned with people losing their jobs to automation, then we should start looking at things like universal basic income or wealth distribution, not inventing useless jobs so that people can work 40 hours a week riding in a box.

> Companies rarely actually reward employees for excelling. 

Somtimes true, somtimes not

> Switching jobs is largely just a self-punishment 
False

> low stability

Demonstrably false

> stressful

Maybe, depend on the person

> looks bad on a resume

False.  That ideology died with elevator drivers.
It's not but that's cool. The "automation" is literally parsing the filename for the index data and looking it up in our database to pull the remaining info (like account holder name, etc). This is actually what is applied everywhere, the rest is only for my department's individual use case. 

In that use case, opencv is used to preprocess the documents to identify the bounding box region that the account number is is stored in (a 2 pixel black border boxed in the upper right hand of the docs) as well as a few other things. All the morphology steps are done with OpenCV like thresholding, opening/closing, etc. PIL is used because I use pytesseract's `image_to_text` function, and I also use PIL and popplar along with pdf2image to convert pdfs to multipage tiffs which work best in our imaging system. 

I mean, like I said, none of it is that complicated and really I just used available tutorials. Not like I was reading academic papers on computer vision...
[removed]
Yeah. Thing is, it's not bad to learn Chinese. If you want to do it and get better at your job, great!

But imagine doing your IT job and some colleague comes around and says, "Hey, if you learn Chinese you can do your job better, want me to help you?". You saying you're not interested in that is not an inherently bad thing or should make you look bad.

Same with programming on some data-entry job.
This sounds like a lot of non-english speaking european countries. Most decent jobs, especially in the service sector, expect at least a passing understanding of english. The ones who don't learn are relegated to shit jobs.
No, learning programming is easier than learning a new language,
No I would say it would be like telling everyone to learn to drive a car since the modern world has an expectation of it as a basic skill.
She wasn't talking about learning to code. No one was. I certainly never mentioned it. We're talking just basic computer skills. Word...excel...copy-paste files. Google things... She literally had a job that didn't involve a computer, pretty rare these days. The kind of job that only exists in local government, really.

Nah I'd never tell someone "learn to code". It's hard, to be honest, and definitely not for everyone.
If the woman was 55-60 then bitching about life and not doing anything else to enhance it is her fault.  Even if she didn't find "learning computers" to be interesting, there's a good chance she could do *something* with her life that was more productive than bitching about her lot for hours on end and then moving to a place where she is essentially proclaiming that she's going off to so she can die.
[her life after OP's program](https://www.youtube.com/watch?v=aUomVzVcNR0)
I mean, it sounds like OP started doing some work that wasn't assigned to them, and now somebody's losing their job because of it. So it's not collateral damage, it was a direct effect of someone overstepping their job title.
[deleted]
If you wrote it on company time, they could own the rights depending on your contract. I know someone who automated good chunks of his job at a state government job. Took his code with him and removed local copies, which broke a lot of their processes. They sued, he lost, and had to pay a lot of money for it. Not sure if there was jail or not anymore as it has been awhile. He also pretty much lost the ability to get a job in the local area. I've seen something similar on a DoD contract, and if do some digging you can find many more instances.
When you write code on company time by default it is their ownership not yours. 
So if they learn you deleted a piece of software even written by you for you they can definitely make make your life hell
This is what I would expect from a 60 year old excel vba consultant
[deleted]
It seems like that would be the easy solution. Especially if you know for a fact the ~only~ thing broken in your code is a logic bomb
[deleted]
How would anyone know if the file itself gets deleted?
There was a Forensic Files episode about this.  Season 8, episode 39.  The dude that did it ended up costing the company millions of dollars, and dozens of people were laid off as a result.  Interesting case.  Here's the wiki about [Omega Engineering.](https://en.wikipedia.org/wiki/Omega_Engineering)

Edit:  The guy also got like 3 years in federal prison.
Corporations are evil. This is not.

You shouldn't do it because of the legal implications, but let's not pretend like it's morally questionable when this company just threw a good employee out on the street in the middle of a pandemic to save costs the second they became expendable.
[deleted]
[deleted]
[deleted]
[deleted]
UBI is *a* solution.
it's government job to regulate this kind of stuff either way. Country decides what's better, job security or competitive edge. You can't easily fire people in some countries, but it also comes at a cost(one of which is, counter-intuitively, it makes it harder to find a job).
Evolve or struggle is a bullshit saying. 

Hypothetically, if everyone evolves and learns how to code, then you are out of luck too because your skill isn't special. 

Furthermore, people shouldn't be encouraged to join a profession because it leads to money. Do what you want to do or else be miserable for the rest of your life.
[deleted]
[deleted]
[deleted]
[deleted]
My point is that automation is not all good, it absolutely does harm low skilled workers. It's not a matter of "they should just get more skills then", because they are already going to be low paid in comparison to more skilled workers, and many do not have the aptitude or ability to re-train.

Cutting millions upon millions of people's source of income has disastrous effects for everyone.
Onlyfans
[deleted]
[deleted]
I mean, the fear of machine automation is always a concern and issue, but thats not what this discussion was about. Factory automation is an entirely different discussion.

We were talking about reducing office employees based on automating excel and basic computer work.
I remember back in the early 00's our company hired a "programmer". He accomplished literally *nothing* during the month he was employed by our company. I knew there was going to be a problem in the first couple days when he asked me how to change his desktop resolution. This was on Windows XP, which is trivially easy to do. Apparently, the guy took one of those N-week "learn to code" classes, so he knew a couple things about programming, but only within an extremely narrow set of tools. He was absolutely useless outside using the specific desktop he was "trained" on. The desktops in his training course were all preconfigured, so when he got to a desktop without those tools he was completely lost.

I had no part in his hiring, so I have no idea how he squeaked in. We had a manager who was terrible at interviewing, so I presume he got in that way. Our manager was so bad at hiring that he once sent an acceptance letter to the wrong candidate, so we ended up having to hire the guy. Thank the gods he was a local hire, so there was no relocation involved. He actually turned out okay for the position, but he griped a few times that he wanted a development position -- not a sysadmin position. Nobody had the heart to tell him he was a hiring mistake.
Yeah, with all of your example of the admins. It almost sounds like a nature v. nurture and I wonder how that plays a role. I have friends who were just told they were great, and also a friend who were constantly told they wouldn't accomplish much. 

Its been interesting to see them grow and develop. The person who was told they wouldn't accomplish much recently got his Ph.d in physics and is supposed to start with one of the NASA contractors soon. He always says he wouldn't have tried hard if people didn't tell him he couldn't do it. He commonly jokes that he would be working at the gas station in our hometown if he didn't get told by teachers he wouldn't amount to anything. 

Then the interesting one was the friend who was just told he was great and never pushed for more. He ended up getting kicked out of college and working at a sandwich shop for a year or two then ended up finishing school in some simple major. Now he's doing some kind of basic entry job and just complains that he doesn't get paid enough, but doesn't ever work to learn or get certificates or anything.

It seems to be a how you view a challenge. Im on the side of if someone tells me I can't do it I will work my ass off until I have mastered it. Like all of my greatest accomplishments have been due in part to spite. But I also love learning new things and gaining new skills. I think interest plays a huge role too though. Like certain people love working in finance, but someone who is interested in biology would potentially hate it.

I think the most successful ones are the people who just like learning and doing better for themselves. Improving the workplace or their life is just a byproduct of that.
You literally came to a sub about learning how to program. Then came to  complain about how much someone else gets paid that you have no idea of their background to pull the woe is me "someone makes more than me".

Thats not a positive attitude to have. If you want to make more money this sub is where to start and everyone here is willing to help. Just come with wanting to do better not a woe is me post.
I think they're right if that \*is\* your job. With most jobs you save/make a company far more than they pay you - that's capitalism in action. Process/system improvement is absolutely a core example of this - I know a guy who saved a company 5 million in a year, on 40k a year because he worked out how to basically cut out a whole department without any problems.

However, if you've provided value far above what was expected/something that isn't your role, that deserves a pay rise for doing something outside your stated terms - that's also capitalism in action. It sounds as though systems/process improvement wasn't OP's original role, so they've gone above and beyond.
Automate them out of a job next.
Hell no.  Know your value.  Ask your current company to match that value (ask for more, but settle for match).  If your current company doesn't then find one that does.
Most companies I've worked at would say the same thing. Pay negotiations are also an EOFY thing, not just something you can do off the cuff. But I'm not in the US. US seems more normal to negotiate pay at any point?
> When it came to review time I was told "That's your job".

it is, but that does not contradict the idea of bonuses, promotions and salary raises

moronic management avoiding to say "no, you're not getting a raise, even if you provided more value" in a very moronic way

> not every company values people unfortunately

companies are people, this is always the case of particular moronic managers.
Keep the job description of any position you apply to.

A situation like this is where you pull out the job description of the position you got and ask for where "improve business processes, saving the company money" is listed. Because if I am in department X and I do something that allows them to save money *upstream* in department Y, that's going above and beyond.

Now if you are in management and improving operational efficiency is one of the requirements, your only argument is that you saved them more money than anybody else.
Yep,  saved over $200,000 one year and was told the same,  it‚Äôs your job.
I think they're right if that \*is\* your job. With most jobs you save/make a company far more than they pay you - that's capitalism in action. Process/system improvement is absolutely a core example of this - I know a guy who saved a company 5 million in a year, on 40k a year because he worked out how to basically cut out a whole department without any problems.

However, if you've provided value far above what was expected/something that isn't your role, that deserves a pay rise for doing something outside your stated terms - that's also capitalism in action. It sounds as though systems/process improvement wasn't OP's original role, so they've gone above and beyond.
Nonsense.

Companies want to keep and promote talent. 

Talented people are extremely hard to find.

They'll pay OP a lot to keep.
While I do broadly agree - I'd be worried about floating the 'I might leave unless...' option. Depending on the frame of mind of the manager it may come across as trying to strong arm them - some will just reject it out of principle (the caveat to this is if it the job is so rubbish/problematic that it really doesn't matter if you leave) and might make things difficult anyway. Having someone who is know to be 'looking to jump' never sits well with anyone. 

I'd definitely suggest coming prepared with a list of stuff that can save money, or at least some broader plans. It's best not bringing anything concrete for two reasons: firstly they might disagree with stuff (which can lead to the conversation veering off track to address what you've suggested) or more cynically they might just steal your ideas and let you go.
Can't get it if you don't ask.

Plus, if you leave and they don't have someone to maintain the code and it breaks, they are back to square one.
I mean his goal is to leave anyway. You only make a move like this when the downside isn't really a downside.
though be careful not to step into the realm of industrial sabotage.
There was a long thread about people doing this not too long ago, and I'm pretty sure the consensus was that this is an idiotic move. You're only hurting yourself by burning bridges.
.
.
In the game of capitalism money is the only value
When I said "to offer" I meant "to offer any other kind of job inside the company". When I said "unemployment" I meant "the state of having no job" rather than "payments for the unemployed". The choice would be her choice to reject retraining and have no job, compared to the company forcing no-job upon her without her having any say in the matter at all.

I'm sure some companies would do that cruelly to mean "she quit, so she wasn't made redundant, so she doesn't deserve unemployment payouts". I don't support that.
Instead of inventing useless jobs to keep people busy, we could also look for jobs that are in need of more workers that are not useless - so much to be done especially in the social sector, it seems crazy that one would actually consider going back to fuel pump assistants.
That still seems to be quite generic doesn't say a lot about what were the specific problems and how it was solved. Since this is r/learnpython and NOT a sub like /r/tifu or AITA a minimal working example that illustrates the problem and your solution would have been more appropriate and newbies here might have actually learned something instead of this endless circlejerking going on in this thread now. In fact, even this comment you wrote would be better than that clickbaity shit you posted here.
What?  

You said 

>anything that the experience not the result cant be easily replaced.

Everything can be replaced.  Art.  Music.  And eventually we'll have humanoid robots.
It *is* an inherently bad thing.  If you drove an elevator before it was automated and it was becoming well known that your vocation was going away, and you rejected it with the ideas that either a) it wouldn't go away or b) you could go elsewhere to places that won't upgrade their elevators, then you're just stupid and deserve what happens.  Certainly the woman in question doesn't have to learn python or programming, but if your only aspiration in life is data entry and you aren't going to learn a new skill (and if we're being fair, it's now an assumption from a single comment OP made), then you shouldn't be surprised when you find out that there are fewer and fewer data entry jobs and you're ending up on your ass.

Here's [another example](https://www.reddit.com/r/learnpython/comments/icpt8d/i_programmed_someone_out_of_a_job_and_now_i_feel/g24ikev/) that's even more clear about it.
yeah, let's play spot the American...
[deleted]
hahahahahahaha! Mean AF.
What a wonderful clip to share
Wow, someone is doing extra work. How awful. Everyone should just do the bare minimum.
So everyone should stay within the confines of their own little compartment and not try to achieve more or take up other interests? Tastes like communism.
/s, joking that all the risk can be avoided by having the malicious code delete itself.
I understand. This is very shady.
DoD got screwed in the 80s and 90s with early development contracts where contractors kept data rights, so every follow-on for maintenance or feature enhancement had to go through the original company at exorbitant cost (nevermind unique code constructs and weirdness).

So it's been hammered for decades to have IS contracts require data rights and open architecture design.  Essentially every modern DoD IS contract will have them.
what if I don't work for a software company? Like I'm at a simple desk job managing tons of data that I have to manually input, maybe using Excel. Nothing programming related, it could be economy, law, journalism, anything... is that piece of code still theirs if I don't have any contract obligating me to automatically give up my intellectual property? Can I program the software to self destruct without a code of mine? Or lock it behind a password to avoid being fired?
Hypothetically speaking, not knowing anything more about it than what OP wrote... not give them the admin password.
 
Granted that only would have kept him being caught for this particular scenario.

 Would he have eventually gotten caught anyway?  Again just from what is written here. It sounds like this has been going on for at least a few years. So, probably not
Use faulty allocations based on time spans. I want to generate the sales data for 8/19/2020. Well, that means I need to preallocate a list of 2,000, and skip to the appropriate date in the list. So, I start on July 10, 2017, which means I can generate data for every day between the start and dec 31 2022. After that date, the date doesn't fall on the list anymore, and causes an out of bounds error. Super easy to extend and set a fail date, you do not need to include an actual date in the code (so nothing obvious), and the code could be defensible as you just being a shitty coder.
[deleted]
Any number of ways. Some ideas off the top of my head:

* Someone spotting it before it goes off. An experienced dev seeing something like `os.system` will immediately raise red flags.
* A bug in your "bomb" code that results in an error rather than the intended deletion. For example, the user running the script not having write permissions to the script itself.
* File or filesystem backups allowing a rewind after the "bomb" goes off.
* Someone copied the file elsewhere.
They'd pull it from last night's backup because they want to continue using it.

Then it would vanish again.

Then they'd ask around if someone deleted it, when everyone said no, they'd instantly be suspicious, restore it again and be watching closely. Any geek who has been around a few years has heard of a Dead Man's Switch, and anyone who knew OP wrote the program, tried to get more money for it, then couldn't and left the company, would be smelling a rat.
The context of the question was "ask for a promotion and if they don't give it to you, mess their tech up". The fact the company is crap doesn't excuse this being petty, vengeful, and pointlessly destructive.

Without context, it's even clearer: putting booby traps or self destruct stuff in your code is dishonest, unprofessional, and immoral. Thus, evil.


Also as an aside... Evil requires maleficent intent. Corporations hurting people is not usually the *point* of their crappy behavior. The point is to make them money, and they just happen to forget about externalities. Most bad companies aren't really evil, just amoral and mind-blowingly greedy.
If the same thing could be done in construction, the moral implications would be clear.
In the US, sabotage is a crime (a federal class B felony, specifically): https://apps.leg.wa.gov/Rcw/default.aspx?cite=9.05.060. That means you may be arrested and prosecuted by the *government* if you do it. In addition, your employer may also take you to civil court for damages. Other countries will have other systems.

Disclaimer: I am not a lawyer, just an experienced developer.
Not a lawyer, but in the UK making a computer do something that you're not authorised to make it do is a crime under the Computer Misuse Act, particularly [Section 3](https://www.legislation.gov.uk/ukpga/1990/18/section/3) which says "*a person is guilty of an offense if [...] he does any unauthorised act in relation to a computer [..] intending to impair the operation of any program*"

Your employment contract very likely says that any work done on company equipment is company property.

The delete would only happen if you didn't negotiate more money, and presumably left for another job, so that would be damage, which you made happen, and you can't reasonably say you had authorization to cause that damage.

If the program was a 2-bit helper which nobody used, probably they wouldn't care. If it was important enough that the company depended on it, and had to hire another data entry employee or a consultant for months to rewrite it, they'd probably be quite annoyed and willing to pursue OP about it.
Is it legal to NOT pay the contractor?

Put it in the contract. You could call it a "cloud".
Disabling a software component that the person refuses to pay for isn't illegal, no. It would be illegal if he purposefully deceived someone acting in good faith or did actual damage to them outside of just the act of no longer helping them.
Palps: *I will make it legal*
Haha yeah like the duck; malware autocorrected.
My great-aunt was in charge of administering a large federal grant to retrain loggers in Oregon after the timber industry took a gigantic shit.

It was a miserable failure; people just didn't want to learn how to do anything else. Similar to the coal mining towns in West Virginia, a lot of them thought "Well, a turnaround is just around the corner, and pretty soon they'll need loggers again. Why should I waste my time with this fancy book-learnin' when I'll be back in the woods in five years?"

Narrator: They were not back in the woods in five years.
Ok, true - but guillotining the rich is much more challenging to implement, effective though it may be.
A bullshit saying mirrored from Nature itself.

I'm not saying everyone needs to code, but there are certainly professions that will be around for the longer term.

Completely agree with your last paragraph, but the reality is that many don't have the luxury of doing what the love, like or can even stand.
But eliminating a position isn't the same thing as getting her fired. It sounds like it was a "bullshit job", but now they were saving money from not needing to do that work, they could have her doing something more productive. Instead they fired her. The company wouldn't be any more out of pocket by not firing her as they were already employing her, why not put her to use?
I'm not sure why you seem to be fixated on truck drivers and ML when I've clearly pointed out that there are many roles with longevity, aside from coding.

Your disservice assumes that truck drivers of the average age do not have the capability or willingness to transition to other roles.

Poor health (which is an assumption) does not equal a lack of intelligence, or critical thinking.
I apologize for being rash. I felt attacked by your comment, and I have worked in DX for a while now. I do what I do because I want people to reach their potential. A job should be creative, challenging and empowering, which is the opposite of menial tasks.

The expectation is that there will be short term job losses and long-term gains. I refer to the OECD strategy paper, [Preparing for the changing nature of work in the digital era](https://www.oecd.org/going-digital/changing-nature-of-work-in-the-digital-era.pdf) (PDF), which states that 40% of new jobs between 2006-2016 were "highly digital" (think RPA, Data science, etc.). DX also creates new jobs indirectly, due to lower prices and higher productivity.

Google _digital transformation job loss_ and you'll get opinions from a slew of experts, mostly debunking the myth. But society must prepare itself, and according to the paper USA is coming in last.
Do you have evidence to support that? If you look at the computer age in general - which this automation is just a natural progression of, people have been re-skilling, re-training and generally doing more highly skilled jobs.
Re: rule 4: So stop making snotty and unfounded accusations.
Let's make all the truck drivers programmers!
I refer to the OECD [Changing nature of work in the digital era](https://www.oecd.org/going-digital/changing-nature-of-work-in-the-digital-era.pdf) (PDF), we can expect short term job losses and long-term gains. Between 2006 and 2016 40% of new jobs were "highly digital" (e.g. RPA, data science, admin).

The type of work we do will change, that's not to say there won't be work. This has happened before and will happen again. It's a change we can prepare for.

Google _digital transformation job loss_ and read up on it.
Galileo knew the science of the earth and the space LONG before it became publicly acceptable. As a result of many factors, including the fact that his ideas made feel uncomfortable, his ideas were rejected. If we stopped innovating because it makes people uncomfortable, we would stop innovating completely. 

More examples:

Charles Darwin - he was looking for proof of the stories in the Bible when he discovered evolution

Mozart‚Äôs music was disliked until a couple decades after he died, then they had finally realized his genius which changed the way operas were performed forever

There‚Äôs so many more, but just like we look back at the people of the past thinking ‚Äúhow could they possibly have thought...‚Äù people will look back on us in the same light.

Dare to be different!
Going to different shops to figure out which products were in a specific location. Made it so that he only needed to redo it when things actually changed.
Ok, but again, if you can automate any department then beyond one or a few people to maintain code and a few people to do anything physical like scanning documents, there will be a net loss in jobs. I used a factory as an easy illustration, but equally if you automate data entry then you conceivably could turn a 10 person department into a 1 or 2 person department.
Well, telling someone "just get a job" is stupid when you have no idea whether that's exactly what they're working on. 

I can be salty knowing that there are people making more than me when they are far less qualified, aside for the basis that they're luckier.
>With most jobs you save/make a company far more than they pay you - that's capitalism in action

And its not as unfair as it seems. Everyone thinks they could make it on their own, but few can.

Getting a salary is so easy. Running a business is extremely difficult.

Most people won't want to.
I like this answer. I‚Äôve been motivated.
It depends, is this OP's one off bit of good form or is it an ongoing story of success?  

If it is the former they have no reason to retain.  If it is the latter, it depends on the company, a lot of companies let talent slip through their fingers.
Good point with the strong arming. It probably depends on the relationship you have with your manager. I have a pretty straightforward relationship with mine. I‚Äôve been up front about what I want from my career in the long run. I‚Äôm happy to and love to contribute where I am. But I need to be able to grow. My manager would rather I be up front about it than put in my notice out of the blue. I‚Äôm a big believer in having an open and honest, on-going dialogue. And if you have that then it‚Äôs not strong arming. It‚Äôs making sure you‚Äôre all on the same page.

I‚Äôve had managers who would hate this though. It definitely depends.
[deleted]
Sure, when we do it it's Industrial Sabotage.

When they do it, it's Planned Obsolescence.
Yeah, I'm surprised this suggestion got so many upvotes. It's such a dick move that if I found out the person would be immediately fired.
Ah, I hear what you are saying.  In general terms, I would agree with you that a person who was otherwise a good employee should be offered the ability to do something else if it reasonably exists and the person wants to take it.  That said I can understand where a company might not have other open jobs or the person might clearly be unable or unwilling to take a different role.  If it's a 50,000 person company, then they probably could find something for you to do.  If it's a 5 person company... maybe not.

Regarding your last statement, there is the concept in the US of constructive dismissal.  E.g. if you're a data entry worker and they say, "you're job as a data entry worker has been cut, but we're willing to offer you $7.50 an hour as a janitor" then you can decline and still get unemployment.  In this case if the company tried to battle that, the employee would (should) be found to be constructively dismissed.  A counter example would be that you're a programmer who works in language X and project Y, and that project gets cut.  The company says, "we're dissolving the project Y team, but offering you a position at the same rate on the project Z team that uses language X, or something reasonably close to it".  If you were like, "nah I only wanted to work on the other project" or "I only will write in Python, I refuse to switch to Java" then they could boot you and would be unlikely to have the unemployment hit, since the new job offer was substantially similar to the old one.
Yeah, yeah, yeah, let's all laugh at the stupid American...

It was certainly true when I lived in Poland, but you're right, I'm probably overgeneralizing, I doubt Italy, Germany or France are like that. Many are though.
He might speak 6 but I bet it would still be harder for him to learn a 7th (that is substantially different from those he already knows) than to learn programming.
I don‚Äôt think you know what communism means.
For sure. I've never worked on or with one that didn't give all data and architecture rights to the government. I just knew someone who was arrogant enough to think he could try and hold them hostage and get paid for it. He was quite wrong.
I don't know much about US contracts and especially non CS ones. But here in the EU every job I've had clearly states in the contract that they own anything I do on company time or using company material. 
So check your contract make sure you're safe before doing something like this. 
I would never advise someone to do this because if you have the skills you're always going to have a job as a programmer and you should strive to become a better programmer and not protect your position with shenanigans like this. 
But that's just my two cents man, you do you.
[deleted]
What if you obfuscated it beforehand and packaged it as an exe or some method of protecting the source code?
[deleted]
>The context of the question was "ask for a promotion and if they don't give it to you, mess their tech up". The fact the company is crap doesn't excuse this being petty, vengeful, and pointlessly destructive.

If you make the company a huge chunk of money with your labor and knowledge, it's perfectly reasonable to expect to be compensated in accordance with that. It's your tech, not theirs.

What you should do is not agree to put the technology in place in the first place without being guaranteed the raise.

>Also as an aside... Evil requires maleficent intent.

Says who? You can absolutely be evil through inaction or disregard.
That's obviously different since software is intellectual property. Outside of very rare specific examples, bad software doesn't harm anyone in any real way. Negligent software doesn't kill or injure anyone.
[deleted]
It would also be "illegal" (not really illegal, but monetarily liable for) if the software was built during works hours they logged with the employer.
[deleted]
What's with people on the left and needing to use only the most extreme solutions? Universal programs aren't the only way to solve wealth distribution problems
Do you freeze to death when it gets cold out, the way Nature intended? Or do you give Nature the finger and thrown another log on the fire?

The entire point of society is to not suffer under the whims and vagaries of nature.
>It sounds like it was a "bullshit job"

Aren't pretty much all our jobs?
Have you read *Player Piano* by Vonnegut?
Mozart was popular during his lifetime.
[deleted]
How do you know how qualified these people i was referring to were? Seems like you're making assumptions.

Also, you have two degrees. What were they in?
Yes and no.   


The question is how big the lever is.   


The idea of employing someone is that they provide more value than what you pay them. Obviously.   


But if you're earning a company millions, and you're getting $100k a year, that lever is potentially a little bit big. There's a difference between getting 2-4x what you pay an employee back (good rate) and getting 10+x what you are paying an employee back, in which case you are undervaluing them. And yes, if all we think of is stock prices and rub our nipples at pure capitalism, that might seem fine. But in terms of a functioning world and society, it is not.
To see if they'll give him the raise and change his mind.
That‚Äôs... pretty depressing
Hey, it's capitalism. Losers lose and winners sabotage for the all mighty dollar.
If I saw this I would question the persons programming skill.

You prove something is possible but write buggy code, thanks I‚Äôll hire someone who can execute your idea but produce reliable robust code that I can trust my data with.

Edit 
I don‚Äôt mean I would punish someone learning to code and comes up with a great idea.  I‚Äôd help them get better and contribute more. But purposefully write bad code, nope.
I'm an American, for what it's worth, but spend quite a bit of time with immigrants. it's kind of crazy how much folks here take for granted that near everyone speaks their native tongue. There's so much pushback from teaching  even Spanish in school. Meanwhile, near everyone I've met from elsewhere had multiple years of English in school.
I don't think you can infer that from my one sentence snarky comment.  And in terms of 'what it means', that is a foolish and a naive way to frame a complex concept such as communism in a way that be can distilled down to a simple definition neat for a dictionary.    

But if I must a humor a stranger on the internet, I'm referring to the above commentor's suggestion that we should abide by Marxian class theory and stay in our assigned class hierarchy and not try to better ourselves or we disrupt the goals of the company we work for.
I'm a student and it was simple curiosity. But thank you for the warning, I'll definitely remember it.
[deleted]
There is no way to be 100% sure it's untraceable. Code can (theoretically) be reverse-engineered, anti-deletion safeguards may keep it from working right, backups may make it irrelevant, company processes and proper management may see it coming from a distance... There are still many things that can go wrong where you end up holding the bag.

In the end, it's a risk/reward calculation. The OP of this bad idea said "ask for a raise and if they don't give it to you, then do this thing". A developer who does this in response to not getting a raise stands to *gain nothing* from successful sabotage, but stands to *lose everything* from it going wrong.

-----

Side note: if you want to dive deep into code obfuscation and hiding behavior in compiled executables, Python is not the right language for that. You're probably looking for C/C++ or something else that compiles down to optimized OS bytecode.
Just delete some parentheses on the way out.
Sounds like we're operating under different definitions of evil. :)

As far as expecting recompense according to the company's income, you're absolutely right, but... Does that justify purely destructive vengeance? Self-destructing code does not rectify injustices. It just causes harm. Is that not an evil behavior masquerading as "justice"?
[deleted]
They wanted to use the software before they paid. He didn't want to give them the code before they paid, because they had been a little shady in the past.
They're talking about contractors so that rule doesn't apply. They're technically working for themselves or for a different company than a customer at that point.
Yes, there also exists packages that scan for code like that. However to the naked eye in millions of pieces of code in a repo, binary payloads can easily be overlooked.
My job's not bullshit.  Sounds like projection to me.
His style of opera wasn‚Äôt adopted until a few decades after, which was what my post said
The company was paying him to give them the list of products. Before, he had to check each of the products in each of the stores and make a list of them, every time the request came in. Now, they're still paying him, but he only needs to redo the list around once a month on average.
I'm not going to disagree because I am self employed. I hated the idea of being able to save hundreds of thousands of hours in my work, but only being paid for potentially 1 hour.

However, where people go wrong, is that they think that because they can add so much value in their job, that they would be able to add the same value if self employed. This is not necessarily the case.

A business, particularly a large one, is a highly effective machine, that has grown through iteration to a profitable point.

You usually can't just set up shop and expect to earn the same. You need sales,  marketing, account managers, accountants, lawyers etc etc. Like I said, it's really difficult to be all those things for your self. You end spending way too much time on things that are not your core business.

Of course, going small, you can work as a consultant, which is probably the best for most people. Get hired in for what you are really worth, not pr. hour. You still need to market yourself though.
[deleted]
[deleted]
"What's classy if you're rich but trashy if you're poor? Being bilingual"

IMHO, immigrants can be more American than most Americans. I have a huge amount of respect for anyone who can up and start a new life somewhere completely foreign. That's what America is all about, right?

Anyway, I agree 100% with you. High five!
Thanks for your reply, just like you made a snarky one-sentence comment, I decided to go off that and make a snarky little comment myself ;)

But your elaboration to me only seems to validate that your take on Marxism might be...different from the mainstream interpretations, to say the least? I don‚Äôt know anyone whose takeaway from his work is that everyone should ‚Äòstay in their assigned class‚Äô. It‚Äôs the opposite, if anything.
[deleted]
>Sounds like we're operating under different definitions of evil. :)

Evil

"profoundly immoral and wicked."

I guess you can make up your own personal definition if you want but that's not the one anyone else is using.
When you bring value to a company and they in turn pay you your fair share of the returns from your labor, no one loses.

When a company eliminates an employee someone does.

I'm not saying that specific action is evil, but corporations in general are. They exploit their workers and give less than they take in most instances.
[deleted]
Does it? What do you do?
Sure, 100%. Economy of scale makes an enormous difference in what any single person can produce, especially simply because it affords a degree of specialisation in each area almost impossible to achieve alone.
It was data entry. The person who lost their job might only be making $20k/yr.
Professional libraries rarely get depreciated. Specific features or calls may, but normally that would happen over long periods of time. Also unless there is a security bug, there is no reason to upgrade the library.  

Companies don‚Äôt upgrade libraries because there is a new version, they upgrade because there is a new feature they need or there is a problem that impacts them in the existing version.
[deleted]
"Immoral" means you're deliberately doing things against morals. Doing things regardless of whether they are moral or not is "amoral". As far as "wicked"... That again conjures an image of a witch being deliberately mean, which isn't really a corporation. As in, the "wicked" response to "you're hurting our water supply" is "good!" or "that's funny" or "muhahaha", whereas corporations' response is "man, that really sucks but... my bank account is going up..." It's just not quite the same. 

You might be right about me making up my own definition, though. Regardless, I'm not trying to excuse corporations and their actions. Their rapacious quarterly profit-chasing is a scourge on humanity.
>:)

:)
its stupid simple to setup gitlab runners and ci/cd running bandit, but you are likely correct.
It's almost as if specialization of labor for greater production is the definition of capitalistic enterprise.
[deleted]
[deleted]
>"Immoral" means you're deliberately doing things against morals.

Again, no it does not. That's another made up definition.

Immoral:

"not conforming to accepted standards of morality."

Corporations are immoral. Many of their actions are evil.
/u/AlSweigart should I continue with the first edition which I have in udemy, or I should just go straight with this? . Thank you!
Hey guys, I thought I might share something cool with you all!
As some of you may know, the walrus operator (`:=`) was recently added to python in 3.8.

Well, one of the great things this operator allows us to do now is parse user input very nicely now, and we no longer have to break from while loops to do this!
Here is an example based on the Rock Paper Scissors script from AtBS2!

```
While user_choice := input("(r)ock, (p)aper, or (s)cissors? ") not in "rpsq":
...
```

Happy New Years everyone!


Edit: sorry for the poor formatting! I'm on mobile right now.
Happy new year to you Al!!! From Japan with love!
Al you are the content creator that really drive people to start programming! Keep up the good work!
Hi Al,

I‚Äôm super stoked that the professor for our Python class has chosen to teach us with your book at our university this semester. I will be sure to message him about the update on the second edition in case he does not know.

I love going through your book and your videos. You explain everything perfectly. 

Thank you so much for creating such a wonderful resource for learning Python. 

You are an amazing human being.

Happy new year!!!
Happy new year!
 I just bought the 2nd edition hard copy 2 days ago. This is awesome though. You‚Äôre awesome! Happy New Year!!!
Happy New Year and thank you so much for your wonderful content. 

I recommend this to everyone with an interest in learning programming.
/u/AlSweigart whilst you get the free PDF included from No Starch Express, they unfortunately also want $60 to post to Australia!

Today I had to buy from Amazon because of this, which is a real shame because the PDF would have been awesome.  But I'm glad to support you, either way.  Thank you for the hard work and support of the community.
That‚Äôs awesome, thank you
You're Amazing! Thank you so much for all you've done and continue to do!!!
THis is great looking forward to the udemy video course
Is this a downloadable version?  How do you access it?
Hello sir,
I am learning python from your book and really love it. It's so easy to under. 
But I'm stuck at 'for' loop .(I don't have any CS background).
What do you suggest me for it? Should I look anywhere else..?
I like your way of explaining that's why I want to know from you if you can suggest something that'll help me to learn loops better.
Thank you again.
Hey Al, I am going through your Udemy course right now.
Outstanding, happy New Year to you and thank you for this gift!
Thank you! Happy New Year!
Thank you for your hard work Al.  Your 1st edition got me started with Python.  Can't wait to dive into the 2nd edition.
I just finished the udemy course this morning, this came just in time :) thanks for all your work!

Edit: I‚Äôm not a cat person but I‚Äôll make an exception, please tell Zophie I said hi!
Awesome. This is my next read.
Thank you! Happy new year!
That was some fast work between the official and website releases! Nice work, Al!
Thank you!
got your 2nd edition hard copy from barnes and noble, great work!
Interesting. No changes to the chapter on Excel?  I have a problem that I have been trying to solve purely with Excel code. Maybe adding Python to the mix will help.

https://stackoverflow.com/questions/59508181/how-to-move-copy-based-on-excel-list
Aw man I'm still trying to finish the first edition lol thanks Al!
Way to go Al. I am fan and love the way you share your hard work for free. More power to you and Happy New Year !!
This is the best thing I have seen so far this year.
P.S. your link to No Starch Press isn't working for me.

>You can also buy a print book from the publisher, **No Starch Press, and receive PDF/Kindle/epub ebooks for free with purchase** (something you won't get from Amazon).

Changing the href attribute to [https://nostarch.com/automatestuff2](https://nostarch.com/automatestuff2) worked for me. Might be confusing for some.
/u/AlSweigart for the additional practice projects in each chapter, do you have a specific place to get the codes to following (or is that no the point)?

I search online for them and sometimes peoples code involves things we haven't learnt in the book so far, or do an additional method ' because it's easier'.

Learning so much from you, thanks a bunch man!
Just curious what kind of new material is in here?
Is there a changelog available for those who already did the first edition?
Hi /u/AlSweigart you are awesome man. Your book 'Making games with Python and Pygame' turned me towards Python and CS, I owe you that.
Huzzah!! I got through most of the first edition this summer and really enjoyed it. Built my first computer this fall and have been waiting for this ever since! Very excited to go through it (and donate back some money at a later date when I can afford it, hopefully after using skills I started learning through the book!)
Herooooo

Thanks for this - I worked through the first edition and it was great to see a practical approach to programming!

Now I'm working through a book on Flask :D
/u/AlSweigart Thanks for the book! Is there a PDF version?
Happy new year all, from Vietnam with luv
Happy new year man.
I just bought the book... Couldn't you have announced this a couple of days before?üòÖüò≠
Thank you, Mr. Sweigart.  You and Don Lancaster are both so cool for making your books free the world.
Looking forward to read this book
Thank you for this
Thank you!!
I heard a lot about that book, but never got a chance to look into it before. I got a very mixed impression. The book shows techniques which can make you to do real useful staff  with Python. On other hand it doesn'rt teach you to program at all and encourage to use really bad coding style (sequential programming). Like an [example](https://automatetheboringstuff.com/2e/chapter6/) below

    # English to Pig Latin
    print('Enter the English message to translate into Pig Latin:')
    message = input()
    
    VOWELS = ('a', 'e', 'i', 'o', 'u', 'y')
    
    pigLatin = [] # A list of the words in Pig Latin.
    for word in message.split():
        # Separate the non-letters at the start of this word:
        prefixNonLetters = ''
        while len(word) > 0 and not word[0].isalpha():
    	prefixNonLetters += word[0]
    	word = word[1:]
        if len(word) == 0:
    	pigLatin.append(prefixNonLetters)
    	continue
    
        # Separate the non-letters at the end of this word:
        suffixNonLetters = ''
        while not word[-1].isalpha():
    	suffixNonLetters += word[-1]
    	word = word[:-1]
    
        # Remember if the word was in uppercase or title case.
        wasUpper = word.isupper()
        wasTitle = word.istitle()
    
        word = word.lower() # Make the word lowercase for translation.
    
        # Separate the consonants at the start of this word:
        prefixConsonants = ''
        while len(word) > 0 and not word[0] in VOWELS:
    	prefixConsonants += word[0]
    	word = word[1:]
    
        # Add the Pig Latin ending to the word:
        if prefixConsonants != '':
    	word += prefixConsonants + 'ay'
        else:
    	word += 'yay'
    
        # Set the word back to uppercase or title case:
        if wasUpper:
    	word = word.upper()
        if wasTitle:
    	word = word.title()
    
        # Add the non-letters back to the start or end of the word.
        pigLatin.append(prefixNonLetters + word + suffixNonLetters)
    
    # Join all the words back together into a single string:
    print(' '.join(pigLatin))

Now I kind of understand why many questions posted in that subreddit have that style of coding.

(I expect to be downvoted, Tnx)
u/AlSweigart In the blog article (first link), the link to  [Project: Opening All Search Results](https://automatetheboringstuff.com/2e/chapter11/#calibre_link-392)  opens up to Chapter 11.
Is this better than Learn Python 3 The Hard Way?
/u/AlSweigart, first of all, thank you very much for the content (sorry for any mistakes, English is not my first language). I don't have any experience at all with programming, but I work at the local administration and we deal with a lot of laws and regulations.
Do you think it's possible to use Automate the Boring Stuff with Python to search those laws and regulations for keywords and compile some sort of list and the references (articles, sections, etc) to easily access them later?
I started reading 3e Automate the Boring Stuff two weeks ago without having a clue that it was released only a week before that, what perfect timing!
–°–ø–∞—Å–∏–±–æ –∏ —Å –ù–∞—Å—Ç—É–ø–∞—é—â–∏–º –ù–æ–≤—ã–º –ì–æ–¥–æ–º –∏–∑ –†–æ—Å—Å–∏–∏!
Happy New Year!
Can you provide link for udemy course
Really, either. I'd say continue with the 1st edition since you're working through the udemy course, which covers the 1st edition right now (I'll update it later in 2020). You can then just browse the new sections listed in that blog post to find the new content.
This is awesome!
Hmm I'd be keen to know what people think about this assignment operator.

  


In your example above I feel it makes the code less readable.
The best new year gift one could have.
Either website or purchase a Pdf/epub 

Always try to purchase from an official source if you want to support Al in his work and contributions to the python community
I have no cs or programming background either, what is it you're stuck on?
I've fixed it. Thanks!
I believe the reason there's parts that you haven't been taught is to avoid readers just "reading" and copying chunks they already know into a new order. Learning to find specific guides online is one of the differences between a great programmer and someone that can't even write a program if their life depended on it, asuming both read the books.
Hey, thanks. I really appreciate hearing it. Heh, I especially appreciate it because Making Games with Python & Pygame was always sort of the runt of the books I wrote: it was the second book I wrote and No Starch hasn't published a new edition of it like my other books, so the writing is probably a bit amateurish. It makes me a bit giddy to know that even that book turned someone on to programming, so thanks! :)
What's bad about the style in that code?

(This is going to be about camelCase, isn't it? :) )
Fixed it. Thanks!
Yes. The specifics depend on where the data is stored, but Automate is written for exactly this kind of purpose. You can use the web scraping chapter to write scripts to pull down the data and the chapters on files to organize it into some system that you can search.
https://inventwithpython.com/automateudemy
You're awesome Al, thanks for the 2nd edition.  You know you're like a celebrity on this sub, don't you?
Is there a jan 2020 free code for udemy?
Yo Al, just wanted to tell you you're awesome.
I think that was one of the reasons the walrus operator stayed out of python for so long, while being I n a majority of other languages. It isn't as easy to read as, say a `while True: ... break`, however you can still tell what is going on if you understand the walrus operator; it reduces just like list comprehension.
 Guido is out of Python, `:=` is in
For loop and making own functions
I implemented about all the games in that book. And I still keep the snake game (with more levels added).

I was actually learning Python for months (as a subject) then and most of my learning has been quite boring. I never felt to become a programmer by doing this. Making games with Python just turned me towards it. I would argue if some sort of visual results are present (unlike plain CLI), learning to program can be quite rememberable. I would love to get a more mature book on that :)
* no structure 
* no functional (or other) decomposition 

It is like you start fresh new in some sport and instead of learning basic techniques, you just play matches. You will learn to survive (the game), but never be able to reach higher levels, because of bad habits.
>This is going to be about camelCase, isn't it? :)

It is about programming as a way to create a new [level of abstraction](https://simpleprogrammer.com/respecting-abstraction/)
Thank you so much for the answer!
Heh, it's weird but cool. I get the best of both worlds: I go to pycons and meetups and people ask me to sign books and take selfies, but then I leave and no one cares about me and I'm nice and anonymous again. It's an ego boost for sure, but I try to keep grounded. There's a quote about humility that goes something like, "being humble isn't being self-deprecating, but acknowledging that the things that make you special don't entitle you to special treatment."
:D

Thanks!
What exactly is the difficulty though? That's going to be essential to helping you. The idea of a "for loop" is you're running through individual elements of a list or something. "for i in elements:" would mean that you'd run through each indexed item in the list "elements" and apply some sort of effort unto them. So if it were "for i in elements: print(i)" you'd print from elements[0] to elements[n]. The ELI5 would be "for stuff in list, do something."
I can attest to this, I'm really enjoying Making games with Pythong and Pygame and would love a v2!
Here's a list of requirements for the programs in my book:

* They need to be short, preferable under two pages, because the longer the program is and the more page flipping it requires to view, the easier it is to lose the reader.
* It needs to have as few layers of abstraction as possible, because the more layers of abstraction it has, the easier it is to lose the reader.
* It needs to use a minimum amount of programming concepts, because the more concepts the reader needs to know the more likely they won't understand the program.
* It needs to be a complete, runnable program (not code snippets) that amuses the reader for a couple minutes after they've copied the program, because otherwise the reader won't see a point to the code and won't be motivated to continue learning to code.
* It needs to be simple, because the more complicated it is, the more likely the reader will be intimidated and give up on programming.
* If there needs to be trade off between code elegance and reader comprehension, the decisions needs to favor reader comprehension.
* And a few others, but this list getting to long.

These are not the same requirements you'd have for commercial software, because this book has a different target audience. It's a program with 33 lines of code that translates English into pig latin. I'd say it does have structure and functional decomposition, it's just that it has as much structure and functional decomposition as it needs.

This program has a lot of structure:

    public class HelloWorld {
        public static void main(String[] args) {
            System.out.println("Hello, World");
        }
    }

...compared to this:

    print('Hello, world')

But schools (and software companies) moved from Java to Python precisely because "structure" often turned out to be "boilerplate". Anyway, that pig latin program took many iterations for me to write. Sure the first iteration worked, but it wasn't anywhere near suitable for a beginner's non-textbook programming book. It's a simple program, but it takes a lot of work to make something simple. There were also iterations where I made it *more complicated*, because it was going into Chapter 6 so I wanted to have some extra features like working with punctuation and maintaining the original case of the English words.

The program doesn't have any functions, but it also doesn't need any functions. There's no duplicate code that needs to be refactored into a function. For a beginner tutorial, coming up with function names runs the risk of having the reader misinterpreted the name. Actually, functions-that-are-only-called-once is a bad habit that I see beginners make, who feel like they need to put code in functions (even for short, 33-line programs like this one) because that's how the examples they're learning from do it.

When I first started writing programming books back a decade ago, I also made the mistake of using examples with functions-for-the-sake-of-functions. These are lessons I've learned over a long time. 

Another thing I've learned: "bad habits" is an exaggerated worry. Dijkstra famously said, "It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration." Even as hyperbole this is complete nonsense: I've come across tons of redditors in their 30s and 40s who coded BASIC on their Commodore 64s and now work as competent software engineers **because of** the early programming experience BASIC provided, not in spite of it.

I've learned that the most important issue about teaching people to code, and this is something that nearly every experienced programmer gets wrong when they try to teach, isn't writing elegant code or best practices or critical thinking skills or recursion or fucking whatever. It's getting people past the intimidation factor. People find programming scary. They think they can't do it, and when they fail at some minor thing or can't understand some example code snippet, they feel stupid and give up. **And their instructors take this as a sign they didn't have the brains or discipline to become Real Programmers.**

I dunno, this is just one of my raw nerves. I've seen a lot of people have all these unnecessary anxieties about programming inflicted on them by programmers who seemed more concern about dictating The Way Code Must Be Written than checking in on how much their students were learning. (Including myself.)
"Being humble is not thinking less of yourself. Being humble is thinking of yourself less."

Another quote about humility I wanted to share :)
Learned the word for that the other day : eminent.
Never really wanted to be famous myself, but if I did become famous it would be eminent fame. The kind where people genuinely care about your work, but you can still walk down the street to your favourite coffee shop and read a book in peace.
That's wholesome as fuck
Al I must really thank you ! I come from a finance background and am finishing up your first course I find it so enlightening! Thanks for all you do !

Cheers,
Sorry, it wasn't my intention to be disrespectful, also I did know that you are the author of the book. After all you wrote a book which inspire so many people to start programming. I've done nothing like that... My comment probably reflects my own frustration - I am working with smart people who write code that way (using Jupyter Notebook).

Here is my draft attempt to code Pig Latin translator, but I want to make few notes before. Handling  non-letters and mixed upper/lower cases is not described in the "**requirements**",  so I am not doing it, at least not at that stage. That part in your code confused me a lot personally, when I was reading the code. Handling those **use cases** is actually good exercise which can turn that program into a mini **project** but that should start from updating **requirements** and then we can write a new version of the code

&#x200B;

    # -*- coding: utf-8 -*-
    """
    Created on Thu Jan  2 10:33:17 2020
    
    """
    
    # stage 1 - Pure English
    
    """
    If a word begins with a vowel, the word yay is added to the end of it. If a word begins with a consonant or consonant cluster (like ch or gr), that consonant or cluster is moved to the end of the word followed by ay.
    
    """
    
    # stage 2 - extracting business logic
    
    """
    
    
    for raw_word in words:
        word = raw_word.lower() # normalize input
        pl_word = ""
    
        # If a word begins with a vowel, the word yay is added to the end of it. If a word begins with a consonant or consonant cluster end of the word followed by ay
        suffix = make_suffix(word)
    
        #If a word begins with a consonant or consonant cluster (like ch or gr), that consonant or cluster is moved to the end of the word followed by ay.
        prefix = extract_prefix(word)
    
        pl_word += word[len(prefix):] + prefix
    
        pl_word += suffix
    
    """
    
    # stage 3 - translate to pure python
    
    VOVELS = 'aeiouy'
    
    def make_suffix(word):
        """
        If a word begins with a vowel, the word yay is added to the end of it.
        If a word begins with a consonant or consonant cluster
        end of the word followed by ay
    
        Parameters
            ----------
            word: string
        Returns
            -------
            suffix: string
    
        """
        out = "ay"
        if word and word[0] in VOVELS:
            out = "yay"
    
        return out
    
    
    def extract_prefix(word):
        """
        If a word begins with a consonant or consonant cluster (like ch or gr),
        that consonant or cluster is moved to the end of the word followed by ay.
    
        Parameters
            ----------
            word : string
        Returns
            -------
            prefix : string
    
        """
    
        prefix = ""
    
        for ch in word:
            if ch not in VOVELS:
                prefix += ch
            else:
                break
        return prefix
    
    
    if __name__ == "__main__":
    
        words = ["book", "egg", "school"]
    
        for raw_word in words:
            word = raw_word.lower() # normalize input
            pl_word = ""
            suffix = make_suffix(word)
            prefix = extract_prefix(word)
            pl_word += word[len(prefix):] + prefix
            pl_word += suffix
    
            print(pl_word)
    
    >> output 
    ookbay
    eggyay
    oolschay

&#x200B;

So, what I've achieves

* I've created a new level of abstraction - one level above Python's string manipulation language. Execution of repeatable code is not only the reason we write functions and object, for example I can actually test my code now.

&#x200B;

    make_suffix
    extract_prefix

* I've simplified flow - reduced mental load
* I haven't mutated original input data

&#x200B;

P.S. By the way, installing mu-editor, broke my Spyder IDE

    ERROR: mu-editor 1.0.2 has requirement qtconsole==4.3.1, but you'll have qtconsole 4.6.0 which is incompatible.
I like that. Who said it?
Thanks! :D
I see you have put a lot of thought and work into this reply but unfortunately I think Al's code is a better solution.

Your code may be more advanced but there's multiple lines and concepts being introduced that are going to confuse, intimidate and lose beginners.
It is a better solution for what, what is the target? In which aspect it is better?
His target audience. Having something simple they can comprehend and follow.
My dad, mechanical/electrical engineer and app developer, passed away two weeks ago and I have been trying to think of something to memorialize him by. This hits hard and it‚Äôs just so perfect. Thank you so much for posting.
Wow that's awesome. Love that you included the syntax highlighting.

FYI you'll get geek points if you refer to the front and back side as "frontend" and "backend".

Edit: (tagging /u/hydroscopick): Building on /u/kronik85's idea: You could add a small plastic fly to the back side, and if he asks about it tell him "it's a bug in the backend". He'll love that.
I hope I one day have a child who loves me as much as you love your father.
Everyone loves your dad!
I love this so much. You did awesome and I‚Äôm sure your dad will be proud.
You are so awesome to make this for him. You are a real treasure.
Awesome! Tell him you ran it through a linter before wrapping it. That is a dad joke.
The syntax highlighting is my favorite part about this (besides the obvious fact that you're a gangster of a daughter who made this).
This this this this are the things that are cherished immensely. It‚Äôs not the thing itself it‚Äôs the time and commitment you put behind it. Sending positive thoughts so you can be together soon. In the meantime thanks for being strong and keeping us all safe by staying home. Stay healthy!
This is a fantastic gift! Thank you for sharing
I remember I wrote a program to solve a problem at work and my dad asked for my code to solve a problem at his work.
That is beautiful, I'm sure he'll love it!
That is incredible, very good job!
That is wonderful. He will treasure it.
That's awesome. I'm sure he'll cherish that forever.
Probably one of the coolest gifts I've seen, I'm sure he will love it.
this is adorable. Your dad will love it.
If you wanna be super corny, you could write a function called "calculate_love()" and then raise a Stack Overflow or Memory error
It looks great! I can only admire the creativity to make something like that.
This must have been one of the most precious gifts your father ever received.
I remember your previous post. This is so wholesome. If you care about reddit karma, post this on /r/nextfuckinglevel or /r/mademesmile.
This is honestly one of the cutest, most thoughtful and just in general best gifts I've ever seen! You're an awesome daughter and as someone else already said, I wouldn't be surprised if your dad sheds a few happy tears this Christmas.

Also, please post an update after Christmas! Even though you won't be able to give it to him in person, I'd love to hear about his reaction! (And tbh, I'm so excited about this that I'd love to be reminded about it again in a month :D)
Can someone explain the output of the first function? 

Does this return true if who == 'My Dad' ?
If you‚Äôve never seen your Dad cry that might change, this is an awesome thoughtful gift! Thanks for the update
Is imgur broken? The picture won't load for me :(
Awwwww that‚Äôs so cute!
0/10

&#x200B;

 *"No newline at end of file"*.
This is so heartwarming!
Nice
Awww that's so adorable <3
Ooooo do a hello world one, all programmers like hello world
Awesome. <3
Thanks for the update.  I hope he loves it, and the message!
What a nice and thoughtful gift.
this is so beautiful. can I commission you to make me one too?
WOW! As a father... this is such an amazing gift. Wonky edges be damned (I wouldn't have noticed-- still not sure I do!), this is the best gift ever.
*pylint would like a word with you*
My heart just melted, I would die if someone made me something this.
What hi trynna do I gotchu
I think this is great, but I disagree with ‚Äúit‚Äôs the right thing to do.‚Äù If *you* really, on your own, think the risk, the real risk according to the numbers, outweighs the benefit, then you do you. But way too many people are being pressured into taking illogical actions (when their *individual circumstances* are considered). When you look at the people who are the progenitors of these restrictions, it‚Äôs clear they don‚Äôt believe what they are saying. 

My Dad died suddenly last year. I regret every missed opportunity to see him, call him, send him a text to let him know how I used one of the many things he taught me when he didn‚Äôt even realize he was teaching me.

You. Do. You. Nothing else is ‚Äúthe right thing to do.‚Äù
Beautiful!
How is your hand‚Äêsown writing better than my handwriting...
Awwwww!
I'm so sorry to hear. Sending major hugs to you and your family.
So sorry for your loss!  Sending you a hug!
This joke makes the gift 10x better
And backend is spaghetti code.
I think you mean feature.
Hey dad it‚Äôs me, your son. I love you so much.
I hope you will. If you have kids and show them you love them I am sure they will love you too a lot. Even if they are not as creative as OP. I mean they may not make such a cool creation but still love you a lot. :-)
I'll pass it on :)
Not geeks apparently ;(
I clearly remember the first time my Dad, from his work, called me at my work to asked me how to fix a networking issue. I was 16. It was surreal. He was my Compu-Dumbledore and now he needed my help.
Aw, that's so sweet! Taking commissions isn't my thing but you're free to use these pictures as a reference for another embroiderer. Ask 'em I used the whipped backstitch for all the text and it'll probably end up looking very similar.
Thank you! Working with my hands has proved to be a good time to just think and be mindful while going through this whole process. I have been wanting to get into embroidery and your project seems to be somewhat doable after a bit of practice.

I know it‚Äôs a busy time for a lot of people but if there are any resources (books, YouTube videos, etc) that were useful to you, please feel free to pass them along via DM or comment here. No rush at all and do not feel obligated to :)
Hug received :) Thank you so much!
Let‚Äôs say it will run at omega
As is tradition
Put a toy plastic bug in it
Underrated since I literally thought of spaghetti when I saw the back, and then see your comment.
Haha
This...this raises a large number of questions.
My dad is a network engineer and he knew I already wrote the program for a solution for an insurance company and asked if he could use the code.
Oh good idea. I can ask an embroiderer. Thanks for the idea
Embroidery is such a nice hobby. It's pretty cheap and it's easy to pick up - definitely doable! Stitching text is especially easy and gratifying (hence this project).

I don't default to any one specific resource but there are plenty of how-tos all over on YouTube. I think you can also buy embroidery (not just cross stitch) starter kits. r/Embroidery is a great place to find inspiration and ask questions. They also have a beginner's guide.

I'm still a beginner myself but here's some of what I've learned:

- Use a sturdy fabric, like canvas or denim, to avoid warping.

- Keep your thread an arm's length or shorter to reduce tangles.

- Knots happen so keep tweezers around.

- For text/clean lines, use the whipped backstitch! You'll always have the cleanest lines in town. ([link](https://m.youtube.com/watch?v=zbok06w_txo))

Best of luck to you. :)
Moth
Yes but his username answers one
Even better
I wish all workplaces were as appreciative of one's work as yours definitely is.
Great work!
[removed]
Great, thanks for sharing, good news stories these days are appreciated.
I don‚Äôt know you but I am bloody proud of you.
You showed your value to your employer and you are being rewarded for it. Good job!
[deleted]
I feel you.

I was earlier a normal tech in some high tech maintenance field. After some time I got some guys I was responsible for and planning was becoming my thing.

The system to plan the work was horrible and we could not really do internally a lot because decisions of the maker of the machines we maintain. I needed to go three different sites, tick some fields, look data here and there. Every week rinse and repeat for hundreds of machines.

I got frustrated and automated one site with VBA + Python. Then another. Soon I added some other automation to my planning program. And then I started planning stuff by automating stuff which was not needed per se.

My manager got interested how on earth I am leading double the amount of guys others are and doing a lot of extra customer care, financial budgeting and whatever on top of that while others are burning out with less.

Fast forward few years and a lot DAX, Power Query, VBA, Python, ERP development, API development, technical documentations, leadership trainings, financial trainings and shit and I am responsible for over 70 guys, my pay check has doubled, I am still under 30 and I've got no idea wtf has happened. 

Feels good though and pretty much every day I learn some exciting stuff. Sometimes it is still some DAX or Python, but more and more it is some financial or law stuff somewhere. I really love my work, and as a some kind of leader of sorts I don't have time for everything I'd like to. Nevertheless my little programs I code every so often help me in a lot of little things I do every single day.
For the memory issue, since you seem to be getting capped before using the memory you have available I suspect this might be a 32-bit vs 64-bit issue. Do you know if you're using 32-bit Python (that would limit memory usage to 4gb)? If so, try installing 64-bit Python. 

P.S. - Good work!
Just wait till you learn how to webscrape. Check out the [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) library and learn how to use [css selectors](https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find-all). Welcome to the wild world of data mining :)
It sounds like you're [flying](https://xkcd.com/353/) right now!

It is such an addictive feeling, knowing that the only thing between you and the solution to a knotty business problem is your own knowledge and intellect. You know 100% for sure that there is an answer, you've just got to be good enough to get there.

A danger is you become "that guy who does magic" and it gets assumed that you'll do amazing things, but not rewarded because that's normal for you. One way to try to avoid this is to always present the hours and money saved by what you've done first and last.
>He'd take off some of my workload, and also give me a 15% raise.

That is worth the time and effort right there! I don't even know you but I am happy for you!!
Reading this somehow put a smile on my face. Thank you for sharing!
What an awesome success story! I also love your statement, that you have no idea what fixed the problem, but it just wished at some point. You have a great manager apparently who's able to understand and appreciate what you've done
I don't believe in Godl, but this feels like a sign from the divine.  

I'm in a similar situation right now where there is this big excel sheet that we would have to do about 1000+ tasks that each could take up to a minute.  I heard that this issue would be coming down the pipeline so I created a script at home to automate it.  Now this issue has come to fruition and I've been debating telling me boss about it due to not knowing how it'll work In a production environment with shared drives, etc.  I actually currently have a draft typed up to my boss about it. And then I come on here and see this story.
> I'm not sure what really fixed it, because I made a couple changes and at one point it worked

Congratulations, you're now officially a programmer!
awesome!

i can't imagine parsing PDFs would take too much memory if unused variables are being cleaned up when not needed anymore, perhaps have a check over for any lingering objects?
How much experience did you have in programming before you made this application?
i literally have to do this same task, would you be willing to share the source privately, or blocks of it, plssss?
I love hearing these success stories. Makes me feel like my journey may begin and a chance of success one day.
>I wanted to give up a couple of times but I really wanted to come in to work today with a finished product 

This is something I can relate to very well.

I've never been any good at coding. Some people would say I'm in "tutorial hell". I would call it "I-mostly-do-not-know-what-I-am-doing"-hell. English is not my main language and reading documentation almost always have me thinking "What does this word mean", spending time googling that specific word and then forgetting it as soon as I've read it.

Coding something that other people may find basic can take me hours. I can sit in front of my PC and code (*cough* troubleshoot *cough*) for 16 hours straight, go to bed annoyed that it doesn't work, sleep terrible because I keep thinking about why it wouldn't work, and then eventually have trouble sleeping because I think I've figured out a solution and be eager to try it the next day. When I actually make something work that can save our company a lot of time, I'm thrilled. So proud of myself, even though I probably spent way too long on the code.

I have no idea how much of the code *actually* works and I'm a bit afraid that being able to shit useful code out of my ass in no time would take the joy of coding (again: troubleshooting). Being able to show my boss something and tell him "i made dis" and hear that it's actually useful is just great!
Nice!! Congrats.

If you're going to do more of these types of automation projects, I would highly encourage you to familiarize yourself with the re package in python. Regular expressions are a hugely powerful tool in text processing and can help you identify and manipulate data. For instance, if your account numbers didn't always start with the same three digits, or those three digits could show up elsewhere on the page, you could say "111, followed by dash, followed by six more digits" like re.search("111-\\d{6}",mypage) or "\\d{3}-\\d{6}" for any three digits followed by dash followed by 6 digits. Hugely powerful.

There's a book that's pretty well regarded called "Automate the Boring Stuff using Python" which may give you a lot of boilerplate to work with.

As to the out-of-memory -- difficult to say, loading a 3800 page PDF is probably a good chunk of memory but python is supposed to consume as much system memory as it needs, at least in 64-bit versions.

You may have a better development experience prototyping your code in Jupyter Notebook, which you get automatically when you install Anaconda Python.  It lets you run small chunks of code in a web browser and inspect your stuff in-flight. Then you create your .py program in VS Code once you're done experimenting in the notebook.

If you were running your code inside VS, it's possible it forked a process for you with a lower memory ceiling -- you should be able to open a command line and just python [yourfile.py](https://yourfile.py) to run it directly and see if you run out of memory.

You can also either add command line parameters to tell it what file to run, or use the os package to look for files (like the file with the greatest date in a folder) so you can set your program to run and not have to worry about manually editing and running it.

There's a whole new world of python automation out there for you to conquer!
Wow, congrats! And thanks for posting and sharing! Reading your post is actually really motivating and it visualizes why learning Python (in this case literally) pays off and is no waste of time.


Even though it sometimes takes until 3am to find a solution, that time time was well spend. Why do something manually in six minutes when you can waste your time trying to automate it in six hours?  Because those six hours learning are still well invested, just like compound interest: the new insights and skills will repeatedly pay off in the future and the so saved time can be used to learn some more
Your energy, I need it.

Good job!
Nice. I feel you, when you say you were beaming, it is so much fun when your build completes or the program runs successfully after spending what seems to be an eternity writing your code.

Your issue seems to be with memory management while using Loops and the best solution for it is to use 'yield' instead of 'return' which can be done using a 'Generator'. Though the concept is fairly simple (it handles your iterations automatically) but you will have to understand the concept of 'closures' and 'first class functions' to understand how it works.

If you want to try it out 'just replace "return" with "yield" in your loop' and try to run it.

If you are interested to know more i would recommend Corey Schafer's  youtube video on generator,s his was the first and the only video i needed to watch to understand closures,firstclass functions and generators.
Kaboom, love your story :)
Well done !
I wish my boss would take some work off my load and let me automate things and get a 15% raise. All I got was a thank you for saving us an entire week‚Äôs worth of work and doing it in a day (took me one day to make the program).
Do you hide the Python, so you can't program in it?
well done, great story, useful product!
This is all very inspiring. Thanks for sharing your success story!
You better get that raise!!!!!
>The company that generates the statements sent us a PDF of ALL statements.

You should start from that part. Contact the company and ask to export data in a different format. If you don't need preserve a format of the document is also ways to convert PDF to text. Parsing text is easier. [https://github.com/pdfminer/pdfminer.six](https://github.com/pdfminer/pdfminer.six) \- no 64G needed
Just wait till you learn Django, your boss will explode.
For the memory problem, try looking into bash loops and stopping the program earlier, and running it again within a bash loop. It would also help with the complexity.
*Travis Tritt rolls up in a truck with the windows down* Hell yeah, brother.
Great job!! You went out of your comfort zone, identified a problem which needed automation, used your hobby to implement it and even got a raise. Congratulations and don't stop. Whenever you get stuck, remember these winning moments, because that's what will get you to the next ones. Wish you all the very best fellow coder.
I wrote a regex PDF renamer a while back, it was so satisfying!!
This is awesome! I work in accounting and I‚Äôm starting to learn python right now in hopes to automate things we do beyond just screwing with macros. Nice work!
amazing work
Makes me so happy reading this.  I started my journey with Automate The Boring stuff.  It‚Äôs SO useful. And the fact that your boss offered that already is awesome :) so stoked for you to be on this journey and share your experience with anyone else to read.
W/R/T memory: Because the PDF seems to be readable already (i.e. you didn't mention needing OCR), would it possibly use less RAM first by exporting to a TXT and then parsing it e.g. with NLTK?
Which company is this. I gotta apply üòÄ.
Need a TLDR on this otherwise I‚Äôm going to have a to create a python script that generates a summary
Haha that's awesome man! Keep it up!
I wish python was useful for my job. It's all computer work, but we have some software that automates the only part that can be automated as far as I can tell
Great job! And it sounds like you have a good boss who will support you in your endeavors. That's fantastic!
lol I do this, and I got a bad review because I was off work that was assigned to me... even if I did it on my own time, their answer is, if yiu have enough frwe yime for this you have enough free time for unpaid overtime
\>"My boss is freaking beaming right now. I'm beaming 

Well done!!!  That is a wonderful example of someone finding need that other people didn't realize was there, showing initiative, and, let's say it, kicking-a\*\*!  

I worked on a problem similar to your own long ago and while I did not use PyPDF2 I found a couple things you want think about as they may help in the long run. 

First was my script grew come a simple automated data collator to something closer to a 24x7 data QA process.  One big thing I found, even though everyone said was not possible, was where you had PDFs with "Page 1 of x" was to keep track of which pages had been processed and how many pages the overall PDF was to being with.  My old script would find, at times, two PDFs that had been munged together some how so one PDF might have "Page 1 of 14" though "Page 14 or 14" and then "Page 1 of xx" right behind that - in the same PDF.  Whatever it was I used to process all this, and I apologize, the code that I was is behind the firewall at a financial institution never to see the light of day, the first thing I would do say gather a list of the actual number of pages and make sure that the page headers agreed with that.. and I would keep set of unique page numbers that were processed, i.e. if somehow your PDF happened to have two "Page 3 or 26" that was important to flag.  I only point that out because that ended up being a HUGE win and one that was applied to YEARS of digitally archived PDFs looking for such errors.  

I wish I had some information on how to deal with memory on Windows instances but unfortunately I do not.  I've always been in the Linux side for this kind of stuff.

Congratulations on your success and it's awesome that your boss sees the value you created.  Believe me, your boss?  He's already touting it too his boss and it's going up the food-chain.  This could be something fun to continue to do with a slice of time from your work day or, who knows, you could one day, and maybe not long from now, be leading the group that does this kind of thing for the company full-time.  The beauty of automated job like this?  The run 24x7x365.  And like that guy from the Terminator said (paraphrasing): "That script is out there. It can‚Äôt be bargained with. It can‚Äôt be reasoned with. It doesn‚Äôt feel pity, or remorse, or fear.  It finds errors and validates data.  And it absolutely will not stop, ever, not even after you are dead."
Hey OP, Not sure if you noticed but you copy and pasted your story twice.
I think this is an awesome post.  ESP since there is no code. 

Everyone has different projects so describing your approach is more important. Shows how you thought about the problem and worked through the issues.

Btw. Sounds like your looping over the document multiple times. You should need to do that. 

You can either loop once or loop once to build a table of indexes which you then use to split up the document. 

One loop is faster, but doing two looos where you just build up a table of IDs and index‚Äôs allows you to go back and error check before you generate a bunch of documents.
When you are splitting the PDF the result can be as large as the original because of the fonts and extra data that gets copied over into each new PDF.

I wonder if you aren't closing the file handle after you finish writing the split off PDF. If you aren't then you will run out of memory.

I have used PyPDF and ReportLab extensively so feel free to ask me questions if you have any.
Fuck this is so inspirational. Congrats OP!
Great stuff. Very impressive and an inspiration.

What about that memory issue? Did you find the cause? What was the solution?
Dude! you are awesome! You deserve that raise!. Keep it up, soon you will be promoted, I am sure. Please, share that code when you can!
Good job. We need more people like you to literally describe how it takes dedication and patience, looking at other code to learn. Code does not write itself and in movies they make it seem like hackers just type a few keystrokes and bam! it miraculously works but, no reality is messy but programming is so worth it. Thank you for inspiring others. Also, for programmers that have been doing this a while, things become trivial, so your story is valuable in that regard too, seeing it again through the passionate eyes of the promising beginner.

Make sure you give your SO what they missed! ;)
Great write-up! I too am learning Python in order to improve my SEO and project management efficiency and productivity. Keep the robust posts coming!
Congratulations!
Post the code!!!
Sounds like a dream come true, that‚Äôs awesome! Congrats and best of luck to you in your forthcoming programming escapades!
As someone who is still trying to learn python (I have a book sitting on my desk still unopened, and failed attempts at learning through courses online) I find posts like this really motivating. Good job mate!
I'm going through Python for Everybody at the moment. May I ask what resources you have used to learn?
Nice work OP! You should take a look at [Automate the Boring Stuff](https://www.reddit.com/r/learnpython/comments/gbp0a1/automate_the_boring_stuff_with_python_udemy/). 

I'm 3/4 through and it gave me aha moments -- especially with regular expressions -- that I didn't have when I learned Python back on 2.7.

It's free for the next day.
A good programmer is pragmatic as well. You're all excited now and there's nothing wrong with that. But:

1. The real problem in this situation is the company that generates the report in a clumsy and hard-to-process format. Additional work is required to manually process that whale of PDF at your workplace. And you had to stay awake till 3AM for the same reason. It's worth at least talking to your boss about escalating the question back to that company about them considering to change the format of the data they provide. Generally if upstream causes some trouble, if it gets raised there and improved/fixed somehow, everyone wins. Imagine the scale of the problem if that company is providing the data not only to your employer, but to 1000 or 10000 other companies.

2. Now that your code gets to work with real data, not only your salary raises. Your responsibility raises too. One bug in your code and you'll get to take the blame. Upstream data provider slightly changes the data, which won't be a problem for those who process it manually, but could be a problem for your automated processing by code - and you end being the guy who takes the blame again. Software has bugs sometimes, it's normal. Software has to be adapted sometimes to new data formats. Even if you're at the very beginning of your programming/particularly Python programming journey, learn from the start to mitigate such troubles to a certain extent. Writing some unit tests for your code is a good further investment of your time into this project.
I wouldnt post the code imo
Yeah man! As soon as I got hooked on programing and Python specifically and the creative problem solving it could achieve I quit my job at the time (construction) and got into programming full time. We did something similar in my first programming job for a cyber security firm, using python to scan 1000s of documents to find confidential data using a similar methods you used. It can also be a rabbit hole of investigating different methods and pipelines, the endless quest to achieve maximum efficiency and speed.

"How can I go...faster"
Great job!

One little suggestion that might cost time but is very relevant.
Do read up on Git and source code management. Keep it simple, but use it and do backup of your repo on another disc.

When you program it is good to do a textfile as lab protocol in which you note what you achieved, try and want to do.

There is also jupyter notebooks which might be an alternative to the upper two points of mine.
Nice ! Good luck !
This post gave me so much hope. Thank you!
Congrats!

&#x200B;

You might want to edit the post, since you've posted pretty much the entire text twice.
Regarding running out of memory:

Are you properly closing the new pdf file when you are done with it?

Are you creating nested loops?

Have you tried debugging? Something where you can watch the flow and keep tabs on the variables? I‚Äôm sure VS code can do it, Pycharm can do it, PDB (python debugger), and I am sure there are many more.
Lots of NLP and Advanced Classification software that do similar things, so well done for saving some time and money there!
>He said all "the little programs you make" are property of the company, and they are not to leave the laptop.

A few points about this because it sounds to me like you spent your own time (10PM - 3AM) creating the program you listed above.  If it was created completely in your personal free time (time you didn't log on your timesheet) and your employer didn't request it, it's yours--not your employers.  If you log it on your timesheet, it's your employers.  They didn't ask you to make this and you did it on your own time, that makes it *yours*.  Not sure how useful it would be for it to be yours, I'm just clarifying that it is.  At my office, if I knock something like this out I can go back and log it on my timesheet as hours worked and leave 5 hours earlier on Friday or something.  Not sure if you can do something like that, just something to think about.

It sounds like you'll have support at the office now, so anything you create at their direction and on their time now is theirs, obviously.  I'd still recommend keeping it somewhere else other than just your laptop so that there is continuity in the future if you leave.  Discuss it with your boss, but you can store all code the company owns on a private Git repo somewhere.
Congrats dude! Wish my work was this appreciative of the stuff I did. 

As a fellow financial worker who has to pull data from PDFs, you may also be interested in [Tabula-py](https://pypi.org/project/tabula-py/). It's pretty easy to use, and can be useful for liberating data from pdfs. You can build templates using a GUI and then export them to python to pull the data programatically. It's a wrapper for java, so you'll need to install that as well, but even though Oracle is switching to a paid model for java you can find free, open source builds. [I use this one.] (https://adoptopenjdk.net/)

It's also nice because when one of your templates stops working (say a client changes their PDF format), you can visually debug the issue. It's been a godsend for me.
This is honestly an inspiration. I‚Äôm in a similar position and I‚Äôm super new with python. So far I‚Äôve only managed to write rather useless programs unrelated to my work but this is quite motivating. Good on you
>My boss is freaking beaming right now. I'm beaming. He called me in to his office 20 minutes after I showed him the final product. He asked if I'd be willing to take on some more of this automation during work hours. He'd take off some of my workload, and also give me a 15% raise.

This right here is how you do being a Boss right. Reward initiative and maximise its usefulness to the company whilst offering genuinely valuable incentives.
Wow wonderful job and post buddy, felt so good to read through the entire length..
congratulations man!
Are these bank statements? If so, you can ask your back rep for the files in electronic format... Would have been a lot easier than PDF. I'm in Treasury so that's something I knew about. But very awesome you were able to do what you did.
Wow that's fantastic!!  Congratulations on the recognition.  

What type of work do you normally do on a day-to-day basis in your firm?
I really enjoyed your story from last week. You should join the "network to code" slack on the #python channel. It's focused on networking but most of the people are not programmers primarily. It seems more receptive to newcomers.

Maybe you'll start a "accounting to code" channel.
You have ascended.
[deleted]
Inspiring, thank you for sharing your experience. I hope that you continuously improve, in programming and in life. :)
OUTSTANDING. Congrats, man!
YouTube university
Thanks for sharing your journey.
It's awesome. He's a great guy, but this kinda went above and beyond. Most of management is older folks. So they aren't always super fans of depending on technology. But we've spent about 40 hours between three people going through these, and we were about 25% done. So we probably save 120 hours? 

Programming is so fascinating how you spend x amount of hours to automate something and once it works it just takes a few seconds or minutes (for this simple stuff) to actually do the task.
I‚Äôm in Desktop and wrote a PowerShell tool to replace our main Data Transfer / Setup tool. 

When I presented it to a director I was reamed for doing work ‚ÄúOut of Scope of my Job‚Äù despite creating a tool that will save hundreds of hours of labor over the next few years.

I‚Äôm now afraid to innovate openly I write my code for myself and use it for myself. I want to make things better for everyone, my leadership doesn‚Äôt through.
Me too. I once worked for a company where my role included finding potentially interesting medicines to import to China. My colleagues had a list of ~120 biotech/pharma companies and split it between the 4 of us to find interesting products by looking at their websites one at a time. I instead used a list of >10,000 medicines in development or already on the market, developed a list of my CEOs preferences (scores of 0-10), and then filtered the thousands of individual products through these preferences. Before they finished going through their lists, I had a comprehensive rank-order list that could be immediately updated to match a change in preferences, and could also be updated every quarter when our vendor updated the drug list. Some of the top contenders were products we had already licensed, which validated both my process and the history of the organization. 

Feeling like I had conquered the world and was about to get recognition, I showed my team of peers, including my boss who was roughly my age. They were not at all excited; in fact they questioned the use of my time and asked me to catch up to them using their format. 

Later I created another tool that allowed us to type in the name of any drug sold in China and it would print out a report including graphs, etc. showing recent sales trends, competing companies, and even competing drugs in the same space. It was idiot-proof since all you had to do was type in the name and hit enter. Again, they questioned the use of my time rather than adopting my tool that would have hastened their work. 

So disappointing.
I agree, I went through something similar with a different outcome. They just said ‚Äúthat‚Äôs cool!‚Äù, but nothing came of it. I literally saved them countless hours of mindless work, but they weren‚Äôt interested.
Holy hell man, ditto happened with me, we had to generate a quarterly statement out of an excel with 35000 rows and 20 plus columns and filter dates, filter this that and all manually takes 4 hours ,, just spent 2 days , imported pandas, read\_excel... made a dataframe, did all greater than less than dates, saving output with each function in a text file , now the script does the same job, albeit in 15 seconds. ..... reminds me of the SNAP song,,, i've got the power... LOL
Not op, adept programmer with not much knowledge on how to improve memory:

Can't op just stall the program every 15 PDFs (because the program did 25-30 per "session"), to give the process time to stop taking up ram? E.g.

    from time import sleep
    counter = 0
    duration = 5 # idk, it's an example
    # loop initialisation etc
        counter += 1
        if not counter % 15:
            sleep(duration)
Happy cake day!
I've been reading these types of posts on reddit for a while and it's great to experience it. Wow.
Happy cake day
Happy Cake Day!
Happy cake day
Thank you! I never expected all of this.
I show my value and get more work thrown my way without a pay raise. üòÇ
True, but if you are a true excel nerd, you are probably better off focusing on Visual Basic instead of python.
Agreed with this IF you can access the data. A lot of information isn‚Äôt available in databases to connect to, so I‚Äôve used random hacked together approaches to automate functions.
I work for an MSP, and we service a lot of law offices, accountants, etc. If we actually automated all the work that could be automated reliably TODAY, I think 40% of our workforce would be gone. Once there is a reliable conversational AI, that number increases to somewhere around 75%.
Holy crap what a basic thing that I missed. 
In Visual studio, I am using the 32bit interpreter. When I try to go to the 64bit, it won't run. 32 bit was 3.8 and 64bit is 3.7.5
How do I install 64bit python? When install it, and go into CMD, it's 32bit. I can't find anywhere to download 64bit.
Also [Selenium](https://www.selenium.dev/) if the website gets content loaded by javascript after the HTML is loaded. Or you just want to interact with the browser.
I didn't tell my boss about the program ahead of time. I just did it, and showed him the result. At the end of the day, that's what matters. I didn't go into much detail. I just said "hey this is the folder with all these split up" and he was like "wow you went one by one" and I said no I programmed it. I told him I spent a few hours overnight writing the code, but once it was "finished"(is it ever finished?) It took less than a minute. Furthermore since it's written, once the new set comes in, I can essentially re-run it. I didn't excite him over the programming. I excited him over the hours ($$$) saved.
I'll post the loop code soon. 

I had to create the PDF reader and write objects. 

Then at the end of the loop I tried setting them to None and then tried del I think. 
Neither worked. 
But when I initialized it BEFORE the loop, it would not iterate.
I've created some basic stuff in python. I've done several projects Euler stuff, but I haven't done anything this practical yet. 

I can't place a time frame because over the past several years I've picked it up and left it several times.
I don't think I can. I was considering posting it but I don't want it to catch up to me. 

If you'd like to shoot me a PM with some details about what you have to do, I'd love to walk you through some things.
Great comment! I actually used re.search (or find?) To find the first digits of the account number. 

Is VS Code the best option? Or would it be worth moving to an IDE?
What makes you say that?
I never expected it to be that long!
Over the past several years I've come and gone from python, and I've used several resources to gain a basic understanding. Automate the boring stuff, a python textbook from a friend, and Lots of YouTube and google. So when I went into this project, I knew enough to figure out what to search for. I believe there are several course websites offering free courses on it. You just gotta find your thing. Sometimes I'll watch videos, other times I prefer blogs or articles, and heck I used to just sit down with the textbook next to me and work through it.
I don't know all the details, but apparently the company has tried to request that the statements be split up, but they won't do it.
Honestly it's fine with me because I spent 3 extra hours of work doing something I enjoyed and it resulted in a pay raise, getting paid to program on the job, and a new sweet computer setup at work!
I think my problem is I get obsessive and will try to automate everything. If it takes me days to write something that takes 5 minutes, that will still save time, teach me something new, and I can always build on it and make it more complex.

Right now I'm working on an auto-sorter for scanned documents. Our scanner has OCR, and the files always go to the same folder. But we have to take these, create a new folder, and then a sub-folder for the account. So this will wait for new files to come in, scan for the name and account number, and sort the documents. It'll split the PDFs between New Account forms, ACH forms, and other types that come in.

And I'm meeting with the team that manages the API of our CRM that then takes the files once their sorted locally and upload them to the servers.
This is the key for me. It takes longer for me to set up the initial scripting but it's s great time investment because of how quick it is to reproduce each time.

When you send out 20 weekly/monthly reports and doing them manually takes 30 mins compared to 5 mins with a script doing the donkey work I literally get 2 days a week back.

Well done on your effort and it seems to have paid off!!
You've saved 120 hours across three people who are being paid, combined, a lot of money. Your automation effort just saved the company a ton of money, improved workflow and *reduced employee stress massively.*

Yeah, damn right your boss is beaming. He just found a diamond in the rough, and an opportunity to streamline a lot of capabilities in his company and he realized that he just needs to offer you some incentive to remain *and* remove overhead that could impede your ability to deliver, while directing more of this kind of improvement workload your way.

Your boss is genuinely amazing. You are basically getting a *cart√© blanch√©* my friend, to grow to new heights. Excellent work!
Whilst he has said `"the little programs you make" are property of the company, and they are not to leave the laptop.` I would strongly suggest pitching the idea of source control like github, so that if your laptop does die the company doesnt lose those programs.
I feel you, I work in a very conservative industry (HR of all places, go figure) and my employer has been equally supportive, which I'm extremely thankful for.  


I'm the Python/Data Analysis guy now, and my career has taken off to a place I would never imagine.
>Programming is so fascinating how you spend x amount of hours to automate something and once it works it just takes a few seconds or minutes (for this simple stuff) to actually do the task.

This is the part that makes it so amazing. Once Automation is done, and it works as intended, it's super satisfying!
Welcome to the dark side LilGhetto! Great to hear your efforts were appreciated. Had a similar start to my data career so it‚Äôs really great to see someone take ona personal challenge and have that ‚Äúah hah!‚Äù moment.
That's absolutely amazing. I've worked on similar projects during my time at work, and while I wouldn't say I've been appreciated for it in any meaningful way, it's still incredibly satisfying for me to just sit back and let my code do the work for me!

I used to offer such tools to my team members, and I felt like great for allowing them to save the most valuable resource- time. Unfortunately when you don't see it all being beneficial to you in any way, you stop spending time to work on it. So now I just do projects on my own, because I still like doing it.
I can sympathize with that, not everyone appreciates a good idea.

But I have also seen the other side of the story when an issue occurs or the tool/script fails with a useless error, typically when the employee is not around and there is no documentation or even comments to support the tool or script.
That‚Äôs ridiculous. You should‚Äôve gotten a raise.
It's just sad how so many organizations don't actually encourage innovation like you said, but on paper all of them appear to be the best organization you could ever hope to work for.
Some managers a very short sighted.
Brush up on your resume, you'll make more and be appreciated more elsewhere.
I‚Äôm angry for you, sounds like they felt threatened by you smh
>Feeling like I had conquered the world and was about to get recognition, I showed my team of peers, including my boss who was roughly my age. They were not at all excited; in fact they questioned the use of my time and asked me to catch up to them using their format. 

>Later I created another tool that allowed us to type in the name of any drug sold in China and it would print out a report including graphs, etc. showing recent sales trends, competing companies, and even competing drugs in the same space. It was idiot-proof since all you had to do was type in the name and hit enter. Again, they questioned the use of my time rather than adopting my tool that would have hastened their work. 

Comment refers to negative selection. You're in the wrong firm. Repost to r/work.
I guess this situation is surprisingly common. When I graduated 3 years ago, I naively thought it would be all about finding good solutions to existing problems. Boy, how wrong I was.
No.  Taking up memory doesn't have anything to do with time, but with creating objects.  Likely what the OP needs to do is change their code so that objects don't live past their usefulness.  A frequent culprit is having a list of large objects that you do some operations on:

    objects = [BigObject(data) for data in something]  # List comprehension
    for o in objects:
        dothing(o)
        writeFile(o)

Rewriting this to use generators means that we only allocate memory for the objects as we're using them, and they are then destroyed when our program no longer needs them 

    objects = (BigObject(data) for data in something)  # Generator comprehension
    for o in objects:
        dothing(o)
        writeFile(o)
Realtable üòÇ
VBA also helps when you're not confident enough in your python to request that IT allow you to install python on your computer. Plus, you can embed buttons for macros directly into worksheets with VBA which makes handing out macro-powered workbooks to tech-illiterate colleagues easier.
I'm currently working on a python project which creates a set of spreadsheets from data in a .csv file. I'm using openpyxl. Several years ago, I wrote some Excel macros in vba. I think python is a better investment, comparing my experiences. When my project is done, I'm inclined to share it here, so you may see it some day.
[deleted]
That's the trick. Those people aren't excess. They're experts. They can now tend to higher-level problems, handle edge cases in the automation, advise developers on improvements, higher-level analytics/metrics to report, on and on. Merely automating the jobs preserves the status quo in terms of productivity. Siccing those people who have their time freed up on bigger problems is where productivity increases exponentially. But not everyone is skilled or wise enough to see the opportunity.
What do you mean it won‚Äôt run? Error messages?
Option 1: Go to https://www.python.org/downloads/windows/ and use any of the ones that say x86-64

Option 2: Use the 64-bit Anaconda installer, which comes with Python and most the popular libraries pre-installed, https://www.anaconda.com/products/individual
Wait, so you wrote the program overnight, then went in the next day and ran it on your work PC?  Did you package it up into an executable and open it up on your PC?  I think I would probably get into trouble if I just did it without telling him lol. And I think our It dept would have to give me permissions to download Python.
[deleted]
Oh I see  I just started out on Python a few months ago but had some basic knowledge of other programs. But congrats on your Python program and most importantly congrats on the promotion. How you spent a few hours for a 15 percent raise. That is great return on investment
Hey there, I understand... I receive invoices that are 100 pages long, and need to split, sort and save per each invoice # (most invoices are 1 page, but it is not certain, they could be 2, and then the invoice # would be mentioned on 2 pages... very similar exercise to yours just different info.
Congratulations on all the downstream successes since the initial post!  Glad you were already in the process of using re, I think that'll continue to bear fruit for you. 

Honestly, an IDE is like a pair of shoes. You need to find one that fits you. I tend to the old school, so I prototype and do most of my analytics work in notebooks (Jupyter), then transition code into production formats using VS Code.  Your mileage will certainly vary, but in my opinion many of the bells and whistles in an IDE serve to support large scale team-based application development and may be overkill for smaller automation type projects like this. 

I would counter your boss's statement that the code should all remain on the laptop. Given the value you're creating, I would at a minimum create a *private* GitHub repository and push your stuff out there routinely. Stuff can and will crash, vanish, get deleted, and get corrupted. Protect your investment with source control. 

Do not let grass grow under your feet on the offer to finance a degree, especially if you don't have one now. I think Illinois has an online CS degree through Coursera, their CS department is a great mix of value and reputation. 

Congratulations again!
>Is VS Code the best option? Or would it be worth moving to an IDE?

VS Code is just fine. Some like Pycharm too.

Just spend a few hours trying the free community edition of pycharm out and see if it seems interesting.
I feel that Django has a framework offer many possibilities for automation, you could upload all the files and let Django manipulate them, send emails, and show a productive graph, among other things.
Well, it's not quite so long as people think because you accidentally wrote the main post twice.  :-)
Thanks for the response. Much appreciated.
Totally understand, I'd feel the same way.  A new computer and the ability to program on the job sounds like a win, just wanted to make sure you knew that the only way the company actually owns what you did (in this situation) is if you let them.  I've seen more than one boss take advantage of their employee's initiative.
> it's s great time investment because of how quick it is to reproduce each time.

In my work the time savings is just a fantastic by-product of automation. The real advantage has been elimination of human error. That has saved more headaches and money than anything.
To piggyback on this, if you want to avoid putting your code on the internet, you can host your own internal gitlab server.

I would talk to IT about it. It doesnt need a beefy machine, it just needs hard drive space.
If git is complicated just use google drive. That worked for me when I was a beginner
I can understand this but for somebody who isn‚Äôt a software engineer I promise it was well done.

Git commits since line 1

Well commented and readable

And I wrote accompanying documentation.

‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-

I‚Äôm the lowest tier of Desktop atm and I think that director was extremely uncomfortable with a tech who‚Äôs ‚Äúbelow Break/Fix‚Äù to come up with something like that rather than one of his people.

It all just comes down to politics if the company wasn‚Äôt great I‚Äôd leave for a sysadmin position elsewhere, but right now I‚Äôm just riding the wave tightening my skills and I‚Äôll get into a different part of IT far from the Desktop reporting structure.
Luckily, I‚Äôm at a different company now. No such problems.
It should be. Some places it might be. I hope anyone reporting to me will always feel like top solutions advance without concern to politics.
TIL there's generator comprehension. Thanks!
My biggest python pet peeve is making a list when a generator would suffice.
Yes. Tables are real.
I agree. While I ended up asking IT to install python on my laptop eventually, I spend about 6 months learning VBA and implementing solutions in it. I think it got me introduced to the world of programming without broadcasting it to my employer. Also, the macro recording feature is extremely helpful
I use it every day.  Really wish I didn't though, source control is difficult with VBA, and as scripts get more complicated distributing updates and changes is challenging.
You are SEVERELY overestimating the people I'm talking about. These people have jobs that are redundant because that's all they are equipped to do. Their entire jobs consist of data entry usually because they are incapable of independent, rational thought required to make good decisions.
No I ran it on my laptop PC last night (3am). Then I took the files that were split up and uploaded them to our secure online storage. I used my work laptop, but for some reason IT had installed python to it at some point. This was all within compliance so I didn't worry about it. The worst that could happen is he said "delete the files" or something.
As an IT guy I would *love* it if any of my users was interested in Python or coding. Of course I'm not your IT guy though so your mileage may vary.

Also, you can run Python without installing anything ;) just get the zip version and extract it somewhere.
He also already said the boss said the code is the property of the company, so it it probably not his to post online anyway.
Yes I was pretty careful keeping these files safe while working with them. Compliance is a supreme priority. 

If I post the code, it will not contain anything that could be referenced. 

It's all local and isn't connected to anything other than the statements which of course won't be identifiable.
It really is. 

Honestly the raise is great. What I'm really excited about is doing this on the job and getting paid to do it. 

I can work on this during the day instead of staying up until 3. I enjoyed doing it and solving the problem, but staying up like that isn't sustainable.
Probably more than a few hrs. For me it's a few hrs on just one bug üòÇ
So since I had several different invoices in various page lengths, I just searched through it to find the ones that said "Page 1 of" and returned those page numbers. If page 1 and 12 were returned, then I knew that the first one was 11 pages long. 

So you should see if there is a similar text that shows up on the first page of each invoice. 

Are the account numbers the same length, or do they begin with the same character(s)?
VS Code has Jupyter Notebook plugin, it's quite great actually. I like it more than the browser notebooks.
Shoot I sure did. Very interesting. I wonder if it was a draft thing in Reddit Sync.
You do know that if multiple people work with same software there will be human errors in the code at some point? ü§î
\^\^\^\^ Yes, what he said.  And while Git has taken over the world and you [absolutely can run an internal Git server](https://www.linux.com/training-tutorials/how-run-your-own-git-server/) (my old employer did) and you absolutely can keep code secure from even prying eyes internal to the company there are options other than Git for code version control out there, should you need to find one for some reason. 

If there is a development team at your company see what they are using.  Get the manager of the development team to talk to your manager so concerns about code security can be put to rest.  EDIT: hit enter accidentally, ended too soon (and typos)
what was wrong with the existing data transfer/setup tool?
Yes! Macro recording is great. Even if you know what you're doing with VBA, it can sometimes be faster to record a macro then clean it up a bit instead of writing it from scratch.
Ohhhh. That's interesting. I never knew that.  I haven't had to download Python in a long time. So I'm guessing then in my terminal I would have to just specify the path to the Python installation like:

/home/name/python3 script.py

Or on windows I guess something like:
C:Windows\Users\...\python3 script.py

Or I could manually add it to my path so I could just do:
python script.py
[deleted]
What libraries did you use ? Only Pypdf2?
Multiple people??? You have obviously never seen my code... all of 1 person introduces plenty human error...
A few things it‚Äôs a configured version of USMT (Proprietary to MS dates back to Windows XP)

It uploads the data to a server and then has to be pulled down. (My approach is PC to PC directly via PowerShell)

USMT doesn‚Äôt export import printers my script will export and import any print queues.

My program does some other stuff proprietary to our environment involving the registry (Only touching / creating the necessary keys and values) USMT grabs a whole goddamn lot more registry than that.

My program targets specific directories so it‚Äôs a lot slimmer and quicker. 


This isn‚Äôt everything but it‚Äôs most of it. It‚Äôs not a case of two tools suited slightly differently my solution tackles problems USMT doesn‚Äôt and does everything USMT does but better.
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-

These are all things I had to do in my daily workflow so it was insane to be told I was getting negative attention for creating this because truth be told my team is now exponentially more productive.

It is what it is the project made me fall in love with code and there‚Äôs no going back. Either I end up where I want in my current enterprise or I‚Äôll move on by next year.
Yep spot on
What type of financial firm? Investments? Planning? Broker-dealer?

It's pretty amazing the type of technology we have in a planning firm.
Yes and re (is re considered a library?)
The world needs more people like you man. Thats kinda just how people on the internet are and in my experience especially on reddit a lot. I go out of my way to try and help people and constantly get downvoted and shit talked by dumb a holes. Dont let it get to you, i may take you up on that help tommorow too.
How do I learn the Object orientated approach in Python? I always find writing classes really confusing. How do you decide which class to write and what to write?
If you were interviewing someone that only knew Python (bits of some other languages), works in a shop, is 39 years old and working to change careers, what traits would you value enough to accept that beginner to your team as a good long term investment.
I love that you're doing this. 

My question, I'm currently pursuing a bachelors in CS. We start out with python and move on. I actually start a class Monday going over recursion, nested lists, etc. 

The question is... side projects. I know that gets asked a million times on this sub and others. But, what are some specifics that you as a senior dev would look for? Actual areas that in a project, you want to see utilized. What kind of projects matter? Should I keep making calculators, or should I try to do some AI tutorial project off Udemy. 

Essentially, what specific areas (and since you're going to be answering questions for 12 hours I'm gonna be a punk and ask this) would you expect to see someone be proficient in as a beginner, intermediate, and expert in python (or programming in general)? 

What are some "Wow, this dude knows his shit" projects that you've seen? 

I hope this makes sense, but as a slightly more than beginner, beginner, I get so frustrated when people say "make something you'd use". Ok, well, there's a million possibilities. It's part of the problem of having so many options you dont have any options scenario. 

Thank you for your time and doing this. I look forward to reading through all the comments tomorrow.
I hate when I ask a question about programming on certain subreddits because some users assume that I didn‚Äôt search the internet for a solution or that I am just asking for help with my homework. 

I always search for a solution and very rarely do I ask homework questions.

Some people are just annoying.
The anonymity of the internet makes people forget that they're dealing with other humans. People do it whilst driving cars too - roadrage is aimed at a person, but you're sort of objectifying them as the car they're in too.

It's a shame. It takes a lot of self awareness to mitigate it.
I‚Äôm sorry this happened to you. This happens to me frequently and I totally feel your pain. 

I am completely impressed by the way you are handling this and would like to ask you the following:

If I‚Äôm decent in vb and c# but not close to developer level but I want to get to the point in a year where I can get hired for a python related roll- can you please guide and me let me know what specific steps you would take if you had to do it over again? 

For me my plan is to :
Go through ‚Äúautomate the boring stuff‚Äù
Go through ‚ÄúA smarter way to learn python‚Äù
Go through ‚Äúa crash course in python‚Äù

What else is good? 
My goal is a python specific development role where I can possibly do some analytics or something else interesting. 

Thank you again!
This post is so important. I would pay for it to be a sticky on this sub.
Internet brings out the worst in people, they are mean and cruel just because they can. though at the same time, there are random people who appreciates and show a lot of empathy to others.

I believe we need more people with empathy in the world.

I hope you are able to let it go and don't let one person hold the power over your emotions.
Hey champ,
"kill them with kindness". Rise above. Be excellent to each other. And so on.

In psychology channeling negative or unwanted thoughts or emotions into a creative outlet is called sublimation; it's an excellent and functional technique.

Helping other people has bonus points for making one feel relevant in the world. It's our evolutionary psychological desire to be important socially that spits out reward chemicals.

What you are doing is awesome.

Mad respect,
[deleted]
Thanks for your time! In short: do you use AST, have you come across it much? 

I had a problem this week with a codewars challenge 
whereby I'd used a lot of regex and my solution was timing out on their side. I [posted here](https://www.reddit.com/r/learnpython/comments/bxjyvk/help_getting_regex_to_run_faster_pls/) and received a suggestion to use AST. I had a quick look and it looks like a very complex subject and before I climbed in fully I went back and managed to solve my problem without using it.

How important do you think the AST skillset is?
what was the tweet? also, I'm suprised you are in this industry for so long and have not yet come across extremely opinionated individuals who are very combative. it's completely normal, especially when working with russians or germans. I don't know what he wrote back or if he was straight up mean but yeah, unless you live in seattle you gonna have very opinionated people in this field.
[deleted]
First off, what you are doing is awesome!

I feel I am not a beginner python programmer anymore. I would lie somewhere in the intermediate range. What I want to know is how do I transition from intermediate to advanced level in python programming. Like I feel this is not given anywhere on the internet. Are there any books or blogs I should follow? I don't know.

If you could help me out that did be great!
I‚Äôm sorry that happened to you, it sucks!

I have a question to use your kind help.

I‚Äôm doing an exercise in which I have to plot a column from a txt file based on the month for the last 100 years. (Climate data)

So, the user inputs a month like this ‚ÄúJAN‚Äù and it needs to be translated to the right column in the text file using numpy to populate an array.

If I create a dictionary, for example:

months = {JAN, FEB...}

How do I link it to an index number to select the right column with numpy?
I've had the same experience on IRC on a Python-related channel too. 

The guy was semi-prominent in the community, gives talks at conference etc. What's hilarious is he would very very likely be on Twitter acting all "woke" and shit about mentoring people, but gets off on humiliating developers outside his inner circle in the IRC channel. 

Just goes to show that someone's public persona is probably bullshit, and when you see someone acting "woke" online be very skeptical unless you see some real evidence otherwise. 

I've basically given up on interacting with other developers online. You sometimes have good interactions but a lot of it is a raging dumpster fire.

TLDR people suck.
That's actually really nice of you, sorry about the douche.
I'm a python beginner and I've worked a little on flask framework and beautifulsoup library. My questions are -

1) How does one remember which library and which module to use for a particular purpose?
For example - I know of 2 http libraries, Requests and Urllib3. These libs have many modules in them and i know there are many more http libraries available. I usually go through their documentation/stack overflow while writing my code. I mean if you give me a pen and paper (no internet) and ask me to write a python code, i feel really really difficult to write one, unlike C codes which i can write easily.
So, do most of the people go through documentation/stack overflow everytime they write some code?

2) As mentioned earlier, I've worked on flask framework and beautifulsoup. My reason for working on these is -
I learnt python to work on flask 'cause my previous company asked me to. They had some project, that required flask.
And while i was on YouTube, i came across web scraping. I then came to know of beautifulsoup and i found it interesting.

My question is, I want to learn something after work and I'm not sure where to start from, as there are no requirements and i just want to learn. Should i go in depth flask and beautifulsoup? Or should I just go with any one of these libraries like openCV, tensorflow, pandas, pycharm, tkinter etc.

P.S.- I'm not a computer science person, I don't come from that background. I've recently started working in an electronic company that deals with IOT and M2M products. I've seen people working on opencv and tensorflow. C was quite easy as i knew what i had to learn, i mean it's very specific. Kindly help. And sorry for the long post.
For context, can you give us the exchange or just the question posed?
How do you build momentum in studying python? I have the courses and resources but I tend to procrastinate.
Really love this post. You see what the difference between you and the person you tweeted is, one is a leader the other a manager. At least that's how it comes across.

I'm just starting out with python, fresh out of the box. I did a year of programming in 6th form college and then quit to get an apprenticeship. I've been working in my current field for about 13 years now. 

Problem solving is a huge part of what I do, so it's encouraging to hear you say that it's one of the better qualities to have as a programmer.

At the minute I'm struggling to workout for/while loops and how to properly arrange them but I'll cut myself some slack, it's only been a week. I can explain them I just don't know how to program them.

I'll be keeping an eye out on this post. Thanks for doing this.
[deleted]
Sorry people can be pricks.

I understand if you're trying to maintain some anonymity, but I have to ask: what was your question?
I asked a twitter question to a pretty well-known person in the area I work in the other day, and he got really huffy, assumed that I had no idea what I was doing, told me to not ever do what I was asking about, and told me to go find a different job because I'm not competent to do the one I'm at right now.

Are you sure you weren't on Stackoverflow?
I actually got to stage 3 of a big multinational company (andela). The last interview was a zoom video call with a head engineer. aspects where I had an issue was test driven development specifically writing tests for programming and python GIL which I had never learnt of till that day. Another was solid principle, I spent a couple days looking at this concepts. Needless I took a break from applying. Rejection sucks. 

Currently I'm working on a free course "data analysis in python" offered by the university of [Helsinki](mooc.fi/en ) and I also have a personal project I'm building where I'm going to apply the above principles. Hopefully the next time I apply, I should be a lot more prepared.
5 years and its still open. You have right to rant and you know python better than me so
** edit: holy crap, I just noticed that it says '5 YR ago', not 5 hr ago... leaving it up just in case you're in a mood to help :) hope you're doing well.

Hey mate. I hope this doesn't get buried. First, I'm sorry you experienced that. I've also borne the brunt of others' misplaced ire on programming forums. It fucking sucks. And, major kudos to you for your response! It's a hard thing to do, take that inner anger and mould it into something positive and constructive, but you're doing it, and really, good on you. Well done.

I tried to post this question to r/Python but the automod deleted it the instant I clicked 'post'. Perhaps for the best, because I found myself here next!

To my question:
---------------

I'm looking for some advice/guidance for multithreading with Python. For context, I've been working in the data analytics / data science realm for two years, and consider myself to be somewhere in the liminal zone between junior and intermediate. This is my first foray into the world of multithreading.

Quick description: I've written a web scraper. It scrapes about 10k URLs and saves them with context data in a csv. I've also written a downloader script, which pulls that csv in to a Polars dataframe and downloads the URLs' content from within a thread pool. As each file is downloaded, a very rough 'status' is recorded in the dataframe (just OK / FAIL:reason). I did this so that if anything squirrely happened - crash, power outage, network loss - I would have some clues about where to pick up where I left off.

Fairly accurate pseudocode:
```
def downloader(record, pbar):
    fname = <name formatting logic>
    return_value = "OK"
    try:
        response = requests.get(record["url"])
        response.raise_for_status()
        with open(fpath, 'wb') as f:
            f.write(response.content)
    except Exception:
        return_value = f"FAIL: {response.status_code}
    pbar.update(1)
    return return_value

def parallel(src):
    with (
        tqdm(total=len(src), desc="downloads: ") as pbar1,
        tqdm(total=len(src), desc="tracker  : ") as pbar2,
    ):
        with ThreadPoolExecutor(max_workers=10) as executor:
            futures_mapping = {
                executor.submit(downloader, record, pbar1): record["index"]
                for record in src
            }
            for future in as_completed(futures_mapping):
                try:
                    entry = future.result()
                    idx = futures_mapping[future]
                except Exception as e:
                    entry = f"FAIL: {type(e).__name__}: {e}"
                finally:
                    src[idx]["downloaded"] = entry
                    pbar2.update(1)
```
out:
```
[venv] user:cwd $ python downloader.py
downloads:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 6744/8237 [4:15:33<2:06:13,  5.07s/it]
tracker  :   0%|              | 0/8237 [00:00<?, ?it/s]

```

First, the script is currently humming along, the `downloads` progress bar updating well. I'm pretty sure that the `pbar.update(1)` statement in the first function isn't all that great; it's updating the progress bar from within the thread pool. It is working, but I'm sure it should be re-engineered.

Second, pbar2.update(1) is not updating in real time. Could it be a problem in tqdm, a conflict between the two progress bars? Or, is there a threading reason why the finally block in the as_completed() for loop isn't being reached?

I'd appreciate some helpful (and friendly) advice. Is this total spaghetti, or is it a reasonable first draft at a stable script?

Thanks in advance
First.  Hell yeah man.  We need to treat people with respect.

  
Second.
Can you do one on react native.. in the weeds right now. And can't think of any python questions.
I love this. I was scared to ask questions on stack overflow for a long time when I started because the people there seemed mean.
[deleted]
When I write in python I just code and I feel like I don't understand what I am doing but it works. 

What is this?
[deleted]
I made a script with python that is a bot in social media. I want to monetize it and I only know python.

I want to run a website that sells this service and has a control panel that shows statistics and the accounts where the bot is running, etc.

How can I do such I website? I have experience with WordPress and some other people recommended Django and flask but I can't manage to do such a complicated website with those. I've never eard about bootstrap, react, etc but apparently there are pretty good templates of those. Can't I just adapt a template and make it my website?
Hi, i come from a business background and recently picked up python for data analytics. I am still very new in this area. Since you also made the transition, could you please share some advices for me on: what kind of math should i review/ learn? What is a good way of practicing my python? Any recommended readings to improve myself?

Thanks so much.
Thanks for doing this.  


Here goes my question (questions actually):

1. What are some key aspects of python that require special attention? So I'm basically new to python (primarily coded in c++, java for a couple of years). That said, I've picked up the basic syntax, did some exercises on things like dictionaries, list comprehensions, lambda functions, basic OOP. Now what are some things I should move on to (or learn more about) if I want to create a firm grip on the language?  

2. Alongside other things, I do plan on using python for machine learning or AI in general. Is the syntactical knowledge of python enough for this purpose? I've tried to like, say, basically import some libraries (numpy, pandas) and use some functions to print things out. That's about it. I was wondering what more I'd have to learn in terms of programming to able to write code relevant to ML or AI (Surely there's more to it than calling functions and printing stuff).
I see you have a music background. Would you give me some general feedback on my music generator program (in progress) from a programming and musical perspective? It doesn't use machine learning or any fancy math. 

&#x200B;

[https://github.com/Sanseer/Robatim](https://github.com/Sanseer/Robatim)
My question, I have good experience writing personal scripts and things for my small team but I can't get around deployment. My IT team is offering me some space in AWS, I don't even know where to start to take a small script I manually run and turn it into something that runs on a server every night.

I have built a small API on python anywhere before but I feel like AWS or really any other non python oriented hosting is more intimidating.
I completed "learning python the hard way" have built a text based adventure game, text based dog breeding game, basic blog in flask, vehicle information lookup for the dealership I work for (looking up rebates, prices for customer quotes, notes on competitors prices) also in flask.

 My goal is to get a software developer job but I am not sure when I am ready to start applying for jobs.  Python is the only language I have learned but it seems alot of jobs in my area require experience in multiple languages (Javascript mostly).  Should I put in the time to learn new languages or delve deeper into python?

I am completely self taught no college.
I‚Äôm 16 years old. Countless times I have questions that seem so dumb to people like you and they respond in the exact same fashion as the person in your tweet. It means a lot to have people who know what they are doing not ‚Äúdumb‚Äù shame you and actually try to understand where you‚Äôre coming from/how to solve a certain problem. Thank you!
reminds me of [this pretentious turd](https://habr.com/en/post/440736/)

might be satire but it's completely unreadable so forgive me
Calm down, anyone can be an asshole in the web, its a part being free to say whatever you want. Your reputation wasnt hurt, you didnt lose your job and they got bothing out of it either. All i can say is those who hurt other people for no reason are usually very miserable inside. Shake it off and move on.
Would you be my mentor so you can be mean to me all the time?


Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam maximus tempor sapien, ut mattis ante fermentum eget. Ut dignissim dolor massa, eu fermentum arcu tincidunt sed. Nulla porttitor maximus lacus, vel sodales turpis gravida et. Aenean at lacus purus. Vivamus tortor nulla, accumsan et tristique at, volutpat ac massa. Curabitur scelerisque ut felis eu bibendum. Aliquam sed feugiat sapien. Nulla porta aliquam feugiat. Maecenas vitae ligula id lectus finibus eleifend nec ut elit. Proin in bibendum nulla. Phasellus vitae massa ullamcorper, aliquet dolor ut, scelerisque nunc. Donec aliquam imperdiet risus vel tincidunt.

Vestibulum ornare, justo nec suscipit vehicula, lorem lorem pulvinar tellus, id mattis diam eros convallis ligula. Integer quis purus magna. Nunc mattis bibendum velit in vulputate. Aenean lacus augue, semper quis euismod nec, tincidunt nec felis. Donec posuere, enim vel pharetra porta, dui arcu scelerisque arcu, vel molestie metus nibh quis turpis. Quisque eu pulvinar nibh. Sed ultricies urna mauris, vitae dignissim risus ornare quis. Praesent cursus pharetra dolor, quis ultricies quam lobortis eu. Integer rhoncus elit mattis augue facilisis congue. Vestibulum pretium faucibus ipsum id imperdiet. Cras varius fringilla aliquet.
yea thats not why I like this programming community. People genuinely help others
Hi, thanks for doing this.

I just have two questions.

1. What's the most important thing you have learnt in your professional career?
2. What are your general thoughts or important concepts to know with python in terms of cyber security (if you know anything about this)?
How do I actually learn this shit?  I‚Äôm in college and I signed up for the class but I don‚Äôt know Jack shit.  I bought 2 books and I still can‚Äôt figure it out.
I can totally relate. I made one post about how I thought the way JS handled strings was not great for me. The next response was ‚ÄúI just don‚Äôt think you know what you‚Äôre talking about‚Äù.
Thank you
I have two questions for you, FappyPant.

1: if python is so great, why are snakes so scary?

B: what's your favourite python thing? (A trick, a shortcut, deployment method, etc.)


I'm sorry that your peer was such a cock.  I'm very new to python and programming, and some of the community are great but a huge portion of it suuuuucks.  It's tough.
How did you learn list comprehensions?

I always get stuck with it... Whenever I need it I have to look up a source (usually Stackoverflow) and do the line of code accordingly, and an hour later I already forgot the syntax. It just doesn't sink in...
Why should I learn python?
i remember reading somewhere that strings equality checks below a certain length are basically O(1).. i have not been able to find my source on this since.  is this true?
There is ALOT of ego in software development unfortunately. There is always someone who knows more and someone who knows less about a specific thing. I don't get why people get so defensive and think that they have to prove that they know more than somone else, it's really quite pathetic.
I'm a network engineer and have been learning Python in my limited spare time for the last 6 months. My goal is to use Python to automate configuration (or checking state) of large numbers of network devices.

&#x200B;

Example of scripts I have written is parsing an Excel sheet and using information within to check and if necessary modify configuration on devices. Another one I use is a script that collects MAC address and ARP tables from switches, as well as interface descriptions, and builds a CSV file out of the data.

&#x200B;

I have tried to understand and implement multithreading for a while now, but I am really struggling with the way it needs to be implemented in Python. I use Python to connect to network devices (using the netmiko module), and being able to connect to more devices concurrently would greatly speed up my programs. In my scripts I usually need to write data to lists or dictionaries as I get my results, but with multithreading it's so hard to make it work.

&#x200B;

Do you have any advice on how I could get a better understanding of multithreading and queuing, specifically when dealing with a "master" dictionary or list that data needs to be read from or written into? Most information I find is either too simple and does not apply to what I need to do, or too complicated and I end up giving up before understanding.
I work a lot with SQL as you stated when you started in the field. Similar to you I come from another career background as well. My question though is where I can start with python to incorporate it into database work with SQL.
Wow, that will be a great post
Can you share with us list of these books that you have studied and affected your way of thinking of  programming in data science or python projects
Thanks in advance
Hi! Firstly a big thank you for doing this. I find in a position similar to your I am in my late twenties and just starting to learn Python. My aspiration is to be a data scientist. Can you guide me on resources which would help me in this
Not python oriented but more programming oriented.

Do you believe there's a point at which someone just doesn't have the mental capacity to become a better developer or is practice always going to make you better no matter what?

(I sometimes feel I'm not clever enough to grasp new concepts and feel like I just don't have the brains for that)
So, I want to learn some network programming with python3. Where do I start and which books are up to date, so I can study them for my purposes?

What other good resources are out there, which you would recommend?
[deleted]
I am having a hard time understanding dataclasses, particularly using the fields. The information out there is very dense and I would appreciate an example of a good use for a dataclass with a field!
Where do you stand on other languages in python files. Big fat SQL blocks? Html templates? Gnarly regexes? What lines do you draw in the sand before it gets a new file on its own with a corresponding extension?

Good on you for directing your negative energy somewhere positive.
I enjoy with transactional type processes with data (taking raw data and processing it to the final product). I also enjoy the organizational and methodical process and efficiency. Are there certain roles that I can look into? What are some additional things should I learn? I am not good at data analytics or anything data science-y. I'm not a great abstract thinking, I'm more of a concrete facts type person.

&#x200B;

Thanks for doing this!
> EditEditEdkt: I changed my mind about being so hostile to the person who gilded me. Thank you kind person, for giving me an imaginary thing to put in my butt while I masturbate.

HAHAHAHA... Nice!
Inspired by the way you turned a negative into a positive. Thanks for sharing and helping.
Is there a way to visualize how functions you write in python measure in terms of big O notation? no matter the tutorials/posts i can't seem to get it, and people i ask either send me a link of search results or use more maths!
Can I ask you questions about music theory?
Thanks for this, i learnt a whole lot reading this thread
Toxic assholes like the one you just described dealing with are the real problem in the industry, not the newbies asking for the right way to approach problem solving. (You're not a newbie, of course.)

I have no gripe with advice like "please never do it that way" but not the shaming. If anyone needs to leave the industry, it's those assholes.
If I am learning python for finance purposes, are there any other languages specific towards finance and making it easier to develop algorithms?
You‚Äôre the kind of developer we need more of in the world. I have two questions:

1. I will be graduating in December. What are the main challenges from going from schoolwork to actual work?

2. What is the general structure of a python program? Java is my first language, I am used to classes and a main method, how is python different?
I hope i'm not too late for the party.

Can you help me with generators? I was asked about them in an Interview some time ago and had no idea. After the Interview I did some reading about it but couldn't wrap my head around how to use them and why.
Here you go OP, so I have this question and it's a weird one for me to answer. OOP (this just doesn't apply to Python, but let's say it's a starting point), besides like one or two examples I have never really seen some good examples of OOP. 

Now I know **what** it is conceptually, and it makes sense. Just yesterday I used it to make a small script of two warriors who fought, but what I REALLY want to know is this: 

1. How do you know when it's right to be using OOP on a project? 

2. Could you provide a plethora of examples of usages of OOP in projects. The only things that even make sense for me are like GUI applications and maybe something I've done it test cases like a wallet to keep track of. Other than they, actually visualizing how I'd use OOP is a pain. As an example, this was a small script written by me and I'm wondering how you would personally convert it to OOP if you had to: https://github.com/SolidHabu/hiddenDirCheck.py

3. 3rd unreleated question, what do you typically use to plan out what or how your program is going to be designed? For me I honestly just start writing, this however requires rewrites and redesign a few times over.
Okay so I'll shoot multiple things at you. It's more or less random things I either wonder about or that are currently floating around in my head. Feel free to answer one, many, all or none. There already is a ton of questions and I bet you're busy yourself outside of this thread so I won't take it personally. Just a little information about me: I am studying business and computer science. Well not exactly but there isn't a real English term for it as far as I am aware. Basically a lot of business stuff, project management, how to model things properly so developers understand what you mean and the models are generally easy to read and logical, some database stuff, quality management, business software, theoretical informatics, math. We also learned Java and with it object oriented programming for two semesters. Well "learned" as much as you do in effectively ~9 months of 5-6 hours of lectures a week plus assignments. Currently I am working at a freaking huge company for my internship and as one task came up I had to teach myself some python about 3 weeks ago. Having some knowledge of Java and the general logic you need when programming certainly helped but I'm still new to Python and more serious programming in general. 

Here it goes:

1. There is an online game that I am playing. Since I have multiple accounts I sometimes switch between them. That requires me to completely close the game (suboptimal decision on their end to not allow a logout but whatever), reopen it, select a server, look at my file with usernames and passwords for that game and enter one of those combinations. Granted that this doesn't take too much time people always say to program something we "need" to actually stick to it. So I thought a script/small application which does these things for me would be cool. So I'd need to interact with that game's client/window to change the server, detect the text fields and input the relevant information. I googled and found pywin32. If you know it, would you say that that's the right library to use? Or would you advise me to use a different one? If you don't and don't know any other way to do that just ignore this question. I don't want you to do my research for me, I was just curious if you've had any experience with it.

2. Something (hopefully) simpler. Say I get a json object from somewhere. The json doesn't just contain key value pairs but actually arrays. And I want to parse just one specific value which sadly happens to hide inside the array. Basically like this: {"data":[{"key1":"value1", "key2":"value2", "key3":[{"key4":"value4", "key5": "value5"}]}]}. Now if I wanted value2, how exactly would I do that? Would I actually have to load everything else inside that array to access it? What if I wanted to access value4? Would I have to someone load that array into a dictionary? And for value4 I'd have to load originaldictionary[2] into another dictionary at which point I could access it with newdictionary[0]? Doesn't that get very slow if the json is very big? 

3. About the task which I learned Python for. Just wondering if my direction was approximately a good one or if I should throw away half of it and redo it. So basically the team I am working with is working on a webservice that offers an api which, provided with the right information to the right endpoint, returns data which allows those using it to save time, make better estimated regarding pricing and other useful information. Don't want to go into much more detail for obvious reasons. So this service is sitting in (or on?) the cloud where we have a tool monitoring its performance. It also informs us if something was to go boom. What we didn't have was a way to automatically and regularly check the endpoints from a user's perspective. Basically we only knew if everything was running properly but not if people could actually and reliably access the service (unless they told us of course). That's where I came in and my task was to write a script to do exactly that.

Basically my script right now looks like this: first of, to be always running it's pretty much running in a while True loop which calls a function where everything else is controlled. Probably so far from good idea that a decent programmer wouldn't even see it anymore but that's the first thing that came to mind and for now it's been working fine. Anyways, it then picks a random piece of (valid) data to send to the endpoints. It then calls the functions to actually send the data one after the other (nothing parallel). Inside each function it first picks a new UUID to send with it for tracking purposes, does a post with requests and then checks the status code of the response. If it's 200 it simply appends the name of the endpoint and the status code to a string. If it's any other code it still appends that to the string but also writes that information into a separate file, as well as the error text *and* sends an automatic mail to the responsible people using smtplib with the same information.

When all of the requests are finished it opens a file (basically log.txt) and appends that string together with a timestamp. It then sleeps a time which has been set in the config.py file before looping around. Every X loops (which is determined by dividing the "how much time should be between update mails" through "for how long should this script sleep each run?") it sends another mail with information about how many errors have occurred in the last X minutes, how many requests have been made as well as more detailed information about how many errors per endpoint and the error% per endpoint and for the entire thing.

All strings, information to be sent as well as error counters and loop counters are global variables because they are used multiple times throughout the script by different functions. Oh and it also deletes the entries that are older than a week so the file doesn't get too big. The errors are documented in a separate file anyways where nothing is deleted from.

I think it would be way better to actually show the code than describe everything but I'd have to remove a lot of information. If you want I could do that later or tomorrow though and show that to you.
Hi.
Great approach!
Have a situation here.
Having a problem with testing `boto3` and got stuck on this and nobody answer it: 
https://stackoverflow.com/questions/56458741/how-to-fix-mock-dynamodb-with-moto-still-tries-to-config-the-aws-config
 
If you could just point out what I'm doing wrong or missing .
Thanks
Its hard when people make assumptions. I see it a lot, the arrogance some have in this community can be very off putting for newcomers and generally doesn‚Äôt help anyone. Glad you brought this up so we can at-least have a discussion.
First some background about me before I ask my question.

I'm 26 and by trade, a mechanic for the last 10 years and it's all I know. I was recently diagnosed with muscle related problems that have made my job very difficult so I had to leave the field. I have always been interested in the tech field, and have recently took up designing and developing websites that host simple games, blogs and sometimes even just the basic static pages. I started by using random tutorials then invested in some Udemy courses and am trying to get into college for computer programming (just a diploma, I'm from Canada). I have zero confidence in myself because  I've been serious about it for around 2 months now, but still have zero confidence in my programming, even though I can figure most things out on my own and with help from stackoverflow or related tutorials.
Now that you have some background my question is:

 Can somebody like me get a job in a programming related field based on the skills I have, with or without school, and is asking for help all the time normal? 

I was quite fluent in my previous career and feel useless when trying to learn a new one, and quickly because I need money, it's an awful feeling!
How can I play an audio file (.mp3) in python? If I try to play it with Pygame, it shoots out an error.
Honestly when they come off that way, I say f\*ck em. Or "go k1ll yourself as you are of no use to society"...i have ZERO sympathy for people that are insensitive...and i dont care whats going on in their private life either...because take it out on strangers, anonymously, online is absolutely b1tchlike of them.

&#x200B;

I wish that f\*cker would show his bitch ass on here..id looove to play....
You know, I once had a job interview with a potential future head of the department so deranged from commonfolk and autistic that he made me actually question my whole career in IT. Mind you, the only career i EVER had was in IT for more than 10 years!

&#x200B;

Sometimes you just have to get over the assholes. A lot of the times they don't mean it - it's just their upbringing/mentality/childhood traumas speaking through them that mess things up for you in the short run.
That's the net in a nutshell. Pseudonym org brings out the worst in some people.

However... I wish you well for your endeavour and hope that it rubs off on others.
Good on you!
Got no questions, pure respect! Be the change
> So, I'm taking all my anger at that person out on this sub. I'm going to spend all day tomorrow answering all the questions I possibly can on learnpython in the kindest way I can and with a mentoring attitude 

"If you want to make the world a better place, take a look at yourself and then make that change" *--Michael Jackson*

Well done.

And to be fair, you should name and shame.
> EditEditEdkt: I changed my mind about being so hostile to the person who gilded me. Thank you kind person, for giving me an imaginary thing to put in my butt while I masturbate. 

Username checks out.
Do you have any advice on a high school student trying to apply for a Python developing job/workspace? Where should I go to apply and what positions should I look into
I think too many technical people are just mean.
RemindMe! 20 hours
Can you send me a link to the original tweet you sent? As a data guy myself I'd like to see what the other person thought was such a terrible idea. Just for reference.
I truly appreciate your attitude towards this situation, as I can practically guarantee that mine would not bear a reaction as positive as yours, and hopefully I'll remember this next time I put my petty-asshole-insta-response‚Ñ¢ into overdrive, because this is a fantastic response to a caustic interaction.

Because of people like you, my skills in Python have grown monumentally, and I don't know if I'd believe how far I would have come if I would have been told when I'd first started programming.

We programmers are a community, and it takes a community to raise a programmer (also, coffee.)

Good on you!
> [It made me really fucking angry](https://youtu.be/q5q77MQzU2Q?t=19)

Totally unrelated, but you verbatim quoted a line from one of my favorite videos of all time.
Wait, are you the person who got pissed the destroy all software guy because you asked a question that seemed ridiculous until you explained it?

The bank guy?

Like, he told you not to imagine problems.

You told him why it was going to be designed that way.

And then he told you that you should be hiring a six-figure consultant for something that important instead of just tagging things people on twitter?

Like, if you aren‚Äôt that‚Äôs cool.

If you are you were hostile even after he explained that he thought you were designing something new and that‚Äôs why he told you not to complicate it.

Like, we should all be nice to people who are learning to code, but we should all be nice to people who are trying their best to answer a question without any relevant information.
Music Theory Questions:

Is there an instrument that would visibly demonstrate octaves being half the length of the original string? I suppose you could make one and tune it, but then as soon as you attempted to shorten the string via pressing against it, you would increase the tension and therefore at least slightly pass an octave, right? It would be really cool to have a scale demonstrated on a single string, for students.

I have another question, and this is a little nuts, but whatever. Are any of the patterns seen during resonating a material on a plane (e.g. the patterns that rice make on a speaker) something that would be created by projecting a 3D or greater shape onto a plane? That's pretty esoteric, but hopefully you can address the first question anyways.
[deleted]
[deleted]
cursed edit
[deleted]
I‚Äôm a bit late but how would you recommend I basically learn learn python. Like I‚Äôve got the basics down like Reddit scrapper, discord bot, ect. I‚Äôve done all the basic beginners projects but I‚Äôm totally lost on what to do next. I wanted to automate something with selenium and did that. But when I thought I knew everything I went on GitHub and realized I knew very little ;). Any ideas what to learn next?
Just don't read hackernews and never go to stackoverflow :)

But yeah, op is the best and we should all follow in this example. Cure our online shitholes somehow
Upvotes for everyone!
I'm going to answer this in full tomorrow. It's a legit hard question. Everyone on the internet wants to pretend it's easy. But it's not. I'll do my best in the morning.
I think as a rule of thumb, the next time you need to track a variable or two across function calls, you can use a class instead of functions and globals.

Or when you want to add a function that'll work slightly different per subclass. Like if you were making a game and had `Actor` as a base class, the `Ball.update()` method would work a little differently than `Cube.update()`, but would still be called in the same place, regardless if the Actor subclass you passed around was a ball or a cube.
I second this. I'm generally familiar with what a class is and how to define one, but don't have a sense of the kind of things they are used for.
I like to imagine my code as a factory with robots in it. The information in working with is the resources and gets transformed into the product.

If i would imagine a robot doing a particular process to my data,  i turn that process "robot" into a class. 

If i need to assemble lots of data together to make something, i turn that thing into a class that continues to get passed along the conveyor belt

I am currently working on some pipeline tools for vfx. A control system for animations need to get created, which is made up of smaller systems, each with intricate parts, that can be arranged in many different ways for different characters.

I have a factory class that schedules everything to be built, i have joint classes that are the bones of a character to be animated. I then have system builder classes that act like individual robots/machines on the production line that take specified joints, and build a particular control system into them (eg a stretchy limb system, or a system to make it aim in a particular direction) the ui lets you queue up these builders in the factory, and a "build" button starts the factory working, triggering each robot to build its system, one at a time.
[https://www.reddit.com/r/learnpython/comments/bxjxec/help\_with\_refactoring\_into\_more\_ooplike\_code/](https://www.reddit.com/r/learnpython/comments/bxjxec/help_with_refactoring_into_more_ooplike_code/)

&#x200B;

you find writing classes really confusing because you likely have never really needed them. You can avoid writing classes in python for a very long time (unless you work on bigger projects) as opposed to Java where everything has to be in a class.
> How do I learn the Object orientated approach in Python? I always find writing classes really confusing. How do you decide which class to write and what to write?

Here's how I think of this: Classes are just a level of abstraction, just like a variable or a function is.

Need to refer to a value more than once? You make a variable. Need to do something more than once? You make a function. Classes have variables and functions in them. Need to do something with variable and functions that are closely related (say ... the variables are the outputs of the functions?) more than once? Time to build a class.

The next level of abstraction is design patterns, where you have patterns of class interactions for when you need to make a program structure multiple times.
I was in the same boat and felt like I understood the basics of classes but still felt like I didn't quite understand OOP, and then finally had the light bulb moment when working on a small project where I implemented different types of simple linked lists and binary search tree data structures.  I  think it helped to work on something that I could visualize all the objects and how they related to each other.
my general rule of thumb is when you are repeatedly giving functions the same inputs and getting some kind of modified state out of them
This is a huge question that goes well beyond Python. If anyone else is wondering about this, you will find a lot of material that talks about this in the context of Java, C++, C# etc. Just thought that might be useful if you're really wanting to learn about OOP in general - don't look up "Python objects", look up "object oriented design".
I use classes as I love their instance.variables, they make it easy to share data between threads or paces in ioloop I guess. Maybe that's not a great practice but that's what  I do.
Yes, be the change you want to see, brother. It‚Äôs so fricking hard in the moment. But I admire your strength and tenacity. Keep it up. We‚Äôre rooting for you.
I'm learning too, and I've made the (possibly unwise) choice to try to do this 'right'/'well' rather than just turning stuff into classes, which is fairly trivial after a couple of tutorials. The trick seems to be exactly your last question. My answer so far is when you've a bunch of functions operating on the same data, it might be clearer to group those functions into a class. ie if you've a piece of data or two that are frequent arguments to functions, maybe consider grouping them into a class. A toy example would be several functions with arguments: `car_name,` `car_data_dict` (ie `{'num_wheels': 4, 'paint_colour': 'crazy', 'human_driver': True}` \- maybe you need that `Car` class all the toy/tutorial examples seem to use.

&#x200B;

The second part to that question, what should you write, as far as I can make out, depends on how you will use it. It doesn't seem to be an easy question, which of the previously referred to functions to put into your class. I've read, and so far from experience it makes sense, that you only put one 'layer' in each class. So if I've a class for my car above, I don't give it methods that do file I/O or user I/O - let it have a method that returns something that can be saved (eg JSON, or a tuple containing database fields), but have another class or function do the writing to file, taking user input etc. Another way this may work out is if you want your car to 'move' - say in a game, you could separate the car's details from 'running' methods and details, so you could have a `RunningCar` class with methods like 'break', 'accelerate', etc, while the car's more static details remain in your Car class which might be an argument/attribute of your `RunningCar` class. Where you put attributes like wear/tear level, gas/petrol tank level might be more questionable, but you can have a method on `RunningCar`, say `RunningCar.move()` update `Car.petrol_level`, if you want to bundle that data with your `Car` class rather than in `RunningCar`.

&#x200B;

This seems fairly comprehensible in my head, which either means I 'get it' or I have no idea what I'm talking about - I lean toward the latter. It doesn't seem like a problem with simple or obvious general answers.

&#x200B;

Also - the `Car` class in my example seems to primarily be a data container, it might have some methods for parsing arguments, transforming data into a serialisable/savable format, but primarily it holds data. So [data classes](https://realpython.com/python-data-classes/) might be a something to look into, as long as you understand what they're going to do for you without you seeing the code. Looking into `@property` for attributes isn't a bad idea either - but like classes, it's a 'you don't really need it until you need it' deal, although unlike classes, you can just stick `@property` on a `def my_var` without changing the code `MyClass.my_var` to access it, which is lovely.

&#x200B;

...the other less mentioned (I think) element of OOP over functional programming in python is the readability of `my_classroom.students[6].avatar_path` over `my_classroom['students'][6][3][1]` or similarly hard to read nested dict/list structures. \^ in that example the Student object doesn't hold a lot of functionality, but being able to write [`Student.name`](https://student.name), `Student.avatar_name`, `Student.avatar_path` has been very readable over the alternative (even over `student['name']`, helps when you consider the cumulative mental work to parse similar constructs) and demonstrates the skill required in designing interfaces, since I originally had `Student.avatar` (and don't currently have an `avatar_name` attribute), but if I want to add an attribute/property that actually returns the image itself, rather than the path to it, I can use `Student.avatar` without changing anything else.
This is a question close to my heart. I'm 39. I didn't start even thinking about technology in any way until I was in my late 20s.

&#x200B;

The only important thing for a junior hire--in my opinion--is whether or not you can think your way around the problems my team needs to solve. I \*almost\* don't care if you can write any code at all. It's all about how you approach problems. I also know this is pretty much useless as advice. But it's the truth. That's all I care about.

&#x200B;

If you have some code skills and can write some control flow, that's fine. I don't care. Anyone can learn to do that in a few days.  


Don't waste your time on coding exercises. I don't care. Do logic exercises. Learn to think more effectively about problems in general. Learn to map problems to existing solutions. Learn to generalize. If you're 39 and have been working most of your adult life, figure out a way to map your existing experience to a coding job!

&#x200B;

The most important thing about almost any job you can get that involves python is not python! It's whether or not you can sell yourself to the interviewer as someone who can solve problems.

&#x200B;

I will and have hired juniors with no experience whatsoever because they can think their way around the kinds of problems. I am not the only one who does this. I was hired into my first job this way. As a total clown who knew nothing.

&#x200B;

The only thing that matters is whether you can solve problems. So maximize that trait.
When I'm hiring, I'm not looking for a "blow-me-away" or "dude-knows-his-shit" example. I don't hire for a specific language or a specific set of skills. I'm looking for a person who can think, in a specific way, about the kinds of problems my team needs to solve.


My code exercises are fizzbuzz-ish type things, and they are never live. You take them home and turn them in when you're ready. Real problem solving doesn't happen at a whiteboard or in real time. Do you know basic control flow in *any* language? That's great. You've passed the test. After that in the live interview I give general logic tests, not code tests. Can you reason your way around a convoluted business problem? I use real examples from my current and past product teams. We need product X to do Y or Z depending on some combination of AFDP and Q. AF and Q are in direct conflict with each other. Are you picking up on that? Are you able to communicate it well? Congrats. You got an offer.


In other cases like when I'm hiring QA people, I'll do a pure logic challenge. In my experience, QA people have to be the absolute best at pure logic or else they are shit, and I can't stand having QA people falsely attribute causal effects. So I use this test for the real-time interview: here's the incidence of a disease. Here's the sample size. Here's the test and its accuracy for both false and true positives. If I hand you a test that's positive, what is the likelihood of you actually having the disease. I know it sounds like a stats problem, but it's approachable through pure reason without any math besides basic arithmetic. I need my QA people to be able to think like that.


I don't look at social profiles, github, or anything else. I look at the person who is applying and try to figure out if that person can help me solve real problems on my team. The game changes a little when you're talking about hiring senior people or architects, but it changes less than you think it might. It's never about how well you know X language. It's always about how you approach solving problems. Senior positions are *always* about architecture.


My current role uses only C# and sql server. I don't know jack dick about C#. I mean, I read a book when I started the job and learned how to make it do what I want. The bottom line is that the vast majority of jobs out there in the real world are not silicon valley-based jobs where the tech is the product. Most jobs are at companies where the tech is *not* the product, and your language skills don't matter. What matters is if you can work the problems the product team needs to solve.


None of what I'm saying is going to help you get hired at a FAANG company. They are totally different. I've never worked at one before, but I am interviewing for one of those, so I guess we'll see how that goes.
I enjoy cooking.
Unless you clearly demonstrate or least indicate with your question that you've tried/searched already, it's a fair assumption.  Many people default to simply asking others before they spend the 5 minutes trying to solve it themselves.  You can get upset at your audience for assuming you didn't do the work, or you can spend an extra minute letting them know what you've done already.

This might not be 1to1 in OPs case because twitter doesn't lend itself to long explanations.
Interesting takes. Nice.
I enjoy reading books.
May I ask you a question about yourself? I don‚Äôt mean this in anything but the most positive way. 

Who the fuck do you think you aren‚Äôt? You‚Äôre competent with more programming languages than I knew when I got started? Who says there‚Äôs a magical point where you get to be called a developer? Do you write fucking code? Does your code do things? Well, then your a developer. You have developed things. You‚Äôre a developer. 


I don‚Äôt know you, but I want you to feel more confident about what you know and what you can do. To answer your question very specifically, if you want a good job, be good at doing a good job. No one cares if you know c# or Python. People only care if you can do a thing or two. 


Please, for all of our sakes‚Äô go get your ass our of your fear and go get a job you want. I‚Äôm in a hiring role, so are many, many people who want people like you to apply. Just give us a chance to hire you. 

Have some faith in yourself so that we can have some faith in you. Otherwise we don‚Äôt know who you are or where to look.
Also not OP, but something to add - in addition to the technical learning, absolutely Google "The Zen of Python" (aka PEP 20). It's super brief and not at all overwhelming. 

It helped me a lot, and I return to it often, because it succinctly describes a lot of the *reasoning* for how Python is built and most effectively used. For some reason this is the thing that made Python (and even well-crafted code in general) really click for me. It's what turned Python from just another programming language option into something I deeply love. I've even come to realize that I apply some of it's principles in the rest of my life, outside of programming altogether.

I don't want to over-sell it, but seriously give it a quick look and try to keep it in mind as you learn and practice. It's an excellent way to find focus and narrow down your decision-making as you grapple with problems, and to find a sort of "path of least resistance" as you learn Python. It's really wonderful, or at least is has been for me.
It's the Bill and Ted technique.
This is a thing I will address in the morning. There‚Äôs a huge amount to talk about here. Sooooo effing much to talk about and none of it is simple or easy.
Abstract Syntax Trees are at the core of everything we do in programming. Sort of. 

Unless you have a very specific problem that requires using an AST, you don‚Äôt need that. And if you think that a regex is the right solution, you are also wrong. ASTs and regexes are almost always the wrong answer. 

Look for a different solution. 

I don‚Äôt want to hand out solutions here, but I hope that helps.
Exactly this. No reason to believe anything that was said, and his attitude is as bad as what he claims the other person's was. Post should be removed.
>First, we don't even know what you asked so we can't verify if your take is even legit.

Read: "I want to know what you said so I can see if it meets my standards".

And what he specifically said was not "you can learn how to program in a few days": 

>If you have some code skills and can write some control flow, that's fine. I don't care. Anyone can learn to do that in a few days. 

IOW, anyone with some aptitude can learn to write for/while/if. It's a kinda fucky sentence, to be sure... but it's doesn't land on "anyone can learn to program in a few days" by any means.

Way to strawman.

2ndly... I don't see what the problem is at all.

Since it seems you're that concerned about ops cred, then put all questions of legitimacy to rest and do your own 12 hour Python AMA and see who wins. FYI: The winner will be /r/learnpython.

Or... you could jsut complain and spend the day waiting for opportunities to grade his responses.

I have been complaining to the Python software foundation about this exact problem for years. I have a presentation I‚Äôve been trying to do at pygotham, pycon, and at everywhere that does these things. It‚Äôs called, ‚ÄúIntro to Intermediate.‚Äù and it‚Äôs all about how your get from where *you* are to where *I* am. 


I‚Äôm not going to pretend my pitches to those confs were good.  They weren‚Äôt.
I've seen you've got some other answers, but look into [enumeration](https://docs.python.org/3/library/enum.html) too.

    import enum
    class Months(enum.Enum):
        JAN = 1
        FEB = 2

etc.

Then you can use `Months.JAN` as your index.
So is your text file something like:

    jan, feb, mar, ...
    10, 8, 4, ...
    11, 9, 10, ...

something like that? Where each column is a month and you want to load the values underneath that column into a numpy array?
> So, do most of the people go through documentation/stack overflow everytime they write some code?

If you're looking for a specific module but can't remember (or you don't know) which one to use, there's no shame in looking it up. Actually, there's never any shame in looking anything up. If I haven't used a module, like, at least 20 times, I will most definitely have to Google 'how to [thing module helps me doing] in Python'. Slowly but surely, these things will become second nature to you.
Nope. Not gonna let you stalk me on twitter. I need to keep things separate.
I am the absolute worst about procrastination. No joke. You don‚Äôt even understand. However bad you are I am a million times worse. 


The way I get around this is that I trick myself. Always have something you want to do that‚Äôs more fun than what you have to do. And then spend your life chasing what you want to do. And also make sure that it‚Äôs what you want to do. It‚Äôs very complicated and I don‚Äôt recommend it. You could try being well-adjusted, but that‚Äôs not an option for many of us.
> e that out, you can probably do what I do. No cleverness needed. If there‚Äôs one thing I want to make clear here, it is this: everyone can do this this. Ye

You need to solve a problem that bugs you. Think about your ordinary day life - is there something you'd like to do with code? Do it, and it becomes a bug. Before you know it, you've got a monster that you keep adding to. My problem is/was a media library (so I can check if I've got xyz game or music already).
Thank you sir or ma‚Äôam for your kind words.
What do you think your bad habits are? What do you think your good habits are?

My sad personal experience is that in fact, they are reversed.
Second: Yeah, I'll do one on react native right now: Don't fucking do that.

&#x200B;

Here's the thing: it is never worth your time to use cross-platform garbage. It's always crap. If you really can't be arsed to make a native app (and this is sometimes true), focus all your time and energy on a web app that performs well on every platform.

&#x200B;

A good web app--by the way, I don't mean react--designs you around page refreshes and doesn't have to deal with async, and when you do, lets you offload async to other scenarios your main app doesn't care about.

&#x200B;

Fuck react native. Fuck it hard. Fuck it until it dies.
Why? I have been consulting StackOverflow for over a year and didn't get that vibe. It is true that I only have asked a question, but even then I received nothing less than useful comments.

That site looks very civilised to me.
It stretches until it doesn‚Äôt.
Hi fucked off so , I'm dad.
I would check out Squarespace if you want a one-stop shop for your website and don‚Äôt want to make it yourself. They can handle you customer facing stuff and shopping cart and payments. 


You would need to figure out how to feed data from your bot into your dashboards, but their support team will pretty much build what you need.
The math you need is going to be domain-specific. I‚Äôm actually not very good at math myself. I tend to lean on other people pretty hard beyond the conceptual stuff. You should know how mathy things work, like when to apply a technique and when to avoid it. But do you really need to know diff-eq or topology? Not unless your work demands it. 


I think a large part of the value of studying math‚Äîfor our purposes, anyway‚Äîlies in the formal discipline and training your mind to think rigorously and logically. And that is incredibly valuable. I would recommend studying logic. So much of what we do revolves around reasoning about systems, recognizing logical patterns, and reducing problems to Boolean algebra. You just can‚Äôt overdo studying that, in my opinion. 


As for practicing python, I‚Äôd say this: wrote some code every day. Doesn‚Äôt matter how much. There‚Äôs two aspects to programming. There‚Äôs the pure mental function where you grok concepts and patterns. But there‚Äôs a wrote aspect as well and you want to develop that every day. 


A storm blew through and knocked my power out. I‚Äôm replying from phone and it‚Äôs slowing me down.
Not the guy, but I'll have a lash while you're waiting:

1. Magic methods for sure. These are the `__underscore__` methods that you've seen already (defining the `__init__` method of an instantiating class,`if __name__=='main'`etc). A lot of the common syntax in Python is defined for different types of objects using these methods, and understanding them is a good first step toward learning how the language operates under the hood. For instance, ever wonder how you can use the`in`operator with both a string and a list, even though the operations required are clearly different? It's because both`str`and`list`both implement the`__contains__` method. Here's a great lecture on the [topic](https://www.youtube.com/watch?v=cKPlPJyQrt4).
2. ML is a deep topic, and the answer depends mostly on what you want to do. Pandas is enormous, and does take some learning all of it's own (i.e., you can't just learn Python and expect to be good at Pandas for free). Basics of Pandas and Numpy will get you up and running, from there you'll be looking at the ML libraries (likely `sklearn` or `statsmodels` to start). How much goes into to it outside of gluing library code together is up to you, but yeah you can do a surprising amount by just calling `model.go()`.
Sounds like you're doing well with Python. Feel free to try another language, maybe consider something strongly-typed like C or Java. Don't forget to make time for the theory side of things as well, data structures and algorithms are important (as well as basic computer architecture and networking).
I‚Äôm a calm motherfucker, motherfucker.
The best advice I have for you is to go out and apply for the job you want. In my opinion, good QA people are often the best situated for developer roles because they have a really good handle on cause/effect. Are you able to write the kinds of control situations you need? Do you know when to use a while vs. a for loop? You probably do. So go out and get that job you want. There's no downside to applying.
As someone who got into selenium Java automation from manual qa, my advice would be just spend 1 week on basic language syntax, then another week on whatever tool you want to learn. Then start automating a website. You will learn bunch of stuff this way. Then you can go back to language learning. This time you will understand design concepts more clearly.
1. don't be a dick. Who you are as a person is \*far\* more important than what you know
2. python and cybersecurity are mostly unrelated unless you're a bag of dicks who still uses 2.7.8

To expand on point 2:  I ran into an issue with the implementation of Decimal in that version  of python that sucked satan's ass. So don't do that.

&#x200B;

To be serious, I'm not really sure I understand your question. Are you asking if Python itself is safe as a programming language? Or are you asking if the things people do with it are secure?
JavaScript is such a bad language that it's entirely possible that you don't know what you're talking about \*and\* it was doing things that were not great for you.
My favorite thing about python is \*literally\* that it is Python! 

&#x200B;

No compile time; no deploy asshattery. I can run a stream of constant data and update my code without having to replace a binary or switch a service. Python does what I ask it to when I ask it to do it. That's a beautiful thing.
Not OP.

The way I‚Äôve helped people in my team understand list comprehension is to first do it as a full loop/nested loops and once they understand the logic, start collapsing it into a list comprehension.
My first question to you is when do you think you need a list comprehension?

What are the cases where you need to look them up? What are you trying to do with them? How are you using them in your code?
Should is too strong a word. I don‚Äôt think anyone can say you should. Maybe you don‚Äôt need to learn any programming language at all.
Hey, fellow network engineer here. Look into Celery for python. I built a web facing queue behind an Nginx proxy to Flask which accepts requests and executes changes in my network based on the user request. 

A master dictionary is essentially a database, which Celery requires to share information between processes. Let me know if you need a hand! It was a super fun project to build.
I work a lot with SQL too. A fair amount of my day job is running queries and returning results. I've been working with Python to do things like split files and such, but the either day I wrote a script that does the following:

1) parse a really weird financial report
2) run 5 underlying SQL queries using pyodbc
3) assembles the data from both into identical data structures
4) asserts that all the values are equal
5) writes all of this back to the original Excel spreadsheet using openpyxl

This audit script for this report takes approximately 15 seconds to do what took me ~30 mins. doing it manually required either VLookups or just a person verifying that the numbers match. Now Python can do it and leave zero room for error.

Check out pyodbc. You can run literally any query with it. Return results, execute procs, modify DDL, whatever you need. It's pretty cool üòé
Remove the word developer from your question and ask yourself the same thing. 

Developers aren‚Äôt special. We aren‚Äôt in some special class. We are just people who solve problems in a certain way. That‚Äôs all. This isn‚Äôt magic. There‚Äôs nothing special about what we do. It‚Äôs mostly just being really good at a certain type of logic. Are you clever enough to understand true/false? 

If you can figure that out, you can probably do what I do. No cleverness needed. If there‚Äôs one thing I want to make clear here, it is this: everyone can do this this. Yes you. Even you. Every you.
Not OP but I can remember a time where I thought I'd never be able to figure out even basic programs, spent months reading books and getting nowhere, turned out all I needed was a good teacher. Now I am in charge of a team of developers and still sometimes we are faced with problems that I don't have any idea how to fix, we are also based in the financial industry so Google/Stackoverflow is often useless for certain problems. All it really takes is being open to asking questions and spending some time breaking down the problem and discussing it, usually with a lot of whiteboards. One thing I would say is that programming is easiest to learn when you're actually doing it, if you're not sure how something works, get it installed on your pc and just play with it for a while. You'll learn a lot just by experimenting. If you see something that doesn't make sense to you, try it out, test it, go nuts. There is a logic behind everything and it just takes time to figure out how it works, different people are better at solving different problems so what might take one person a day might take you 5 days but it doesn't make you worse than them as its likely there are also things they would take longer than you to figure out. Work out what your strengths and weaknesses are and use that to your advantage. And never think you know everything because there is always more!
What do you want to know about networks? And why do you think Python is the best language for controlling them?
Not that I‚Äôve ever heard of. At least not in a meaningful way. Like, what would it mean to give such a test and what would the output indicate?


Software engineering is way more about solving human problems than it is about writing code. How would you make a test to evaluate if a person can solve problems? What problems?  Any problem? All problems? In many cases just figuring out if there *is* a problem and clearly defining it is 95% of the work. True, actually fixing it is the other 95% of the work, but the point still stands. 


Software is applicable to literally every problem in the universe. The domains you can solve in are endless. There are people who know everything about the python programming language and spend all or most of their time solving problems that python has created! But if you send them to work at Target and say, ‚Äúwe have a problem with shoplifting‚Äù that same person who knows python to the core might be at a total loss. That person might be the definition of technical literacy and write perfect code all day every day. But maybe not the right fit for any given software engineering position. 


Can you identify a problem somewhere in the world around you? Can you do a small thing in code to mitigate it to some degree? Can you clearly articulate the trade offs you had to make in your design? The answer to all of those questions is probably yes. So congratulation, you passed the test. You‚Äôre probably better at this than you think.
I don‚Äôt like large chunks of literal code as a string that needs to be executed *anywhere* in my code. To me there‚Äôs no difference between a big block of SQL and if you had a big block of python in a string and just eval() it. Why would anyone do that? There are almost always better ways to get that done. 


Exceptions apply, as usual. Particularly for web templating like jinja or mako. I like to separate my code by where it‚Äôs operating in the app. Is this code operating at the presentation layer or the logic layer or the service layer or data layer?
You might be interested in ETL work. There‚Äôs an entire field of ingesting, transforming, and storing data. You might want to read about data warehouses. There‚Äôs a book by Kimball that pretty much defines how data warehouses work and what ETL is needed. It‚Äôs very detailed and very concrete.
Not that I'm aware of, nothing specific to Python at least. Is it the big O notation theory you're struggling with, or performing a big O analysis on your programs?
C++? If you're talking HFT, then you'll likely want something natively compiled.
The main advantage is that you don't need to store the whole data-structure in memory. When you do `x = [i for i in range(5)]`, the right-hand expression gets evaluated to `[ 0, 1, 2, 3, 4 ]`. However when you do `x = ( i for i in range(5) )` the right-hand expression gets evaluated as a generator object. The full data structure is not in memory, just some sense where we currently are in the (traversable) data-structure, and some way to calculate the next element in the series (`current += 1` in this case - a way to 'generate' the next value). It isn't something you'll need often for those performance reasons mentioned, but it helps to document code as well: If you see a generator, you know it's just going to be used for iteration, and so you're communicating to the reader that you aren't going to be indexing this list, just iterating through it. Does that make sense?

Try playing around in a python shell to see if you can get the behaviour a bit more. Try doing `>>> (i for i in range(5) )` and `>>> (i for i in range(5) ).next()` a few times and see the difference when you do `>>> x = (i for i in range(5) )` and `>>> x.next()`
> Is there an instrument that would visibly demonstrate octaves being half the length of the original string? I suppose you could make one and tune it, but then as soon as you attempted to shorten the string via pressing against it, you would increase the tension and therefore at least slightly pass an octave, right? It would be really cool to have a scale demonstrated on a single string, for students.

https://en.wikipedia.org/wiki/String_harmonic

You're only lightly touching the string, so tension doesn't increase.
Is this for a video game? Or are you working with an actual gun to shoot people based on facial recognition?
If you think people here are fucking cunts I imagine you don't have a Stackoverflow account...
I will be messaging you on [**2019-06-12 04:58:59 UTC**](http://www.wolframalpha.com/input/?i=2019-06-12 04:58:59 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/learnpython/comments/byfigg/im_super_annoyed_and_taking_it_out_on_learnpython/eqhe8pg/)

[**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[https://www.reddit.com/r/learnpython/comments/byfigg/im_super_annoyed_and_taking_it_out_on_learnpython/eqhe8pg/]%0A%0ARemindMe!  3 days) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete Comment&message=Delete! eqhedzm)

_____

|[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=List Of Reminders&message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/)
|-|-|-|-|-|-|
Stackoverflow? The python chat room on there is probably the best resource I've had so far in my learning journey!
And some people are grabbing your upvotes to give to others! xD
i didnt ask for all this power

&#x200B;

Edit: the fact that people downvote these light hearted comments just proves my point and reminds me why i hate the internet.
I‚Äôm looking forward to this one!
The concept itself is easy (at least I found it easy to grasp). I always struggle with moving from concept to code, because I always find ways to improve on the class or be more granular... Latter being an issue for itself, where to stop being even more granular, where to up it a level.
A class glues together some data and some functions that operate on that data.

    class Circle:
        def \_\_init\_\_(self, radius) :
            self.radius = radius

        def area(self):
            return 3.14 * self.radius * self.radius

That's it. Could you make a get_area function that just takes radius as an input? Yup! But then you dont get a cool circle object with a radius already defined. That means you can't easily reuse the data or add more stuff.

    myCirc = circle(2)
    myCirc.area()
    myCirc.diameter() # assume we added this

Classes can also be copy pasted with inheritance. So you can do:

    class Sphere(Circle):
        # comes with all the methods from circle
        # copy pasted in, including init!!
        def volume(self):
            return self.area() * radius * 4 / 3

The huge benefit of this is that when you change circle, sphere automatically is updated. The downside is that Sphere depends on Circle working right, so now breaking Circle breaks Sphere.

tl;dr: Bundle data with functions that operate on the data. Avoid repeated code.
I already know how to write and use a class, but thanks a lot for the rule of thumb. I‚Äôve been at serious python in a work environment about a year now, and those kinds of things suddenly click and make a lot of sense due to my experience now (probably heard it a year ago and continued stumbling around like a blind man)
They're super useful for code reuse, and for defining things which may have a state that changes during the course of the code execution. They're very important for graphical user interfaces for example, where you might define a general class for a checkbox, and give it attributes like color and is_checked, and maybe size and position. Then once you've done that initial definition, you can instantiate as many of those as you want, whenever you want, and change their individual attributes as needed. And your user will be changing the state of the is_checked attribute on the fly, and that state information will be neatly wrapped up with its associated checkbox. If your program needed 30 checkboxes, you'd then only have one class definition and 30 one-line instantiations, rather than 30 blocks of mostly repeated code. You could also do your instantiations in a for-loop.

Similarly, classes would come in handy if you were making a game. You might define a class orc, which has a bunch of general attributes (max health, speed, strength), and then want to instantiate a bunch of these orcs when your player enters a level, and you would want their individual attributes (name, current health, position, is_dead) to be stored and updated when necessary. 

Classes are also great for organizing hierarchical relationships. If you were making some scientific software, you might define a class "experiment", within which you may instantiate and put into a list several objects of the class "permutation", within which you may instantiate and put into a list several objects of the class "datafile". This organization would make it easy to later come back and do some operation on all of the the datafiles for a particular permutation, for example.
/u/TankorSmash gave a [good response](https://www.reddit.com/r/learnpython/comments/byfigg/im_super_annoyed_and_taking_it_out_on_learnpython/eqh7ugo?utm_source=share&utm_medium=web2x). 

Classes are basically a cluster of variables and functions together in teir own little box, which can -- I think most importantly -- be duplicated. 

Imagine you're making a GUI, and have multiple buttons on the screen. You want each one to have a lot of the same stuff in them: where it is, what text is in it, what happens when you click on it, and so on.

Now, with pure functions, it'll start to get really hard to figure out what text belongs to which button, especially when you ave a bunch of them. You'll need at least 3 "button_1_location", "button_2_text", "button_1_background" kinds of variables for each button. That'll clutter up what you're looking at and make it really tough to change, especially if you want to, for example, add right-click functionality to _all_ buttons. 

A class makes this pretty easy. It wraps all those "button_x_*" variables into a single place. They're no longer floating around with all your other code, where a single typo might cause all sorts of problems. It means that if you need to make a new button, you usually only need to call one function (the Button function) to get everything set up.

Of course, that's what classes are, but it's usually a lot harder to figure out where to use classes in your own code. For that, I'd start by looking at where you have a whole bunch of variables laying around, especially variables that aren't actually needed much except by some function(s) designed to manipulate those variables.
Yeah I mostly write in procedural form. Actually I have never written my programmes using classes. But when I look at other people's code to they are quite organized which I prefer. And I am kinda been rotting in the beginner's stage for last year. I would love to learn more advanced stuff which includes classes.
I'm going to 2nd this because I think this is a really accurate reply in general.  I am NOT a Python Dev, but I am an IT hiring manager.  For an entry position, I want raw material - aptitude.  It doesn't matter if you have worked with our systems, I need to know you can think your way out of a conceptual cardboard box, I need to know you know where your limits are (but aren't bound by them) and that you are honest.  Im going to invest in you.  I want to know that will pay dividends to you, which will ultimately pay me too.  

Show me that you're already working on being the person I want to hire, and I'll bridge the gap.  I can teach DNS and LDAP and IP.  What I can't teach at even the most junior position is basic problem solving skills and the ability to integrate the answer to a problem in a person's future work. 

One more thing I will give you - nobody asks enough questions in interviews.  Everyone wants to be the guy (or gal) with the answers.  Be the person with the questions.
I'm currently finishing up my A levels, and for the last 2 years I've had my teacher constantly saying that the thing that gets you far in this field is being able to problem solve. Lot's of people can learn coding, but being able to analyse a problem and come up with the design for the solution is something that lots can't.
Something isn't adding up. 

> I've been a senior level software engineer for over 10 years.   
>  
> I'm 39.   
>  
>I didn't start even thinking about technology in any way until I was in my late 20s.

I don't see how all 3 of these statements can be simultaneously true. Unless you're saying that you started at "senior level" or were somehow "senior level" after only a couple years of experience which just doesn't make any sense to me. To me, "senior level" takes around 10 years of experience just to get to.
Any advice on becoming a more efficient problem solver?

E: Or resources for developing these skills.  Currently feel like I do not have this...

2E:  A thorough answer: https://reddit.com/r/Nootropics/comments/10i7qj/_/c6dti4a/?context=1, But still looking for others to chime in
That was a pretty awesome answer and makes me feel much better about the future. Thanks again!
Dang I'd offer to work for you if you didn't say SQL Server
Excellent point NotSpartacus. I want to take this opportunity to address all the "smart" people in the room.

Blaming the student is a fools game. If they ask a question that is easily answered by a resource, find that resource, show it to them, and tell them "use these resources available to you first, and please come to me with pointed questions and evidence that you cannot find it on your own." Give this response to anyone who asks a question that fits the criteria NotSpartacus mentioned in his comment. They are trying to learn. Just because they aren't doing it in the most efficient way possible using resources you already know about doesn't mean they are incompetent.   


If you are smarter than someone else and refuse to help them, you are worse than the person who doesn't know as much as you (This is assuming they are a respectful student).
Typically I make a note that I did try researching a solution. One post a user misread the post and told me it was a super easy solution. Once I rewrite and talked to users, I was able to figure it out on my own. Sometimes it is just nice to talk to others about a solution.
Thank you very much!
This reply is gonna be the reason I quit my shitty customer service job in the next few months and get into the field I‚Äôve wanted to for two years now. Thank you for the reassurance, tbh I‚Äôve just been terrified of being told I don‚Äôt know enough to get anywhere.
Sorry it took so long to reply to this. This is a fantastic answer to my question and I appreciate the tough, but true, words 

I am and will continue to be a work in progress though I absolutely need to give myself way more credit for being much much better in actuality then in limited self perception

I‚Äôve never had a full time developer role and can see myself getting imposter syndrome if I got said role, though that is something I am working on currently too. 

I wish a lot of hiring managers thought like you did as the ones I have had experience with tend to go from scripted questions and coding exercises/questions derived from FAANG tech interviews. These type of interviews, to me, don‚Äôt make any sense at all unless you are going to be a teacher or a research compute scientist. 

Anyway just wanted to say thanks for the great reply and hope this whole BS situation has moved past you now.
Other than this being amazing, I love your username. Thank you!
Thanks for recommending that. It was an excellent read. Just one question, is the Dutch line meant to be an inside joke or something?
> And if you think that a regex is the right solution, you are also wrong.

Can you please elaborate on that? With the problem I was working on it became clear that I was over-using regex (especially with iterative searches) and that was slowing everything down, but surely you aren't suggesting that I never use regex? I've used regex to do some really amazing things, often in just one line of code.
Anything you suggest me doing then?
It‚Äôs something like:

Year Jan feb


1901 1.2 0.5

Yes, exactly what you said but with spaces instead of commas.
I mean there are so many libraries and modules to remember. Since I'm a beginner, I'll give a simple example. 

I have used datetime and time libraries. Now there are so many modules in it like "datetime.time" or "datetime.datetime.now" to name a few. 

And in requests library, i can only remember "requests.get" & "requests.post". I've to search for other now. 

How does everyone do this? Just practice? I also get pretty confused about object oriented concepts. Maybe that's the reason, not sure though. Any recommendations for object oriented concepts?
> ... assumed that I had no idea what I was doing, told me to not ever do what I was asking about. ... Never even asked why I was trying to do things a certain way.

Glad to see you‚Äôre breaking the cycle OP.
In your opinion then, are you talking PWA or I've also seen react web apps that work on both phone and web apps. (ReactJS as opposed to reactnative) Woul react there be plausible (as in just not native..you want to make native learn Java?)
The last time I asked a question, I let them know the code was incomplete and I did not yet have any validation. I also let them know I was only posting relevant parts of the code for the issue I was having. I immediately got a bunch of down votes from people saying I was open to SQL injection. I feel like it's impossible to post something that doesn't get attacked.
Yeah but I want to lern! I know how to handle all about the shop in WordPress but my problem is make the dashboard and some controls for the bot. For example stop and run buttuns.

In the command line I just run "python bot.py" and it's running, control+C and stops
Thank you for sharing, definitely helpful, wish you all the best
Thanks a bunch.   
I guess I'll have to watch some tutorials on the libraries, learn how to use them and then implement something with them to cement what I've learned.  
I'm glad you mentioned the lecture. I had actually watched some of it and it seemed informative (it's pretty long so I skipped the last half). I'll definitely take the time to watch the whole thing now.
Good :D
Thanks for the reply, just with point two, I'm just referring more to the second point you made.
Once I made a code in which I had a 2D list of nested values and I had to normalize them between -1 and +1. That was the supreme example where I needed it more than anywhere else.
Why did you learn python?
I would like to understand network programming. But, since I am not a programmer (I studied physics) I just know a little bit python and am comfortablewith it. I don‚Äôt know if it‚Äôs the best language for it, I just don‚Äôt have the energy to learn another language, because I‚Äôm not really good at programming.
I don't have a specific query, just looking for a general principle, and I think you mostly answered that re: SQL. With pythons string formatting it seems to me that many people do add huge blocks that aren't quite pure non-python code but probably should be refactored to be a valid SQL file containing defaults or test values.

Related "where do I put this question", do you unit test regexes and if so do you collect them together in a module?
Thank you so much! Would you happen to know what the future job prospects for ETL will be?
i would like to know if a function i write is O(N\^2) or something so i think its performing a big O analysis that i need.
Yeah, I'm just kidding about the usual way things were done there :) It's still a great place, despite the attitude you sometimes get
To bad. But with great power comes great responsibility.
Careful what you wish for. I‚Äôve got 10k words already in a draft, and I‚Äôm pretty sure all of them are wrong. 

But I‚Äôll do my best.
Same. I look at examples and grasp the concept but then when I look at a project I'm working on currently, don't know enough about what would work better modelled in classes and what wouldn't.

Ive tried chatting to a friend who is a storage engineer but every time we get a chance to sit down, we're drinking and the conversation goes out the window!
Why are classes better than subroutines for those purposes, other than pretty syntactic sugar?
_Classes are basically a cluster of variables_ - I'd disagree with this. 

_which can -- I think most importantly -- be duplicated_  - a fundamenal reason for classes was to not duplicate code, sounds like you want to do the opposite, or do you mean instantiate?

_It wraps all those "button_x_*" variables into a single place._ - do you have some toy code to look at it? It sounds like you're describing an anti-pattern
I wrote an entire application in functional/procedural form. It worked fine. It was fine. 

I'll underscore those two statements, as they've been affirmed by some fairly senior devs.\^\^ Code that works, is readable, is documented, is relatively easily modified and extended (ie is modular, not fragile where small modifications cause unexpected other parts of the code to break), and is thoroughly tested, is good code, whatever paradigm it is written in. 

I feel it didn't duplicate much code, and was reasonably comprehensible. It wasn't too hard to continue hacking on and adding functionality (I'll admit refactoring it using a couple of classes has made this aspect slightly easier). I wrote it for my wife, who's a teacher, and processes student test results into an image displaying the data with avatars rather than student names for privacy purposes. 

As an exercise I refactored it into OOP, and ended up with a an object for each 'class' of students (which I called `Class`, but some people might find that hard to read), and a not-entirely-necessary `Student` object. While they're both mainly data-containers, I get to write [`Class.name`](https://Class.name), [`Student.name`](https://Student.name), `Class.file_safe_name` (for a filename), `Student.avatar_path`, `Class.to_json_str`, instead of much harder to read and follow dictionaries ie `my_class.students[6].avatar_path` rather than `my_class['students'][6]['avatar']['avatar_path']` or `my_class['students'][6][1]` which is closer to what I had. 

&#x200B;

I \*could\* make objects for the chart/image generator, and the generated image, but I haven't seen the need so far.
Oh man, this is so true about the questions. Ask questions! So many of my hire/not hire decisions have come down to what questions a person had. It‚Äôs not about whether the questions are ‚Äúgood‚Äù ones. But when I give 15 minutes at he end of the interview for questions, it‚Äôs because I want you to use them! That‚Äôs a great time to show some personality. That‚Äôs a great time to show me the kind of person I‚Äôm going to be working with.  

If you get time for questions, use it!
This message is so inspirational. As a person who is trying to get into the field, it really helped me. You may not know it, but this is exactly what I needed to read right now before going to sleep. Thank you!
I agree with your teacher. But ‚Äúproblem solving‚Äù is hard to define, hard to measure, and hard to practice. Problems in the real world often do not have clear or good solutions. A fuckton of the problems we deal with at work‚Äîno matter where you work‚Äîare problems caused by other people‚Äôs code that is total garbage, but works in a very specific way that people have come to depend on. When I say ‚Äúother peoples code‚Äù I mean my past self. But regardless, now you need to do something different with your garbage code, but it also needs to stay the same. The solution to this problem is never going to be to rewrite the whole thing from scratch and do it right this time. The solution is going to be to find a compromise. Every real solution to a hard problem is partly human and partly code. 


Still, that‚Äôs hard to practice. But there‚Äôs an entire topic dedicated to how we find, articulate, and compromise about problems. Don‚Äôt reinvent the wheel. Read philosophy. Philosophers are smart people. They invented logic, math, and a great many other things. Plato deduced something very close to atomic particle theory without the aid of modern physics. 


It‚Äôs often hard to map a particular philosopher‚Äôs problem to your day-to-day life, but most of the work we do is extracting relevance from a situation and mapping it into a framework of solutions we already know the answer to. Studying how people have done this in the past is a great exercise.
So how does one develop or work on there problem solving?  I find it hard to believe that tons of people cannot come up with a solution to an issue.
Guido who invented python is Dutch
I've never understood that line myself, haha. But I also assumed it was an inside joke. There's plenty in there that I don't fully get, but I seem to understand more as time goes on.
I‚Äôm currently working on a ton of answers in this thread, but my commitment at the start was to not be a dick about things. I‚Äôll try to get to an explanation of this soon, but until I can get you a full explanation of why regexes are not the right solution to your problem, hear my words: they are not the solution you are looking for. Regex is almost never the right answer. And it‚Äôs not your right answer now. Find a different way.
Cool. Have you looked into Pandas at all? Alternatively, check out the csv reader module in Python.

Pandas will load your entire text file into a table like structure, and you can just directly index into the column by string. E.g.

    df = pd.read_csv('data.txt', delimiter=' ')
    jan_values = df['Jan']

That will give you a `Series` object which more or less looks like and works like a numpy array. If you directly want a numpy array though, you can just use `df['Jan'].values`.

Otherwise, using the CSV module you can use the `DictReader` class which will read each row as a dictionary, so each row you'll get something like:

    {'Year': 1901, 'Jan': 1.2, 'Feb': 0.5}

so you can use a list comprehension to get all of the data for a month just by indexing this dictionary, e.g.

    with open('data.txt') as f:
        reader = csv.DictReader(f, delimiter=' ')
        jan_values = np.array([row['Jan'] for row in reader])
> How does everyone do this? Just practice?  

That‚Äôs it! Just practice, practice, practice. Everytime you‚Äôll do it, you‚Äôll get better at doing things and remembering them. And, also, remember that SO and Google exist for a reason. :-)  

About OOP, well, I wouldn‚Äôt sweat it. It‚Äôs a helpful and effective concept, but at the end of the day, I believe you shouldn‚Äôt approach every single thing with that in mind just for the sake of OOP. However, when asked, I always recommend [Corey Schafer](https://m.youtube.com/watch?v=ZDa-Z5JzLYM). He‚Äôs one of my absolute favorites and has helped me a lot!
[deleted]
For the record though, I didn't take it as anything but advice. I wasn't offended or felt demeaned.  At this point I assume everybody knows far more than I.  

However I appreciate your candor. And your defence.
If you want to learn, then do it with Flask or Django as you were first suggested. Flask in particular is very easy to use and quick to get up and running with (the tutorial is good: http://flask.pocoo.org/docs/1.0/tutorial/). Or don't, and be limited by what the WordPress devs allow you to create.
You're welcome. The guy in the video is admittedly very smarmy but he knows his stuff, and he does a good job of driving home the importance of magic methods.
Check out [scapy](https://scapy.readthedocs.io/en/latest/). Python is fine for networking stuff. I work for a networking company and we use it extensively for testing and scripting purposes.
You're basically counting nested for loops. If you have a list of length N, and your code has to traverse that list once, then it's O(N). If it has to traverse it twice then it's O(2N) (and we don't care about constants, so formally this is also O(N)). However, if you have to traverse the whole list N times (I.e., traverse the whole list for each element in the list), then you're getting into O(N^2). It's an exponential growth because you're doing N extra operations when you add a single new element to the list (well N+1, but you see what I'm saying). Does that make sense?
waiting  ....
!Remindme 24 hours
To take the game example, on level start, you could call a create_orc() function, but you still need to store stats and information about each orc, so you'd probably make a dictionary to store that data, and return that. That way you could make updates like:

    orc4["current health"] -= 5

One advantage of classes over dictionaries is that you can define methods for that class. If you wanted your creatures to be able to perform a wardance() action, but wanted it to look different for each race of creature, under the functional paradigm, you might define a single wardance() function, and pass the creature dictionary as an argument. Then in the wardance() function, you could do a bunch of type checking:

    if creature["race"] == "orc":
        #dance like this
    elif creature["race"] == "goblin":
        #dance like this
    elif creature["race"] == "human":
        #dance like this
    ...

Or you could have a bunch of separate functions, wardance_orc(), wardance_goblin(), wardance_human(). But it makes much more sense to me to just be able to call orc4.wardance() and have it take the appropriate action on the appropriate object. It's more than syntactic sugar I think, it shapes the whole way you organize and think about your code.
> Classes are basically a cluster of variables - I'd disagree with this.

I'd disagree that classes are a cluster of variables as well. Because they're a cluster of variables and functions together. If you disagree with that, then, you'd be rather lonely, as it's a common (if layman's) explanation [this intro](https://www.pythoncentral.io/introduction-to-python-classes/) uses the same explanation, but different, more precise words. As the person I responded to has said that he's got a good idea of what classes are, I felt that I could gloss over that stuff, and use less precise language to hopefully get my point across better.

> a fundamenal reason for classes was to not duplicate code, sounds like you want to do the opposite, or do you mean instantiate?

"Instantiated" is the right term, yes, but it's also not a very common one outside of programming. While "duplicated" wasn't exactly accurate, I felt that it got the point across better without needing to explain what instantiation meant. Though now that I've slept on it, you're probably right, using that term just muddied my explanation. You win some, you lose some.

    class Button():
        def __init__(self, location, text, on_click):
            self.location = (location[0]+5, location[1]+5)
            self.text = text
            self.on_click = on_click

            self.show()
        def show(self):
            renderer.render_button_here(self.location, self.text)
            clickListener.call_on_click_here(self.location, on_click)

        def hide(self):
            renderer.destroy_button_here(self.location)
            clickListener.stop_calling_on_click_here(self.location)

    button1 = Button((0, 0), "foo", bar)
    button2 = Button((10, 0), "baz", bang)

Especially when making many buttons, or if buttons need to be modified and worked with later, this is far more legible than something like: 

    button1_location = (0, 0)
    button1_text = "foo"
    
    button2_location = (10, 0)
    button2_text = "bar"

    def make_button(location, text, function)
        renderer.render_button_here(location, text)
        clickListener.call_on_click_here(location, on_click)

    def hide_button(location):
        renderer.destroy_button_here(location)
        clickListener.stop_calling_on_click_here(location)

    render_button(button1_location, button1_text, bar)
    render_button(button2_location, button2_text, bang)

And that's not even getting into inheritance and class properties, which are incredible tools, but probably not something that you want to get into with your first classes.
If only more hiring folks took this attitude. I feel like I'm a great problem solver, and fairly good at both asking decent questions and grasping problems (and ideas in general) quickly. Maybe it's my resume, or lack thereof, but I haven't been asked on a single interview yet. It's been a few months of putting in applications for junior dev positions. 

&#x200B;

Side note...who doesn't ask questions in interviews? Unless you like quitting after a few days, you really need to find out if the job/company/environment is a good fit for you, right? "HOLE DIGGERS HR: 'You're hired, any questions for us?' YOU: 'No.' ...6 hours later, hip deep in soft fecal matter...
Go get 'em.
Hi, you never elaborated on why regex is supposedly bad, could you please?
Thanks! I‚Äôll check that tonight!
Thanks mate.
Will do. Thanks.
Thank you ‚ù§Ô∏è
wow this is what should be in the documentation. I have one last question, it seems big O notation applies only to for loops. Because i was thinking that i should be able to write a function to add two variables \`def add()\` and then python would tell me the function was O(n) or O(n\^2) .i saw two libraries cProfile and pycallgraph, but now that i understand what big O is trying to achieve, it is obvious they aren't the right candidate. What does the libraries i do try to achieve then?
waiting....
[deleted]
Be wary of dogmatic "x is always bad" assertions, there's nothing wrong with using regular expressions. It's just important to understand what they're for and what class of problems they are useful for solving. The trick here is to avoid seeing every problem as a string-pattern matching problem just because you know a great tool for string-pattern matching (easier said than done).
If this is for school/college etc, it may be that using libraries like pandas is forbidden and you are supposed to implement using "regular" python. I would check with your instructor first if you're not certain.
Good luck, amigo!
Why do you think `def add()` would be O(N) or O(N^2)? Not sure what you mean when you say Python tells you that.

```
def add( a, b):
  res = a + b
  return res
```
Now sure, you would just return `a + b` directly, but bare with me. To analyse this, we count the atomic operations. `a + b` is 1, assigning the result of that expression to `res` is 1, and calling return is 1. So, 3 ops. But constants drop out, so instead if O(3) we analyse this as O(1). The number of operations remain constant, no matter what the values of a and b. a == 1 or a == 2^64, it doesn't matter.

Now consider a function that sums all the numbers in a list. Write that function, analyse it in the same way I've done here, tell me your answer, and explain the significant difference between it and the add function above.

I've no ideas about those libraries, sorry (on mobile, might have a look later if I remember). But in general, Big O notation is really a theoretical/conceptual tool, you shouldn't particularly need any helper libraries (especially when it comes to interviews and such..).

Finally, I didn't mean to say Big O is just for for loops. That's just a little conceptual crutch.  Hopefully it's clear how it applies to the `add` function, which contains no for loops. I just mentioned counting for loops because it's an easy way to tell what power of N your code is running in.
"Either put up or shut up."

\[edit\] rephrase for clarity:

If you know enough about the man to call him a junior, then why don't you put your senior prowess to work also directly answering questions in this sub?
Thanks, in this regard, loading the array into pandas or numpy does not change that much because I just need to plot some data.
`list = [11, 5, 17, 18, 23] ` 
`def countsum(): return sum(list)`
`print("Sum of all elements in given list: ", countsum()) `

atomic operation of sum increases with values found in the list, if list is 5, sum calculates for all 5 values. therefore 5 ops 

the difference between this function and the previous one is that in this sum of list, `add function` is called for each integer in a list, if the list is long, the operations add up, whereas in the latter, the `add function` only called once.
Ah, so not being assessed on implementation, just need the results, no worries.
I meant implement it, not call the builtin ;)

A possible implementation of `sum` is:
```
def sum( lst ):
  count = 0 # Assignment, 1 op
  for elm in lst: # N ops, where len( lst ) == N
    count += elm # 2 ops per op, an addition operation plus assignment
  return count # Call return directive, 1 op
```
so if we add those up we have `O( 1 + (N *2 ) + 1 )` -> `O(2N + 2)` -> (constants drop out) `O(N)`. The number of operations scales with the input size, in this case linearly. With the simple add function, the number of operations remained constant, no matter what the input size. You more or less said that, but it's important to try be precise with these things :)
Yes because it‚Äôs from a master in GIS so they just care about learning the tools that can help you in your workflow.
thank you so much for taking the time out to teach me this. i have a couple of python interviews lined up and I'm trying to scale from python hobbyist (forking on github) to production ready software engineer. Big O was a messy subject for me before this chat!
You're welcome. If you have any other questions, feel free to ask. Best of luck with the interviews :)
How did the interviews go?
[deleted]
[removed]
This is one of the good ones. If you haven't checked this course out and Python is on your list, take the course. Heck, if Python hasn't crossed your mind, but you're looking for something different, easy, and powerful, take this course.  The author is a top-notch source of information and it is delivered using practical project sets rather than random projects that may or may not be relevant. He also has a few books on games programming in Python (and one on cryptography) as well on his website offered for free.
Thanks.
Words can't describe how beautiful this book is. This was my gateway to world of programming‚ù£‚ù£. Thanyou AL
Al, the real MVP
Bought this a month or so ago its been well worth the money. Been using this alongside Python crash course. Thank you so much for what you do!
Is this course still Python 2 or has it been updated?
Nice, just bought it two days ago haha

Good thing it‚Äôs a great course and I don‚Äôt mind
Thanks for your book! I've been learning from your book and downloaded it for free from the internet. Since I'm from Argentina and our economy is the worst in the world, I don't have the money to buy your book now, but when I have a good job as a programmer, the first thing I'll do is buy your book! Thank you very much!!
Udemy and all their coupons  - they're like the Bed Bath and Beyond of the Internet.
Thank you!
Thanks!
Already have your course and second edition book, but gotta say thank you for paving the road to this community and world of Python. Much respect Al
Great course for getting started with Python, focusing on practical wins and scripting techniques! It's perfect for non-programmers who want to automate their daily lives and work or for beginners with aspirations to eventually go beyond. This course gave me my start in Python. It was so good, I later felt guilty that I'd gotten it for free. Thanks Al!
I have no experience with Python, barely some Excel skills (VBA, M), so I'll try this course!

Can not talk about the content and quality (yet!) but in any case, thank you very much for offering me an easy opportunity to get into Python.

Edit: 2h in, and so far, this is great
You're the man, Al.
Awesome, I literally just bought the book used on eBay.
Thank you so much!!
You are the greatest, Al.
I learned Python from reading the book, and I can definitely recommend.
Thank you Al! I was having a pretty terrible day and this just made it much better!
thank you
Mr Sweigart may I get an autograph
So excited to get started. Been wanting to learn programming and maybe change careers if I really enjoy it.
Thank You !!
!remindme 3 month
Thanks for sharing!!
Thanks :-)
Is there going to be a coupon for this month as well?
Dang, I already own it :(
Thanks a lot!
Thank you!
Bought the book awhile back through Humble Bundle. Now this is free.  I just started reading it last week.  Looks like it‚Äôs meant to be.
Thanks Al! Have just signed up - here‚Äôs to an exciting future!
Thank you!!!! I already started :‚Äô)
Amazing! Thanks for the help with python!
Fantastic, thank you. It looks super interesting!
Bought this course a week and a half ago and I‚Äôm almost finished. I have tried to learn Python several times before and this has been by far the easiest to understand and most engaging course I have taken. Thank you Al!
RemindMe! 17 hours
Legend, thanks so much!!!!
Thanks Al. 

I already have the Udemy course. Will I have access to the new content as well?
I wish you the best things in life!!
Thank you!
AL MAREY ME üò± /s 

Thanks for all you do!
Seriously the best online programming course I've ever taken. Thank you Al. I am excited to work through *Beyond the Basic Stuff now*.
thanks!
Thanks!! from this core Network Engineer pivoting into Devops!
I've been looking forward to this sir! Just got started! God bless you!
I started the course recently and I wholeheartedly recommend it.  It‚Äôs explained in a simple but useful way that made me remember  the content of the lessons easier.
Even if you don‚Äôt get it for free you can still get it for a more than  reasonable price!
Fantastic! Thank you very much for this. You are amazing
Hey.  I used some of the lockdown time to go through a lot of your book.  I literally went from not knowing how to exit a python prompt, to implementing a few really helpful scripts and python GUIs when I eventually got back to work.  Thankyou.
Thank you!
My little brother is going to sign up and learn python to work with me! You rule, Al!
The code worked for me. Thxüëäüèª‚ù§Ô∏è
THANKS SIR
Bro I just bought this for $10 like 5 days ago lmao, definitely worth every cent though.
Thanks, @AlSweigart!

I was just coming to this sub to ask a question about the random quiz project at the end of Chapter 9. I‚Äôve spent three days poring over that code to figure out why it wasn‚Äôt actually generating the quizzes. Does the project lack a Path to save the quizzes to? Does it need a print() at the end?
Can i stream on Twitch while following along and reading parts of the books and or displaying the webpage online?
LEGEND thank you!
Every month like clockwork!
Thanks man üôè can't wait to start the course!
Again, thanks for the course, which I did last year
Thank you! That is exactly what I'm looking for.
Hey Al, you are really good. These keep sharing your knowledge with us. I have learn the python basics from you. You teach in a very good manner in which we can understand the concepts very well without any obstacles coming in between. Really Al, you'll are mind blowing!

Hands off!
A true hero in our lifes!! Thanks for this awsome experience
YOU ARE THE BEST! Thank you so much! Can't wait to dive in!
Your course is really great, I started with free code and finally decided to buy your book. Thank you again.
I just signed up! Thank you so much!
Thanks!!
I love this course! Used some basic info to make workflow programs to get me started for the day

e.g. [https://gist.github.com/elishian/23a673501ceefd937f1d29f70bcce35e](https://gist.github.com/elishian/23a673501ceefd937f1d29f70bcce35e)
Thank you so much! I just bought the book this weekend, so this will compliment it perfectly!
God bless you, sir.
Thanks for this, I Just signed up. Never programmed before!
Thank you.
Thank you!
Amazing man thanks for this!
Is anyone going through this course now and would be interested in a partner?  I have some experience with programming and Python but am looking to expand my skills and help folks along with learning.

msg me if you'd like a study buddy.
RemindMe! 20 days
Hey, Does free sign up mean that the entire course is for free or do we still have to purchase the course to get the entire content?
Get IoT and ML training for FREE worth Rs.9,600/-. Pay only for the hardware kit (Rs.2,750/-)

&#x200B;

Use the discount code FREEPAN14554 at checkout on [https://shop.boltiot.com/pages/iotmltraining?discount\_code=FREEPAN14554](https://shop.boltiot.com/pages/iotmltraining?discount_code=FREEPAN14554)

&#x200B;

The limited time offer ends on Tuesday, 23rd of February, at 11:59 pm. Also, applicable for only first 100 registrations. After this, the fee will be 9,600/- so you have to register right away

&#x200B;

COD(Cash on Delivery) Available.

&#x200B;

Register now and start the training after the exams.

&#x200B;

I feel that you should not miss this opportunity as the training will substantially increase your chance of getting a job offer and improve your practical understanding of engineering.

Course comes with certification and a lifetime access to the content along with a internship with stipend for those who excel.

&#x200B;

Since its a lifetime access, the students can register with the offer today and start the training whenever they wish as per their convenience.

&#x200B;

You will be trained by mentors who have more than 10 years of experience each in the IoT Industry.

They were showcased at Silicon Valley, USA during the visit of Prime Minister of India in 2015 for their innovation and patented technology.

Last year their product Bolt IoT Platform has been featured by Raspberry Pi foundation itself as the best maker hardware in the world.

This is a unique opportunity to learn from the best in Industry and become extraordinary engineer.

&#x200B;

The offer ends on Tuesday, 23rd of February, at 11:59 pm.

\*Offer valid for only first 100 registrations.
Mr. Sweigart, 

I'd like to take the opportunity to thank you enormously for writing such a fantastic and coherent book.

Automate the Boring Stuff was my first ever dip into Python (and indeed programming itself!) some half a decade ago, and I haven't looked back since. I now use Python to help (and entertain) me, almost daily, and I can't than you enough.
am eagerly waiting for the free coupon for next month

thanks
I'm really thankful to op for sharing his course for free in January, it's been really helpful to me as a student. And I hope op continues to make courses like this.
Same! I learned how to program in Python 5 years ago using Al's book. 

2 years ago I switched industries and have been working as a data scientist since. This book literally helped change my life.
did this promo give the entire free course or just a portion of it?
It's always been Python 3.
Sounds like python 3
I love their once a year sales every other week!
did this promo give the entire free course or just a portion of it?
when the promo code is used, did it give the entire free course or just a portion of it?
Just forge my signature and tell people I signed it. I won't dispute it.
Also interested in this. Close to wrapping up some SQL and this will be my next step!
I will be messaging you in 17 hours on [**2021-02-02 14:49:08 UTC**](http://www.wolframalpha.com/input/?i=2021-02-02%2014:49:08%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/la98y1/automate_the_boring_stuff_with_python_online/glnko2z/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fla98y1%2Fautomate_the_boring_stuff_with_python_online%2Fglnko2z%2F%5D%0A%0ARemindMe%21%202021-02-02%2014%3A49%3A08%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20la98y1)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
hi there, when you used the promo code, did it give the entire free course or just a portion of it? I wasnt sure because it said " free sign up".
hi there, when you used the promo code, did it give the entire free course or just a portion of it? I wasnt sure because it said " free sign up".
hi there, when you used the promo code, did it give the entire free course or just a portion of it?  I wasnt sure because it said " free sign up".
:D
This man here using python 5....
Do you have tips on what to read up on after book?  I'm trying to achieve a similar thing.
how long did it take you to become fluent and how many hours a day were you putting in?
Oh I heard somewhere that it used to be Python 2. Thanks for updating me!
The coupon for this month is now in effect. 

Here's the link:

[https://inventwithpython.com/automateudemy](https://inventwithpython.com/automateudemy)
Yup, I signed up for free and got access to the whole course (a couple of month ago).
üòÇüòÇüòÇ

Ahead of the curve!!!
Depends on your goals. For me it was a lot of machine learning stuff (the most popular O'Reilly books are a good choice). Then OOP books. I think everyone, regardless of language of choice, should read Clean Code from Robert Martin. 

Reading the code base of well written Python packages is also a great way to learn. I always recommend Flask and scikit-learn. They are very well written.
This was 5 years ago so I can't recall exact hours but I was dedicating a significant portion of my week to practicing. Probably 10-20 hours a week most weeks. I also stated taking Coursera data science courses shortly after picking up this book.

Fluent? Also hard to answer. Depends on your definition of fluent. I'm 5 years in and I'm still reading books and taking courses. The books might cover more complex topics these days, but it's a constant process.
You're thinking of "Learn Python the hard way" which is by a different author.  Not my favorite book either, I bounced off that and this took me much farther.  Super cool of Al to do these free offers too.
Looks like I got a long road ahead of me.  Thanks.
My definition of fluent would probably be you could get a junior developing job
Well it took me 3 years to switch careers and become a data scientist from the day I started studying using Al's book. 

Not sure how much that one piece of info helps since 1) I didn't really try to switch prior to that and 2) I'm just one example. I'm sure others could do it faster and for some it will take longer.
You're honestly a boss. A really appreciate everything you do for this community.
You're the real MVP Al. I got it last year, but I just get a smile glued to my face whenever I see this post.
You offer them for free? Wow
This posts show up so much in this sub. I believe they are automated. I guess the course works.
Thanks Al!
I upvote this Everytime I see it.
Your book changed my life.
I think it's wholesome of you for ***consistently*** offering your book for free. Your passion for programming and the drive to inspire others are truly appreciated, I assure you.
[deleted]
You think they ever make money on this course with how often it's available for free?
I am learning this course right now, and I highly recommend it! Coming from a non-CS/engineering background, I tried several times picking up python/R, but those courses I tried can‚Äôt keep my interested. I think Al‚Äôs course is very good for people like me, who have zero background in programming and have the need to automate the boring stuff! Big thanks to Al!
Damn. I just bought this on Udemy 4 days ago.
Wow thanks for this. I¬¥m from a poor country, and i can¬¥t affort buying courses. Thanks again, and God bless you.
I finished it last week and i can‚Äôt recommend it enough. Very very informative. 

Thank you for your effort and for the free codes you shower us with monthly

Send my love to the cats
Damm just missed the free course. Code is expired
Oh, snap! OP /u/alsweigart is the writer of the book+website "Automate the Boring Stuff with Python". What an honor. Thank you very much for your generosity! I really appreciate you making this material available on an online course. Thank you!
Thanks king(or queen)üëë
Damn. This is pretty awesome. I'm working through the book as we speak, so this was really a pleasant surprise. 

I'm also new to this sub. So, thank you so much!

*edit

I just realized that the person posting this is the author of the book. You're really a generous person for offering this information for free, sir. Thank you, truly. From somebody who wants to learn how to code but doesn't make a lot of money, this information is really valuable to me.
Thank you very much, Good Sir.
Thanks for this!

I'm actually trying to teach myself Python in hopes of a career change. I recently ordered this book and am awaiting it in the mail. This course should definitely help me get a firm grasp on the material so I sincerely appreciate you posting this.
Thanks and Added many more Programming related free courses here. Cheers!!

[r/FREECoursesEveryday](https://www.reddit.com/r/FREECoursesEveryday)
Aghh...Missed it just in time.Just ended my medical school semester and joined post graduation for Machine learning and AI in imaging just today and missed the coupon for this course
If only such altruism was the norm in the world....
This come in the right time for me, thank you!
Thank you Al! Just started it, great course.
Code still works, cheers
[deleted]
You dropped this üëë
If you're on LinkedIn then search for 'Udemy Free Courses' and they offer coupon codes for stuff most days. Quite often a Python course features among the free stuff. Plenty of other programming language courses and other things there too.
As usual, you may want to check out [atbswp](https://github.com/rmpr/atbswp) a project based on pyautogui.
Thank you :D. I dont know how you did it, but I really wanted to learn python for a very long time. Seriously mate thank you so much :)
Yesterday I was looking for the discount on the course and today you are giving it away for free,thank you so much.
You're the GOAT. Thank you so much.
Thanks so much!
I was waiting for the code from January first. Thank you man you doing a great job.
 Sorry guys that‚Äôs the lowest price he can offer the course for :)
Thanks a lot!
Wow thank you for this!
Thanks
Thanks alot
Thsnks bro
What a legend. Thank youuu! üíï
Thank you so much! I really appreciate it.
Thanks! I really wanted to take the course as a supplement for the book (still trying to get through it, I need to revisit it again for sure now that I have the course thanks to you!) but on the job experience has been pretty good so far.
I don't use udemy, I made an account to watch this awesome tutorial, thanks.
Awesome i signed up for it
I'm currently going through Learn Python the Hard Way using Python 2.7 and PowerShell. I got the discount for this but I feel like I should finish that before starting with this course learning python 3 using an IDLE, right?
This book is literally always free, there is a promotion like every few weeks. Its a great book but do the authors even make something like this.
Thank you (again!)!  I signed up for this previously and love that I still have access to it!
Thanks Al!
Appreciate it!
I love this course. It was great
Bought it back in December and going through it right at this minute. Great work, and thank you for making this - it really has helped and is very easy to follow.
thank you sooooooooooo much!!
I started learning Python a year ago and have basics down pretty well but I frequently go through this, maybe have it on in the background at work, because it helps me reinforce those basics so well and the concepts are explained so well. If you are on the fence get this!
Thank You man
Thank you so much. Boss move!
I'm working my way through Chapter 8 now and thinking about how I can use your PyInputPlus module in the future. Thanks for your generosity in sharing content, u/AlSweigart!
Just signed up. Thank you so much!
Thank you so much!
Al, you are awesome. I just completed the course and feel like I have a great start to my Python journey.
Do you answer questions here? About every 3 weeks or so I have to uninstall and reinstall python on my HP. I can‚Äôt figure out why it just gets buggy and stops working. But it has delayed my ability to complete the course.
Code still works. You‚Äôre the real MVP. Thank you so much!!!
Thank you very much. üôÇ
Thanks so much for your kindness! I felt like it was only appropriate to buy the book as well. Looking forward to owning both :)
Thanks!!
Great course, currently finishing the chapter on classes. Hopefully it will prepare me to start some projects of my own soon
Thank you
Thanks! I just decided to learn Python a few weeks ago after stumbling across Automate the Boring Stuff and am loving it.  I‚Äôve been reading online and bought the book to support your work.
Thanks Al. I took some introductory programming classes in college and I wanted to dive into learning python while relearning basics from years ago. I've been using the 2nd edition book online and it's been great. I'm pretty lazy, so I've been going through it very slowly but it has been super helpful. Thanks for providing such a great resource to people for free. I'll be sure to check this out. It might end up making things easier to understand because of the videos, but the book is excellent on its own.
Thank you!
Thank you very much!
I have that course, I reccomend it it's very good.
fire spez -- mass edited with redact.dev
Thank you
Thank you
You're the best, Al!

I've also been lurking on your [twitch stream](https://www.twitch.tv/alsweigart) and browsing through your follow up book.
Thank you
Thank you.
Thank you soo much!!! You're the best!
Wow, you are awesome. Thank you!
Thank you!!
Thanks Al
Thank you for this!!!
Thank you! Can't wait to get started!
Thanks so much, I‚Äôm going to have a look at this tomorrow. RemindMe! 16 hours
Beyond fantastic. Thanks Al.
RemindMe! 4 hour "Signup for course"
Your book allowed me to see Python in a new light, so thank you so much!
Thank you
thanks
i'm using the 1st edition from http://automatetheboringstuff.com/, is that good enough? how does the 2nd edition compare?
Get IoT and ML training for FREE worth Rs.9,600/-. Pay only for the hardware kit (Rs.2,750/-)

&#x200B;

Use the discount code FREEPAN14554 at checkout on [https://shop.boltiot.com/pages/iotmltraining?discount\_code=FREEPAN14554](https://shop.boltiot.com/pages/iotmltraining?discount_code=FREEPAN14554)

&#x200B;

The limited time offer ends on Tuesday, 23rd of February, at 11:59 pm. Also, applicable for only first 100 registrations. After this, the fee will be 9,600/- so you have to register right away

&#x200B;

COD(Cash on Delivery) Available.

&#x200B;

Register now and start the training after the exams.

&#x200B;

I feel that you should not miss this opportunity as the training will substantially increase your chance of getting a job offer and improve your practical understanding of engineering.

Course comes with certification and a lifetime access to the content along with a internship with stipend for those who excel.

&#x200B;

Since its a lifetime access, the students can register with the offer today and start the training whenever they wish as per their convenience.

&#x200B;

You will be trained by mentors who have more than 10 years of experience each in the IoT Industry.

They were showcased at Silicon Valley, USA during the visit of Prime Minister of India in 2015 for their innovation and patented technology.

Last year their product Bolt IoT Platform has been featured by Raspberry Pi foundation itself as the best maker hardware in the world.

This is a unique opportunity to learn from the best in Industry and become extraordinary engineer.

&#x200B;

The offer ends on Tuesday, 23rd of February, at 11:59 pm.

\*Offer valid for only first 100 registrations.
Feel free to checkout [r/FREECoursesEveryday](https://www.reddit.com/r/FREECoursesEveryday)  and thank me later :)
Nah, I just copy paste them. If they were automated, I wouldn't have forgotten to post them until today. :)
stupendous agonizing slim deranged ghost many cooperative squeamish dog zealous

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*
May I ask how so ?
He should write a Python script to do it automatically, as it's boring to change those dates.

I know of a course that could help set him straight.
I think they probably do, and the books they sell.

Additionally, I'm pretty sure the OP wants to give more access to python to the masses - and it's a great book/course!
Hey, that's great. You're supporting the author. Thank you for that!
Checkout [r/FREECoursesEveryday](https://www.reddit.com/r/FREECoursesEveryday)  and thank me later :)
Check back next month, he usually posts a free code every month (though i would like to think its a bot that does it these days lol)
My pronouns are he/highness.
Yeah.. I also appreciate him along with many  authors who offer free courses. Here you can find collection of free courses added everyday here  [r/FREECoursesEveryday](https://www.reddit.com/r/FREECoursesEveryday) . Cheers !!
I literally just signed up for free about an hour ago. It‚Äôs still good for another like 14 hours or so.
\*Al Sweigart takes off his trench coat to reveal he is a dozen cats, which all scatter and run away\*
I would recommend learning 3 before 2.7 if at all.
Have you tried using a venv? Would be interesting to see how/if it would change something.
I used to follow him on twitch                  
but he recently made a "no questions" policy               
if you ask "why did you do ... " then you get banned from his channel LOL

that just seems ridiculous             

I realize there are aholes who start arguments about coding style, and that can get tiresome              

but he's literally got a course on udemy and he's an author of a book and he's coding the book on stream               

I think its perfectly reasonable for someone (especially a newb) to ask a professional for advice and clarification             
"why did you code the function that way" or "why do you write your code like that?"              

he's basically a teacher, but you get banned for asking questions 

(I didn't get banned by the way, I just saw the new policy the other day and unfollowed)
I will be messaging you in 4 hours on [**2021-01-07 21:00:11 UTC**](http://www.wolframalpha.com/input/?i=2021-01-07%2021:00:11%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/krs99p/automate_the_boring_stuff_with_python_online/gifx23e/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkrs99p%2Fautomate_the_boring_stuff_with_python_online%2Fgifx23e%2F%5D%0A%0ARemindMe%21%202021-01-07%2021%3A00%3A11%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20krs99p)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
I had no idea what I wanted to do in life, so I went to university and started a BComm degree. I hated it, and was prepared to drop out.

I had to do half a year of computer science, and it was largely based off this book.

My lecturer came to me and said I'm actually pretty good, even though I had no prior education in anything programming related, and he convinced me to switch majors and finish my degree.

Without this book, I would never have found my calling.
!RemindMe 1 day
I read this great book online that might help too.
**kanye_euwest_** üò™, KMINDER 17 days on [**01-Feb-2021 09:00Z**](https://www.reminddit.com/time?dt=2021-02-01 09:00:00&reminder_id=099c6d6e96654ce5ac263868360e50ee&subreddit=learnpython)

> [**learnpython/Automate_the_boring_stuff_with_python_online**](/r/learnpython/comments/krs99p/automate_the_boring_stuff_with_python_online/gjb4ikv/?context=3)

>  Check back next month, he usually posts a free code every month (though i would like to think its...

This thread is popping üçø. Here is [reminderception thread](https://np.reddit.com/r/RemindditReminders/comments/l6m2qv/learnpython: Automate_the_boring_stuff_with_python_online).

[**13 OTHERS TAPPED THIS LINK**](https://reddit.com/message/compose/?to=remindditbot&subject=Reminder%20from%20Link&message=your_message%0Akminder%202021-02-01T09%3A00%3A00%0A%0A%0A%0A---Server%20settings%20below.%20Do%20not%20change---%0A%0Apermalink%21%20%2Fr%2Flearnpython%2Fcomments%2Fkrs99p%2Fautomate_the_boring_stuff_with_python_online%2Fgjb4ikv%2F) to also be reminded. Thread has 14 reminders.

^(OP can )[^(**Set timezone, Update message, and more here**)](https://www.reminddit.com/time?dt=2021-02-01 09:00:00&reminder_id=099c6d6e96654ce5ac263868360e50ee&subreddit=learnpython)



*****

[**Reminddit**](https://www.reminddit.com) ¬∑ [Create Reminder](https://reddit.com/message/compose/?to=remindditbot&subject=Reminder&message=your_message%0A%0Akminder%20time_or_time_from_now) ¬∑ [Your Reminders](https://reddit.com/message/compose/?to=remindditbot&subject=List%20Of%20Reminders&message=listReminders%21) ¬∑ [Fuel Me](https://paypal.me/reminddit)
Yes, i claimed it during the second round of coupons
that's new, I didn't see that.  After reading the rules, I feel it's reasonable, not ridiculous.  It's also an exaggeration to claim it's a "no questions" policy.  It's no "why questions".  There many other ways to request advice/clarifications without starting your questions with "Why".  

Yes, it' perfectly reasonable to ask a professional for advice and clarification.  It is also reasonable for that professional to ask for payment before giving that advice, is it not?  

Yes, he's a teacher.  No, he's not a teacher 24/7.  No, he's not your personal tutor.

No, you don't get banned for asking questions.  You get banned for backseating.
Good bot
I was eating oatmeal and literally paused and dropped my spoon into the bowl when I read this.

Thanks for writing this.
Amazing and thanks for sharing!
Really? What book?
Damn good bot
I don't remember, maybe "There's Something About Boring"?

Doesn't sound right though...

Seriously though I dove in with your book in April and thank you so much for helping me keep my sanity through this pandemic. I've since checked out  Web Dev a little bit of Ruby and presently exploring C++. 

Couple decades later than I intended but without your book I might still be twiddling my thumbs.

I constantly recommend your book to new programmers that I run across in the Python discord.
:D
Elon: fuck Doge, I would never promote that shit again


Bot: I have good news!!


Nice bot tho
Maybe follow this porn star as well:

https://finance.yahoo.com/news/dogecoin-sees-125-increase-trading-195309825.html

https://www.coindesk.com/doges-gone-wild-meme-coin-soars-after-adult-star-says-shes-a-hodler

I bet you never knew that porn stars are financial wizards.
Elon: EVERYONE SELL DOGE NOW!

<Doge plummets>

Bot: I‚Äôve purchased more for you, sir!
r/wallstreetbets wants to know your location
Hello my name is Elon Musk and I'm excited to share my 34-tweet series about the chief magistrate and leader of the Republic of Venice between 726 and 1797.
To the moon!
doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge doge
Much wow! What would happen if you had zero buying power in Robinhood?
Musk could destroy you.
u/djrdog578 I'm new to Python and would like to make a bot like this in the next few months, do you need to rent a server to keep it running?
Why does Elon keep tweeting about dogecoin?
Robinhood has an API? interesting... If I had any money I might toy around with that.
That only takes 50 lines?
I was actually thinking of this exact idea a couple days ago when doge spiked! Nice work
What‚Äôs the Robinhood api? I‚Äôve been looking at building something for a strategy I wanna automate on there
Is it safe to use the Robinhood api?
I love it! Nice job. 

I think if I were to use something like this, I'd connect it to Twilio + Whatsapp and want to have more control over whether or not to actually purchase...it could message you when he tweets, with the full message, and then you just respond with 'Yes' or 'No' to buy Doge or not.
I am a Python noob and I have a question.
I read your code, but I'm not sure I understand what the "trigger" of it is. I mean, what's starting the whole listener part? It seems to me like it's all just setting variables.
What am I missing?
How much spare cash does one have to have to reach the point where they trust a homemade python script to spend it for them unattended...  This seems like a recipe for disaster to me...
thanks for sharing
Why Elon and why Doge specifically given the projectile vomit of crypto currencies ?
I lol at shitcoiners who don't buy bitcoin.
Cool
Can you create a bot for tracking the PS5 stock lol
How often does this refresh?  

Is this a set it and forget it code as long as the computer is on?
\#brought2UbyCarlsJR
I'm recently interested in using programming to decide small scale financial trade for me. Thank you for sharing!
Nice bottt
dam, I was thinking of making this yesterday...
so a few improvment sudgestions

1. Stop losses, just write a simple script that would pull out the trade if it goes in the other direction by something like 2%
2. Take profits, you want it to be a short scalp, looking at the jumps in the last few years, 50% might actually work.
that makes you the product then if you buy it because he advertises it

youre supposed to buy when its low and sell once he tweets about it
there's a ton of negative chatter, but I think you're on your way to developing an incredible investment tool friend!
Much wow, lotsa stonks
ELON MASK: SELL DOGE COIN
yikes unofficial robinhood api. I almost never read the source code, what if it steals your SSN, banking info, or just straight up messes up and over leverage you. scary
Did you also buy some 23 days ago? lol
Did it work? Tweet happened
I spent $1200 on Doge coin and I'm up $600 in 2 days! Should I buy more? Tell everyone! Let's push for that dollar kings!!!
LETS GO DOGE üöÄüöÄüöÄüöÄ if yous need help finding a place to buy dogecoin I use CoinSpot. You get $100 of Bitcoin when you sign up using code REFBP7X89 :) enjoy
New Crypto Pump Telegram Channel https://t.me/PumpandDump101  feel free to share!!
How can I get this same code off Robinhood and on Schwab or other big name brokers?
Hey there, I debated making something similar but did a quick google search and saw your repo. Can I ask where you're hosting this to run? 

This is awesome - thanks!
A month later - How‚Äôs the bot working out? Make ya a fortune yet?
Just had this idea while showering yesterday lmao :D
Can you make it so when it buys it adds a trailing stop of say like 1% automatically so If your away from your computer when it buys, it Will exit for you, but you get a lot of the upside potential?
So how did it work out ?
Why?
[deleted]
Yea I guess I didn‚Äôt account for negative news üò≥
Lol
Hmm wouldn‚Äôt be hard. Just need to had their Twitter ID. Thanks for the suggestion!
Can you imagine if Dogecoin reaches some 1k/coin... becomes the nr1 currency on OnlyFans or whatever comes next :P
Fun fact, the second URL has a typo in it (as in, coindesk created a typo‚Äôd URL, not the OP) 

>... shes-a-**hodler**
Buying on the cheap, this is great!
Even the guys at r/wallstreetbets won't accept this kind of craziness.
Actually, r/satoshistreetbets
Please do go on. *munches cheesy poofs*
üöÄ
Elon would delete his tweet
Elon would die
Yea, but he's definitely not a redditor, and definitely not the sort of person to troll some random person, right? /s
You could pick up a Raspberry pi and run it on your network for a small script like this and then just create a cronjob to run the script at specific intervals.
Welcome to python. I'm sure there are some people who could make it happen in half that.
http://www.robin-stocks.com/en/latest/functions.html
Yea it would be hard to tell from just the code, but Tweepy streams tweets constantly so it's starts "listening" when the program is run.
Depends on how the account is setup. If it‚Äôs on margin then yeah could be an issue. But remember, stonks only go up so you‚Äôre good. Maybe. Idk. YMMV
I made one that scrapes the PS5 page at nowinstock.net and sends me an email if they show it in stock at any retailers
this kinda bot would be preforming whats know as a scalp trade, you would still be buying low and selling high
Child sex trafficking ring discovered via Doge coin transactions
NLP sub module?
IIRC there's a stupid easy pypi package called textblob that gives you the sentiment of a blob of text in like two lines of code
Should use some NLP to gauge the sentiment of the tweets and predict based on that
Dogecoin is the coolest cryptocurrency, there's no way Elon is gonna say anything bad about it.
Just build a sentiment interpreter. Never mind, just saw the comment under mine.
You could always use grammarly's text analysis as a method of context analysis too. They have highlighting features that tell you the context, though I don't know if it's too refined for the topic in question, you could refine your code to your needs based off of an analysis of theirs.
You know what is hard though?
that's not a typo
We're all hodlers.
 Buy the deep!
no because he will tweet, your bot will buy, everyone else will sell...
Neither does r/stocks, but I'm still so proud of OP right now

Great job u/djrdog578
It‚Äôs within his personal risk tolerance.
risky business this.
and he's totally not the kinda global elitist that would think it's fun to wipe out this poor guys bank account for shits and gigs. /s
Or you could play with AWS. It would be very cheap to run this as via Lambda
I wanted to build something exactly like this but though it was way beyond my capability. I guess basic trading scripts aren‚Äôt that bad?
I made one that scraped the ps store and alerted me when it went in stock and that's how I got mine!
Can you share your code with me please? I have zero interest in ps5 (pc gamer masterrace) but would love to see the scraping magic.
Sweet thanks
So you're saying that the billionaires have started investing in doge coin?
This is good for doge coin!
Well it's no surprise because billionaires are pedophiles....
This can be tested: is time-to-market more important than sentiment-analysis? (also does sentiment even matter?)
‚ÄúSee Doge helps cleanse out the bad actors. We have had enough of Goldman Sachs laundering money on behalf of these pedos‚Äù
What is it with these religious types?
So you are telling me that there is a money so secure and stable that billonares used it to that kind of illegal activity. I should buy some
Was just about to suggest this.
Google has free API that can analyze if something is said in bad or good direction. Amazon probably has it too. It's gaped by number of uses ( per month I think), but he probably won't tweet thousands of those in one month
textblob to the rescue
[deleted]
Buying car insurance?
THIS IS A TRAP GUYS DON'T FALL FOR THIS
You left me dangling here
Shame. If I had actually clicked on the link, I would‚Äôve known that they were referencing the HODL meme. I didn‚Äôt think coinbase would do that, but obviously I‚Äôm no expert ü§∑‚Äç‚ôÇÔ∏è
Well, play stupid games, as they say.

(Not that OP is stupid)
Neat, I‚Äôve never used that approach. Could you simply setup your scripts to run with AWS at certain times and then pay for the resources used to call those scripts?
It's on my Github [here](https://github.com/ahark86/ps5check/blob/master/ps5check.py).

Plenty of avenues for improvement, I'm sure such as automatically firing up a tab to purchase the system or even completing the buy process automatically. At present, it's designed to check once every 60 seconds and send an email to an input user if it gets a hit. I also designed it to stop once it sends a single email because it was done for fun rather than to actually get me a PS5 (which I already have). I didn't want to potentially spam myself hundreds of times if it got a real hit or if there was some bug I hadn't anticipated while AFK.
More likely you're interested in scalping them
Better than what it's really used for!
tbh same
Can we talk about getting extended warranty for your car?
You know what else is hard and dangling?
HODL before comment
essentially, yes. So no server overhead.
Or I just like to see functional examples. I have zero interest in making a few extra bucks off desperate shoppers.
Wait. What is doge used for?
In that regard you can also have a free instance on gcp running 24/7, look for gcp unlimited free trial.
Thank you u/AISweigart. Appreciated.

The books and course both are edutaining engaging resources to learn python. Thank you.
Instead of giving the post worthless awards, consider donating to the author.
Hey Al! I'm currently reading your book and I missed out on this offer last month cause I found out about it a bit too late. By the way your book is absolutely fantastic! I've learned lots of things from it!
Just finished this course and as someone who started with zero knowledge I would highly recommend this as a welcome to the basics of python. Great book.
Thanks for the generous offer, Al! I'm sure lots of people will benefit from this. :)
Do this people. Thanks, Al, hope you're surviving.
Thank you! All the best.
Thanks!
lol it won't let me sign up because my email address contains the word "anonymous" in it. 

Maybe Udemy can take their own programming courses :)
I‚Äôm a big fan of u/AlSweigart Definitely try this course.
100/10 I also recommend this course. And ITS FREE get it as soon as possible.
Just finished this course a few days ago. Was my introduction into Python and loved the way you went through everything. Feel like I have a fairly good grasp going forward now. I appreciate you putting this out there!
NOT valid for existing users... can you please make it available for those of us with an existing udemy account??
What's up Al! I've been taking your course concurrently with a few others on Python, and your teaching style on Udemy is so contagious/effective in my opinion!

Thank you so much for helping to educate the world for as cheap as possible, and opening the door for so many new programmers, and keep doing what you're doing!!
Thank you, I've been waiting for this post like it was the hottest game of the year dropping hahah. Looking forward to learning!
Thanks a lot!
Thank you so much ‚ù§Ô∏è
thanks! i got this free a while back but i finally started learning python this month. halfway thru and loving it!
Thank you so MUCH! I really, really appreciate this as a broke student right now. I will absolutely give back as soon as I can.
Just signed up! Currently learning C++, but have always been interested in Python; this seems like a super coincidence to me. Thank you for your altruism, and I'll get started on it after my Cpp series. :)
I finished this course recently from the  last time this was posted and I have to say the course was AMAZING. I learned so much and immediately was able to build a small project from what was covered.
Thank you!
Thank you for this!
THANK YOU SO MUCH!! I had been waiting for the book at my library and then I moved before it came available. I really appreciate this :)
Thanks Al!
Thank you very much for this resource, I was already reading your book and now using this also.
Idk why the f*ck I read : The 4 hour workweek instead of Automate the boring stuff. I think I I needs go to sleep.
Thank you Al

you are the best
thank you for your great book! one of the things that got me back into python, and still a great resource for me
This'll be awesome thanks for providing resources to us noobies
I'm going thru the class right now. I've noticed in some of the vids, you can faintly hear your car purring. Cracks me up! Great class!
Thank you so much, Al!
Thank you very much!
Thanks
Hey Al! 

I‚Äôm reading the ebook version of your book. It‚Äôs awesome!! 

I was upset that I missed the offer last time. 
I‚Äôm so happy that It‚Äôs back!!

Your book is the best python book!!!
I legit already bought the book, the course will make going through it a bit faster. Thank you for this!
Thank you.
Im going to buy your book. 
I signed up last time you were so kind to offer it up, but never actually did the course.
I also signed up to a procrastination course. Well , I meant to.
thank you
I think this will support my self studies nicely, along with of course adding something good to it! 

Thank you Al, and may the (bugless) code be with you
Thanks a lot..üéâ
Thanks so much, I'm eternally grateful. 

Gold if I fucking had it
!remind me 1 day
Thank you so much for this opportunity to better understand Python! I won't let it go wasted!
Literally was just considering where to start with Python and this came up. Perfect timing!
Thank you <3
Hey Al!  I saw something where you said the course was going to be updated to reflect the 2nd edition.  Any idea when that would be?  Obviously no rush, I know you do this out of hte kindness of your heart and for the community.  I was just wondering if it was going to be soon.
Thank you! I just signed up! I heard about  **"Automate the Boring Stuff with Python"** before and just came to realized you are the author! Awesome!
Does it have a course completion certificate?
The book is awesome.   I am sure the course is similar.   Very easy to read and practical.
u/AlSweigart: is programming author, gives free content.




@AlSweigart: RALLY THE PEOPLE, TAKE TO THE STREETS.





(love both accounts by the way!)
Is there any content that will be different from the current version of the book? Just curious as to see if I need to squeeze out time to attend. Thanks!
Thank you helps a ton. I am recent graduate from ME and I am interested in python. So thank you again
THIS guy should win a NOBLE PEACE PRIZE
This drives me nuts: in the ATBS video, 22/7 in IDLE approximates pi.  But in my IDLE, it's just 3.  If I write 22.0/7 I get a float.  But 22/7 does not.  (similarly 3/4 = 0, but 3.0/4 = 0.75.)

&#x200B;

Having my IDLE not match the intro video is maddening.  As is IDLE not being as smart as a basic calculator (show a float when it's warranted, not when it's a whole number).

how do i fix it?

a
This is awesome - I've had this course on my wish list for awhile now!
Cool
I just want to say THANK YOU!!! Not only have I gone through this course 3+ times, but I‚Äôm currently using it to bypass my work computer‚Äôs system sleep override when I use the caffeine app to keep a script running over night. This is helping me to automate the boring stuff by creating 5000 cognito users for a load test on a dev env. I don‚Äôt know why watching videos keeps my system from going to sleep, but your course plays for hours without stopping and I REALLY APPRECIATE THAT!! Thanks again and for those who haven‚Äôt taken this course... what are you waiting for?? Do it!
17‚Ç¨ atm, can't get the free  code working :/
Please make it free again :)
why do i feel like this is posted literally every week
Hi!  excuse me, but I am from Argentina, here paying $ 49 usd is a lot of money, the course says it is free for 30 days, is that true?  When that deadline is met, will they charge me for the course?  I am very grateful, I am new in the world of programming, therefore in python, thank you very much.


Sorry for my English, I'm learning English too.
Bummer. Just saw this and the code is expired. Anyway it's on sale for 11.99 and I bought it. AlSweigart seems like a pretty nice guy.
Exactly. Awards are for paying reddit money for emoji. Guys pls donate to content creators, artists, non-profits instead!

Edit:also open source projects. I paid for Ubuntu
Apart from the gold, the other awards are likely the free ones that Reddit gives from time to time.
Well we give him free users every month. This is huge for him
Where can I donate so I can buy the author a beer or lunch?
Thanks! Yeah, I sometimes get worried that I'm spamming subs with this each month, but at the same time it always results in 20,000+ sign ups, so I figure I should keep doing it. Thanks!
I wish it had exercises. If you just watch the videos its not the same as actually programming with python. I was about half way through the course but never deeply learned by doing because it all just Al talking. I know the answer is taking initiative and playing with the code and going to other sites for exercises/projects but it would be better if atleast for me if it was all in the lesson. Maybe its good to have to go and find exercises because a lot of programing is research and finding the answers to issues
If it‚Äôs a gmail address, you can add some dots to perhaps bypass like a.non.ymoushero1@gmail.com gmail will strip those dots so the mail will still arrive to you correctly
I have an existing user account and I was able to access it just fine.
Huh, that's weird. Can you PM me what country you're in? Some folks in South Africa have said that the coupon code doesn't work for them. What's the exact error message text that it gives you?

You can always just create a new email account and sign up using that. It's a bit annoying, but it should work.
Imma need a link to the procastination course. I'll spam till u post it tho.
I will be messaging you in 1 day on [**2020-10-03 11:28:02 UTC**](http://www.wolframalpha.com/input/?i=2020-10-03%2011:28:02%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/j3eww7/automate_the_boring_stuff_with_python_online/g7e3qom/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fj3eww7%2Fautomate_the_boring_stuff_with_python_online%2Fg7e3qom%2F%5D%0A%0ARemindMe%21%202020-10-03%2011%3A28%3A02%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20j3eww7)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Hi, I post it at the start of each month. Udemy limits how many codes I can make to effectively two 3-day free codes per month, so I want to make the most of them. I do worry that it gets kind of spammy, but it's a free course and also I get 20,000 to 30,000 signs up each month, so I want to keep doing it.
because he posts it every month.
[deleted]
>‚Ä¢ If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
Lo √∫nico que est√° limitado es el tiempo para conseguirlo gratis, as√≠ que aprovecha! Una vez que ya est√© en tu biblioteca no se har√°n cobros despu√©s y puedes acceder a √©l las veces que quieras y hasta descargarlo para verlo offline. En pocas palabras es un regalo.
Yep. I'm currently doing the course via Udemy which j paid for. I bought a Kindle soley to have python books to help me when I'm away from my laptop. I bought Al's book straight away.
No, you don't give him anything, he offers his course and book for free instead of making money out of it and people enroll because it's a good course, so the awards money is better donated to him, or donated to any charity, instead of throwing it away on worthless internet awards.
Please keep doing it, I missed out a few months ago and bought your book, hard to focus during these times but now this has gotten me excited again!
Your critique is valid.  I loved the book.  The huge issue I had was that I'm not creative enough to come up with things to do.  Give me an idea and I'll work at it until I'm blue in the face.  Ask me to come up with something to code and I'll give up because I just honestly don't know.
UK. it‚Äôs working now thanks!!
Sure thing, let me find it real quick and post it here. Just need to grab a sandwich first.
It kinda gets a little spammy indeed.

To be honest your course deserve to be sticked in a lot of dev subs.
Nah, you're right to be skeptical. It's a popular book and a popular course, but I also post the book free online and max out the number of free codes Udemy lets me make each month. And it's not like you have to install an app or watch hours of ads. That's not normal in today's dystopian internet.

But anyway, with the RES plugin you can see the ages of the enthusiastic accounts: 4 months, 6 months, 14 years, 6 years, 3 months, 4 years, 5 months, 12 years, 15 hours. So it's not like they're sock puppets.

You do see this on Amazon reviews though: glowing reviews of some crappy self-published programming book all within the same 3 day period shortly after the book's release, and the reviewers have hundreds of written reviews (most reviewers have less than a dozen) because they're bought from professional review scam accounts. I've been sitting on a blog post about it.
Si gracias ya lo estoy haciendo jajajajja
I agree with you about wards, but this course is literally spamming all the dev subs every month (I counted at least 5 subs). So yeah, we give him free users. Having users signing his course is good for him, this is a fact. More users, more reviews, more people knowing his course.
[deleted]
Yup, that's the model that Udemy pushed when I looked into it...  

* Create Course
* Offer mega discounts, even free vouchers to get attendees
* Get the Discounted/Free people to leave reviews
* ......profit?
You're acting like his course is bad and the sub is doing him a favor.  


A shit course could be free and no one would enroll in it.
Sure, but if you look at the other accounts, I assume they have real comment histories and interaction. Though I'm sure you can buy hacked accounts with these histories; but, and this is a bit of a humblebrag, I don't need to pay that premium just to help give away a course for free.

I've never done security professionally, but it's something I've always been interested in. And just like the internet made spamming profitable, and bitcoin made cryptlocker viruses profitable, and social media made troll farms profitable, dealing with scams and fake accounts online is something that we have to deal with these days. Like, I would even include Amazon as a "shady website" because unless you're buying some name brand thing from the company directly, there are too many fly-by-night third party sellers hocking junk to trust it, and you can't even go by reviews because there are so many fake ones.

The short version of my blog post is that fake programming books often have:

1. 30-word-long titles so they can catch all the keywords.

2. Were published in the last three or four months.

3. Have several generic 5-star reviews that were posted within a few days of each other. (And, like, one 1-star review from someone who got tricked into buying the book.)

4. Sometimes you can even look at the Preview and google phrases they use to find the blog posts or Wikipedia articles they plagiarized.
I'm pretty sure I'm a real human being and there's better places for OP to create fake reviews than from the arse end of the world where there aren't many jobs in this area :p As for why I'm enthusiastic - I'd heard good things about the course in a few subs and was eager to give it a try. Why I'm learning it? Because I want to make the setup portion of my vfx job significantly easier if I can automate it. Maybe the course will be helpful, maybe it wont, but I'm glad I can at least try it for free instead of paying and being disappointed it's not working for me. There's no need to be pessimistic - You are losing nothing by signing up or not signing up for it, and OP clearly is fine with people using his resources for free, otherwise why bother posting codes when he could be making money?
It's somewhat ironic that an "expert" on how to identify fake reviews is churning over *this* thread.

His book is legitimate and very well known. On a personal level, I think his book is one of the easiest to follow for a novice coder.
You realize this is free and you lose absolutely nothing for trying it out...
You're taking complete wrong conclusions. In any point I remotely say that. I've the utmost respect for the author. I'm just replying a comment to you where you "ask" donation for him.

We give him much better value than donations. We give him respect and web traffic (a huge load. Every month) to his course.
That‚Äôs awesome and you‚Äôre absolutely right. Much better places to create fake reviews.
At the risk of sounding like a fan girl... you can actually look at his website and look him up. He's released several books under the Creative Commons license and has presented at PyCon. Automate the Boring Stuff is referenced so much here and in r/learnprogramming that ATBS is an accepted acronym. The wiki for r/learnpython has ATBS as a recommended free source.

I don't know who you think you're saving by not even bothering to do a Google search to confirm your doubts.

And if you can append a list or create a dictionary without thinking about Zophie the cat, and call a function without wanting spam & eggs, then that's your loss.
Not trying to save anybody just offhanded shit posting and thought it was odd so see so much positivity. Seems like he‚Äôs just a good dude trying to be helpful though so people are into that.
That's very forthright and honest. I thought you were going to accuse me of being a bot and DM me pictures of sidewalks and traffic lights.
    print(isinstance(object, type))    # True
    print(isinstance(type, object))    # True
    print(isinstance(object, object))  # True
    print(isinstance(type, type))      # True

now you are ready for metaclasses
Always has been üåéüßë‚ÄçüöÄüî´üßë‚ÄçüöÄ
Welcome to Python.

https://img.ifunny.co/images/6eef1accf975ba0d7b894911f634aa8cc9afeb2249c82607df6290eaaaf0bfd4_1.jpg
im new so i dont know what this means
For me it's different: I get that object oriented programming, like python. I don't get how not oop programming languages work üòÑ
"You take the blue pill...the story ends, you wake up in your bed and believe whatever you want to believe. You take the red pill...you stay in¬†Wonderland, and I show you how deep the rabbit hole goes."
Always has been.
I remember this day
It's objects all the way down...
What caused your sudden revelation
The amazing thing is that Python will make sure that you have that same epiphany over and over and over and over and over, even when you think you've had it as many times as you possibly can.
"we are born of objects, made men by the objects, undone by the objects"
Yes! That's why you can call methods from seemingly "primitive" types.
its a box for boxes that you can put in a box
Excuse my ignorance, but what does that mean?
Isn‚Äôt all programming just objects?
Always has been üî´
    def am_i_an_object():
        pass

    am_i_an_object.could_be = 'yeah!'
    print(am_i_an_object.could_be)
Ha, when I first started learning OOP it was tough to wrap my head around this.

It's weird to think about instantiating an "object" to just take actions with it.
See, I know this. But I feel like it's not clicked. Maybe it's due to my understanding of OOP is very limited. I haven't had a reason to build out classes just yet, where everything can just be sectioned off into functions as of now?
So how were you enlightened ?
Everything being said here is just confusing to me.
looks like someone is having programming orgasm
C , BASIC , PASCAL  found this comment funny
Happy for you, keep learning.
That moment where everything just clicks...
Feel like every couple of weeks I see this sort of post. Not upset about, just find it a kind of funny.
I object!
Everything is made of things!
Wait, it's all objects ?
I object to this post.
Always has been \*gun to back of head\*
I‚Äôm new with Python and I do not deeply understand yet what an object means. Could someone explain it to me in the easiest way? Thank you
Woah, stop objectifying bruh.
[Do we tell them about dictionaries?](https://www.youtube.com/watch?v=p33CVV29OG8&t=2m59s)
O RLY?

Go to your favorite Python interpreter and incant these:

    a = 1
    a.bit_length()
    1.bit_length()

:-D
Why do we have to use len() instead of object.length() then ?
I learned this yesterday doing chapter 14 of python for everybody course. ü§Ø.
Functional >> OOP any day for everyday scripts and such.
It's not though. ‚Äòwhile‚Äô isn't an object for instance. Why do people keep saying everything is an object in python when it's just most things?
So is JavaScript
[removed]
Pass a function as a parameter in a function. Store a dataframe in a cell of a dataframe. Write python in python. 

Etc.
Not just objects but objects oriented.
You think he knows it's all object?
Same
Welcome to the Matrix
Click
Hence the name Object Oriented Programming language
I didn't understand but sound poetic
Hahahaha I remember this click day, the best feeling ever it's like a door that's been closed for so long and now it's time to solve problems because the language is not a problem.
I have a love hate relationship with pythons pyobjects. On one hand you have dangerous but convenient stuff like duck typing magic on the other hand it makes me nervous when I declare an integer since it's like from 24 bytes which is huge!
congratulations. You now also know java and javascript/typescript

Throw 10 years experience in each on your resume and call it a day
I am an animated object as well.
Objects, Models, Classes.. Same thing!
Dang man. Now I'm woke
...that's how I was when JS finally clicked lol.
Wait till you find every variable is a pointer.
I laughed so hard at this. Still remember the moment I realized as well!!
Wear specs....
Dude, I learned this last week too after practicing Python for a while now. Completely blew my mind!
So Confused lol
Yea everything, every library is an object that you access methods by name_of_library.method(self, parameter=‚Äúsomething‚Äù)
Always has been...
Everything is pointers to objects actually. That's why appending anything to a list is O(1).
OOP there it is.
Your honour, I object.
Late to the discussion, but what were you doing/working on which brought you to this realisation?   


I am a noobie, waiting for such aha moments myself!!
When people say, "I've been using Python for N years and have never used classes!".

Hahaha, bruh, you've been using classes from day 1.
Hi,

Is anyone able to help me with the question I have posted? I have spoken to quite few people and none have been able to help so far. It is the transferring data to a master sheet.

Thank you in advance
HuUuUuH¬ø¬ø¬ø

edit: Nm i got it.
I‚Äôve done quite a bit with Python, but what is a meta-class?
is this what all the classes hold inside them?
[deleted]
    $ docker run -it --rm python1.6
    Python 1.6 (#1, Feb 13 2021, 20:14:57)  [GCC 9.3.0] on linux4
    >>> object
    NameError: object

&#x200B;

<wink>
[deleted]
Lol...!!!
Reminds me of [this](https://youtu.be/LLJsSiB2dpU?t=139) but replace 'God' with 'python' and replace 'square' with 'object'
The OP, has come to the realization that everything in python is an object.  If you have not come to the realization yourself, you don't get it.  but one day you will get it too.
> im new so i dont know what this means

Programming has a concept, starting many decades ago with a language called "Smalltalk" of objects.

Objects have a state, which is the current settings for its attributes, and usually methods that let you change its state or perform actions using its attributes. If you play RPGs, your character is an object, and their strength might be set to 13 or something. Your character is an instance of a class called "RPG characters", and there's a method (function) that you an run on this object called level up, and maybe you can increase their strength when you level up. You microwave is an object, and its default state is off, and it's got buttons you can press that tell it how long to microwave for, and it's got built-in behavior to count down to 0 from whatever you put in. You could declare a "class Macrowave", and give it a default setting of "running = False" and then make another method that says "def run(how_many_seconds), which sets "running = True" and then sleeps for 1 second until how_many_seconds is set to 0 again, and then sets "running = False" again. Even as a beginner you should be able to find out how to do something like this if you haven't already.

The op is talking about the fact that in Python, everything you interact with is actually an instance of a class. This includes really super basic types in python, like numbers. You are really limited in what you can do with them, but if I say "a = 1" this is actually an instance of the int class, with an attribute for its value, which is 1, and there are actually methods inside that object, like __str__() which tells other things how you represent the integer as a string. This is actually why you can just say "print(a)". You could compare this with another programming language like C, where you have to tell the print function what kind of object a is, because in C, a itself doesn't know how to represent itself as a string.

The actual implications of this are that you can redefine certain things in Python somewhat easily. I had a program where I needed really particular behavior from a number when exiting my program, so I create a class that inherited (used as a base to build upon) from the int class. It also means you can do something more powerful, which is composition: You can make a class that holds lots of other objects, all of which do custom stuff.
I‚Äôm with you man.  Have a friend who already knows it pretty well and told me the same thing.  Now if only I knew what that meant.  We will get it one day.
Like if you're playing a first person game and suddenly realize you can pick up or interact with everything. Not just useful things, but unscrew light bulbs, unlace shoes, rip take the foam out of a car seat. Everything is a thing you can do something with.
In my opinion, OOP is great for large, self-contained projects that can be conceptualized from front to back in advance, it adds a nice organizational structure. But there are many fields where we just want to fling any operations at whatever data we feel like. If you take the functional mindset, often it will 'just work' and you less often need to go back and expand the parent structure, or reimplement the same logic in a child structure.

**For OOP, the class defines attributes and behaviours for every instance to have.** (This is really the only concrete difference I can find, but the mindsets differ in how they organize logic) 

A class called Point2D may have attributes x, y, and a move_up() behaviour that increases y by 1 and returns the new position x, y+1.

Then you define Point3D, for x, y, z. if you want a move_up() behaviour, you kinda need to define it in Point3D again, so that it gives x, y+1, z.

1Dpt.move_up() -> error, method move_up not found

You could handle this better with some forethought about a generic Point, and all the types of Points that might inherit from it. But sometimes it makes sense to have a lot of similar but distinct types, and the web of inheritance can be messy.


**Functional approach ie in Julia:** Define an abstract function once, and it can be used in any case where the behaviour is logically applicable. (And if you want a different logic/behaviour, you'd better name it something else)

Generic move_up(p) function, take some kind of Thing, and return its attributes after applying 'plus one' to y. There are concepts like pure functions that help organize code and logic for lack of the OOP guardrails, and higher-order functions that I really can't live without anymore, but they don't play a big role in such a simple example.

move_up(my2Dpt) -> x, y+1  
move_up(my3Dpt) -> x, y+1, z  
move_up(2Dpt_in_time) -> x, y+1, t  
move_up(3Dpt_in_time) -> x, y+1, z, t  
move_up(1Dpt) -> error, y not found  
move_up(horiz_line_seg) -> **x**, y+1  
move_up(vert_line_seg) -> x, **y** + 1

The creator of a '3D point in time' doesn't need to modify or extend 2DPoint in Time, or 3D Point, or really know much about move_up() that was implemented originally, just that it's a behaviour that they want the new type to have. When an abstract function is implemented well, it kinda 'just works' (as long as it makes sense to apply that behaviour to the data).

The elegance comes from stacking operations. If + was defined that it can add 1 to a vector/array, then even if y is a vector in some new type, again it 'just works', without wondering if a vertical line segment is inheriting from a more generic Line (is Line a pair of 2DPoints, or a pair of 3DPoints, or an arbitrary length array of Points, or a starting Point, a Length, and a Direction Vector?), or an array of y's with just one x value for efficiency. There was no 'plus' defined for Points or Lines, it just has to work for basic data structures and primitive/abstract data types.

There was no thinking about the line of inheritance. You needed to know that move_up exists, that it positively increments the y_coordinate, and that it makes sense to increment the y_coordinate of whatever object you want to apply it to. In the OOP, you can't move_up a 1D point because you didn't define the method for 1D points ... but if you have any understanding of what you're trying to do and why, then common sense means you simply wouldn't try that. OOP is a nice guardrail in that way, ideal for junior programmers and large teams where you don't want someone inadvertently doing something stupid without warning. But for an individual working that just wants to get to a result with as little coding time as possible, functional approaches can be more elegant.
Python isn't *object-oriented* so much as object-based programming is an option.
Javascript is a good example. It‚Äôs prototype based which still operates on objects but in a different way.
it hit me like a truck. i was just sitting there and then all of a sudden, "Wait...It's all object"
[deleted]
Why... objects. Isn't it obvious?
[deleted]
"fear the old objects"
What's the original quote..?
Everything in Python is an object as in a class/instance of a class, and can be treated the same way.
No, some languages don't support the concept of objects.
Lower level programming is a bit more granular, gritty, and usually really annoying. Hence the abstraction.

There's certainly an argument to be made that the address:memory relationship of a turing machine is just OOP at it's simplest level, lol. 

What's interesting to me, and still something I don't completely understand, is the behavior of neural networks and RNGs as somewhat unique compared to the standard bits in, operation, bits out framework.
No. All programming is ‚Äújust‚Äù manipulating _bytes_... objects are a very high level abstraction over bytes, and there are plenty of ways of manipulating bytes without them.
No, for example in most languages, an ‚Äúint‚Äù variable isn‚Äôt an object it‚Äôs a primitive type. Then there structs and enums which are similar to objects but serve a different purpose.
In the beginning there was on and off. 1 was on and 0 was off, or maybe it was the other way around, doesn't matter. But how could 0 and 1 become zero and one.  Object = {data type: string, format: utf-8, decCodePointList: [ 79, 78, 69], string methods....}. Now you know!
uhm... sometimes the name of the sub can be misleading

/s
They're objects too.
    (1).bit_length()
Because of the semantic choices that were made about Python - it shuns setters and getters (and object.length() is a getter).
https://stackoverflow.com/questions/2481421/difference-between-len-and-len
https://realpython.com/python-metaclasses/

In short: A class is an object that, when called, produces an instance. A metaclass is an object that, when called, produces a class.

`type(type(anything))` will always be a metaclass. The "default" metaclass is `type`, and you can see this with the rare `type` constructor.

Suppose you have a class like this:

    class Square:
      def __init__(self, w):
        self.w = w
    
      @property
      def area(self):
        return self.w ** 2
    
    s = Square(5)
    print(s.area)
    
Under-the-hood, what's happening with that `class Square:` syntax is something more like this, using the `type` constructor. (except that I've changed the methods to lambdas so I can define them in-line)

    Square = type('Square', (), {
      '__init__': lambda self, w: setattr(self, 'w', w),
      'area': property(lambda self: self.w ** 2)
    })
    
    s = Square(5)
    print(s.area)

A metaclass allows you to use something other than `type` here. `class Foo(metaclass=Meta):` uses something like `Foo = Meta('Foo', ...)` under the hood.
Classes are also objects, and since every object has a class, a class also has a class. They are called metaclasses.
Something you will never use that people will throw out there in order to show off.
a class is a blueprint for an instance of a class and a metaclass is a blueprint for a class
Thanks for the catch. Typing code on mobile is a pain.
isinstance
This guy perls
Lol I didn't know Python 1.6 existed....
bad bot
it hit me after 2 years of coding

I was pretty embarrassed... NGL
What does this realization change? Ok so now I know everything is an object - so what?
I like your examples. I‚Äôm still a newbie at Python but that made sense.
Damn thank you so much for this haha that was really helpful
Sounds like real life with extra steps.
hmm i get it and i understand it, but i have to figure out how to use it.
I always knew about functional vs OOP abstractly but this clarified how to think about the two approaches. Thank you for the detailed explanation.
Thank you for the explanation (I had to read it several times to understand it üòÑ). Is there any programming language that can handle both oop and functional pretty well, at the same time? 

(I'm new to programming, sorry if the question sounds stupid)
> In my opinion, OOP is great for large, self-contained projects that can be conceptualized from front to back in advance, it adds a nice organizational structure.

/u/WayOfTheMantisShrimp you are now appointed President of Python. Please give your acceptance speech in a single line.
Yet another term I will have hard time to understand... I have googled it, and I guess there is no big difference between one another, right?
Technically because everything is an object in Python, object-based programming is the only option.
Some people in the community will sometimes bash OOP, which makes me double take since you know that is Python.
Java is the same (except for primitives). I kind of just made that realization myself, i knew they were but not how useful it can be.
[deleted]
You got hit by the truck? Very few people in the Movie get hit by the truck....
opt in
Ahh through the objects, All things are made clear. Namaste
That is the exact same list of instances in the same order I was thinking in my head when I wrote that sentence.
https://youtu.be/pH0S88JtJ_A
replace the "object" with "blood" from bloodborne (it's a game)
How would that be more useful when compared to java or other programming languages that are not object oriented? Why is this a groundbreaking realization? I‚Äôm still learning these languages so I‚Äôm don‚Äôt get why it might be so impactful.
What are the practical consequences out of this?
Other languages have objects and primitives which are not treated like objects.
Neutral nets don't do anything other than bits in - op - bits out. RNGs too unless we're talking quantum RNGs. A neutral network is just a function approximator.
I was just dreaming about this last night and was like, ‚Äúsurely people have done this before.‚Äù Then I wake up and I‚Äôm like, ‚Äúoh yea people do this all the time.‚Äù Still freaks me out.
You're right that you essentially never have to use them, but it's still good to know how they work. Understanding the type system in any language is important, and it's good to know they exist in the rare case you're trying to do something that could be solved with them.
This comment is underrated.
Before 3 comes 2 and before 2 comes 1
Beginnerproject bot?
Eh, you shouldn't really feel embarrassed. It's more of an implementation detail of how Python works more than anything. Knowing that types are objects isn't knowledge that I've encountered needing yet.
same... the worst part is people kept saying it to me.

"Everything's and object" it just never clicked until I realized ... everything is an object... SHAMEüîî
Right there with you!
I'm sure it has different meanings for everyone.  For me it means that I can customize any object in python including string, list, dict, etc.  This lets me make new data types based on low level types.  For instance I can make recursive lists that have properties of both a list and a dict for certain use cases.  Manipulating objects like this has made python more useful to me.
Python can handle functional programming decently, here's a timely article from [Real Python](https://realpython.com/python-functional-programming/) that does a more thorough job than I can.

There are only a few things that are mandatory for functional programming, a large number of things that make it a lot nicer, and a few ideas that reflect more in how you organize your code rather than language features.
"I like Julia and functional programming better"
There is no President of Python, but there is a *Benevolent Dictator For Life* (who retired...)
There is a lot of conjecture on this point. Alan Kay, the  inventor of Smalltalk, the first Object Oriented language used a very different concept and of course doesn't consider the way that C-influenced languages do OOP to be "proper" OOP. But OOP in Python is still useful and powerful, when used in the right way.
I know it's paradoxical, but as you can effectively ignore the OOP facilities in most cases, you don't have to actually *write* OOP code (i.e. classes etc.).

It may be objects all the way down, but the very top layer doesn't have to be :-)

It's all in the semantics: In contrast, for instance, in Smalltalk, you simply cannot write procedure oriented code.
Tbf, if you have to define classes yourself, it‚Äòs a very different use case.. Before you bash me, I know Python for about half a year now.

Edit: Downvote me instead of helping me to understand this. Thanks.
They are objects:

    >>> print(len.__name__)
    len
    >>> print(sorted.__name__)
    sorted
>>>
Both sorted and len are functions (callable objects) that take arguments that are sortable and length-able objects... not all objects are sortable or length-able, but enough of them are for it to make more sense to have a general interface pattern rather than on that has to be implemented on an class-by-class basis
Functions are objects.

```
>>> def foo(): pass
>>> foo.__call__
```
Best alternate ending ever!
**the Jedi Order, you never left.**

*-IamYodaBot*
Pece be unto you and your objects
Is that Eternal Darkness?
Take something really really simple: like the number 5. 

It's an object. With properties and methods. 

    5.bit_length()

 tells you how many bits are required to store the number 5.
Just gonna point out that Java is **extremely** object-oriented.
It really helps you organize things. When you create a class, as you do in Java and python (and all object oriented languages), you give the class variables and methods/functions associated with it. Then in your code outside the class, in your main method, you create instances of the class. The instance is called an object. 

For example, pretend you are trying to create a model of a bank. The bank has lots and lots of bank accounts, so you write a class that represents a generic bank account. The class contains the variables ‚Äúowners first name,‚Äù ‚Äúowners last name,‚Äù and ‚Äúbalance.‚Äù The class also contains the functions ‚Äúwithdraw,‚Äù ‚Äúdeposit,‚Äù and ‚Äúclose account.‚Äù

In your main method, you create a bank account by saying account1 = bankAccount(John, Smith, 1000). When John wants to deposit money, you say account1.deposit(500). And then when you want to know John‚Äôs balance, you can access it by typing account1.balance. This would return the value 1500. And then to close the account, you type account1.closeAccount(). 

This type of coding has a bunch of benefits (and drawbacks). It is really helpful when you have thousands of customers and bank accounts to keep track of. It‚Äôs also helpful because a bank might have lots of other objects associated with it: customers, employees, cash vaults, loans, investment portfolios etc. Each of these things would have their own set of functions associated with them, so for example you wouldn‚Äôt ever use a ‚Äúwithdraw‚Äù function on an object representing a loan contract. By creating classes, you make it clear that the withdraw function can only be used on the bankAccount object. This makes your code much easier to read and maintain for the people who take over the role of maintaining that code in the future. 

As you continue learning about OOP, you‚Äôll start to learn about the other benefits like inheritance and abstraction. Inheritance is when you have child and parent classes, where the children inherit the properties of the parent class. For example, you can make an ‚Äúanimal‚Äù class with a function like ‚Äúmake noise.‚Äù Then you make the child class ‚Äúdog‚Äù with the function ‚Äúbark.‚Äù This has some benefits with organization, code readability, and even write-ability. Abstraction let‚Äôs you call functions that you don‚Äôt need to actually understand, cause someone else wrote the function and documented how it works.
Java is an object oriented language.

OOP essentially give a few advantages, for example abstraction and modularity.  Abstraction allows users to use code without knowing exactly how it is implemented, as well as protecting existing, working code from being tampered with.  Modularity prevents a user from having to rewrite the same snippet of code over and over, which can lead to more sources of bugs.
Python does not support strong encapsulation and java have primitive types. Non of these languages considered strongly or pure object oriented. Object-oriented approach only helps you to write more logical and cleaner code.
Check other replies to this post, there are some good explanations there. On phone, can't reply in detail. Or keep learning and it will dawn on you :D
Or just same language, previous versions.

Python 2 has integers
I suppose its the complexity of the 'operation' that amazes me. All the standard mathematical operations, and basic neural classifiers, are relatively simple, but some transformative neural functions can do some absolutely wild stuff in the middle.

They even have their own flavour of memory that is stored inside the function itself. Especially for morphing or adaptive functions, absolutely bonkers compared to standard math operations.
>RNGs

The only time I have seen this said is in terms of randomly generated loot in video games. Is it essentially the same thing just with different use cases for the number it spits out?
All the time? Could you give an example of where using metaclasses would be useful?
[deleted]
Someone check out this guy's math. He might be on to something.
But before 1 comes 0, and where is Python 0?
well... that's true that the knowledge of not knowing or knowing isn't really important.. but it kinda felt dumb not knowing XD
I think there's a huge difference between knowing that everything is an object and understanding everything is an object.
This just sounds like high people talk to me.
exactlyyyy
> Tbf, if you have to define classes yourself, it‚Äòs a very different use case..

Maybe you aren't doing class inheritance right? IME Python makes defining custom and especially child classes a breeze.... Apart from some namespace quirks but easy to work with once you wrap your head around it.

Maybe I'm not super clear what you mean by "it's a very different use case" though?

>Edit: Downvote me instead of helping me to understand this. Thanks.

You're being downvoted cause you didn't present a clear issue or problem, just a vague complaint.
>  a general interface pattern

This is the interface pattern: `len()` tries to create an iterable of the object and if successful, returns the length of the iterable. If you haven't implemented that in the data model of your object then it will die with the object is not iterable exception. If you have implemented it, it will work. 

On the other hand, if there were a .len object property but not a corresponding `__iter__` method in the same base object class, your general interface is arguably broken. 

I recognize that different languages handle this differently, but it's not like this is black-and-white obviously better.
Right, see the OP. Everything is object.
What do fish have to do with it?
Bloodborne
Minor nitpick: that gives a syntax error because Python tries to interpret `5.` as a float. You need `(5).bit_length()`.
This was well written and helpful, thanks!
This really helps explain a lot. I will be saving it for future references when I understand the terms better lol.
[deleted]
Well, to be clear, those aren't advantages unique to OOP. You can just as easily abstract things and make them more modular with functions.

Classes and objects are useful when you have data that is tightly coupled with some set of operations you can perform on them. It makes sense in that scenario to use the class structure to show this tight relationship.
It just means random number generator. There's nothing more complex going on. I'm not sure what you're asking.
Nope, I don‚Äôt know how to use them, I just hear about people using them. Sorry.
https://youtu.be/_uMEE7eaaUA&t=22s
What comes before 1?
>and where is Python 0?

&#x200B;

    $ docker run -it --rm python0.9
    >>> type([])
    <type 'list'>
    >>> type({})
    <type 'dictionary'>
    >>> class Foo:
    Parsing error: file <stdin>, line 1:
    class Foo:
              ^
    Unhandled exception: run-time error: syntax error
Well it's not like we're talking about a 0 based language here!

...*Wait*
Perhaps you haven't truly seen *The Light* yet
Well yeah, I didn‚Äôt properly express myself. 

What I meant by ‚ÄûIt‚Äôs a very different use case‚Äú is: You dont have to mess around with naming things ‚Äûself.__innit__‚Äú or something to the extent. You just use the module. 

You dont have to define anything, don‚Äòt have to properly give parameters and such. You just use the module(s)

I believe that‚Äôs what people mean when they talk bad about OOP. You have to ‚Äûdefine‚Äú so much more or just.. Think differently about stuff. It‚Äòs not as easy as using the pre-defined objects.
First, no one said it‚Äôs obviously better, just that it made more sense in the context of Python than the alternative, which it absolutely did.

It made more sense because your explanation of **len** is a little bit off... Python does not exactly ‚Äútry to create an iterator‚Äù (that‚Äôs possible of an object that implements the _iterator protocol_, which includes iterables that have no size bound), instead it checks:

1. if the object is a custom class that satisfies **collections.ABC.Sized** by explicitly implementing `class.__len__`.
2. If the object implements the _sequence protocol_, which it may satisfy by implementing the _mapping protocol_, which is a superset.

In CPython all of this is encapsulated by successfully calling PyObject_Size on a given PyObject and getting back a positive integer.

The reason why the interface pattern was the local optimum for Python is precisely that ability to explicitly ‚Äúopt-in‚Äù to behaving like a builtin by implementing a sufficient subset of the ‚Äúmagic‚Äù methods defined by the object model. With **len** there‚Äôs really only one such method, but in many cases (like **iter**) the protocol could be satisfied by a number of different paths... in both cases it was in fact ‚Äúobviously better‚Äù for Python to provide a common interface and let everything that quacked like a duck be a duck, but sure that wouldn‚Äôt be a sensible choice in languages without its rich (and at times infuriatingly complex) object model.
pesce sono anche oggetti
You're welcome.
I mean there isn‚Äôt really an answer. Python and C++ and similar languages are technically OOP but you can avoid anything with classes and objects when using them. It‚Äôs a weird technicality without a real answer. I‚Äôd say it‚Äôs only OOP if you use classes and objects, but i‚Äôm sure someone will disagree
No and that's ok it's python
Fair enough.  To be honest I don't have a lot of experience with non OOP languages, so I probably underestimated their capabilities.  

You are absolutely correct on the power of classes and objects stemming from the tying together of data and the operations on said data.  I suppose that abstraction and modularity are inherent in OOP languages, though not exclusive to them.
Yes that is all I was asking. I am not sure why I made that question so complicated sorry.
Wait is this real?!
Well played... well... played.
Yeah, OOP is a tool just like any other. With enough care and attention you can make a well documented, modular, abstracted system with nearly any decent paradigm.

Although, I definitely wouldn't say abstraction and modularity is *inherent* to OOP. Just for the simple fact that you can always design a system poorly. 

Take for example, Python's implementation of classes letting you access any instance variable of an object without restrictions. That could certainly be abused to a point in which there is no modularity or abstractions made.
Yep.
Congrats. Your coworkers might not care, but management would most likely be happy to hear you've created savings.
I think the problem is that for so many people, everything that happens in the computer box is just magic. All of it is magic. You happened to know a spell they don't know. Thanks wizard man.   


They don't realise that a lot of learning and knowledge and work go into doing these sorts of tasks. But you know what you did, you python wizard you.
One day you don't know how to do it. You fight to learn how to do it. Then that one day, you're realizing your picking up a new skill and understanding it.
Nice. Don‚Äôt worry about other‚Äôs appreciation for it. Just know that you‚Äôre working for yourself and leveling up on that python skill
[deleted]
That is awesome! Congrats on making a Python script application to your work! And again, keep this accomplishment as a means of giving yourself to learn more about programming than contributing to your company. Those skills in the end will hopefully expand your outlook on your abilities and much more!
Good job, man! Never mind those cavemen whom don't appreciate it, we know how much effort you put into that stuff :)
> banking data

cover your code with unit tests

while your coworkers don't care and your boss is happy, they will be all happy to make you the scapegoat if your code ends being buggy
Excellent work! Keep at it.
Good job man, you also can check how VBA is working. Its ugly, but for this excel stuffs is pretty useful. I did multiple of these at my work and its saving so much time.
This is awesome. I‚Äôm also an accountant, also in banking. Python has changed my career. Keep it up man, this is only the beginning.
Yeah, I know that feeling I worked as an audit for a while, data we had to analyze were in csv, and we had to merge them by ID-s  there were hundreds of log files, my team members thought that writing python script was waste of time. Yes it took me couple of days to perfect it but it worked nicely not only the time but also I avoided painful process of opening every file and copy pasting it into another.
Is the script available anywhere üëÄ
Congratulations
That's great! ü§ó
Keep going man and actually share something like this give people some motivation to continue
The struggle of on and off programming. Congrats
Way to go!
That‚Äôs great! Love the little wins
Always best to have and goal with with well defined outcome.  Congrats on your accomplishment 

As for feeling unappreciated, I often times l work on things and use before sharing with colleagues. I use my work in ways that others can see, which allows them to see what I'm doing/how I'm getting the job done.  Sort of like the "If you build it, they will come" approach.

Sometimes what I've done just falls off the radar, or doesn't get reaction.  If I see a benefit to myself, I keep using them. However, many times I'm asked and sought after (usually by my colleagues) to share my work process.  Most people will like change if they see it will reduce time or effort to complete a task.  If the tool/process I created is that popular, management usually finds out and asks me to make it a formal part of the job.  This may be as simple as making the process accessible from a centralized location on the network to a formal training process and docimentation. 

This approach does a few things:

1. People don't think it just think the new process, tool, or whatever contribution just happened to appear without me having a role in its existence..

2. You get recognized and respected  by your peers, and word will spread.

3. You get better opportunities for advancement since you will now have a more recognized set measurable benefits you've contributed to the company.

Unfortunately, sometimes there are managers who for whatever reason will not promote their workers. Sometimes it's just the lack of a supportive company culture..  I've had a few of these in my career where no matter how much you add to the benefit of the company, they still don't help you accel in your career.

I'm not suggesting this is the case with you but if after all of this, if you still don't get the recognition and career opportunities, maybe its time to send out feeler resumes. Make sure to add these new tools and processes  tools you've created to it. I'm sure there are many other places that would appreciate you efforts.
You saved your co-workers time, now you'll be burdened with its upkeep forever more
what library did you use?
Congratulations! That is a wonderful accomplishment! You just set the tone for the future.
Great job! I was in a similar spot just a few months ago and since then I've gotten promoted into the BI development team.  Remember to test your scripts and watch the mutability of those dataframes and you're golden.
They do care, they're probably just a tad resentful that saving them time means they have to do more of other kinds of work.
I'm just wondering what was different now that allowed you to become successful with Python?
Mate that's amazing. The first step amongst many. Great feeling and you should be proud
This is amazing. I‚Äôm also starting on developing script for myself instead of relying entirely on stackoverflow. My codes are messy and long but hopefully I can have something for my own just like you. You inspire me!
The beauty of automation. Good stuffüëçüèæüëçüèæ
Be proud of yourself. Your employer or coworkers may not care that much but dont let that stop you from being innovative. I've been in the same boat where I've created scripts that have saved the company hours of work and thousands of dollars. No one cared besides me but that's okay I'm the one gaining additional knowledge and thinking outside the box which I can take with me to my next employer. Keep up the great work!
Good job!
Great job, but stories like these remind me of how dreadful and oppressive corporate life is. THe very people who benefit from your initiative disregard it.  Typical, b/c they see you as a threat now.

You'll need to provide your co-workers with something that makes them look like stars rather than yourself, if you want them to support you.
Great job!
Congrats! With learning any language, practice and writing useful things are the best things for learning because you have a goal in mind
Congratz sir , you are one steap ahead to get invitation from Hogwartz
That's remarkable. Automation with Python. Way to go!
You coulda keep the secret some people are ungrateful.
\> I've been trying to learn Python for almost 3 years now.

...

\> I proceeded to build a script that takes all of the data into a  dataframe, strips out what I don't need, creates columns for missing  columns, adds any missing value and saves to a new workbook, all in  21.73 seconds.

seems like you knew python all along, just didnt have a use for it until now. :)
Congratulations bro.  Don't give a shit about others.
Excel includes Get & Transform (also known as Power Query) which is a ridiculously powerful yet easy tool for transforming data from one or multiple sources. It made my work life so much easier. [Video Preview](https://www.microsoft.com/en-us/videoplayer/embed/RWfC6K?pid=ocpVideo0-innerdiv-oneplayer&postJsllMsg=true&maskLevel=20&market=en-us)
Congrats pal.
If I were you I'd have milked the time saved for a little bit and chill rather then working üòÇüòÇüòÇ.

I'm currently in the process of my very own first project. I'm leaning heavy on this community whenever I hit blocks that I cant get over by myself.
So far so goodüòäüòä
Congrats!!! I want to learn Python too but haven't seen much improvement :(
Let me tell you, as a beginner python learner, these seemingly small wins are not small. You gain confidence from getting the result you wanted using a brand new tool. So congrats. Keep going!
you are like batman
Congratulations! Keep going!!
keep it up. Nice to hear.
Just going to say Grats!
Awesome, man.

&#x200B;

I am also trying to learn Python since long time and as I am not a developer in my current work profile, I couldn't work professionally as Python developer. Get motivated after reading the post and decided not to give up my passion.
Congrats!
Great job, I'm new too and started with something very similar. We have our pm database separate from our financial db. I downloaded both csv merged them together now I can see dollars and projects on the same line and make better decisions.
I later added more and included a way to suggest new due dates for POs based on certain columns depending on the description of the po line. So if the po line was for project completion it might look at the in service date and add 15 days for the new po due date.
This task took at least 4-8 hours everytime you did it now it's 16 secs. Currently I'm trying to build operational dashboards using that data to quickly be able to make decisions or track how things are going using dash/plotly.
why hourly rate *1.33

I would also advise against trying the revenue generation part. Any sizable org will have no way of measuring this.

1 million usd project: 
1sales guy, a CEO who almost slept through 2 meetings, 1 project manager, 12 developers, 1 designer ... who created which part of revenue?

..and yeah, good luck telling the CEO he‚Äôs not generating money.
Woot!
That is one hell of a news dude!
Get up the good stuff
Make sure you quantify this at your next appraisal. The business should care and reward you.
I‚Äôm definitely hoping so. I‚Äôm up for a raise this month and would love to amplify my value
They usually don‚Äôt care either. They‚Äôll just know you have more to do extra work now lol
Really depends on the management, I had automated all of our reporting systems last year (we mostly use google sheets as all of the departments need to have an access to the reports) and during my annual pay review they seemed not to care at all, despite the fact that I have saved roughly about 20-30 man hours per week. Anyway congratulation and I hope your management isn't like mine!
This is 100% it. You learn Python, SQL, VBA, even Excel you become a wizard. The majority of people are just too lazy to learn. Fine by me, my role is cemented by my co-workers‚Äô apathy.
> for so many people, everything that happens in the computer box is just magic

ffs, it's 2020
My mom always got mad at me when I said I wanted to grow up and be a wizard. "Don't be a fool, you're going to have to grow up and get a *real job* like the rest of us!" Well... I guess the jokes on you MAAA! I'm a fucking jedi wizard ninja erry-dayum-daaayy!

...I'm sorry.
For me, the hardest thing has always been coming up with projects. Okay, I have a data frame, sow what?? This is the first time where the project just came so naturally.
Exactly. You should never base your personal value of what people think of you. The most important thing is that you achieved an important goal for you and you
Also so many jobs, at any company in any industry, have opportunities for automation. So many processes and procedures are specific to those positions. There‚Äôs boring stuff in the streets just waiting to be automated.
Power query for this example is best. You pull in the csv file. Delete the columns and load. Power Query saves all the steps and can be done everyday. I just redid about groups entire process and looked at python first but PQ ended up being better. All in this  will save about 80-100k of work.
rofl, sad but true
I used a few. I used numpy, tkinter, pandas, xlsxwriter  and regex
Unfortunately, like many others right now, I was furloughed with the possibility of permanent layoff last week. Pretty bummed.
You also save them 2h per time * number of times per week* 52 * estimated hourly wage. Give them that number to justify asking for more.
U deserve it
Really hope you get it. We need more automation of repetitive task. Just don't be shy to sell yourself. You might want to present this as a solution to the problem and not just use it without your superiors knowing.
make sure you show it to the right person.  I've been totally back stabbed by co-workers and mgmt for pointing out inefficiency and wastefulness in the past.  When you show that your middle mgmt aren't that good at their jobs by out shining them, they tend to take you out of the game when they get the chance.
Timing is perfect. Congrats
Love your story! I hope you get that raise, bud.
Keep up doing what you are doing. Once you have a project like this fully implemented (aka everyone uses it daily) then give them a spreadsheet. It‚Äôs used by X employees for a total weekly hour value of Y so that means a company monthly savings of Z across the board. Then say you‚Äôd like to discuss raises. It‚Äôs hard to turn down when it was just presented to them.
I'm sure you know this, but document everything!

In your code and in your life.
And yet we live in a world where some 30% of the planet are terrified that two men might touch eachothers pee-pee, there is an earnest debate whether weird political figures and youtube commentors are correct and climate change isn't real, versus thousands of actual university scientists and researchers; we're having to re-explain that the world isn't flat; there are many countries that cut off girl children's clitorises because women liking sex will make them evil; and only recently are many first world countries deciding that potentially trying to torture the gay out of children might be a tad immoral. Welcome to idiocracy, I hope you like it here.
Most of the technology is use every day is just magic for me. From AC, to automobiles, to plumbing, to the TV. HOW DO THEY WORK? ...magic...

I just know how to use them, i don't know how do they wok. Some wibbley-wobbley quantum something.
When people come up to you or you hear a conversation of a possible project. Just say yes I can do it or yes I can do that project for you. As long it's in your skill level and you're interesting in seeing if you can complete the project. 

I always say I'm just one Google away of becoming a genius. What I don't know today, I'll know by tomorrow.
there are such opportunities everyday and anywhere
Yup. I use excel currently learning python and I got hired 4 months ago and have automated 5 of their processes and they look at me as it I am a genius when half of it was just googling
Of course, power bi or power query are the best for it, but for users who does not have power query installed and do not want to learn new stuffs, macros are the best - it will do everything in one click in environment they know.
How did you get the count of free and occupied slots?
regardless, you did good work. Use your time off wisely and build on your learning. 

Don‚Äôt procrastinate. it‚Äôs shut but you‚Äôll feel worse if you waste the time in between down the road. GL
This. Times number of involved employees... so

2h * employees involved * number of times per week * 52 * hourly wage 

So for example 3 employees, weekly at 25$/hour

2h * 3 * 1 * 52 * 25 = 7800$  per year
Also show that you have potential to do similar things in the future, and that you can look at problems creativity and even identify processes that they didn't even realise are an issue. That is where the real value is. 

I did a similar thing a few years back and I know how it feels when it seems like no one cares. They will start to care when your team can afford to cut members as you are more efficient as a whole.
Of course don't ask for the full amount....
I would start at 25% as otherwise your boss has no savings to present for himself
That‚Äôs why you befriend them and make them look good by doing it in a mutually beneficial way.

Throwing people in front of the wolves will never benefit you. 

Use the cronyism to your advantage rather than fighting it.
I am failing to understand which part of your post is related to python, programming or computers in general.
Being good at google is what got me through my undergrad.

I may not be particularly smart, but I‚Äôm a hell of a googler.
Yeah but even having just the base understanding is a huge leg up. All of your coworkers can google it too, but without the base, they‚Äôll have no idea how to incorporate what they saw on google. The real value is being able to find a bunch of different pieces online and put them together to build a code that does what it needs to do.
I think you‚Äôre looking for a different thread. This is about banking data, not parking.
r/theydidthemath
You should use the employees full labor costs and also their contribution had they spent that time doing other tasks.

So ...

3 Hours * # Employees * (Hourly Rate * 1.33) for a non-revenue generative employee, or simple cost basis

3 Hours * # Employees * Profitability Contribution  for a revenue generating position
not really, in most corporate scenarios the people who don't out shine their bosses stick around.  You gotta realize they see you as a threat to their jobs if you are too good at yours.
No, you go 50% over the savings. Time spent not cleaning the data will be used for other things that bring in more value.  Assuming data cleansing falls into the "below average hourly employee rate" bucket, they can now spend time on better things, thereby yielding the company more quality hours of work, and fewer menial. 

Plus you don't want to negotiate yourself down from the get go
Yea that's the obvious play that most people make as they are assimilated into the culture, but it won't really protect you when the knives come out.
It was very specifically a response to your "ffs it's 2020" as though people are somehow all now well-educated. They aren't. People still think 90% of stuff they don't understand (which is 99% of stuff) is functionally magic.
Me too. Been using Search Engines since 1995. I was up to using 27 search engines in the early years of the Internet. 

I'm down to one. Google finds 99.9% of anything I need to find. I had used Bing for the .01% if I need to.
googler is a generic name for a Google employee
Of course. They have tried googling but get too overwhelmed. But I have constantly been trying to automate every I do so now I can start making my own functions off of memory. 

Just recently made one that sends up to a thousand dynamic emails to our inspectors. That one they are still freaking out about.
sorry
Yeah but they did it wrong. OP said it saves 2.5-3 hours a month. So it's not 52 times a year, it's more like 12 times a year.

Edit: so that's $1800 a year savings. In which case I WOULD ask for that whole amount if not more
/r/theydidthemonstermath
r/theydidthemonstermath
this is why I hate the world
> It was very specifically a response to your "ffs it's 2020"

That was in context of computers of course. And I disagree, people are generally more computer literate than let's say 20 years ago. As for the dumb old turds who choose to be willfully ignorant because they think gray hair is a merit - well, there are plenty of gray hair computer gurus who keep in touch with new things, so the ignorant dudes are welcome to rot in their ignorance until the end of their life and get no help.
Ah yes... Web Crawler and news groups taught me HTML so I could build a website for the photo studio where I worked as a graphic designer :)
It sounds like you‚Äôre going to be up for a raise in the near future. For everything you automate, jot down estimates for total time saved in a year. That way you can easily provide the number to justify increased pay. Even if you do something that only saves 15 mins a day, it all adds up.
r/theyalsodidthemath
It‚Äôs not a savings if you turn around and spend it again ...
As a manager what's the value add in savings if I just pay them back out to the staff
Yahoo, Geocities and htmlgoodies taught me HTML. RAW codes in a text editor and a browser that's all the tools you needed.

WebCrawler, Excite, Dogpile, Mama, Infoseek, Lycos, LookSmart, Altavista, AskJeeves, MSN, Overtune, Alltheweb, Snap, Hotbot, AOL, Netscape, MegaCrawler, Northernlight, Goto, Mega-search, Galaxy, Go, Blekko, and many more....
Thank you man! I‚Äôm really hoping so. 

I have been told my emails save about 2 hours a day and my other process I made apparently saves 2 hours per audit. 

I‚Äôm trying to add it up and also show it‚Äôs efficiency. 

I‚Äôm really excited to get better at python. Can‚Äôt wait to see what it can do.
You motivate your employee to program more software that's making your company more productive.
While I understand the downvotes, this post was so stunningly bleak that it laughed out loud. Thanks.
I miss having all those options
I‚Äôve only been working at it for a few months. Now that I‚Äôve started actually doing things that I find useful, I‚Äôve felt that I‚Äôve been progressing so much faster. Keep it up!
Also eliminates human error. 

The bigger gain, is a human doesn't have to waste 2-3 hours on bs work.
Yeah but I don't make any extra money if I give it all back to them. Pointless.
Lol it was a bit of a factual troll! Glad you laughed. I've saved my company hundreds of thousands and it's never come back to me. Just been wasted on other bad decisions that I didnt have the power to turn over üòÇ
I don't. Google is the top dog now. In those days, I used Yahoo, Dogpile, Mama, and NL(Northernlight) the most. 

But, it's nice to remember the good old days. Remember we were on dial-up in those days.
Thanks! I take an hour lunch and spend that hour just doing my courses for python it‚Äôs exciting!

Congrats on all your progression!
Human error is a big one. at my current job a coworker was putting in a 96 character long value in with certain characters in certain spots, 5 minutes later and a python script helped fixed that error. Saved hours of work so far.
This is why excellent employees leave and go where they are valued. You may not see an immediate value to the company but this guy saved work for 3 or so people for a small task. Now with the ability, tenacity for learning, and self confidence from his previous task, he could pivot that skill for something larger, and larger, etc.. You may not be able to exactly quantify potential but you can quantify the savings when he executes on it.

If you reward someone for work they now enjoy because of a new skill they are proud they picked up, they will probably give you more back in the long run than you do by move a few dollars around in the immediate future. There is a very good reason why the best way to get larger wages is to hop jobs every 3-5 years, and you‚Äôre making it easier for people to want to do that.

Otherwise this guy is going to polish up his resume and brag that he successfully developed and deployed a data manipulation program to easily analyze customer accounts and saved his team time. And this is only the first one he‚Äôs done.
To be fair I thought it was a good question, and not really worthy of downvoting.
Another reason is that if management doesn't recognize your value, overachieving employees will find somewhere that does. You can do the same.
I am fed up with all the clutter that is in Google page nowadays. Made me go to Duckduckgo. It's results page reminds me if early Google.
Ah this is what it‚Äôs all about! It‚Äôs brings back the inner child in me thinking back to when I started messing with computers
You sound like a good dad :)

I didn‚Äôt pick up coding until I was 22 because I thought it was intimidating and scary. Sounds like your daughter is headed on the right path!
It's a pretty cool feeling, huh? My 14 year old dove into coding at the end of last summer. He has over 2000 commits on GitHub, a project in Rust with almost 1200 stars, and he's learned languages that I didn't even know existed. At this point, I'm worried that he'll figure out how much of an imposter I am.
Is this [codecombat.com](https://codecombat.com) with $99/year to $399/month fees?   If so, which are you using?
That's great to hear, if she decides she really likes it shes gonna benefit a lot form such an early head start.  I wish i had started learning python at least in my teens
Congrats! You must have done something right before now, so that she has caught the bug. My own daughter picked up Basic pretty well in middle school (about 27 years ago), and learned something about programming and software engineering thought processes. She moved into the arts, earning a BA in Music, but then she moved back into tech things. She has been a part of the Maker community, doing things with electronics and programming (taught herself Javascript, HTML, other). She is now program director at a nonprofit, doing STEAM stuff to help children with their natural creative instincts. Well-chosen, early introductions make a difference.
That's awesome! When I was a tiny human, I pretty much got scared away by Khan Academy's JS. It's great that your daughter is learning so much at such a young age. Three cheers for u/ghazgul's kid!
In several months time, OP will be posting:

"Me and my daughter made a game in pygame and she kicked my butt.  How can I best take revenge? I knew I shouldn't have taught her python!" ;)

Great job OP, really cool to see kids getting into code.  If she does want to learn pygame, kids can code on youtube is a fantastic resource, and after showing how to program, and how pygame works, he show you how to write a shoot em up, a platform game, and a tilemap game, each one more complex than the last.  The platform game has this cute rabbit image, and is perfect for kids.

They also cover seek/flee/wander enemy movement, and then go on to pathfinding, including Dijksatra and A-star algorithms!
Didn‚Äôt know about this, gonna give my boy access, see if he likes it.
This is great.  I've been teaching my 12 year old son Python using Adventures in Minecraft but it hasn't yet captured his imagination.  Do you think CodeCombat would be engaging for a 12 year old?
[deleted]
From one father who has had his girls hack on a little bit of Java (resulted in a fast exit from the room) and Python (much more well-received) congrats!
  If dad == "proud":
      Skip_heartbeat
PRO programmer there
when did you start programming with her?
She is going to be the best :)
[deleted]
Can your daughter teach me? ;P
That's so cool! I'm 23 but this is my dream lol how did you get her to be interested in coding ? And that's impressive considering her age
I'm only 17, but this must be such an amazing moment, makes me want to have kids in the future, would love to share these joys
Very nice, good luck to you and your daughter !
Simply awesome!
totally going to do this with my daughter too! I didn't know this existed. very cool!
Lol I still remember my dad buying me a beginner's text on Java when I was like 10. I thought it was fun at the time. Didnt realize until over a decade later how valuable that early exposure was. That and the fact that the main PC that he and I used ran linux. Those skills can be fun for kids to learn and pay dividends later on.
Parents like you are inspiring :)
Can you be OUR dad too?
Awesome.
Beautiful and inspiring - you must be doing something right
Awesome <3

My eyes became watery after reading this.
My 10yo daughter wants to learn coding. I suggested python. Where should she start?
<3 I want to have kids now!
I would really like to experience that if I ever become a father hahah. Good for you and her obviosly, that could be crazy advantage for her, comparing to other kids. I'm glad there are parents that don't use tablets, phone, laptops, just so they could watch stupid cartoons or    
 play games. I'm amazed how that became solution to all problems for them.
Nice! My parents refused to purchase a computer for me so I scrimped and saved all my paper route money and the first computer I owned was the Atari 800XL, which wasn't a bad computer for its day! It was either the Atari or the Tandy CoCo's, or colour computers when they came out.
Dang this is so sweet. I tried to explain JS to my 13/yo nephew yesterday and he was like "I can't read this, this is boring". ü§¶üèæ‚Äç‚ôÄÔ∏è
I try my best. I dont always get there but I will always try and support her interests. I have been lucky so far that her interests are inline with mine.
I didn‚Äôt until a few years back because I thought I had to be able to type 1000 words per minute. I wish someone told me...
Do you think people who jump in early and take part in competitive programming have an edge over people who learn it later ? I am almost 17 now and quite upset that I didn't know about these tournaments and opportunities that existed for children.

You get to hear how Zuckerberg learnt programming at the age of 10, this guy did that and things which make me feel like I missed out on something and now have no chance of becoming as great as them.
Way to go dad. ü•Ç
I hear ya. I can def feel shes gonna be pushing me very shortly.
Wait, what?! 17 year old here that is suddenly feeling strangely inadequate for the university he applied to
Currently we are using the free account. But if she keeps at it and shows a dedicated interest Ill definitely subscribe for her. Also the $99 is life time not a year.
It also super nice to see her ask to do something like this rather than a Netlix-a-thon.
I can only hope she kicks my but. Also thanks for the great info!
Lemme know how it goes!
I think its def worth a shot. You can do a fair amount on the free account so it doesnt have much upfront investment!
The future sure does look bright!
Thanks!
We can do better!

    if dad.emotion == EMOTION.Proud:
        dad.skip_heartbeat()
üëå
She certainly is on her way!
We started with Scratch about 4 months ago.
I sure hope so!
Congrats
One of the boys in her class does scratch coding at an after school day care thing. She saw his stuff and came to me and said please teach me! How can I say no to that?
It def is a joy to see her light up when her code runs correctly!
Thanks!
I just try to screw up less than I succeed.
Code Combat sure is a big hit with my daughter.
Thanks we are trying to feed her natural inclination into STEM. We have her in several week long STEM Camps this summer. However there are very few girls signed up and I am worried it may discourage her. Here's hoping for the best.
I think they have to feel the power in making the computer do what they want. To be told it'll do anything they dream of.

If Hello World doesn't light them up, it might not be for them.
I don't wanna get married or have kids, but when I read something like this, I consider it just a little bit more :)
[deleted]
I think it definitely helps but shouldn't be a huge focus if you're not interested in it. If you're looking for a career in software development, that skillset you develop will help you pass interviews for sure. Even more importantly, building interesting, useful applications teaches real world skills and may be a better use of time.

Maybe dabble a bit in both but remember to also enjoy your teen years. If you're already dedicated to programming at your current age, you're already ahead of the curve compared to a lot of people. Remember to enjoy life outside coding :)
Never too late to start. Learning should be a lifelong journey.
I started to grasp the concept of programming through competitive programming. Before joining the competition I thought that programming is complicated and hard but after practicing the questions for the competition I felt more confident in programming in general and found that learning other languages are not that hard. I can say that competitive programming are my stepping stone in my programming journey.
17 is still pretty early.
You are fine, man. I am much older and just now learning. You don't have to be 'as great as them.' Just live your life.
ty
You're telling me! I got my MS in CS only 4 years ago. The boy is light years beyond anything I could have hoped to be when I started that degree. He's got a bright future. 

But as someone who came late to the CS party, I can confidently say that so long as you do the work, you've got a bright future ahead of you, too.
27 year old who went late into university, You're fine.
For what it's worth, I had zero programming experience before college and still managed to end up developing software for a living. I distinctly remember not knowing what an "operating system" was my freshman year of undergrad, much to the disbelief (and amusement) of my EE friends.
Hey thanks for responding. Will definitely try out the free account. I just checked again and only see $99/year. Can you show me where the $99 lifetime signup is?
Yeah it's definitely a good sign, you have every right to be proud, for all you know you've produced the next Zuckerberg!
No probs. Although it is called kids can code, it is useful for people of all ages tbh.
No-one in the world want to maintain class EMOTION.
Okay coolthanks. My son is 2 so im wondering whens the best time to start. Have fun!
Haha I hope at least one of my future children will come to ask me that too 

If only I knew about that when I was a kid, I learned when I was like 13 and was immediately hooked
Noooo, she will learn how to be comfortable in that kind of environment early on, unlike girls who decide to pursue stem later. I see that only as an advantage for her and you should explain that to her somehow.
Also true. I remember when I saw Hello world do something and I was flabbergasted. üòÇ
So true man! When I saw my teacher Print "Hello world" I was amazed.
This gave me mr robot "Hello, friend" vibes
For me it was watching social network haha
I do my best
Hell yeah
I was watching an older video on youtube where he said 99 was lifetime. I guess they changed it. sorry about that!
But this time a human version!
Hahaha good point
If you wanted your son to end up working for a FAANG it's already too late. He should've been leetcoding in the womb.
Code-a-pillar is a fun app that teaches a very simple style of coding. I think my daughter was 3 or 4 before she really figured it out. She's about to turn 6 and has it mastered.
Honestly I teared up a little when she asked. And was astounded at seing how well she has picked it up.
Same. I ran through the house, got my parents, and made them watch me type it in and run it again!
Really cool to hear that this happened for you without even doing it yourself.
All good. Quality material deserves support. Thanks for letting us know about the service.
lmao lets hope so
Yeah I messed up on that big time
For anybody that's thinking about whether this course is worth it- it absolutely is. I'm a broke high school student who can barely spare money for a course so 2 months ago, I eagerly waited for this course to be free and copped it. Best decision! It definitely helped me kickstart learning python, it's well structured and easy to understand. Al is extremely generous in giving this away and I hope everyone has a good time! Thank you Al, you really did change my life (as dramatic as that sounds.)
u/AlSweigart, why are you always trying so hard to give away your valuable product for free?
Literally was contemplating buying this course earlier today. Just an hour ago I downloaded the book onto my phone because I saw it recommended here a few days ago and I had bought it (along with several other books) from humble bundle. Now here you are offering the course for free. Count me in. 

I‚Äôve been getting frustrated with my learning process and seriously considered giving up last night, but if this isn‚Äôt a signal to keep trying, I don‚Äôt know what is. Thank you sir.
>	You purchased this course on November 14, 2017

Oh. Well. Alright then.
The book is amazing. The projects are creative and not too hard for beginners, but they are still hard enough to provide a suitable challenge. I haven‚Äôt taken the course. However, I‚Äôm looking forward to. Thanks Al
You're a saint, man. Props to you.
As a broke college student, I've been waiting for this ever since I finished the free first 15 videos last month. Just wanted to say thanks for making your awesome content free. You're an inspiration, man.
Does this online course follow the second edition of ATBS?
Thanks for share!, I definitely will join the course
Thank you so much!!!
thank you sir, will start this course asap
Tried to buy it and I got you are not eligible for the discount.

Correction: after trying again it worked . Thanks
I'm finishing up the last few chapters of this book. 100% recommend it or the Udemy course. I feel like I've learned so much
Currently in the middle of doing this course. Just wanted to say thank you for providing such an excellent product.
Thank you!!
keep doing what you're doing!  and thanks!
Ha! This is excellent timing! I just bought the book. :-)

Just enrolled. Thanks for posting this!
Al, thank you very much for this, you are a great guy!
Within the last year I have done three beginner Python courses. Zero to Hero, Talk Python‚Äôs Python for Absolute Beginners, and now Automate the Boring Stuff. Please take advantage of this free course, it is by far the best I have taken!!!!!
Thank you thank you!!!!!
Enrolling right now
Thank you!
I'm excited to learn python again. I lost my book and couldnt finish it.
Thanks you're amazing..
sweet thanks
Thank you!
THANK YOU
Thank you so much! I've started to learn Python right away.
Almost done with all the videos myself. 

INCREDIBLE stuff. Really easy to follow. Great examples. I can't say enough good things.

***** Zophie is beautiful btw!
Logged in just to say thank you to the author and to highly recommended this course :)
You wanna hear something terrible, Al?

Last year, I got my master's degree in a humanities field at Carnegie Mellon. During my first semester, I signed up for a class called Coding for Humanists, which was taught by a guy who basically pioneered computer-aided corpus analysis. I did fine in that class for exactly two and a half weeks, but then the pace *far* exceeded what I was able to absorb. So I dropped it. I dropped a coding class, which numerous people much smarter than me would have killed to have taken, at one of the world's foremost computer science schools. Not one of my proudest moments, but it did save my grades.

That being said, I feel very fortunate to have been handed a free, self-paced Python course for  absolute beginners. And, of course, your books! Thanks, Al. You're a doll. And if you ever need an editor or a copywriter, you know I'll spot you for free.
I don't have to complete it till July 4 th right ?
Is this the second version?
Will I learn about robocop?
First off, THANK YOU. Such a rad and generous gift you're sharing with us. I'm trying really hard to enroll in the course but I am told there is an error. I am in Taiwan and using a VPN set to USA. Could this be the problem? I have been unable to enroll using both Chrome and Safari :(
u/AlSweigart, do you or will you ever create a VBA book? I love your python book looking for VBA excel books to learn. Wise Owl has one but it costs money and the lessons are free on his YouTube page.
The checkout process doesn't work with that code.
Thanks man- I really appreciate it. Just had a job interview on Monday and mentioned I wanted to learn Python. One of the computer guys took this as a reason to quiz me on it. Needless to say that didn‚Äôt go great, but I‚Äôm excited to use it as motivation to crank this out and learn!

Really appreciate your write up on why this is free. You‚Äôre the man. I‚Äôll do my best to finish this and increase your completion rate!
This is so awesome.
Hi Al. I‚Äôm currently working my way through your book. Thanks a lot for making this amazing resource available to us!

What is the difference between the book and signing up the online course? 

Also just as a bit of feedback, as a complete beginner to programming, I felt like I was flying until I hit the Regular Expressions chapter.  I absolutely ground to a halt as I became overwhelmed by the amount of expressions until I realised I probably don‚Äôt need to memorise everything to move on. 

The way I like to learn new concepts is probably to understand the big picture and framework and then to get under the hood bit by bit, going down rabbit holes as I go and continue to build on the foundations. 

I‚Äôm sure once I come back to Regex (with a specific goal in mind for a project) I will understand it better. 

I think introducing the concept of Regex and showing some examples to illustrate the point and leaving the deeper functionality to an appendix or back of the book might be an idea for the next version!
\#madrespect u/AlSweigart

I will try not to be one of the 92%
!remindme 8 hours
Hey Al, I just started your course a week ago from when I signed up last month. Thank you for putting the time and effort into doing this and releasing it to the public.
A big thanks to you sir!
u/AlSweigart I can't thank you enough, Al. I've had motivation problems for a while now, and seeing you giving away what I hear is damn good work to get folk learning has sparked something up again. Signed up.   


If anyone wants a "gym buddy", hit me up! Will generally only be available late evenings Mon-Thu and Sundays (UK) though.
Damn dude, thanks. I was thinking of buying the course 2 days ago and saw this today. Reading the other comments, I think this will be good for me as i tend to have short attention span and get bored with stuff really easy. I've also read your reason why you made this course. Bless you
I did the course and it was excellent. I got it free a month or so ago. I have now bought the book for reference and to support the legend that is Al Sweigart! My python coding is getting better each day. This course explains programming so well. Cheers!
You're joking me! I literally just paid for it last week woooow

Sigh, oh well - good course anyway
Good I subscribed to this sub. I needed this and I don't have a lot of money.
Thank you!
Thank you so much for this! üò≠
Hey Al! Thanks for doing this again, I'd have a quick question for you if I may. I snatched up this course last time you did this "promo" (perhaps gift is the more appropriate word here) and as I started it I just realized, why not follow the book instead so I bought your ebook (perhaps because I want to skip over some stuff I know (and I tend to prefer book-format for courses when possible, same with Nand2Tetris & others)). Now what I wonder, is there any advantage to tagging along the Udemy course over reading the book (aside from being of help to visual/auditive learners or retaining our ravaged attention spans)? I.e., are there some important nuggets that I/we would miss out on by reading without watching? Thanks again for the great material!
Can't recommend this enough. This is how I first leaned python (which is now a major part of my job).
Yay! Just enrolled in your course on Udemy. I need gym buddiesüòÇ
Thanks Al for this opportunity!
[deleted]
Thanks for making this free. I was a math major but has a handful of computer science major friends at university. I only know VBA and R. I‚Äôm excited to learn about Python since it seems a whole lot more versatile!
Thank you Al!

I started this course and month ago and I have been slowly working my way through it. The content definitely gets harder as you progress through it but has managed to keep me engaged throughout. I'm willing to a gym buddy so I can I make it to the 8%!
How do I copy this link to open it in browser
[removed]
Thank you so much!
Thanks so much! I was looking to start learning python and this popped up at the perfect time!
I JUST ENROLLED. FUCKING THANK YOU!
Thank you AlSweigart, this is indeed fantastic!
I signed up! Never knew about python but my gf knows Java and other code languages. Can't wait!
I missed the free code unfortunately. If I buy it at 13 dollars would you get credit for it?
Hi, I'm just starting with programming, a little late for starting (30 years old) and too late for getting your course for free.

&#x200B;

I'm from Argentina, situation in here is really hard. I want to master my english and learn programming for being able first to have an income in U$S, and last may be leaving my country. 

&#x200B;

I have a degree on Industrial Engineering, and an idea for a software which i think can make some money with.

&#x200B;

I'll continue with the crash course and then try to buy or get a free copy and doing yours!

&#x200B;

Thanks for sharing your knowledage.
Yea
I appreciate u, Al <3
Is it still valid ?
Raise your hand if you still have your free course from last year and still haven't started it. Man, what have I been doing with my life?
:D
It's a good course for someone who wants to learn Python.
If you already know know Python and want to "automate the boring stuff" then only the last chapter about pyautogui is relevant.
You should check out Harvard‚Äôs CS50 course.  Also free online to take and covers python and a lot more.
I plan on starting this right after Python Crash Course
When I was a teenager in the late 90s, I'd often bike over to Barnes and Nobles after school, pull those giant $50 or $60 or $100 tech books off the shelf, spend about 3 or 4 hours reading and making notes, put it back on the shelf, and then go home. This was before cell phones, and it got to the point where if my friends called the house and I wasn't there, they'd call Barnes and Nobles and the employee would go on the PA saying, "Would customer Al Sweigart come to the front desk? You have a phone call." Which is pretty cringe now that I think about it.

Oh yeah, I'd also grab the entire stack of "Free 100 hours of AOL" floppy disks they left out for folks from time to time, before they switched to CDs.

The neighborhood and school library had "computer" books but not necessarily "programming" books. I didn't have an allowance so the way I "made money" was asking mom for a few bucks for lunch and then pocketing most of it. A pack of six white powdered donuts was the most filling thing you could get for 50 cents. (I'm not sure how I'm alive and healthy.) It took me three months to save up $60 for a black trench coat from the army surplus store this way. It complimented my goth/punk/weirdo look, but became rather unpopular with school admins after Columbine.

Anyway, the usual $16 for the online course may not seem like a lot but for many people, it is. I get thank you emails from teenagers and college students and just regular adults who thank me, and I really cherish those emails.

The internet makes sending out information so absurdly cheap. It took me a few months to make that course but once that's done, sending it out to literally hundreds of thousands of folks costs basically nothing. Now we as a society could use this amazing level of productivity to invest in our citizens and a social safety net so that we could become even wealthier and more productive, but instead we just give billions of dollars to assholes who switched from "innovating" to "consolidating my monopoly" the second they bought their Palo Alto mansion. I don't know what it is about my brain or upbringing or what, but I have a comfortable lifestyle and don't really feel the need to try to *maximize* wealth. No offense to people who like sports cars and staying at fancy hotels when they travel, but all that stuff strikes me as fucking stupid. As John Mulaney put it, "Trump putting his name on buildings, like that's gonna keep him from dying."

Anyway, that's why.
No, just the first edition. I'm hoping to update it later this year, perhaps. I still have a few book projects I'd like to finish first.
That's right. You only have to sign up before the deadline, and you have lifetime access to the course.
Realistically, no. So the next few books on my plate are:

* A big book of small Python game examples, the source of which are here: https://github.com/asweigart/pythonstdiogames
* Python Beyond the Basics, an intermediate level book that's a sort of follow up to Automate.
* A book on recursion, which I did some material for this conference talk: https://www.youtube.com/watch?v=AfBqVVKg4GE
* Some other stuff? I have a text file of ideas somewhere.

But I'd also like to create udemy courses and start making youtube videos again, and I have some software projects I'd like to do and I also want to contribute to Beeware.
I will be messaging you in 8 hours on [**2020-07-02 14:30:17 UTC**](http://www.wolframalpha.com/input/?i=2020-07-02%2014:30:17%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/hjgvgb/automate_the_boring_stuff_with_python_online/fwo4nli/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fhjgvgb%2Fautomate_the_boring_stuff_with_python_online%2Ffwo4nli%2F%5D%0A%0ARemindMe%21%202020-07-02%2014%3A30%3A17%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20hjgvgb)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
> You‚Äôre the best teacher I ever had

Heh. So my old roommate was a high school science teacher, and she really drove home the point that teaching is something that I either couldn't do or would do badly. I get to write books and make online courses, and then I'm basically done. It's nice because it gets to reach a wide audience, *but there is no replacement for boots-on-the-ground teachers.*

My "students" are self-selecting and I don't have to deal with classroom management or talking to parents or dealing with admins or fitting my curriculum to standardized testing nonsense, all while getting paid crap. You can't replace schools with random Udemy courses.

I used to volunteer at [the MADE: The Museum of Art and Digital Entertainment](https://themade.org/). It's a video game museum in Oakland, CA. They had a Saturday morning programming class in Scratch. It was only an hour and a half long, generally about 8 to 12 kids, and I'd often have one person helping me. IT. WAS. EXHAUSTING. I have no clue how teachers are able to handle 35+ kids for several hours a day, five days a week, and then do grading on top of that.

Meanwhile, everyone thinks they know "what schools should really teach is..." like it's common sense. Or they spend a lot of time talking about how teachers unions are "letting bad teachers stick around" (certainly more time then they talk about how we can increase teacher salaries and divorce school funding from lottery revenue and property taxes, anyway.) The stats vary, but something like a third or half of teachers quit after just a few years, so if you've been teaching for just five years, you're basically a hardass veteran at that point. Between parents, politicians, school admins, and billionaire software monopolists with good PR, nobody is really standing up for teachers in the direct and material way that unions do. They have mad respect from me.
Yes. I just use IDLE because it comes with Python, but you can use any IDE. The main difference will be the debugger, but all debuggers have Go, Continue, Step Over, Step In, and Step Into buttons so it's not that big of a stretch.
JUL2020FREE2 is the Saturday code!
You‚Äôre the best Al! On part 13!
Really? The book was full of practical examples, it's one of the big reasons I recommend it to people.
I recommend ATBS over PCC. They cover the exact same basic content, but I found the project side of PCC to be pretty poor.
Now if anyone has ideas for how I can get more people to *complete* the course, I'm all ears. Only about 8% of people finish most of the videos, which is about average for online courses.

I've heard from Phil Guo's research that having videos be as short as 7 minutes is key to keeping their interest. Or maybe some sort of buddy-system or something. https://freeCodeCamp.org probably has a lot of these nifty tricks that I should look into.
This guy omg ‚ù§Ô∏è
Man your the best
This is so wholesome. Thank you /u/AISweigart for doing this! I‚Äôll make sure to pay it forward in whatever way I can.
Dam that's a great story for that. I'll buy a few copies to give away once I pay off my student debt. Thanks for making this topic approachable to people outside of the field
You sir are a national treasure!
"That which is given freely can never be stolen".

From a random Internet person - good on ya' man.  Keep on bein' you.
Decided to buy your book for the very reason that I can well afford it, even though I had already read it for free online.  I figure that by paying for it I'm supporting you creating free stuff for the people that can't afford it.  Would pay for it several times again. [üôè](https://emojipedia.org/folded-hands/)
I bought the course a couple of months ago (about halfway through right now - it's tough to work after work, you know?) and I've been feeling a little irritated with myself that I bought it instead of waiting for it to revert to being free.

I'm not grouchy about that any more.  I can afford the $16, and I hope that my $16 means you can afford to give it away to another 5 people who can't.

Well done.
That's so nice and appreciated. A sincere thank you from someone who's benefited from your kindness. I'm halfway through your course. I'm definitely not a natural when it comes to learn programming but I'm determined to stick with it.
i love you
This is such great insight, now I want to read the book even more, I'm trying to stay on my powershell and solidify that but I'm so eager to get to Python. It's like I'm playing a game that I enjoy a lot but there's another one that I really want to play too.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/autobestof] ["Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code JUL2020FREE](https://www.reddit.com/r/AutoBestOf/comments/hkwhkx/automate_the_boring_stuff_with_python_online/)

- [/r/bestof] [\/u\/AlSweigart, of the popular "Automate the Boring Stuff with Python", explains why they're always trying so hard to give away their valuable product for free](https://www.reddit.com/r/bestof/comments/hjvskw/ualsweigart_of_the_popular_automate_the_boring/)

- [/r/bestofnopolitics] [\/u\/AlSweigart, of the popular "Automate the Boring Stuff with Python", explains why they're always trying so hard to give away their valuable product for free \[xpost from r\/learnpython\]](https://www.reddit.com/r/BestOfNoPolitics/comments/hjvsm8/ualsweigart_of_the_popular_automate_the_boring/)

- [/r/goodrisingtweets] [\/u\/AlSweigart, of the popular "Automate the Boring Stuff with Python", explains why they're always trying so hard to give away their valuable product for free](https://www.reddit.com/r/GoodRisingTweets/comments/hjwnzq/ualsweigart_of_the_popular_automate_the_boring/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
This is beautiful.
I‚Äôd give an award if i had the moneyyyy ‚ù§Ô∏è‚ù§Ô∏è
I love that you've basically given the book out for free. I got it on off and then printed it out on my work computer (I can't work off of PDFs). I've actually thought about just buying the book at full price for how good it is
I suspect we're in the same age group because I remember the whole Barnes and Noble and AOL floppy disks things you're talking about, though I was too lazy to take notes haha.

I love what you've said, seriously **thank you for your service**. Wish more people were like you!
Thanks for doing this.  I'm a student about to exit trade school and I'm absorbing as much tech stuff as possible.  My field is heavy into automation and while python doesn't come up too often for my profession having knowledge of it helps demonstrate to employers that I learn as much as I can.  Plus learning more about programming, even in a vastly different language has helped me shaped my mind to better absorb and adapt to changes.  Offering stuff like this helps a lot of people so you are accomplishing you goal.
Thank you so much for giving it away. Going through the free course was a legitimately life changing moment that made me realize how much I love programming and what it can do.  You're the best!
wow
>You're not too old to learn to code. You don't need to be "good at math" to be good at coding.

As an old person who is terrible at math, thank you for saying this and for giving away your course for free. There is so much gatekeeping around coding and it scared me away from even trying for over 20 years! It means a lot that people are becoming much kinder around this subject.
Love love LOVE this. 

Also, people don't realize theses monopolies usually win the game by exploiting people's time and labor for profit. Amazon is an obvious example, but facebook does this too. People don't see it that way because facebook is free, but time is money as they say... and advertisers pay facebook for your time, so they make social media as addicting as possible in order to enrich themselves. The wealth allows them to buy out other social media companies or copy their innovations to maintain monopoly control. So facebook makes money by stealing time away from society (time that could have been gone towards being productive and creating value). Finance guys make fortunes off of other's people wealth (someone else had to lose the money). No one makes it into the 0.5% without stealing time and wealth from society. We need to stop idolizing these billionaires and corporations who are essentially crooks and have no interest in making society a better place for all of us. So THANK YOU for offering this service to us for FREE. If someone provides me with something I find valuable, I always like to send a tip to show support for their time and business (hope you take bitcoin). Not sure when I'll get around to doing the course though.. but I appreciate you for doing this!
This reminds me so much of myself, or part of myself at least. I also would have said that making more money than you need was pointless since I wasn't interested in material things or at least ostentatious uses of money. However I think about it differently now, while earning more money doesn't interest me for my own benefit I do think about it's benefits as a tool for improving society. If I was ever in the position to do so I wouldn't buy some six figure sports car, I'd give it to charity or use it to support some cause
I read your whole book and it really helped me. Thank you so much
People pocketing their lunch money and buying cheap donuts seems a strangely common thing. Hank green used to do that when he was younger. 

Personally i never got any pocket money to pocket so i never got to test out this obviously increible strategy for becoming awesome humans
r/accidentallycommunist
Thanks, I don't know how the rest of it is going to be, but for now it's simple and easy to understand.
Wow. Thanks in advanced! This is amazing. Let me know how I can help in any manner.
I'm one of those 92% but the reason is that I already knew the content. I wonder how many people skip only to the content they need.
I am in the 92% and I don‚Äôt know if it was me or not. But as a new person to coding and python, I found it easy at first and then it just took off and I couldn‚Äôt follow. 

I than jumped to Corey‚Äôs stuff on YT and seemed to have the same issue. 

I get the strings, variables, dict. etc, but when it comes to going deeper I seem to hit a wall. 

I honestly don‚Äôt know what to do about it. I only spend an hour or so a day due to work, so it‚Äôs more of a hobby and maybe that is the problem.
Here's an anecdote to help: I started reading your website version during slow times at work, because I expressed an interest in learning to program (so I could do something other than manual software QA). Nothing really clicked until I started reading your tutorials, and the way that it was structured, made it FUN. I got hooked.

By the time I got to the web scraping tutorial, I had used what I learned to scrape the show note links from my favorite podcast (500 episodes, each with a dozen links, spread over each individual episode page) and organized it into a readable format to go through whenever I want. 

Then I got excited and started poking around elsewhere, like Flask. But I at least convinced my work to buy it as a reference book for other people in the company wishing to become more technically minded.

Anyway, thanks for writing your tutorial and giving it away for free so someone like me, a man in his 30s with just an unused city planning degree, can pick up a whole new skillset (I've since moved from manual QA to site reliability engineering and have written production code to boot). You probably saved my job and my career.
Personally I've always struggled with paying attention in general, which makes learning new skills really hard for me, but the reasons why I'm learning are what's pushing me to try finish the course. I recently got the book and decided to learn over the summer, really grateful for there also to be videos as well.
I read your whole comment. Barnes and nobles and libraries are my favorite hang out too. üòäThank you so much for what you do. The world needs more people like you. God bless you!
I am halfway through and after reading your posts, I will do it for you! I mean I know I am going to get some more good stuff out, but it made you happy, so I will do it. You seem like a pretty chill dude. Take care.
Do you know a book from which I can come to grasps with object-oriented Python?
Firstly,
I really loved your book, but this comment just made me love you so much more.

Secondly,
The thing I've found is, I barely complete online courses unless there are assignments and due dates. That's why I really like Coursera, they give you deadlines for the assignments, and often these deadlines help me complete my work in time. So maybe if there were timed assignments, that could help. But this might just be me though.
I'm still making my way through from the last giveaway (thank you so much for your generosity in making this course free, its awesome)... If I had to think why I wandered away from previous online courses, it was some combination of 1) the novelty of learning the material wearing off once I got into the harder portions; 2) not enough of a "reward" at the end to justify the slog through (dunno what that "reward" might be - perhaps in this case some project that automates something that used to be tedious and manual?), or 3) felt like I got enough of what I wanted and the remaining hours spent on the course didn't fit with my schedule (perhaps).  Nevertheless, I'm going to go back and try to make it to one of the elite 8% :)  My kids also love your scratch programming book, so thanks for all you are doing for coding literacy across the age spectrum, you rock Al!
I am one of those who stopped after attempting the text version of the course.

The reason was that things just got too advanced for me. Like suddenly there was a jump from something that i could work through in a relatively straight forward manner to something that was more advanced and seemed beyond the ability of my comprehension to grasp. 

I got to chapter 7 and got through the first 15% or 20% of that chapter, but the rest just seemed too advanced for my brain to be able to comprehend.
I got the course for free in 2017, and I still haven't started it. Tbf I have hoarded 1000+ courses and only very recently completed 1 course.
Do you have any statistics as to how many people who purchased the course finished it? I‚Äôve found that I‚Äôm much more likely to finish online courses that I spent money on, compared to free courses.
Do you get a bonus of some kind from udemy if a certain % of people finish your course?
My wife is not learning code to be a coder but rather to see if it can make her office job more efficient. I tried to teach my wife python using the udemy course and she said that although the first exercise of a number guessing game was useful, you then had to grind for ages before you get to the next useful project.

 Although the promise of playing with excel and pdf files in the table of contents was attractive, the lack of perhaps a project or two to practice using excel to do something got her bored.

She didn't see the utility of python and felt the effort was not worth the reward.

Maybe the book offers more?
I stopped maybe a quarter of the way through.  I love the effort that you have put it but I found watching the videos to be quite a chore (sorry!).  Some things were well over-explained whilst at other times I'd have to stop the video as you'd used a keyboard shortcut or something without explanation and I had to pause it just to keep up.  The final straw was after one particularly dry and boring (sorry again!) video you said something about the content in it was so important we should watch the video another two or three times...  No way...

If I do continue it will be through the book rather than the videos.  I'm sorry if my feedback is insulting, to add something more constructive, for me I find studying anything is easier when there is a clear context for the information, or a clear problem that needs solving.  Many of the videos I did watch seemed to be introducing concepts but without any context of what they are used for/why they are important.
I‚Äôll finish it eventually. I started your course and a Swift for iOS at the same time and currently hooked on Swift. Once I go back to Python I will finish yours for sure.
In my experience of running/selling courses, having someone pay something can also help completion percentages. Even if it's just a dollar, they seem to value it more than something they get for free.

I experience the same thing with video games. If I get a game for free, I'm much less likely to play it than a game I paid for.

The other ideas you mentioned should help.
I mean i skip the earlier videos because I learned quite a lot of python in my first year of university.
Make them want to binge them.  Have each episode include a mini fiction plot with cliffhangers at the end of the lesson.  Of course, I'm kidding...but hey sometimes good ideas spring from bad ones.
Create an incentive. Finishing this course get 20% off of that course. And some kind of badges. The one who are scouts know what I‚Äôm talking of. The participants need something to show of on social media to tell the world they did it.
u/AlSweigart, Thank you so much for sharing your knowledge for free, for so many.

I went to WGU, a 100% online school for my IT degree. Even if I paid for 100% of the tuition out of pocket by working full-time, it was still at times REALLY challenging to complete my courses, online.   


They had several areas of courses where concepts were broken down into small chunks, even within a chapter. I guess with technology attention spans are getting reduced to the next notification, and I don't know much about psychology by I've noticed this as I have grown up with no phones, little tech, then in the flip-phone days and then slowly adopted smartphones/computers/tablets.

Another thing I would add is quizzes, but more often. Like a 10 question quiz after 2 or 3 of your 7 minute videos.  


Even though it seems repetitive, having repetition in the quizzes causes the brain to take notice and solidifies the concepts better. My math professor used to say "Repetition is the heart of confidence" and he was absolutely right about that, especially when it comes to mathematics.

If you have more questions about engagement and completion of courses, u/AlSweigart, please feel free to PM and I'm happy to share my experiences/feedback. With that being said I still struggle with course completion as well but that's a work in progress.
You‚Äôre talking about engendering habit. They start with good intention. But habit holds down good intentions and takes its lunch money. How can you change your course to allow it to be an emotionally fulfilling habit by the end? That‚Äôs the real question.
Hahaha. After going through some of it and getting distracted with other things, I'm now going to check back in and continue. So I guess just chime in on Reddit every now and again. Thanks for having an amazing outlook on the importance of education and following through on it.
I went through about 50% of your excellent book because it was enough to get me started - I imagine many are the same. I tried many time to get into programming and your book was what pushed me over the edge :-)
i did some lessons for a freind and also did school some people

many people like the idea of coding more than actually learning programming
Offer a test for an unofficial certificate and possibly a small voucher towards another product. This motivates completion, allows you to judge who only watched certain topic to fill in gaps, and allows people to be directed to parts of the book they dont understand.
Hi Al.

I was your target market. I got your free course and I'm pretty sure I finished it. I didn't know programming, but I was pretty good at Excel (which probably means I wasn't). I have used your course as a spring board to make efficient programs for work. 

I think the key is to get someone to build a cool project as quickly as possible, which will drive their enthusiasm to want to continue.

E.g, start with a prebuilt script and show them simply how to edit some variables to make it do what they want (a game, or to create many .xlsx files, or to sort a csv with pandas). 

By getting them to the 'a-ha' moment earlier, you will get them addicted.

Thanks for your book.
I took your udemy course all the way until "Web Scraping - Parsing HTML with the Beautiful Soup Module" because that's what my first coding idea needed and I wanted to get right into it so I stopped there. Then I never went back to complete the rest as I'm now learning by coding using online documentation, websites, stack* sites, etc...

but your course was definitely the kick start I needed to get into coding
Your comment above led me to start your videos.  I appreciate what you have done, so since you are requesting information, I am happy to give you any feedback on your classes so far.  I suspect I am in the demographic you are trying to reach.  I am fine to articulate what prompted me (or as much of that as you would like), how far I got, what my current friction is (why am I not taking the class right this minute), or just about any other data that would help you out.  Even if I don't complete the class, if I can provide value back to you it's a win-win.  Thanks again for what you have done!
I've been studying AWS, and in the AWS forum, Udemy course creators are having good response from students by offering their course for free and providing a contest.  For example, finish the course, 100% complete by x date (not too long) and y number of people chosen at random will win a voucher for the AWS exam.  The contest creates urgency to finish the course by a specific date.

This makes the course very popular on Udemy because a lot of people sign-up.  In addition if the course is good, the students provide a lot of positive reviews.  Again, this makes the course more popular on Udemy. Then when the people pass the exam and say they took the course, that generates paying customers.

From a psychological point of view, one of my degrees is in psychology, this makes sense.

Do you have a email list I can sign-up for to be notified of the next free promotion?

Best of luck!
Its 8 percet probably because most people taking the course already know the basics and go straight to the fun stuff
In 30 years?

Joking aside. I hope you pay your student loans very soon and help as many people as you can. I'll do the same.
It does. The reason I don't have to *maximize* my income for every conceivable last dollar is because I have *enough* income.

But also keep this in mind: the only online courses that I've ever finished were a couple Coursera courses I paid $60 each for. I've never finished a course that I signed up for free, and most of them I didn't even get a quarter of the way through. How much easier would it be for you to keep putting off this course forever if it was just something you signed up for free?
If you do, buy it from [No Starch Press](https://nostarch.com/) directly rather than Amazon. It gives the publisher a bigger cut (and they're a great company) and you also get the PDF/epub/mobi ebooks for free.
It's a skill to sift through tons information to find out exactly what you need, or how to modify it to your exact requirements. 

Basically learning programming is programming.
Learning is a balance. Too much new information and it's overwhelming. Too little and it becomes boring.
I think if you hit a wall like that it might help to just make little programs using the stuff you know, just play around with all the stuff you learned. Change stuff so you break it and solve it again etc. Since programming is like carpenting, fooling around with the stuff you learned helps a lot to get familiar with using it.
In my experience you will not be motivated for that until you need it for a project you are at least semi passionate about.

In my case, I started working with machine learning and neural networks and this lead me to be somewhat good with python in that area. My recent free time project was to generate abstract "paintings" using GANs

Other stuff like frontend or so I'm just not interested in, so that is my wall - maybe that will move one time tho :)
Chances are very high that you are not getting adequate practice with implementing the code.

Coding along with someone is very different from creating your own solution to a problem. The downside to online courses is most of them code the solution for you and you copy along, then don't practice applying it in many situations.

College courses force you to struggle with problems that are perfectly suited to the material you've learned. Online, you have to invent your own.
When I was learning programming I would often hit those same walls. I would look for videos that could help and some would, but most of the time I was just stuck. I finally noticed a pattern in the stuff I understood. Every operation or function that I understood I could explain in physical terms. I could come up with a metaphor that allowed me to think about the operation as a mechanical or physical operation as opposed to computer voodoo. When I couldn't understand a topic I would try to make comparison to something physical and the points where I couldn't were the parts of that operation I wasn't understanding. 


It may help you to think about the computer as a machine and look at what each operation makes the machine do
I had the same issue, and I often have the same issue regardless of language, the jump after basic variables and strings is programming constructs that need more understanding AND practice.   


Constructs like Recursion, OOP, etc, are best learned inside a project that makes realistic use of them.
Who is Corey on YouTube?
How long had u been coding for before  u swapped jobs? 

I imagine it was a long journey,
Same. I think that it helped that this was before social media destroyed all our short term attention spans.
> You seem like a pretty chill dude.

\*stops composing a tweet about our decline into fascism and that people with kids should start to consider emigrating to other countries to escape the coming violence\*

Yep. That's me, pretty chill.

\*resumes composing tweet\*
It's roughly 8% or 10% make it through most/all of the videos. I don't know what comprehension is. Also, that's for all students, including those who pay for it or get it for free.
You get a certificate of completion from Udemy, which you can print out or add to a resume. It's just a piece of paper, but then again, that's what all diplomas and degrees are.
She need to play more Diablo to get used to the grind.
The incentive is that we get to learn Python. That's more than enough for me.
That'd be great actually! I'll follow up every week or so (or message me whenever you finish a video.)
10 years if I don't get too loose with my spending. Only $340k to go...
Thanks for the tip, I am all about buying books from sources where the publisher/author get a bigger piece of the cut. 

BTW I love your book its in the best style for my big dumb brain to learn stuff.
This x1000
If I am not sitting in front of a computer with repl open testing and playing with the concepts I am learning, it may as well be an alien language.
I'm imagining a dude with a hammer trying to hammer in a bunch of screws just to play around with the stuff he already knows.
I agree with your approach. From my experience, the key to actually learning how to program something comes from making sure exactly what each piece does. When you look at a guide or an example project and memorize what they do as "magic" code blocks, you might be able to remake what they did, but nothing more. If you take the time to dissect each piece, you gain the ability to tweak and reapply that knowledge to other areas.
This is so true. Until I used it in a project of mine, I literally had no idea how OOP and classes worked. It really is a case of using it until you understand it in some cases
retail -> 10 years (with freelancing in graphic design, mostly during the recession)

logistics -> 4 years

manual software QA -> \~3 years

Escalation Engineer (just handling issue triage and on-call incidents) -> \~1 year

SRE -> 1 year so far

The switch from software QA to escalation engineer involved a crash course in learning to code integration tests with Python, basically using my expertise of our company's product and using that to code up automatic tests that run every time there's a new build.

It's a long story, but basically: I got sick while I was QA, had to take 3 months off work, and when I got back, they killed the QA department. I needed the health insurance so I refused a buyout and insisted I could learn everything needed to become an entry level software engineer in six months. So my old co-worker, running a team now, took me on 'provisionally' and gave me the opportunities to learn everything, and at the end of the six months, i was 'cleared' to stay with the company as an engineer. I've not stopped learning ever since. 

I'm far from being able to do a ton of stuff, but I learn as I go, and I've written a few small tools that increase the team's productivity, rewrote an abandoned dashboard from scratch (Django app that monitors our ticket boards), released two personal projects (both flask apps) for fun, and am currently messing around with building probes for work.
It's possible you could use this to your advantage. Maybe create some sort of reward system that people can share online; specially in things like facebook and instagram were they tend to last longer than twitter and snapchat. This will both motivate people to finish and satisfy their dopamine thirst if just learning and creating isn't doing it for them yet. 

You could also create a website or subreddit for people to share the things they've created with the tools you taught them. This could serve double duty, motivating and rewarding those who finish, and inspiring newcomers who can't imagine what's possible after doing the course. 

Just a thought. I think you've done enough creating the course, but since you asked for suggestions, this is what came to mind.
Now that's a comment only a chill dude would make ;) 

I absolutely love your course. I'm a broke collage student too and I'd saved money to buy the course as well. One of the best things I've done. And I love you for everything you've done. Thank you.
Can....can I has ur Twitter
I have the 'general indicators' of fascism from the Smithsonian Holocaust Museum posted on my social media page and I think I am a pretty chill dude. Cheers
Hey

Wanted to let you know that this comment helped push me to finish the videos. Thanks for the course & the motivation!
Explain?
Would you to like me to dm you a general bio and reason I decided to take your class?
Looking back at some of the code I wrote when I was first starting out...this is actually pretty accurate...
Yep, that is how it is. Imagine the success you feel when you realize you can use a screwdriver for screws and you can stop seeing them as only "nails with a bad attitude".
When I got into the union trades as a sheet metal/HVAC guy, I was friends with a carpenter everyone called "the bearded queer". He wasn't gay and he didn't even have a beard. Never did find out why we called him that, but he was a chill guy and cool with it. Anyway, he did exactly this. Got up into a lift with all his tools and brought the screw pouch instead of the nail pouch. Said fuck it and hammered them home. It held too.

Far as I know, it's still holding. Anyone ever goes into Elisabeth Ann Johnson High in Mt. Morris Michigan, be careful walking through the door to get from the gym to the hallway. I'm pretty sure that bulkhead is held in just with liquid nails.
That‚Äôs amazing you were given the chance to be paid to be part of an integral team as you learned on the go! What contributed most to your proficiency now, do you think? Which resources helped the most
One thing that seems common among us young people with ruined attention spans is the act of productive procrastination. If we have a new unpleasant task to do, we sometimes end up doing other productive tasks that suddenly feel a lot less unpleasant in comparison. This could perhaps be exploited in an educational setting.

Wow, education suddenly feels like a social engineering challenge!
[@AlSweigart](https://twitter.com/AlSweigart)

I have links to my YouTube, Twitch, GitHub, etc at https://alsweigart.com
90% of success is just showing up and doing the work.

Like, you've literally done more than 90% of the people who signed up. Good luck on your programming journey!
As a physicist this is how I write all my code
Nah they'll stay in there. Screws are just barbed nails.
Asking questions of my co-workers and trying to learn as much as possible any way I can. Automate the boring stuff in python and Miguel's flask mega tutorial also helped tons
A similar thing happened to me too. Seven month ago I took this front office job in which we had to wait for the first 2 months for the project to come in the country. Instead of spending those 2 months slacking off, because we literally had nothing to do, I started watching python tutorials. Fast forward 2 months, the project came. I quickly noticed the fact that in order to handle most of the tasks we had to cross check with a lot of excels with a lot of sheets. I used tkinter and openpyxl to create just one graphical interface for all the files. I have also used pyautogui to make some tasks handle themselves. Fast forward one month, I am in the books for a promotion for Service Matter Expert on automation amd I've been given automation related tasks. This happened only because I decided solve problems in a different way than the rest, even when no one asked me to. 

And just as a note, I graduated with a degree in Advertising, no connection to the IT field, no previous experience. My current job is filled with 70% to 80% people that either graduated or are in the course of studying computer science. The rest of 30 to 20% of people is composed by people that actually speak the language  that we work in, since it is not our native language or English. I had neither of those, only motivation to work and learn. Don't let yourself get scared by your lack of background or the level of the people that you are amongst. Enough hard work, curiosity and willingness to learn will get you far.
Just be careful not to make management too comfortable with these lightening quick turn arounds from you. They'll get used to it and in the long run it may prove detrimental to you. Double edged sword.

Edit: spelling
A small tip for you on your new coding journey.  Now that you‚Äôve proven your capability, and you have, no need to keep undershooting deadlines at that level.  If something is estimated to be 3 weeks deadline, if you know you can do it in 1 day, don‚Äôt turn it in that fast.  The bottom line is that if you turn in work 20x faster than expected, they won‚Äôt suddenly pay you 20x more.  They‚Äôll identify you as a person with a character flaw who will overly sacrifice themself to win the approval of everyone else and they‚Äôll pivot to begin abusing that as much as possible.  Knowing this as fact, you gain a lot by really thinking a project through, making it as ideal as possible, taking company time to hone and learn all methods necessary for the project, no rush, be happy to know you‚Äôre well within deadline and keep that information to yourself.
Now you‚Äôll have to blow their freakin minds by putting this all in a database and building a web enabled dashboard... or don‚Äôt because you‚Äôll automate yourself outta a job.
Python is magic.  Well done.
I learned python in a van, down by the river.
I had a few weekly reports I had to do that took most of my Monday. I automated those. Now I had 6 hours free every Monday. 

So I used that time to automate the monthly reports which took a few days. Then I used those few days a month to automate more tasks. And on and on and on.
What's the best way of learning python? Econ Undergrad going into the professional world fully 2021 - I have no knowledge of computing at all. But I'm computer savvy and want to learn in my spare time.
Awesome!
Motivational indeed !
When you are stuck with the task, what resources do you use to solve it?
Great job!
I agree. I‚Äôm like a year and a half in, mostly self taught, just started learning formally for a couple months. Using Python has completely changed the trajectory of my career. Projects I‚Äôve tackled with it have gotten me a lot of (good) attention. Now that I‚Äôm learning things from a formal perspective my work is only getting stronger. It‚Äôs been a lot of fun and extremely rewarding.
This is great!  And it is motivational indeed.  Sounds like they are looking at eachother and thinking, what a great higher!

Ive been learning python slowly for our business and fun, been in business 10 years.  It all started with wanting to automate one task of retrieving data.  I realized how much I could do with it.  Ive slowed down on learning after completing five or so scripts of what I wanted to do.

This has motivated me to keep going and learn more so I can accomplish everything Ive been thinking about but havent push myself to do.
Back when I was 21, my friend introduced me to python 2.4 (I think). I thought, "this is the language I'm going to master," and just worked on it for years until I finished college (where they taught no python).

It became my career immediately after, and after 8 years, I've never had trouble finding jobs, especially knowing security as well. Python is an extremely lucrative career choice. I'm so glad I randomly just picked and stuck with Python, because it changed my life completely.
Would they have been just as impressed if it had taken 1 week rather than 3? You could have had the rest of the week off :-p Also now all the expectations are going to grow shorter for the next task.
Awesome! I'll keep learning! 
Learning anything is never too late!
Enjoy your 2 weeks, 6 days, and 23:59:59.25's of vacation!
Before starting your python journey, did you have any previous coding knowledge? 

I‚Äôm on about my third week of learning python, only previous coding experience was at college doing C++ about 20 odd years ago. 

But really wish I‚Äôd kept on that track, it‚Äôs something I enjoyed. 

I now work in Sales which is highly pressured. So I‚Äôm using learning python as my escape, even teaching my ten year old daughter to help me learn too.

I am hoping maybe one day I can change career... wishful thinking at my age?
I'd be careful with delivering that quick given such a long deadline. Some bosses will then think they can give you short deadlines on everything because you're so fast. Then you'll find yourself in a position where they're overworking you. Congrats nonetheless. I work in a high school and manage all of the school's data and finance and have been learning python in an effort to automate many things that take up hours of my day-to-day.
Yep that's what I'm hoping for me too.  

PowerShell has gotten me very far in my current position, but hoping Python can take me that much further.  

Automation really is the hot skill right now.
Thank you for those words!! I'm very motivated and so far I'm just a beginner with one month of training, but am looking at the long run and with learning all the skills out there in Python, sometimes I wonder if the classes I'm taking are the right ones or if I should just jump into projects and build on them, but I take a breath and relax and remember that there is no rush, for me everything that is worth is not a race but an investment in the future :) 
Whoever I would like to make friends who I can talk to about projects and codes
This is nice to see. I've been trying to learn python for a few weeks now, and I feel like I have the basic syntax down but I dont feel any more 'fluent' than when i first started
Careful now. Their expectations of tasks Bei g resolved quickly will only go up now. Congratulations either way!
Well donne !!
My coworker was analyzing some excel data. There was only one important value here needed, but he needed that same value from hundreds of csv files. His plan was to open hundreds of csv files and ctrl-c/ctrl-v the value into a new excel file. 

So I made a quick script that opened each once and created a series with the filename as an index. So much easier...
I'm in the process of building a data analysis tool for my job- which didn't know I knew python when they hired me. Basically they have 2 years of backlogged survey data in like 200 different (but identically formatted) Excel sheets that I'm writing something to collect and analyze the data. I should mention that they're continuing to add data in the future, so a month spent making something to analyze the info will help them save a LOT of time in the future.
Learning Python definitely changed my life! It made me a better programmer, lead to raises and promotions, and most of all, it made me absolutely hate Python! In fact, I hate *all* programming languages now! Except Rust of course
Can someone sell me this books. Python Crash Course 3rd Edition and Eloquent JavaScript.

I like reading from books but seriously can't afford them on Amazon.

Non US!
Nicely done!  openpyxl is on my radar -- any tutorials regarding it would be appreciated
What were you doing for work prior to this? Did it have any relation to this current job?
yeah I totally agree, what I like to do is to start with a programming problem and then research if Python can do such things (as in individual tasks that I have broken down to be part of the overall programming scheme) in that process I feel I learn and retain the information so much better. Sometimes the tutorials are good to give you an idea of what the language is capable of and then finding an application for it is where the real learning, for me, takes place.
Do you have any programming experience?

How did you know which libraries to use?
I would love to find a job that would allow me to do this and keep learning and challenging myself. I just don‚Äôt think I‚Äôll ever be good enough
I wish I could find a job working with computers. I have no background aside from self-learning. I think I'm stuck in the perpetual hell that is a kitchen. My projects keep me learning newer things and trying more abstract programming. I'm hoping one day I'll be able to do something different. Until then I'm learning to live with frustration.
Which book or tutorials do you recommend?
WoW. Thank you for sharing.
Congratulations!

You have been granted a very powerful weapon. Use it well and you shall be rewarded awesomely.
the biggest issue for me is i don't know how not to look at templates because i am always unsure on how to start a particular idea program, i also have issues with structure and were to put things were they need to be in order for the program to work. Similar to the issue above is i have issue with memory so i can not really remember things in long strings so i feel like i am stuck in a i need to read other code to remind me of what i am supposed to put down. However i really wanna be a coder i am just stuck been studying it for a couple years and all though i can read code better then i can write it, i still feel i am a noob with Linux skills lmao.  The biggest issue is how to look inside a package and figure out what all the different vars in that package dose. i think there was a help() function to help tell you how to use  a particular item in the function.
Nice work man
Congrats @OP! I‚Äôve just started learning python with the aim to use it in excel and was just reading through some online openpyxl tutorials this week. Do you have a favourite tutorial at all that I can use? I‚Äôm looking to learn how to make dynamic range selections to copy out of existing spreadsheets and paste into a new one.
[deleted]
This is great to read as that's the exact reason I decided to learn Python. I keep my budget on a spreadsheet and want to simplify the overhead.
Great story! Congratulations! That's my intention as well. Im just one month in and super excited after 30 years in Cyber Defense.
Thanks for this. I'm a 47-year-old CS undergrad whose never had a full-time job, and this shit really hurts my head on the regular, so I can use all the help and encouragement I can get.
So you being a beginner, what is the job title you landed? I want to be looking for similar roles but it only seems like the world is looking for senior positions. :(
Same story with me, was stuck with excel tables, so I wanted to to fill them faster - I discovered openpyxl and pandas library. Long story short I did a postgrad in Data Science and shifted my position to Big Data Analyst - It was worth it! Glad you did it too! Keep going strong!
I always had difficulty importing excel, no package worked as documented for me. Any suggestions or insights?
I loved reading this. I began learning Python via Code Academy. After about 2 weeks I found Code Academy not entirely helpful. I then paid about $27AUD for Udemy but have yet to start it as I am lacking the motivation. I hope to get the motivation soon.
Here are you guys doing such great things, then here am I feeling content with my basic calculator GUI.
Maybe this is rude to ask, but are you able to share any salary data? I'm curious to hear from people rather than the questionable numbers on google
You're right about that. His comment is vague and misleading in a sense.
To be honest it feels really made up for me. When I search for a job they kind of require me to know a shitton of things, not only Python. And then they actually know such things themselves pretty great.
pretty much same story here. been doing tutorials in and out for years, got a new job, most of the work could be automated using python. spent a week on putting together a script (mostly stackoverflow suggestions) but it works and people are really happy that one of the editors they hired automated the entire process for all editors.

After learning Pytgon for the past three years I figured out how to use Powershell for my current job automating account creation, passwords, etc. The syntax is fairly similiar and if you know how to use Pytgon then Powershell can be picked up easily
Yeah you gotta be extremely Lucky that your bosses are terrible with tech and the person whose job you are taking also was.
Dang anyone have anything like these problems that I could try to solve while learning something. I am currently stuck in the tutorial loop ;)
Congratulations. I find programming a useful skill even when not programming. There's a skill to seeing where the natural breaks are in a project which enable you to slice it into manageable modules. 

For your new role, if your company has moved into using Office365, look at PowerApps, PowerAutomate and SharePoint (maybe Power BI too). These provide pre-built modules you can stick together to automate things. It is advertised as low code/no code, but that isn't really true because you always end up having to write something to solve your problem. The syntax is a bit ugly, it's like if Excel and Python had a shameful one night stand, but at the end of the day, you can create attractive looking apps very quickly and give access to anyone else in your company. You'll certainly lean on the logic you've built up from learning Python. All in all, it's an easy string to add to your bow and can sometimes be simpler to implement than Python.

Perhaps it's different in your organisation, but generally the SME stands for "Subject Matter Expert". That might help you avoid a boneappletea moment. Anyway, best wishes for your promotion and new role, it should be a blast.

edit:

I should probably say that I'd see the Microsoft automation stuff as automating processes, rather than tasks. By that I mean it's good for getting someone to do something, passing it on to the next person to do something or approve it and so on, while triggering off emails and other events as necessary. Perhaps "Orchestration" might be a better term than Automation. Python scripting may well be essential to actually assist with the processing of some of those tasks.
That's awesome! Well done mate
Well done!
[deleted]
Yeah, I'd prob have just sat on the solution for 1 - 2 weeks before submitting it.
Yeah, I'm concerned about that too. How do you manage it?
This is called the Scotty Principle
Exactly. They hit the low hanging fruit as well.
The human condition is eager to please and eager to exploit.
>identify you as a person with a character flaw who will overly sacrifice themself to win the approval of everyone else

Damn ain't that the truth ha ... cries in free work
Another thing that can happen especially in professional environments where there is a very large range of technical skills such as business analyst jobs is that your colleagues can get very jealous and feel threatened if you start to pull too far ahead of them in technical skills and automation knowledge. 

They will suddenly adopt the "crabs in the bucket" mentality and work towards sabotaging you at every opportunity in order to prevent themselves from looking stupid or useless compared to you. It's best not to share too much info on how you accomplish data driven tasks and never share your source code with anyone if you can avoid it.
Good advice thanks! A few others have said the same.
So sandbag? I say just work hard. Get promoted. Keep growing responsibility. Make more $. I‚Äôve been doing this for the last 8 yrs and have 4x‚Äôd my salary in that time. 

My two cents.
There's always a dilemma involved in this isn't there? You cut down the work load which means theoretically you will have less work to do and less money.
I considered this but I don't want to overcomplicate things just yet. I have made it clear I wish to automate myself out of a job and they are quite happy with this: because then I'll have a company reference saying I can do that and I'll charge double to the next firm to do just the same, and that's their investment too. Wash, rinse, repeat.
Thanks!
Well, la dee frickin da!
Nice!
Congrats automating yourself out. Or are you keeping all this private??
I can't recommend automate the boring stuff enough.  It's not in-depth per say but it gets right to the point of how things work and how to use python to interact with files like excel or your email or webpages. It was life changing for me. The book is free or there are video courses on udemy if you dont want to read the books its like 10 bucks and worth 10x that.
I‚Äôm a big advocate of Think Python. Very hands-on and accessible. And did I mention [completely free](http://greenteapress.com/thinkpython/thinkpython.pdf)?

Also, if you‚Äôre more of a lecture guy, there is an infinity of resources for every beginner and intermediate topic on YouTube. Channels I particularly recommend would be Corey Schafer, Sentdex, and Socratica.
Is pyhton3 think python version 1 or version 2 of think python?
Udemy courses for me. Jose Portilla, Ted Petrou.
yep :D
Glad!
i google things, use a lot of stack overflow and follow along with a tutorial when necessary to see how they did it and if i can take an approach similar to how they did it
Do you mean, if you're stuck with a task you don't know how to solve?

I just google it. Start off with a broad google question then refine from there.
Thanks :D
Glad to hear it, I'll definitely be sticking with it for the long term.
What sources are you using to learn? Same here I'm just starting with you tube tutorials so far so good. :)
Glad to hear it! There's probably stacks of stuff you don't know you can automate, but totally can, and once you've learnt more you'll realise it.
Nice!! 8 years, you must be a master. What's your advice?
Sad, but true. I have used python (with libraries like selenium, pandas, openpyxl, etc) to automate a lot of my tasks at work. I‚Äôm open about the fact that I use python to do a lot, but I try not to show my hand completely because I know they‚Äôll then just assume I can automate anything and pile on more and more work without end. It‚Äôs unfortunate and hopefully not the case everywhere, but I would assume it is the same in most large corporations.
Haha, first week, so onus was on me to impress. I think I pulled it off.
Hear hear!
If only..
What are the odds of this!

No, I had no previous coding experience if you exclude Excel formulae, and a reasonable knowledge of DAX.

I also worked in sales for 5.5 years and using Excel I changed jobs, then using Python I changed jobs again. Now I no longer work in sales.

So: keep at it.
Nah... I'm probably similar in age and working on my personal reinvention plan. Python and other programming languages along with cloud technologies are on my roadmap.

I'm highly skilled but have worked myself into a corner. Even though my ability to learn and do a lot of different things is quite high, no one really wants to take a chance on my current set easily transferring to a different position/title.
Yep. Good luck!
Yep, and only going to grow with the advent of AI ML
[deleted]
Get the basics down! Then figure out what you need. Feel free to hit me up with any questions but almost certainly just asking in the subreddit will give you better info.
In order to gain 'fluency' you should do a little project for yourself. Anything simple will be enough at first.
Thanks!
Boom!
My company is lacking a inventory tracking system lol they have been trying to find a solution for a year. So now that I'm learning Python I might make that one of my first projects. Sell it to them for 5k or something :) we'll see.
That's cool! How are you doing that?
What ü§£ why ?
Haha I guess all languages have their limitations for some things, but glad to hear it's working for you!
Have you checked ebay?  I've seen a couple of listings for  Python Crash Course  and quite a few sellers will ship out of the US.
[libgen.is](https://libgen.is) has the books as pdf's
I just used the documentation to give me the basics (literally page 1 or 2, you'll be done in 20 mins) and then when I came across different functions I needed such as filling cells with colours then I just googled it.

 [https://openpyxl.readthedocs.io/en/stable/tutorial.html](https://openpyxl.readthedocs.io/en/stable/tutorial.html)
Worked in sales 5.5 years, got a job as an analyst and nailed Excel and moved to learn python, now I'm a BI/Automation guy. I've come a long way from knocking doors and I owe it to technical knowledge.
yeah, real world problem solving is where the true learning takes place.
Nope. Some DAX if you consider it programming.

I did tutorials on Udemy to learn the basics, and pandas, numpy, plotly, dash, matlpotlib, and I spend every waking second learning Python, so I've just come across them.

Being an Excel guy by trade I naturally gravitate towards Pandas and Openpyxl, so it was just luck I had this task.
Nonsense, keep at it. Solve your real world problems.
Frustration is often stifling but keep at it. If you don't, then you \*definitely\* won't ever change.
Automate excel surveys with python
Check out Humble Bundle. I have been collecting tutorial books over the last couple of years. They have great collections most of the time!
Udemy, Jose Portilla
Thanks!
Break any problem down to the smallest chunks possible and build them up, simply. Hope this helps.
Thanks! I just used the documentation and googled specific issues but I haven't faced the one you mentioned.

 [https://openpyxl.readthedocs.io/en/stable/tutorial.html](https://openpyxl.readthedocs.io/en/stable/tutorial.html)
Udemy, Jose Portilla zero to hero for the basics, and any other of his, Ted Petrou for Pandas. Just do little projects along the way.
Nice! Keep at it!
Nice one! Good luck :)

To give you an update, it's been years since this post and since then I've become a contractor and tripled my salary again.

Since before learning python I've basically 4-5x my income. But to note I also learnt SQL and lots of other cloud based skills too.

Never stop learning. Never give up. Here's to your near future üí™
YOU CAN DO IT!
Well, I also have experience in other areas so it isn't \*just\* python that landed me the job. I don't wish to divulge much more in the way of title etc but it's a standard sort of business-y senior non leadership title.
Nice! What other things have you learnt and recommend? I'd like to master big data.
What issues did you have? pandas read\_csv or read\_excel generally work for me, but sometimes you have to pass them through an engine. Same with openpyxl.

Any passworded files can't be read: no way around it.
You should open a new post with this question, It would get more attention that way.
Udemy did it for me! What are you doing rn? Go start!
Dude I couldn't do a calc GUI if my life depended on it. You can obviously learn this stuff, it's far simpler. Just figure out how to iterate through files.
I have other skills that got me the job so it isn't fully reliable to state that knowing Python will get you this much, but without divulging too much, with bonus included I should gross somewhere in the region of 60-80k GBP.
Let me know what I can clear up for you.
I'm not in a developer field but I really stand out since nobody else knows even the basics. Be a big techy fish in a small techy pond..
Good job! How did you do it?
Thanks for the tip, I'll definitely check it out.

What are powershells key strengths over python?
You've been downvoted for this but it isn't totally fair because indeed I am in a field where nobody knows programming, so yes, I stand out.

In a developer field I wouldn't register against those with decades of experience.

Pick your pond..
You can be good with tech and not know how to code anything. Also, bosses are there to delegate, not get their hands dirty. How many bosses at an oil company has turned a wrench, created a spreadsheet, looked at a ground survey, etc etc...
Dude most bosses are because they don't want to deal with it. There's very few that are tech savvy.
Using a source csv providing two columns, one with distinct person name and another with values, dynamically generate new excel docs each titled the person name.xlsx and within each workbook generate the values into cell A1 value. That's basically what I did back in the day when I made this post. From there I've learnt so much more and made another career move that saw me double my salary again :) I'm now over 6 figures in the UK. Very rare. And totally doable. Don't give up.
Thank you a lot for the advice, ill start digging up things the moment I get home from work. You were also right, it is subject, I dont know really why I wrote Service (I wrote the comment with breaks in between). I will make sure to check out everything that you mentioned. Please do keep sharing information with other random people, you never know when someone strikes gold because you pointed them in the right direction. Amazing comment!!
Thank you, congratulations to you too!!
Well, I read automate the boring stuff with python about 2 times, im still going back to it quite often, also mr sweigert, the writer, is an amazing guy, also replies on reddit. From there on it was just a matter of finding a way to solve a problem and then finding the right tool for it, through the aid of github, stackoverflow and a lot of youtube tutorials (god bless my indian tutors). Hope this helps.
Personally I used Jose Portilla's course on Udemy (zero to hero I started with) and have since done numerous others including Plotly/Dash but beforehand I did Master Data Analysis with Pandas by Ted Petrou.

I also know a few other libraries' basics, matplotlib, numpy, beautifulsoup. I'm trying to nail down the main inbuilts before looking at others.
One way to manage expectations is that if you find yourself THAT far ahead of a deadline, spend the rest of the time allocated researching related things and strengthening your coding skills. That way you are still doing yourself and the company a service but you're also not setting expectations so high that they're going to burn you out giving you impossible deadlines in the future.

I did this recently with some VBA automation at work. I initially said I thought it would take me about three days to get done, but I misjudged the difficulty and it only took me a day. I spent the next two days still working on VBA code and was able to further improve the automation and strengthen my VBA knowledge. My boss was happy I got it done in time, I was happy and not stressed, and now my VBA is that much better for next time I need to automate more reports.
Use the excess time to refactor code, function docblocks and documentation of the project in general. 

Kill technical debt where you can.
A hundred percent the comment below, manage expectations. Like you I started my Job off with some really quick impressive acomplishments, fortunately I realized after a bit people started acting like it was business as usual even though I was busting my ass. I didn't grind to a halt, but I did set reasonable deadlines. One trap that starts to happen is your higher ups start asking "oh you can totally get this done by x" and you being a hardworking person want to scream back "of course!" Trust me take a brief pause and think about it. Even if you say you'll need longer you'll either make that deadline or beat it both of which will make the team happy. The flip side is getting into the habit of being a "yes man" and then you either make the tight deadline and its business as usual or you don't make it and now you look bad. Also if your ahead of schedule by a lot don't be afriad to take some serious time to go back over your work. Early on the amount of times the second I thought I was done I went running to my boss saying I was it was finished only to realize later that multiple improvments could and should be made. TLDR don't be afraid to give yourself breathing room. Its better to over deliver than promise something you might not be able to pull off.
And every exploiter knows how easily you can be manipulated to please them.  It is only once they butt heads with someone who can't be manipulated, that they have any respect for them at all.
Until it breaks. They aren‚Äôt paying you to build the tool only. They also are lying to maintain it.
This was a few years ago.  I did keep it to myself in the beginning so that I could spend that time researching things to do in Python but I wasn't worried about automating myself out of a job because A) I was the only one who knew how the program worked and B) a smart company would want to keep a industrious employee and apply their skills to other problems.
Automate the Boring Staff is a great book but it is now packed into one fancier book: Python Crash Course.
Think Python now has a 2nd edition which uses Python 3 instead of 2. It's also [available for free](https://greenteapress.com/wp/think-python-2e/)!
Thats 80% of tech support. ;)
I did youtube and some phone apps while watching the kids.  Found SoloLearn helped with a lot of basics.

Not that Im past the basis....  but i jumped right into what I was trying to do which was basically api's and databases.  

Some of the scripts Ive made would be impossible to get the data manually and the data I can get from downloading takes seconds with the script.

My next step is a GUI for them but Ive been wanting ti get into that for a month or so.  Just havent...

Where are you at?  Are you learning for work?
Thank you! I guess my advice would be generalized for people starting out in software engineering - no matter where you work, keep learning, don't be afraid if you're unfamiliar with some technology, and just do what you can to learn it. I still run into a lot of popular technologies, for example splunk is something I managed to avoid for a while, and it just means spending some time researching best practices and figuring out how to use the clients. What I see in a lot of beginners is a lack of confidence, they see other people that just seem to know so much about something and act really confident, but it's really just time spent figuring it out and starting out having no idea how something might work or how to use it. A lot of confidence you see in the senior engineers is learned, and a lot of it is sometimes misplaced. They don't always make the best design decisions or write the best code. No one does, no matter how confident they sound about it. It's just hard to tell when you're starting out, and everyone just seems "so much better". It's all learned over time, and everyone starts out feeling overwhelmed, like they don't belong with all the "experts" around them. I see this a ton with people who are just starting to learn programming and get this immediate impostor syndrome when they're around people that just seem so much better than them.

But advice regarding python specifically - learn the Python standard library. There is a LOT of good stuff in there, and I've run into so many engineers who have years of experience but haven't seen a couple things that Python offers by default.

For example:

- collections: defaultdict, Counter, deque, namedtuple (and a class inheriting from namedtuple can help make your class have a much smaller memory footprint, like `__slots__`, where it doesn't have a dict)
- itertools: combination/permutation and more
- contextlib: contextmanager, the decorator that turns a function with yield into a context manager (the `with` stuff)
- struct: pack/unpack, when you need these, you NEED these.
- bisect
- calendar, has some useful datetime stuff that you might've thought you need a third party lib for, like iterating through days in a month/year
- statistics, for median and stdev, which i used to do manually
- tempfile, to get a temporary directory or file, super useful for just writing something out or even getting a new filename that's unique.
- secrets, for generating cryptographically strong random numbers
- ipaddress, for stuff like iterating over the IP addresses in a network
- cmd, for making shells

And I'm sure there's more I haven't seen... but I don't think people realize just how many tools python provides by default.
Thank you I will do, hopefully I get the same new start as you
So just learning everything now? I started to learn openstack last year but it fell away, maybe after python I will start that up again.
I used it to automate our onboarding process.  
I have a big script that builds a gui for us to enter the user info, and then it automates: account creation in AD, mailbox creation in exchange, enabling them on our lync server, sends out some emails that we send out, sends out credentials to the manager, and sends out tickets to various teams (desktop, telecom, mobility, etc).   
And then I have a bunch of generic scripts that handle tasks that we get pretty often: adding mass amounts of people to AD groups, mass creation of AD groups, creation of service accounts, running reports for various lists, etc.   
Powershell is great for anything active directory related.
I am actually working on a project to help with meal planning an grocery spending. It's supposed to take the meals that I regularly cook from a Google sheet, random sample 12 of them and then put the 2 week meal plan on a separate column that I can then send to google calendar. I've gotten it to work mostly, but right now the random sample only populates one cell instead of a whole column with the random sample.

Any thoughts? I made a post about it with my code,  but havent gotten any responses.
If you do it on company time it's their dime: They'll own the IP rights. Do it outside of working hours.
Because as you get more advanced you start to realize that every language sucks. Especially ones like Python that originated in the 90's/early 00's-eras. More modern languages have learned from the mistakes and short comings of previous ones, Rust being a great example, and avoiding pitfalls like package management and memory management by design. These are the kinds of things that you don't start having to care about until you've worked on more and bigger and more complex projects
Will check that out too. Thanks.
Thanks bud! I started reading thru it, it‚Äôs a great resource. Cheers.
Agreed
Yeah, well, we'll see. One of my classmates said that I 'might be more of a databases man', but there's at least a couple of issues with that: 1) IDK how I could get through the rest of my degree without getting proficient in programming; 2) It seems a core skill for many IT jobs, and a good route to employment in IT; and 3) I actually really want to learn it.

Still, as one gets older one has to come to terms with the fact there are many things you will never do, so I'm going to keep realistic about it. There's no sense 'making a rod for your back'.

Thanks, in any case.
Master data structures - it will save you  much work along the way :D, also  practice data exploration with Pandas create some basic templates in Jupyter Notebook to just load and see waht you can do with data instead of re-inventing the wheel  each and every time you are provided a new dataset. 
Some basic ML is also good - mostly classification problems will get you going for a while. 
Last important thing - practice, practice, practice and don't forget about practice. 
I plan to get started in natural language processing  -  I dont have any prior expierence with it and topic seems like fun. 
Have a good luck!
Well I'm actually really glad to hear that I'm going the right direction using Udemy! I have so many "I want to do this" that I end up doing nothing. But coding is the only thing I have actually wanted to do and have started doing. Just need to get back on the horse because Code Academy knocked me off pretty hard.
Thanks! And congrats!
Sorry I meant legorooj's comment. Got posted under the wrong reply.


I'm using powershell because at my IT job, it's all windows here. I can manipulate, create ad accounts, do log reports in Powershell and it's on every win 10 machine. I'm certain python can do all this too, if not  better but if you're going to do windows admin work, I'd use powershell because you dont have to install modules and whatnot to get scripts working on other computers.
I think you understand. Just have to make sure they know the value of your skills.
Ha. I work in the oilfield currently. It is a fucking nightmare when the company men are engineers and know waaay more than you do. It's much harder to hide stuff!
Sure you can. In this case they were neither.
True. But they also don‚Äôt recognize how much time/technical skills these things take.
Never messed around with excel üòÖ. Could you explain in perhaps simpler terms
Will do. That's what makes this a community.

Sometime I hope to start paying it forward, right now, I feel that I am very much still in debt to this sub, there are some very generous experts here.
Just to point out that as much as I enjoyed Al Sweigart's book(s), you should never use camel case in python!

EDIT: Except for class names
Thanks, valuable advice. I will be doing this!
Great shout.
Valuable insight thanks, seems very possible
Well fucking said.
>Python Crash Course

thanks for the rec!
?
Oops. Meant to link to that one instead. Cheers!
haha, yeah.

"You just google everything!"

"Fine then, you google it"

"Ok, what do I search for?"

\*smiles\*
That was an awesome reply. Thanks for taking the time. Most of the std libs you recommended I hadn't heard of so I will add them to the list.

I find a lot of my learning has been skimming over the broad areas and then coming back to them in detail as and when required; just finding out the exist is often enough for the time being.

Thanks again.
Keep at it. Perfectly possible.
Yeah. I think depending on the field there are lots of transferable soft skills  people learn that can be used in new positions.
Iterate through the cells required using openpyxl to write to cells on excel, then upload it to GS?
holy f I had no clue, thanks man or girl :)
o wow, i guess i dont see it since i am a noob
Np
Database stuff is also super valuable! But you can definitely do it. I'll help you if I can, let me know how.
Thanks for the reply! I absolutely love pandas now, and I feel comfortable with data structures from my excel modelling and some SQL knowledge, and I'm doing a lot of practicing with it. TF2.0 on the cards but not for a while yet.

Anywhere you'd recommend for pd learning/experience? I know of but have yet to fully utilise kaggle.
That sucks. Udemy is definitely the way forward in that case. One vid at a time, nail each one and move on. Good luck!
Thanks!
Np bud
Got it, thanks. Probably no use to me presently but good to know for the future.
They do. I hit the jackpot..
Eh, sorry, I'm afraid you'll have to go learn the basics of excel - really the absolute basics are fine.
Why?
You definitely should!
You just need to be 10% quicker and 5% smarter than the other person, or something like that.
Many thanks, I‚Äôve been studying all day, I‚Äôve bought some books for my daughter which have actually helped me a bit too in simpler terms
I don't think i have gotten to that part in my book on how to do that. But I'll take a look at it, thanks!
Can I get consultancy fee? Haha. Yw!
BTW that might be worth way more than 5k. Do your research.
Thanks.
I think kaggle notebooks are a good starter, some case studies from DataCamp/DataQuest are also cool - many articles and tutorials, for example there is a detailed RFM Analysis tutorial on DataCamp wchich is awesome. Articles from Medium - altough you have a limited access without  fee.
YT Channels for Data Science in general i find Python Programmer really cool - https://www.youtube.com/user/consumerchampion - The man behind the channel lanuched a Udemy course on Python wcich Iam currently working on - It is very pleasant and detailed.
Also this video is fun - https://www.youtube.com/watch?v=eMOA1pPVUc4&t=302s - it is a real life application of the toolset

The books: 
https://wesmckinney.com/pages/book.html - Written by the creator of Pandas himself - great resource
Automate The Boring Stuff - mentioned many times but I like to come back to it from time to time
Python Crash Course, 2nd Edition  - Many people  recommended this one, got it on my shelf but  didn't dive into it yet.

Thats a few examples from memory. The way that works for me is I just start to watch some random DS/Python videos on YT and then dive into the abyss of yt algorithm - you can find many fun tutorials, archived livestreams etc. 
If you have any questions feel free to ask ;)
Care to disclose your position and salary?
Ok
[deleted]
Sos, I forgot to mention that. Al Sweigart uses camelcase on everything. Classes = camelcase; not classes = not camelcase
Great idea! What better way to learn a subject than to try and teach another in it.
Yeah, I think it should do the trick!
Thanks for all that mate! I'll definitely be making a list and taking it from there.
Generic senior non leadership business title, should gross around 70k gbp including bonus.

I have other skills that got me this job though, that can't be seen as a reliable python only income.
Python rates readability above all else.

In the case of classes, you have been taught right. However, classes are an exception and are the only place where you should be using CamelCase. The rest of your code should be following snake\_case.

If you aren't aware of it, Python has it's own style-guide (an exhaustive one) to write clean & concise code that is readable for everyone, from beginners to experts. You don't need to memorize it. Text editors & IDEs will point out most of your mistakes to you. But ensure that you follow the guide with as few compromises as you can. It will serve you well in the long run.

Reference: - [PEP 8 -- Style Guide for Python Code](https://www.python.org/dev/peps/pep-0008/)
[deleted]
Apologies, forgot to include an exception for classes. I was tired I think?
I highly recommend this course for any Python beginners!  I've been learning Python for about 1month now, and this course is by far the best resource I'm come across so far!  I've already gotten to the point where I am able to write Python scripts for automating a few things in my job.

It teaches at a reasonable pace - nothing is dragged out.  You learn important concepts that often catch beginners out (speaking from experience!).  The content is presented in a fun and upbeat manner, and each lesson has a re-cap of everything covered at the end of the videos.

I'm still very much a beginner, but this course has been superb for learning the basics and foundational Python skills you'll be using all throughout your coding journey!

If you want to nail the basics of Python, and you want to hear the word 'spam' over and over again, then this course is perfect for you! üòÅ

Edit: typo
[u/AlSweigart](https://www.reddit.com/user/AlSweigart/) thanks for keep posting your course! I highly recommend this course, it help me learn a lot about Python and programming languages!

You're the best!   
Best wishes from Portugal
Sorry for not posting this at the start of the month. I lost track of the days until someone messaged me asking if I was going to post the free codes this month.
The MVP of  Python learning delivers again!
I'm at lesson 18 and I can't recomend it enough! I had previously done half of other course and lost some interest...this one is very engaging!
Thank you very much My Good Sir. I‚Äôll start asap
Thank you so much for posting this. I'm having a bad at math day, so it's comforting seeing "**You don't need to be "good at math" to be good at coding."** 

fingers crossed this helps me.
Is this a good course for someone that is pretty much a complete beginner with python? I started some code academy and never finished it. I'm not at all unexperienced with IT and the command line tho.
Thanks! Great incentive to activate some minds, including mine lol
Just bought this book paperback! Can‚Äôt wait
When I saw that "Automate the Boring Stuff with Python" online course is for free now I was excited then I saw I already grab it months ago. I got problem, I always grab and stores a lot of neat educational help but in the end it's just laying there and I never have motivation to do anything with it.
"next few days"  Ends tomorrow. =)
I started learning Python with this book, started automating all my work and getting into data analysis and now, a bit over two years later, I have a great job as a data scientist. Thanks, Al!
This is an awesome resource! Will throw one more out:

Free course at [likeiamfive.com](https://likeiamfive.com) teaches Python basics by 'announcing' the starting lineup of the 1998 Chicago Bulls.

All the courses on the site are project-based (ex. learn to web scrape by scraping listings from Airbnb). Been really helpful!
I just bought it a week ago...
Heartfelt thanks to you Al! This book is an excellent resource.
I wish this happened about a month ago, cause I bought the book then
Thank you very much! Im excited to start learning!
Using code on the udemy app its not working?
Thank you!  I'm a few chapters in and finding it well-paced.  I bought it in the January sale and hope you got a decent cut!
Hi Al! Just wanted to say thanks for making this amazing course, it has completely changed my career trajectory. You're a hero.
Thank you
Thank you for this
Just got it man thanks!
Thanks for taking the time to share, much appreciated!
Thank you so much!
Thanks for sharing. I know we're in r/learnpython but I'm always surprised by how many absolute beginners there are. It's endearing.
Amazing, thanks! I'm guessing this covers everything that's in the book?
So I have been trying to figure out how to write a script that will automatically download any PDF attachment to a folder and I'm struggling on how to do this. Any tips?
NICE! Thanks
Thank you
Thank you!
I just bought the book last week and worked through chapter 4 last weekend. Thanks for posting this!
Thank you for uploading this! I just happened to come across it by chance after looking at your book the other day.

I'll be starting it soon and I'm very excited!
I bought your book awhile ago while I was making some python scripts to handle i/o at work. I haven't finished it yet. Im going to pair it with the course!

Thanks Al!!
Thank you!
:/ already had it, it was probably shared in reddit a long ago and I used the code but never ever did the course looks like have a 2nd lockdown achievement to unlock
Thanks!
I upvote this and try to award it every time I see it.
This book changed my life, and I wouldn't be where I am without it.
is this course any different than the book?
Thank you so much! I just started learning Python last week and can use ANY free info possible!
Thank you very much sir ‚ù§Ô∏è‚ù§Ô∏è
Is it recommended to buy the book as well?
thanks for sharing mate...
Thank you!!
RemindMe! 10h "python courses"
Amazing! Thank you!
Cheers Al, I managed to automate ~50% of my job using this book, and I'm using the time saved to automate the other half! I love watching it do my job for me. I don't even need to be there. Any problems, the program pauses and sends me text!

I'm also working my way through Beyond the Basic Stuff now. That's helped organise and clean up a lot of my code. The game now is to fully automate my job and just learn Python full-time so I can get a data science job. It wouldn't have been possible without your book, so thank you!
So when I sign up and type in the promo code I will get lifetime access to the course?
Woah, thank you tons! You're a hero, good sir.
Thank you very much, I almost bought this a few weeks ago, but I'm glad I procrastinated! Again, thank you.
Thank you for doing this. I always wanted to learn but never thought I would follow trough. With a free course I really have no excuses so that's a very good incentive. Thank you!
Thank you, kind sir.
Thank you so much!
Top notch quality my man!
Thank you!
Amazing! I've just gone back to Uni and am 6 weeks into my semester and Al's book is on my reading list. Can't wait to do this course in conjunction
Thank you!
Wow, I just signed up!! Thank you so much, I had been looking for a way to start learning Python

Edit: you‚Äôre the instructor and you‚Äôre the one offering it for free?? Wow, double thank you!!
Thank you. Doing serpent god‚Äôs work
thanks for this, I will implement into my learning immediately.

ATM I'm only up to basics lists with python crash course but I can do all the (so far) "try it for yourself" tests without referencing the book.
This isn't meant to discourage anyone from signing up for the Udemy courses. I've found that the book covers the material in greater detail compared to the videos (not so hard to believe). The book also provides review questions and mini-projects to help reinforce the concepts of a chapter. I'm following the book along with the videos now and enjoying it greatly!
Crazy. I was just looking at your book. Thank you for saving me money I absolutely did not have.
I know that the code expires in a few days, but once I have bought it for free, do I have like 2 days to finish it or do I have it forever once I have got it for free?
Thank you daddy
Hi Al,  


I would like to give you my sincere thanks for this. I am super excited to learn all this course has to offer and put it to use at work and for myself. Cheers.
I missed the opportunity üò≠üò≠üò≠
You're the best! I'm new on this sub and the first thing I saw was your post. Now I have something meaningful to watch while I'm studying!
damn i didn't see this on time
Will wait for April code)
I'm over halfway through with your course and it's been a blessing to me. I also read your online book along with it. Thank you so much. Side note: now any time I am reading something your voice is all I hear. Lol.
Dammit I'm late üò¢
How much time do you dedicate weekly? Had to opportunity to start this 3 months ago but I‚Äôve been overwhelmed with school.
[deleted]
I have the eBook/pdf, how is it at following along with that? I tend to like to read -> watch video or vice versa and to change it up as someone who is hammering CCNA to death trying to take it
I recently saw your name come up as Executive Producer on a Maggie Mae Fish video.

I love you even more now, Al!
Seriously, that one sentence brought me a huge amount of peace. The self-doubt can be so heavy for those of us who have a bad relationship with math :(
If that's whats stopping you, you have absolutely nothing to worry about! Programming at this level has almost no math at all. Like honestly the most you do is addition and subtraction. Seeing others in the comments concerned about the same thing, its interesting how widespread that misconception is!

At the higher levels it does go to like Calculus 1 or 2 and Linear Algebra but that's really it.
yeah definitely! I'm brand new to python and so far it's been wonderful!
I found code academy not so great, im sure for some its helpful. 

I'm getting a great feeling working through the book python crash course and cant wait to implement this video series
Heh, I copy-paste the descriptions each month. The coupons last for 3 days each, and I get two free coupons a month. I just forgot to post it on the 1st. So it'll be good for the next 6 days after today.
Yeah, but that probably bought me a few cups of coffee, and I need a lot of cups of coffee to keep producing more free programming books and online courses. So.... thanks, actually. I appreciate it.
[deleted]
Is it good tho?
I will be messaging you in 10 hours on [**2021-03-04 18:20:54 UTC**](http://www.wolframalpha.com/input/?i=2021-03-04%2018:20:54%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/lx4sx4/automate_the_boring_stuff_with_python_online/gpmt2qm/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Flx4sx4%2Fautomate_the_boring_stuff_with_python_online%2Fgpmt2qm%2F%5D%0A%0ARemindMe%21%202021-03-04%2018%3A20%3A54%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20lx4sx4)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Honestly, very little! So far, if I had to put a number to it, I'd say around 30hours of actual time spent learning, then around another 30hours putting together projects and scripts for automation.  

If you are full on with school, then do just 1 lesson of the Automate The Boring Stuff with Python a day.  The lessons are very short (especially the first lessons) and you'll begin to pick up the basics pretty quickly!  Then, when school isn't as hectic, see if you can put together some projects from the small lessons that you managed to do!
> . how do i edit 1000 config files updating an IP address in each one?

This is actually a more trivial problem than a game of tic toe with a robot opponent.
For me personally, the course didn't teach me how to do specific tasks like the one you've mentioned - it taught me enough of the basics, troubleshooting and terminology so that I could figure out how do to what I wanted to achieve. The examples in the course, like the "I'm thinking of a number" game provide you with enough Pythonic langauge structure to begin developing your own scripts or programs.  

The rest was researching different modules that I found needing, as well as a good portion of Google-fu!
I much prefer videos or audio explanations - and so whilst I have looked through the written version of the course, I've not actively used it whilst learning. 

Having said that, the author does actively make reference to the sections of the book that the video is covering, so I'd imagine it would be quite easy to use both at the same time.
:)
Chances are you were/are not bad at math. You may have difficulties with school math, how it's taught and tested, but real math is a lot like coding. You have a problem to solve, a set of tools to work with and some rules to follow in writing your solution.

I'm sorry math was difficult for you, but do look it up once more if you're up for it. At your own rhythm and for the fun of it.
Unless you already know the fundamentals, code academy is shit. It "tells" you how to do stuff, not "teaches"
Sweet! We appreciate it. You've helped a lot of people!
Glad I did then :)
I wasn‚Äôt in the sub :(
I like it. The chapters are thorough and there is practice problems and questions at the end of chapters. I prefer courses / books that challenge you to code instead of just following along and typing
Thank you! I realize how much further along I could be when I read stories like yours. I‚Äôll do my best with the time I have.
[deleted]
Thank you :) The struggle I had in school was mostly from being undiagnosed Adhd, I couldn‚Äôt learn the way they taught math, so my teachers kinda wrote me off like ‚Äúoh, you just aren‚Äôt math brained, you‚Äôre better at language arts‚Äù 

So i have that ingrained idea from all my schooling that I‚Äôm ‚Äújust not math brained‚Äù so when I encountered math concepts in python, my first instinct was to shy away. 

I‚Äôm not gonna shy away though. I have proper treatment for adhd now and I‚Äôm not gonna let frickin MATH bully me into not doing something I‚Äôm interested in!!
Id still recommend the book even if you do the video course. The book has many more exercises and applications!
Ok, good, have you started applying it's concepts in real life?
Just start working on it by yourself. There are plenty of articles about file i/o, `.read()`, `.write()` and things like that. `If` the course has covered conditional logic already and string operations, there's nothing stopping you.
Yep. I use it for work almost every day
[deleted]
I haven't done the course, but I did do the book and I remember it getting to very practical things like file management, web scraping and e-mail incredibly quickly. Is the course different?
That's the next modules for me.  Maybe it improves!
If you are thinking ‚ÄúI want to start coding, I don‚Äôt where to start‚Äù this is all you need!
[deleted]
Great course, keeps me motivated!
It's so kind of you to do this, thank you very much.
thank you so much! I found your post from last month, but it was too late, now I'm on time!
Mr. Al,
I‚Äôd like to one day shake your hand! I started your ATBS about three weeks ago (no power at my house due to a massive ice storm in OK this last week.) and I‚Äôve learned so much from what I‚Äôve completed so far! 

I like your style and teaching method. Thank you for  what you do! 

I‚Äôve not looked but do you have an advanced Python course?  I‚Äôd snap that up in a heartbeat! 

PS: I hope you get as many cats as you want! Say hi to them from me!
Ahh shit and I just bought it from Amazon 3 days ago
Thank you for giving out for free :) great course!
Omg it's working! Thanks!!
Thank you.
Thank you very very much! Appreciate it :D
Thank you! Looking forward to learn!
Thanks!
You sir, are a hero
Thank you so much Al. I have some colleagues who are just starting in python. I have recommended this to them.
Many many thank yous!!
Thanks! I've been wanting to do this but I didn't have the money to purchase the course or book :)
Thank you so much! You are the best!
Perfect Timing!!! I just started the free YouTube playlist that gets through the first few chapters. 

I'm looking forward to diving into the whole series. Thank you!
Thank you bro!
You're simply amazing <3
Thank you!
This is wonderful! Thank you OP!
I'm reading the second edition, and is a great book. I skimmed fir the first part, but the second is really useful, even if you already know programming and want to learn more about python.
Worth it, do it.
Thanks this is awesome
Love you!
[deleted]
Also highly recommending, got this course for free on a Christmas special, completed the course, I'm less of a developer and more of a technician/engineer but actively putting this to use on the job. Really great way to learn the fundamentals, follow it up with Codewars and contributing to open source projects from there. Thanks u/AlSweigart for doing this!
Awesome! Thank you
Mannnn, you‚Äôre the best!
Thank you!
u/PsixoJohn, told ya
Al, your website is great, but you are astroturfing and spamming. 

You are turning a real fan into a skeptic.
You're amazing, thank you so much for this.
thank you for this!
Incredible generosity. Thank you!
Thank you so much !!
Thank you. I signed up. I couldn‚Äôt follow the book because I can‚Äôt learn that way. I‚Äôm hoping this will help me!
Went to purchase, and I already have it. Sitting, waiting for me to come back to it.
Thanks a lot
Is there any time of the year when it's not free?
Thank you for your kindness
Thanks. I‚Äôm working through the 2020 Python Bootcamp. I‚Äôll do this once I‚Äôm done.
Very nice!
Damn, thank you !
Just got the course for free, thank you Al!
Hey Al, will you be doing a course that covers the new books material when it comes out?
Going through it now, i recommend this.
Thanks for doing this!
Thank you Al! Looking forward to this course
Bought both, "Automate the Boring Stuff" and "Python Crash Course" last week but still great to have it in video format as well. Thank you *very* much!! <3
Thank you ü§©
Commenting too come back to later
Thank you so much!
Just downloaded. This may be the push i needed, thank you for your generosity!
Thanks a lot! I'm doing the basics of HTML/ CSS and JavaScript at the moment but will get round to this.
Al you are a legend! I'll spread the word! This course helped me finally break through the confusion of programming. I was able to automate so many tasks at work that my bosses gave me a promotion and gave me a much needed raise! We now have a Practical Automation group that I am in charge of. We have an in house Basic Python course but it really sucks and confuses everyone so I tell everyone to go and take your course!
Thank you!!
Great course, Al!
So my university physics instructor told us to use VPython. Is that the same as regular Python? Will this course help me?
Al, this course is great, thank you! I "bought" it the last time you generously offered the course for free and completed it within a couple of weeks. I've already recommended it to several people. I've made a few useful applications as well!
This sounds great! Can‚Äôt wait to try it
So if I sign up with ur code between these next few days will I get it free for like a whole month or something?
Thanks for posting. Sent this to my office peeps ... 6 more signed up, including me.
Thanks just signed up
Does it come with a certificate? I enrolled earlier but it has no course completion certificate.
Al you are the reason im doing a masters degree now!!
I literally noted down yesterday to pick up learning python again. I may not believe in signs, but i take it as one nonetheless
I guess you would have said what the new books were if you were free to say, but having used AtBS to automate sign ups at the pool during COVID, I'm definitely curious about your other projects!
Thank you! Signed up!
Why are you giving it away like this? I see that you do it every month, but why?
Thank you for doing this!
Again lol
Al Sweigart is a national damn treasure. I nominate November 2 to be National Al Sweigart Day.
This is great, thanks! Does the course cover the same stuff the book does?
Thanks al
Awesomeness! Thank you for sharing the knowledge and offering the course free of charge! üôèü§ó
Mad I missed the free period
Thanks! I‚Äôm excited to learn.
  Great course. Finished it recently. Thank you!
This!!!!
Feel free to say so as often as you like. :)
[deleted]
The book does cover a few more concepts than this course does, and also the book is now in the second edition. This course will be updated probably around mid 2021.
Are you the real author???
Udemy started limiting the number and kind of coupons I could make each month to just 3. So I make two 3-day free codes every month to max the number of people who can take the course. (The third coupon I use for a 30 day discount price, which lowers the price to about $18.) So I post this, at most, once a month.
Niceeee haha thanks bro!!!
Yes. I'll be working on a Udemy course for my latest book, [Beyond the Basic Stuff with Python](https://nostarch.com/beyond-basic-stuff-python). I'll be posting this book free on my website in a few weeks when the final ebook formatting is done. I've finished the course outline and it'll come out to 66 videos, each around 8 to 10 minutes long.
:D
Yes, though the book does cover a few more topics and in a bit more detail.
You're awesome!
Dam I missed this code this time. Hopefully next time.

You‚Äôre awesome
Thank you!  I‚Äôll Check this out!
Oh cool. I just finished taking a beginner CIS course that covered both python and Java btw and everyone i know has recommended this book. Does it matter which ed I get?
Yes, he is
Thanks for the reply! I will definitely check out the book as well then!
His book is available online for free.
https://automatetheboringstuff.com/2e/chapter0/

Al, you are awesome!
Whoa üòÆ
now do this for me but with threading pls
To be completely honest learning a programming language is always easiest when it can be applied to actual data/usages.

&#x200B;

Writing Hello, World, or creating a twitter clone using a book has never done anything for me. I play eve online, and pretty much all my knowledge has been from working on projects around issues that people have with game data.
I would buy a book in that style. 
OP: *I attack the darkness*
I TA for my school and it's moments like this that make it all worth it, when you can tell you helped someone understand how something worked. 
If you're into RPGs and learning to code, definitely check out [code combat](https://codecombat.com/), which is what I was expecting to find when opening this post.

This has been a great way for me to teach Python to even very young (<13yo) programmers and even nontechnical coworkers. Games are awesome.
Honest question, does somebody who struggles with that kind of basic logic really have a shot at becoming a programmer?  Logic always struck me as one of those things that makes sense to people, or it doesn't.  I've tutored people like this girl, and maybe I'm a shit tutor, but at best I could only get them passing marks.  Never to a point where I thought they could stand  on their own and develop something.
Curious. Why do you prefer 'while Target_enemy == True' as opposed to just 'while Target_enemy'? Is it how the students learn? Is the second way less obvious?
Wow this is great, you've taught your student how to code with D&D, *and* you've taught me the basics of D&D with code.
I'm going to repeat it for visibility. Codecombat teaches Python as described here, in an RPG style!
The human brain is an amazing thing. It can create entirely new functions to solve any problem, but it needs the relational context of applicable features first. Once the relational context has been established, the entire function falls into place very quickly.
Here I thought I'd be able to play through Skyrim again and be a master at Python by the end.
Nicely done!
I love this.
Thank you! What a cool way of explaining it.
you sir, are a king among men!
NICE JOB!! Seriously, framing is everything. Idk if it's because I'm older, or because all my teachers are male, but I find myself having to do this sort of thing-- reframing concepts in ways I understand-- _all the time_. You've not only helped her learn important concepts today, you've given her a valuable tool, and if she latches onto it, there'll be no stopping her <3
Lol you‚Äôre such a badass tutor
Oh those moments.  Well done @OP.
I grew up playing board games, including D&D, and that absolutely helped me when it came to learning programming. 

For that matter, it was playing old computer RPGs that got me comfortably with the command line, as I had to learn how to navigate in DOS to launch them. 
That's awesome!

I have this long-running process (stolen from Pendelton Ward) that if you're having difficulty with the world, simply reduce it to a role-playing game. It works with social situations as well as programming. 
I once had to explain basic covalent chemical bonds to a fellow student who was falling behind... the valence she‚Äôll diagrams were giving her such trouble. Eventually I hit on sigma-bonding being an arm-outstretched handshake and pi-bonding being an arms spread hug and it just clicked for her.

You _never_ know what metaphor can work for any given individual on any given subject, but for every student and every subject there‚Äôs a metaphor that will _work_... trick is finding it before the heat death of the universe.
Can confirm! My first micro-project rolled stats (4d6 minus the lowest) and asked for input on where to assign them while displaying the remaining ones. Very simple but required to think about all the main starting topics.
Is that a  infinite loop?
I wrote about this in a blog post: [Why is Object-Oriented Programming Useful? (With a Role Playing Game Example) ](https://inventwithpython.com/blog/2014/12/02/why-is-object-oriented-programming-useful-with-a-role-playing-game-example/)
You're a hero. r/HumanBeingBros
Thanks for this!
I love this. 
Whenever I teach kids I just relate it to whatever they're interested in. Works everytime (adults too of course!).

Nice job
You could also do something similar for Class and Inheritance!

    class Player_Character:
      def __init__ (self, hp, race, alignment, level, str, dex, con, int, wis, cha):
        self.hp = hp
        self.race = race
        self.alignment = alignment
        self.class = level
        self.str = str
        self.dex = dex
        self.con = con
        self.int = int
        self.int = wis
        self.int = cha

     
    class Rogue(Player_Character):
      def sneak(self):
        dexmod = 2




In the old days (think mid 1980s) there were books that used similar concepts and Sherlock Holmes cases to teach programming. They were really easy and nice introductions.

As a modern example (though wrong programming language for here) [Java Design Patterns](https://www.java-design-patterns.com/) uses RPG characters, mechanics, and traits to explain Design Patterns.

[Invent Your Own Computer Games with Python](http://inventwithpython.com) uses games to teach programming.
You just Miyagi'd her.  Nice work! 
" Yeah, I can teach Japanese to a monkey in 46 hours. They key is just finding a way to relate to the material."
Made me think of https://codecombat.com/

Styled like an RPG Adventure type game but with code.
This post is gold
As a first year Comp Sci student who loves computer games, I definitely support the concept of teaching programing through games. 
Proves what I've always said, if you want to learn something/teach someone, relate what you're trying to teach to something they know / like. Seems common sense when I type it out. Also, if you want to learn something, yourself, better, teach it to someone who knows nothing about it. You'll see it in a different light 
This made me cry, I wish I had a senpai like that. You made something complicated to learn at first but using simple mechanics we all are used to as a way to explain it in smaller pieces into her brain, the problem isn't the language syntaxes it is to learn how to study
I'd buy a book like that. :)

&#x200B;
One of the things I'm missing in just about every educative material out there is the multitude of various examples to describe the same things needed to reach the wide number of people that are expected to learn. The fact is that we think in different ways, we need different things in order to understand the concepts that are being taught to us.

For this girl things clicked when you explained it in a way that made sense to her, that's probably because she doesn't understand the language used to describe how programming works. The word comparison operation has no meaning to her and might as well have been written in greek or chinese or russian.

What you did here was effectively translating the words you use into something that she could actually understand.

There should honestly be a collection of concepts described in various different ways for people to read through and find what makes it understandable to them. This isn't limited to programming either, it could be maths, physics, economy, pretty much every subject could stand to gain from something like that.

You say there are lots of people wanting programming explained in this way and I can assure you that there are plenty of people who want programming explained in a multitude of other ways as well.
[deleted]
Glad you two were able to stick it out. I'm usually the teacher in those kinds of situations, and know how frustrating it can get.
This post made me smile
Found the nerd
For some reason people don't even comprehend the text that they're seeing on screen and somehow make everything far more complicated than it is. I mean, you can read your examples as nearly plain English. I would expect that after explaining a few rules, *anyone* should be able to read that code and, merely by reading it out loud, understand what it does.

Yet, somehow, some people just don't get it. I've been in the same situation trying to teach people that just simply can't process it.

Edit: not trying to be a dick here. It's just something I've noticed when trying to teach people, and I find it interesting. People, if you're struggling with this stuff, just keep it simple. Don't over complicate it. *Read* what's on the screen.
Nerdy! LOL in a good way.
You start off as an octopus, only, you may or may not have 8 legs.  Those legs are able to think on their own and do individual things.  Now, you really become an octopus and everything starts to make sense.
Other players are your other threads. You send your order over and let them do their things.
Same thing, but [speed factor initiative](https://theangrygm.com/fine-i-wrote-about-speed-factor-initiative-in-dd-5e/).

At each round of combat, every creature determines its action for the round.  We then resolve them is a semi-random order, depending in the creature's modified initiative bonus, the action complexity, or other factors that the ~~the underlying scheduler~~ DM thinks are relevant.  Most of the actions are actually independent, so we get a heightened feeling that the action is happening all at the same time without really changing how the battle plays out.  But sometimes, if a targeted creature dies or moves out of range, you end up having to burn your planned action for movement ~~and reenter the task queue without having done any meaningful work~~.  And then, at the next round of combat, ~~all threads rejoin the thread pool and are assigned new work~~ we do it again.

Eventually combat is resolved, initiative tracking is suspended, and the coordinating ~~thread~~ DM regains control of the ~~program~~ plot.
My vote too
And pointers.
Just pretend you're her, but you also have severe ADHD and someone's forcing you to switch tasks all the time.

*It really is that simple!*
So when it comes to "threading" there's sort of two concepts that are a bit different, and I know they have different names but I think I've heard both used (improperly) interchangeably. So my vocabulary is gonna be wrong, I think, but I think my understanding of the concepts themselves are correct and distinct. Here goes:

There's a technical distinction between "multi-threading" and _parallel processing_. While the colloquial meaning of "multi-threading" is "parallelism" they have some differences.

Parallelism is several tasks that actually do things at the same exact time. More than one thing is truly happening at once.

Multi-threading is where multiple things need to happen, but _only exactly one can happen at a time_. Depending on specifics, threads will either run until some magic (a timer interrupt) happens and they are forced to stop running, or they will voluntarily stop running and pass back and forth so none of them are left in the dust, but they aren't doing things _truly_ simultaneously. To examine the difference between "at the same exact time" and "in sequence" let's go back into the RPG for tangible examples.

Consider a fighter and ranger in combat versus an orc in a hallway. The initiative order is (for whatever reason) Fighter, Ranger, Orc.

The fighter goes down the hallway and hits the orc. Then, the ranger (who was out of range) advances forward _into the space the fighter just occupied_ and shoots at the orc. It is weakened, but it hits the fighter on it's turn.

Nominally, these actions occurred "at the same time" (within the same round of combat) but they _actually_ happened one after the other.

To see what I mean, let's consider some alternative cases:

The initiative order is Fighter, Ranger, Orc. The same thing happens as above, except as the ranger takes the shot, he gets a critical hit, killing the Orc.

In this scenario, the fighter does not take damage, as the Orc is not alive to deal the damage. (If things happened truly in parallel, the orc could have taken a swing while the ranger was repositioning or while his arrow was in flight, before death.)

Consider another case: the initiative order is Ranger, Fighter, Orc:

In this scenario, the ranger cannot move into the fighter's space and can't get a good shot. Or something - I've made the example a bit contrived, but I think the problem might be clear - the ranger can't move into the fighter's space until the fighter vacates it. (If the scenario was happening in _parallel_ the Fighter, Ranger, and Orc would all be moving and none of these issues would happen.)

All of the things that happen in sequence here are almost examples of _pre-emptive thread scheduling_ (this is one of the options I mentioned above while referring to "specifics" in the fourth paragraph) which is that "a thread (character) runs until it runs out of time allotment" which is "6 seconds" to use the 4E time frames. Additionally, in these scenarios, only one character can run at once. In the scenario that /u/PurelyApplied described, the actions are resolved simultaneously, and thus is somewhat closer to true parallelism.

Unless you're wanting to know about Semaphores and Mutexes and things like that, which is a whole different topic...
Do one with recursion
And async 
you can attack enemies at the same time 
Pretty much everything I've learned has been through practical usage. Building shit. You can read about all the theory and concepts, but until you actually build shit with them, they're meaningless. 

I've always learned new stuff by first having a problem, and figuring out how to solve it. I find this is way better than knowing about a solution and trying to find a problem.
i can't stand seeing 'foo' in every example
I've tried to pick up some programming skills a number of times. Things like Codecademy or SoloLearn are great and all, and they are educational, but the material will never stick in my head unless I'm using it for something. I've learned 10x more by just sitting down with an idea of what I want a program to do, and either applying what Codecademy taught me in real time or Googling the answers to how to do various things. 


I wouldn't by any means call myself a skilled Python programmer (which is really the only language I know much about), but I can do basic things and I've made a few simple programs that have worked out alright. Well, except my current one which is much more complex and frustrating but I'm still learning new stuff from it every time I sit down with it, so there's that.
In my high school Java intro class, the teacher wasn't very good at explaining object-oriented programming, and nobody in the class understood what "this" meant. I was very confused. One day I decompiled Minecraft and started playing with changing statements here and there to see what happened, and it quickly just clicked. From then on I kept on applying class concepts to Minecraft and it made perfect sense.

I legitimately believe there could be some amazing things done by integrating Minecraft coding into the classroom. The codebase is huge, so you could find just about any type of programming concept you want to demonstrate. It's easy to fire up the game and see how things work, to really see the effects of your code. It would be easy to make assignments saying "Make a new class which extends the existing Zombie enemy, but this zombie will leave behind a trail of fire everywhere it walks".

There would also be a lot of benefits in just seeing how real code looks and what professional programmers tend to have in their code. It would also give people firsthand experience in seeing what comments are useful and what are not, and when it might be nice to have more.
You're the third person to make a response like that. I wonder if there is a market for a book like that. "Intro to Programming via D&D" or something like that. Don't focus on the coding itself, but rather focus on the concepts maybe.
[https://www.amazon.co.uk/gp/product/1484232305/ref=ppx\_yo\_dt\_b\_asin\_title\_o04\_s00?ie=UTF8&psc=1](https://www.amazon.co.uk/gp/product/1484232305/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&psc=1)

&#x200B;

i recently purchased this, they also have a website with pretty much all the info thats in the book, had a brief look at the website, havent cracked open the book yet
"Game Programming Patterns" - Robert Mystrom

He goes through some of the primary object orientated design patterns with a focus on and examples from video games.
*Roll the dice to see if I‚Äôm getting drunk*
\*sigh\* You can't attack the darkness.
[deleted]
You are likely to be eaten by a grue.
It's one of those Job-specific moments that if you've never done the job, and had the feeling, having someone try to explain it to you just doesn't make a lot of sense. But if you have had the job and experience, it's one of the best feelings you can have.
The Intro to Programming Class is a general IT/Science class credit and is applicable on any degree program. It's like taking Biology or Chemestry or Anatomy. You're not planning on being a doctor, you just need these credits for your degree.  


It's not up to me to decide who has a shot or not. That's up to the student themselves. 
I can't speak to programming, but I can speak to some other math and science types. 

Consistently, I've seen 4 archetypes of students

1) don't get it and won't try. These students wash out

2) don't get it, but keep trying until they do. These students become indistinguishable from type 4. 

3) get it and coast. These students can do well, but usually peak somewhere and then struggle when they realize that they can't coast anymore. They then become either type 1 or type 2. 

4) get it, but push themselves. They know everything inside and out, and can dedicate the time and energy to get the really tough stuff. 

I feel like some people face a barrier to entry for their learning style. Once they pass that barrier, they seem to do significantly better than before
I guess the idea isn't to turn them into a programmer? Programming is being taught as part of basic curriculum in many countries now.... so like teaching a student math isn't intended to turn them into mathematicians, it's intended to give them at least a basic understanding of modern knowledge and skills.
> who struggles with that kind of basic logic

I think it this case from the way he described it, she didn't have any problem with basic logic.  She just didn't realize that she knew it.  I mean if she is an avid D&D gamer, she has the basic logic skills, but she just didn't realize that was true.  Sometimes people have these weird compartmentalizations.  They may understand something but not see how it relates to something else.  

I used to teach intro to linux classes and often people would look at permissions like they were hieroglyphs, and they were certain that they would never understand them.  But since binary counting was something we had already gone over and they understood how that worked, once I showed them the connection they were shocked to find that they pretty much understood it already. 

It seemed to me that her preconceptions about "programming" is, is what was holding her back.  She believed that programming was hard and that she couldn't do it.  She couldn't relate the jargon of programming to something she already knew.  So once she was shown the relationship between the jargon and what she already knew, that broke through her preconceptions and kinda "pulled back the veil."

People have all kinds of hangups about learning.  Most people can learn anything once they stop believing that they can't.

She could do it, the circuitry is in her brain. She just had trouble unabstracting it. A lot of people are like that with math. It's literally just an epiphany thing.  She can program.
Yes. Logic can be taught. My father raised me that way, so did his, and I raise my son and daughter the same way. Ironically enough, once you understand the logic behind "logic," it's easier to digest. It's thinking in sequential order and taking all possibilities into consideration.
It's not the logic she didn't understand but rather the way in which it was described to her. I remember back when I took chemistry and we went through the concept of Molarity about two thirds of the class got it but one third didn't. Our teacher then essentially described it the same way over and over again but that didn't help. After a while we as a class got together and we all tried different explanations to help them understand the concept. The interesting part was that many of those who didn't understand the concept were some of the best students in the class.

Sometimes we just can't wrap our head around something and most of the time it's because of how it's explained, at least IME.

I mean she obviously already knew the concepts but she just didn't know how to connect those concepts with the words the teacher used.
The objective of the class is to introduce students to general concepts in programming, not necessarily teach them good coding practices. I was trying to illustrate the concept of testing a condition for determining weather the while loop would execute or not. Conceptually, there's not difference between the two, but 'while Target\_enemy == True:' is a bit easier to visually dissect, I think.   


  
One of the other exercises I use in my tutoring appointments is I will take out a segment of code from a more developed program I have, and ask the student to read through the code and explain back what they think it means. Generally students get 70-80% of it just by parsing their way through the code and actually processing what they are reading. I do this to try and break them out of the mindset of worrying about syntax and coding form and focus more on the content of the code.  They can learn syntax and form later. Here they're trying to learn the broad concepts.
Some languages read anything in that variable that isn't False as True. 
I think C does that. 
Nah, just the crazy dude riding the rhino screaming "I'VE GOT THE DOOR!" as we come barreling through the room.
I'm curious, when you said all your teachers were male, were you being literal? Like you've never had a teacher that was a woman?
AT
Given that I think she was like 17 and I'm 35.... I will avoid making any kind of "wax on/off" jokes.
Senpai?
To be objective about it, this is something that a Tutor can accomplish that a teacher can not. When you have a class of 20-40 students, and a total of 64 hours to conduct the class, a teacher simply can't work at hammering out 10 different metaphors and explanations for all of their students to get every concept. But as a Tutor, working with 1 or 2 students at a time it's much more viable to accomplish this.
Something I've seen quit a few students getting hung up on in this class is the problem of syntax, like they get something like:

    A=1

easily enough. But then they look at something like:

    e=l.readlines

and they try to figure out what word is 'l.readlines' and treat it as some sort of foreign language.

One of the tricks I've used in several of my appointments is I'll pull up a chuck of code from another program, give them no context of what the program is or what it does, tell them to read the code and puzzle through it, and when they think they understand what the code says, explain it back to me. Today I used this chuck:

    with open(fname) as file_src:
        for line in file_src.readlines():
            clean_line = line.rstrip('\\n:,.')
            file_cs = clean_line
            counter += 1
            word = file_scs.split()
            number_of_words = len(word)

She actually got about 95% of it right out of the gate. The only thing she didn't get was what len(word) meant, which is understandable since she hasn't learned about lists yet. But typically this is a good confidence boost for the students as it seems like I'm dropping this huge complex program in front of them and they're able to figure out a lot of it right off the bat.
Now do this but with Asyncio pls 
Instructions unclear.

8 legs stuck in fan. 
Something something Mind Flayer
So, looking at this as someone whose sum total knowledge of multithreading is "this is a thing and it makes video games go faster," it sounds like we have a setting out point (the start of the round) and a group of however many threads (characters involved in combat).

Each thread/character gets instructions, runs off, and does its own thing until it gets to a rally point (the end of the round of combat), then waits for everyone else to come back. Is that accurate?
Sometimes you refer to a character sheet as a location where data is stored, sometimes you refer to the information ON the character sheet. This is the difference between by reference and by value.
But python doesn't have pointers.
I feel kinda bad cause I'm actually implementing threading, but I think it's more like having a bunch of minions, and on your turn you can start naming targets for them to attack in whatever order you want them attacked. This action counts as a bonus action, so you can still move and attack as normal.
Yeah, nonsense variables like foo shouldn't really be used to introduce syntax/concepts imo. Fine to use them to demonstrate simple ways to use things that people already have a grasp on, otherwise no.
Python?
I‚Äôm the same way, I won‚Äôt learn it unless it‚Äôs m using it for something I‚Äôm invested in. When I was in high school I failed geometry. But now I‚Äôm working on a project to design and build a model star fighter, and guess what? I have to use geometry to do it. I‚Äôve learned more geometry curing cardboard and tape then I ever did in class figuring the sum of sin(x).
I'll buy one too! Take my money! 
I bought one that explains algorithms in comparison to fairy tales! It's pretty neat
I much prefer this learning style... I couldn't really get into "Automate the boring stuff" because I'm not really interested in making a calculator or parsing boring data files.

I found learning the arcade gaming library and following it's tutorial and labs much more fun and made me more interested in learning. I am just learning as a hobby though, so maybe that makes it different for me.
I doubt there is demand for a book, the programming book market is full of books already no one reads. It might work better in other mediums, though, like some interactive website where you go through some simple D&D campaign and code along.
Yes! There is!
There was a TED Talk of this kind. "How to teach programming to kids (with Ruby (Ruby being fictional character))". She has a book iirc. 
Absolutely! This is probably one of the few programming books I'd actually be willing to buy!
This is basically how people get rich with niche ideas / books / material / whatever, I guess \\o/
There's a market for that.
I would easily spend the amount I would spend the amount on a book like this that I would spend on Eric Matthes books. 
I‚Äòd buy it! I used to learn everything during my Bsc abd Msc with examples the likes you just used. It helped me so much more compared to ‚Äûregular‚Äú studying methods. Now I am trying to learn python but, for some reason, I have so much problems understanding the concept. 


Using pseudo code at first and then working into either python or JavaScript.
Use flow diagrams as a dungeon map. Show choices made along the way as decision trees that lead into the examples using monster encounters and quests. 
*If there's girls there I wanna dooo them*
But I have a +1 magic sword, awww shucks. üò£üò£
Maybe I'm just an elif away?

I love hearing stories that make programming relevant to learners on the fly.  Demonstrates quick thinking and attention to needs.  +1 to all of this.
You can when you're the sorcerer of light!
Maybe not in your crappy system. :P
I roll to give the darkness 1HP so I can attack it.

    import random
    
    def d(num):
      for x in range (1):
        print("d"+num+":",random.randint(1,num))

    d(20)

    > d20: 20

Can I attack the darkness now?
Well, not with that attitude
[here ya go](https://www.youtube.com/watch?v=O_aJgcVv62Y)
Lol 3rd day on Reddit.  Idk what that even means.  Thanks though buddy!

I like this one: 

https://youtu.be/-leYc4oC83E
I think some people, like me (graduated in law, never really used much logic or math in my life), really struggle in the beginning, but after they pass the "first wall", where everything looks so alien and complicated, things just click more easily. 

With discipline and determination anyone can do anything, each one at their own pace.
Fair enough!  I think it's certainly a worthwhile thing to have a basic understanding of, even if it never quite clicks for somebody
I can't speak to her preconceptions of Progamming because when I got to her she was already deep into "frustration fueled panic" stages. But I can say given her age (I would be shocked to learn that she was 20 and would more likely put her at 17) that I don't think she has developed the analytical skills to really bridge the conceptual gap between "Roll to see if you make the jump" and:

    if Dice_roll > test_value:
        pass

I will also say that the book they use in the class is shit when it comes to practical examples. it throws out a lot of jargon about how to do something, but rarely ever explains what you are doing or why you would do this.
That makes sense. Good for you for putting so much effort into improving their learning experience before anything. 
I'm pretty sure they all do. Including python. Like when you pop from a list to another list you might say 'while list:' then pop and append to an empty list. In this case, list is True until every item has been popped. Then the while loop stops. 
>I'VE GOT THE DOOR

I feel like there's a reference there that I'm too slow to get :(
I'm only in my third class, so, yes :) It's possible I may eventually see a female teacher!

http://online.rice.edu/courses/computer-fundamentals/
https://www.merriam-webster.com/words-at-play/senpai-is-real

Or they meant sensei, which is completely different.
[deleted]
You install Windows 95. Everything seems to run independently, but when one app hangs everything is doomed. There‚Äôs no hope. 
You need to bake 20 cakes. 

If you did it without async you would make the batter, put it in a pan then put it in a oven. Now wait 45 minutes for the cake to finish baking. Once it is done remove the cake and start making more batter. You would finish in 15 hours  

Now with async you would put the pan in the oven and start making the batter for the next cake. This could be done in 2 hour
You do different things with your arms so for example when looting one arm takes stuff out of one chest , the other from another chest while the others put the armour on.
Rock stars ruin everything.
Yes, that's basically accurate.
That's the gyst if the analogy I was going for, yeah.  Of course, there are a billion caveats, and this is just one of many possible architectures you could use.  But for an intro-level conceptualization, yeah, you got it.
My bad. I was just kidding.. And also, didn't notice that this post was on /r/python. I thought it was in /r/programming üòÅ
Hey, it's a surprisingly accurate description of how threading works.
Oh wow that‚Äôs actually a really dope way to put it 
Do you play League of Legends?

Yorick is a good example. He summons ghouls that attack enemies that they see.
If Yorick lands his AoE Slow, the minions read that external event and target the enemy champion that was hit.

Yorick's Ultimate is the Maiden. It follows Yorick around, and prefers to target towers and champions over minions. Yorick can also re-activate his Ultimate to send her down a lane to do her own thing while ignoring Yorick's position. 
Every language. 
Might just be a market for that sort of book. Just a basic introduction to the concepts and why the concepts work. Not a "Intro to Python" or "Intro to Java" but an "Intro to Programming". Using Roll Play game mechanics as the object examples. Have an online section maybe with downloads of code specific versions of the explanations.

Like in the book itself, the section that talks about Control statements would be something like:

"Dave is going to try and Bluff his way out of detention. So he takes his Charisma Stat, which is an 8, and adds the bonus from his 'Silver Tongue' skill which gives him a +2 to his Charisma stat when he's talking to someone else. In this case he's trying to bluff his way past Principle Jones. Since Jones is only concerned with whether or not Dave completed his assignment, he will use his Intelligence stat (Which is an 8) to determine if he can tell that Dave is lying.

There are 4 possible outcomes from this roll:

1- Dave rolls less then Jones' score, in which case Jones sends Dave to detention2- Dave and Jones get the same score, in which they must re-doll the rolls

3- Dave rolls better then Jones, but less then 5 points better meaning Dave will avoid Detention.

4- Dave's result is 10 points or more then Jones, in which case not only does Dave avoid Detention, but Jones gives him 5 bucks for his mistake.

So you would have a series of tests:

&#x200B;

if Dave.roll < Jones.roll:

"Dave goes to detention"

if Dave.roll == Jones.roll:"Re-do the roll"

if Dave.roll is more then jones.roll but less then jones.roll + 5:

"Dave avoids detention, today."

if Dave.roll is equal to or greater then jones.roll+10:"Dave avoids detention and Jones gives him $5 for the mistake."

&#x200B;

Have a brief explanation about that example is an if/else loop and what that may be called in different languages.

&#x200B;

and then:

For the Python Version, go to this URL

For the Java Version, go to this URL

for the C++ version, go to this URL

etc.
title?
Title please!
It's possible. Everyone learns different skills for different reasons in different ways. The Arcade Gaming Library you mentioned, got a link to it? Or is it a book?
The author of Automate the Boring Stuff wrote a book that teaches Python through game creation - https://inventwithpython.com/#invent
Searched for it real quick so people who are interested in it don't have to. [I think this is the website for the book\(s\).](https://www.helloruby.com/)  
[And here's the TED Talk.](https://www.ted.com/talks/linda_liukas_a_delightful_way_to_teach_kids_about_computers)

Sounds like a pretty neat idea.
I have grey eyes. It says I have blue, but I decided I want grey eyes.
But I have a +1 magic penises, yay!!!!üôèü§ì
I think if more universal examples were thought up it would be a lot more appealing to everyone to learn. 
> graduated in law, never really used much logic

Uh... are you sure?
Not really. If you watched Cartoon from the 80s it was a common trope that 'the brawny guy' would 'Get the door' by running through said door. Sometimes the act would involve a large unwieldy weapon such as a hammer or a rock. But in all cases the joke of the scene could be boiled down to something of: "Okay, that was impressive. Kind of stupid, but impressive."
Ah so you mean all the teachers you've had at Rice have been male. 
well yeah, a lack of personal involvement from the teacher will always be an issue.
You also need 20 ovens to do this though.  If you had one oven, it would still take you at least 20 * 45 minutes = 900 minutes = 15 hours, even if you had the batter instantly ready before the baking of the cake.
I would totally buy this!  
I've been looking for a way to get into coding, but find myself losing concentration. Stuff like this would probably help me go through it.
I think your best bet would be (another) free online web resource, where students would just select their preferred language before the game even starts. Not the profit margin of a book, but you could do get advertising revenue, maybe. Seems like a great idea, though. I'd enjoy it!
Once Upon an Algorithm. https://mitpress.mit.edu/books/once-upon-algorithm
Once Upon an Algorithm: How Stories Explain Computing
Once Upon an Algorithm: How Stories Explain Computing
Aye I guess so. Here is the ebook which goes through the tutorials and labs - [https://arcade-book.readthedocs.io/en/latest/](https://arcade-book.readthedocs.io/en/latest/) .

And here is the full docs and API reference - [http://arcade.academy](http://arcade.academy) 
Yes. this the one I was talking about
OP story is as a tutor and not primary educator.  I don't disagree with you, but I'm sure vanilla object lessons were drilled in class.

In r/learnpython I don't like to lead with RTFM!!!
What do you mean? 
I was thinking Jumanji, lol
All my teachers in programming have been male, yes, including one in college.
Hey he didn't say he was using async WELL
Maybe it's just a really big oven.
I know a couple of people that have published technical books...I don't believe there is much, if any, profit margin for the vast majority - at least not directly.
thanks a bunch!
thanks! I picked it up last night
Thank you :)
Thank you
I think he means that you know logic, but that you don't know that you know it because you use it in a different context with different jargon.
And didn't the cop 'get' the door when the flood came through?
No prob
No worries, I chose it over pygame and panda3d etc because it uses a more modern set of tools than pygame and wasn't too complex for the 2d playing I wanted to do.
Well, I think anyone knows logic at some degree, but not the "kind of logic" used in programming. 
In my case, I only had it in one semester in college and it was... underwhelming to say the least, it was ministered with philosophy and was really shallow and rushed.
If you really think about, logic is used everyday by everyone.
Do you know if the assignment grading is still available from the eBook link? I was reading through the git section and noticed that was mentioned 
> If you really think about, logic is used everyday by everyone.

Exactly... So for most people to "learn logic" it really just means assigning symbols to concepts they already know.  And in programming it is learning how to tell the computer in its own language how to perform the logical operations you wish.  

Compare this thing to that thing and if this is bigger that that do this other thing. Etc. 
>it really just means assigning symbols to concepts they already know.

And that's pretty much what OP did with the girl, she already knew the concepts, she just needed some way to apply it to programming.
Exactly. That basically what my comment to /u/youhaditcoming says.
OK since I can see that I would at least have a couple of people watching, I went ahead and scheduled a stream on Youtube.

Here's the link for it - [https://www.youtube.com/watch?v=gMNTaEcXP5U](https://www.youtube.com/watch?v=gMNTaEcXP5U&t=33s)

It's in about 14 hours from now. But yeah I can reschedule if you guys want. Youtube should record it anyways for later viewing

&#x200B;

EDIT - updated the link
Sure,  just dont get discouraged if no once tunes in
A suggestion for the future:

Take someone else's code and do a code review and show how it could be better. There are a million How To videos that show how to make a basic site. There are far fewer to show you how to improve your code or how to find and fix bugs. 

Thanks!
Thanks, everyone who joined the stream! you guys were really nice and encouraging, which is a rarity when it comes to people on the internet.

I hope to see you guys in future streams as well.

P.S. - here's the link to the video - [https://www.youtube.com/watch?v=gMNTaEcXP5U](https://www.youtube.com/watch?v=gMNTaEcXP5U&t=33s)  I think the stream starts at about the 5 min mark
Sure, sounds interesting.
I‚Äôd be very interested.
I would certainly be interested. Some real problems I face are:

- Creating custom user models
- Using an already existing database
- Optimising models for performance
- Handling user permissions
- Writing tests
- Using async queues like Redis and RabbitMQ
Where I live it's night when you'll be streaming but I'll definitely watch it later! Hope it'll clear up some things for me. Thank you for doing this!
I'm interested in peoples work flows, so yeah - for sure.

&#x200B;

Hopefully not offputting that I tend to watch these afterwards and forward skip forward in certain bits :)
Bhai,neeki aur puch puch.

To translate in English," you are doing something good,Keep it coming"
New link: https://youtu.be/yktzwJJ5TsE
sure.  when?
sure
Will probably check it out later, not live (timezones...). But great initiative !
Combine coding and cam girls...... Interesting idea....
I‚Äôm definitely interested just most likely will watch on my own time rather than on the live stream. I work and go to school so it‚Äôs hard to commit to a set time
Have you build web apps with flask? Or what are the benefits vs both in your opinion? Asking because I'm currently trying to build a flask web app that will act for handling project files/folders on a server and creating invoices etc.
As a front-end newbie who's learning python for backend work, I'd love to subscribe to your youtube channel! 

I don't think I will make the stream since I have a lot of work (9 to 5s amiright?) but if it's still available to view later that's cool, looking forward to it!
I'd be interested in the same thing for flask, particularly if you do it the "right way" as in their tutorials not as in the simplified examples that can be found all over the web. I understand in this case you're doing Django for your friend - but if you want to keep making vids, that's what I would watch.
What stack are you planning on using? Any front end at all or just straight up Django? Any database? I‚Äôm in the USA so the time works for me and I‚Äôll try to turn in as I also have work.
I just started learning Python a few weeks ago, this event will be very useful for me. I'm trying to figure out which path I want to go with python. 

Thank you in advance for your effort, I'm waiting for your stream
Yes! Very interested! I‚Äôll try to catch the stream, if not, I‚Äôll watch the recorded version later. Thanks for this!
I'm in, 

Anyone should watch.

And I've written in Django.

Watching a pro is invaluable
Sure! If you could implement an MPTT comment thread you‚Äôd make me very happy :p
Sure when are you doing it
Do it!!!
sure! I'll watch it after cos of time zone stuff
I‚Äôd be so down for that yes
It will be like 2 am for me so i can't watch it live but i will definitely check it out!
I would be interested. I would just watch after you stream though since time difference.
I'm interested sir.
Sounds interesting. What will you be making?
Would be great! Might not be able to watch it when live, but presume it will be available to view afterwards too?

Edit: Just read another comment that answered my question! Thanks
Sounds cool! What type of web app are you aiming to create?
!reminder 12 hours
Props for the idea, but if I may suggest you something I would split the video in chunks: 2 hours are long IMHO. If you still want to do it for 2 hours it‚Äôs great, but I would possibly separate the recorded video in 4 parts for those who will watch the replays (I will definitely be one of them whatever you decide to do)
Perfect timing!
lol people can make web apps in 2 hours meanwhile it took me months just to figure out how to install python. levels to everything. thank god for smart people like you spreading the knowledge for dumb people like me.
Please, record it :)
I cannot watch the stream due to time zone
Thanks!
trees cows aware cause foolish butter coherent cagey cable six

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*
Bonus points if it‚Äôs making wagtail and allauth play nice :)

And super extra bonus points if it‚Äôs canned and available by the time I need to start googling any error messages, when I start looking at that specific thing in my own project tomorrow evening!
I think that‚Äôd be a great idea :)
Sure
! remindme 11 hours
!remindme 10 hours
!remindme 2 days
In for 1
I'd love to see this!
Yes.
Yup,me
Yes
!remindMe 6hours
Yes why not
RemindMe! 14 hours
I‚Äôll be sure to check it out! Hope the stream goes well
He‚Äôll yeah. Don‚Äôt know what jango is but I would def watch
!remindme 4 hours
Pumped. I'll be there.
Yes, yes, yes!!!!
Coming from Flask and like to start learning Django would like to see how it works with SQL database and using Ajax with @app.route()
Yes, i would. Very much.
I'd watch
Yes Please, when are you gonna make the stream?
I have a hectic life (full time job and looking after my 2 year old) I most likely can't watch live but would love to watch it at a later date if it can be recorded?
Will it be hosted for production or be on localhost?
Hi! I'm interested. But what OS will you use to develop Django apps on? I hope it will be on Windows, but I guess Apple is fine too as long as Windows users are acknowledged.
How long do you think you will be streaming?  
I'll already be sleeping by the time the stream starts so I'd love to know whether i can wake up early to catch up to your stream.
Awww damn, I can‚Äôt watch live! It‚Äôs unfortunately half past midnight for me when it starts, might watch it on catchup tho
You are really awesome.  I will watch the recorded video later this day
Bauhat sahi Pranav, catch you in the stream later!
Man that's like 4:30 AM in india. I'm really interested but 4:30 AM.
Will there be a recording of the stream for later?
!remindme 12 hours
!remindme 12 hours
mhh thats cutting it close with the space-x launch today
Looking forward to it, thanks!
RemindMe! 7 hours
!remindme in 7 hours! Sounds great!
!remind me 7 hours
Oh shoot. I won‚Äôt be able to catch it as it‚Äôs in 2:30AM here. But good luck anyway!
Hey man thanks for doing this. Will YouTube record it automatically? If not can you possibly record it? THanks.
Thank you so much in advance OP.  Reminder set
!remindme 3 days
Very cool!  Looks like I found this post just in time, so I will definitely be tuning in.  Thanks for doing this!
[https://www.youtube.com/watch?v=yktzwJJ5TsE](https://www.youtube.com/watch?v=yktzwJJ5TsE) updated link.  he isn't using the original one posted.
Btw I watched a youtuber cover django web app in 1 hour and 25 minutes over 3 parts.  Heh it's literally the top result on youtube if you search "django python"

There's other parts that I'm not adding up, and I gotta say django takes a long time on its own, so a live stream without edits is probably going to take up way more time
This is a great suggestion! I'll see if I can do something like that.
Yes! This.
Great input.
Just finished watching the recording, great stuff. Looking forward to part two
Yes, I use flask whenever I need a lightweight app and there won't be any complicated DB operations involved. SQLAlchemy is great, but not as good as the Django ORM, and I have never been able to get migrations to work well in flask as compared to Django.
Just plain django, hopefully the admin panel should be enough for what I need. And sqlite for the database. Like i said, it would be a pretty basic app
Actually I already have an app that I had to make anyways for a project that I was working on. It's quite trivial, which is why I thought it would be a nice first video.  
But sure if things go well I would love to get into more complex things.
>https://www.youtube.com/watch?v=sFeqRlHTIus&feature=youtu.be

I scheduled a stream, it starts in about 14 hours
Thanks. I'll try to do another one during the weekend so that it could be at a more suitable time for everyone
It's actually a real application that I have to make for a friend. She's running a charity organization that is helping out people during the pandemic, and she needs an admin panel to manage some data. It would be a really trivial app, and I am hoping that I can get everything I need by just customizing the Django admin panel so that I don't have to spend time writing frontend.
The stream ended a few hours ago, but u can see the recording here - [https://www.youtube.com/watch?v=gMNTaEcXP5U](https://www.youtube.com/watch?v=gMNTaEcXP5U&t=33s)
Yes it would be on Youtube so I am guessing it will be recorded. If it turns out to be a disaster though then I might make it unlisted.
I think it wouldn't be more than 2 hours. It's my first attempt at it so I don't want to go on any longer.
If things go well though i'll take in ur suggestions and come up with a better timing for future streams.
he's doing it for free using his own time. C'mon dude. Watch the recorded session later.
Yes, unless it goes horribly wrong, in which case u can expect a cringe compilation :)
I will be messaging you in 1 hour on [**2020-05-27 21:30:43 UTC**](http://www.wolframalpha.com/input/?i=2020-05-27%2021:30:43%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/grfm5v/would_anyone_be_interested_in_watching_me_create/fryolgu/?context=3)

[**20 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fgrfm5v%2Fwould_anyone_be_interested_in_watching_me_create%2Ffryolgu%2F%5D%0A%0ARemindMe%21%202020-05-27%2021%3A30%3A43%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20grfm5v)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
FTFY. Will my save my good weather for Saturday. ;)
There is a 2 hour delay fetching comments.

I will be messaging you in 2 days on [**2020-05-30 22:11:14 UTC**](http://www.wolframalpha.com/input/?i=2020-05-30%2022:11:14%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/grfm5v/would_anyone_be_interested_in_watching_me_create/fs0xg7m/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fgrfm5v%2Fwould_anyone_be_interested_in_watching_me_create%2Ffs0xg7m%2F%5D%0A%0ARemindMe%21%202020-05-30%2022%3A11%3A14%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20grfm5v)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Thank you. I find code reviews extremely informative. Beginners look at the code and think, "Yeah, I would totally do it that way," but then we listen to someone explain how it can be done more efficiently and it really helps to take our code to the next level. 

Example: https://youtu.be/Tf70szZwWgA
I will totally watch. I want to see other methods and compare. 

Ty for doing this!
Awesome :) keep us updated on when you‚Äôre planning to stream!
!RemindMe 12 hours
That is great. Writing front end is boring.
Thanks so much
I can't imagine it being a disaster. Speaking as a learner I would suggest including closed captioning with your tutorials. And if you're not confident in your teaching ability take on board the questions of students and slowly refine your teaching skill/video. 

I'm looking forward to seeing your videos.
Super interested!
Can you upload the recordings so I can catch up?
It will be the middle of the night for me.
Totally agree.
!remindme 12 hours
Thank you. I'm sure it will go fine :)
Yes pls :)
That's a win win
!remindme 12 hours
Lol, figures, I just bought the udemy course yesterday. Although, given everything that you give to the community, I am happy to pay for the course. Keep up the great work!
OP, I actually owe you a beer for the Udemy course that got me a job and took me out of depression.

I have seen you post the code for free course multiple time. Is it possible to learn this level of kindness from you?
Hi Al, thanks again for all you've done for making Python accessible to everyone. 

It seems that when you click either of the first two links, Udemy is adding the CYBERWEEK discount code and forcing it to show 9.99, once I entered DEC2020FREE it switched to free. Just trying to update yourself and others in this thread. 

Also just put your Cracking Codes with Python on order saw it was in the humblebundle but I'll pick it up full freight. 

Thanks again.
Awesome. Just signed up. Thank you much! 
For the people who‚Äôve used this resource, what sort of work have you used these tools/lessons on?
Awesome thank you so much!! 

Am looking to learn python and this is a great first step.
Thank you so much. I was using the book and got stuck maybe watching the explanation can get the knowledge trough my skull.
Seriously, Al-
I've been working through your Udemy course piece by piece over the past few nights and I just wanted to really say:
Thank you.

Your humor and wit mixed in with the lessons keep things easy and engaging. I can't wait to get further on and see what else I can do with your help.
Thnx great for the holiday üëçüèª.
What a perfect time for the course! Coding buddies are definitely a good idea to keep you focused and help each other understand things. I'm generally bad with terminology and better with figuring out how things work for example. Many thanks!
Thank you so much! I recently finished Codeacademy's Python 3 course, and even though I "get" a lot of it, i've found it really hard to do practically. I also realized how much I missed having a teacher to learn it from - can't wait to dive in!. You're amazing!
Broooo poggers.
Al I've become disenfranchised with your weekly spam.

You lost a fan.
Thank you!!
Thanks Al!
just got the book today, thanks a lot
Thank you so much!!
Thanks!
I was just reading your book last night. Great timing, thanks!
Thank you
I love your work and appreciate your input to the community! Thank you Al!
Awesome, thank you :D
Thank you Al. I‚Äôm going through the course right now and I love it!
Thank you!
Thank you Sir.
Thank you so much !!
Thank you so much, I got an early Christmas present!
Who wants to be my gym buddy?
You're an amazing soul. Thank you!!!
Hats off ‚ù§Ô∏èü§òüëç
Thank you so much! I‚Äôm halfway through Learn Python the Hard Way and am looking forward to this next!
Thank you so much! This is awesome!
If you are seeing this after the sale is over, don't fret. It shows up for free all the time!
Thanks so much!
thanks so much for this!
Fantastic,  thank you so much.  This is amazing,  literally just started the book yesterday.
Thanks so much! I was just looking for some new PD and you came through!
Is this the same thing on whats on youtube or different?
Just started my python journey. Thanks so much for this, kind random stranger!!
Thank you so much! Can't wait to start!  
I just started to learn python with Eric Matthes crash course book. Love it so far.   
I suprised myself going to bed at 1 AM the other night learning Python!
About how much time should I expect to devote each day to get the most out of this course?
I got a question. Is this course better to learn on with Win or Mac. Like will I need to install python etc?
Thank you for this awesome course.Just signed up..wanted this for a long time..___
I just bought the book! So glad I did because I‚Äôve learned so much in the last couple of days from that book.
Thank you, I‚Äôve just signed up having already purchased the book too
Al, you‚Äôve given so much to the community and those looking to learn programming. Thank you.
You, sir, are a steely-eyed mission man. Thank you!
Thank you so much!
Thanks a lot ! 
Yesterday I was finding resources for automating stuffs using python and today I got this .I feel lucky now ‚úåÔ∏è.
I signed up... Thanks!
thanks you :3
This is a great course! I took it earlier this year and just did my first real project with a library system.  I had never even seen Python before your course and would have failed miserably without it! Wish you had a part 2 course.. Thanks again!
Wow, thanks! I just started working with Python again after a long hiatus so this will be very helpful to get back up to speed!
Thank you so much! Heard so much about your book, can't wait to get started!
For anyone wondering if they should get this or not. Don't worry, you have 30 days to return it!
This content couldn't be made available to me at a better time, thank you so much!
I wandered over to Reddit today to see if anyone had a recommendation for an online Python course for someone like me and found my way here. And I am amazed to see that Al Sweigart posts in this subreddit and provides courses and encouragement to us internet strangers! This is my lucky day!

I know OP's name because my sister bought a copy of Automate the Boring Stuff to learn Python and found it engaging and useful. And then she went on learning more and more Python and data analysis/wrangling skills. And now she runs the data analytics department of her company and makes several times my lowly public university faculty salary doing so. She keeps saying she'll loan me the book, but I guess I don't even need to borrow it given the wealth of info posted here. 

Thanks, Al Sweigart. This is incredibly helpful and kind.
Did the course last year and just wanted to say:

* really great course for starting with Py
* thanks Al for doing this. Highly appreciated
THANK YOU!

THANK YOU!!

THANK YOU!!!

So much! You are an angel!!
Thank you!  I bought the book too, and also preordered (25% discount) from No Starch Press the new one, and can't wait to get it in my hands!    I'm not a beginner, I am not a pro, but it's tough to find books that go beyond the basics.
Thank you!
>https://inventwithpython.com/automateudemy

You can ask for money back and then buy for free
At the same time though, if you paid money for it, you're more likely to actually complete the course. :)
Same.
Good to see this course at least puts you on the right path to a career. I‚Äôm going to start this course soon.
You got a job, just from this course?
[deleted]
Web-scrapping and excel integration is incredibly useful for research
What did you get stuck on?
[deleted]
It doesn't matter. And yes you need to install python.
Thanks, but, nah, I'm good with the money going to Al.
r/internalcrisis
Best of luck bro!
Yes, this course helped me to think like a programmer and gave me the confidence to make use of internet. For an electrical engineer looking to automate report generation, analyze data and get used to programming scripts, this course is **more than enough** to get started. Later on, one can use SO to become whatever they want to!
Definitely this wasn't enough, but this course **was more than enough** for a manufacturing engineer like me. If you want to become a full stack python developer, of course this will not be the "only" course that can get you the job!

Coming out of school, I had the ability to create and maintain documents specific to electronics manufacturing/lean six sigma, I sold myself in the interview by letting them know that I can automate report generation. They bought it; hope you got the point. 

  
DM me if you have any questions.
Sololearn has been a great tool for me. I wouldn't day its made me job ready but great nonetheless
[deleted]
Well. I'll try to explain it the best I can. I do understand the basics, like variables, for loops, while loops the basics, strings, strong slicing and so on. When Im trying to do some problems I understand what is the answer is something like, use this as input and th result must be this.

I can't manage to put it together in the code. Like I lack creativity to use the basics.

Im trying to learn to code and python seems the best for a zero coding background like myself.

I dont know if I explained myself. Paralisys by overanalisys?

I think that my l√≥gica thinking is not Good.
That's hilarious, made my day.
Thanks!
Can you explain the basic steps to achieve this in python? Install library? Code price limit or stock level? Then buy using an Amazon API?
Start practising beginner level programs.
Codingbat, Hackerrank are great for starters.
This will help you get a grip on the concepts you already know. Then, slowly advance to higher level programs.

It's not uncommon for taking some time to solve a problem. The key is to be consistent. Plus there are always succinct explanations on the internet even for the silliest of questions. 

You just have to keep practising. Good luck! :)
This is a really common place to get stuck: you know all the syntax (loops, variables, functions, etc) but when you sit down in front of a blank code editor, you don't know where to begin.

I've create several dozen **small** projects in Python in this git repo: https://github.com/asweigart/pythonstdiogames They're all under 300 lines of code, many under 100 lines of code.

My advice is to find one that looks interesting, and copy the code for it by hand: type it in yourself instead of copy/pasting it. This slows you down so you can get an idea of how programming concepts come together to make a simple game or art program.

Then, move on to another, and another, etc. When I first started programming, I mainly just copied existing programs, and made tiny changes to them to play around with how they work. It helped me go from just syntax to actually creating things.

A lot of people say, "Look at the code for open source projects" but these are often poorly documented and huge. These programs have been designed to be short and simple (they only use text with print() and input()) so that you can actually understand them in a single sitting.
[deleted]
Thanks. I started using anaconda should I keep using it or move to pure python?
>This is a really common place to get stuck: you know all the syntax (loops, variables, functions, etc) but when you sit down in front of a blank code editor, you don't know where to begin.

Couldn't describe it better.

I will check for sure.
Thank you so much.
Nice, cheers for explaining
Anaconda is actually pretty cool. You can see how each line executes which will be really helpful for you to understand logic building.
Stick to it until you gain a proper command on the language.
Warning: The book is dangerous. I assume the course is the same. I'm in a career completely unrelated to programming, and I read like half the book before I was addicted to Python. To the point that I couldn't even finish it before I started having crazy ideas and now I spend 10 hours a day on stackoverflow.
"Oh sweet, I've been meaning to do that for months, gotta go log in anf get it"


> You purchased this course on Sep. 02, 2020

"oh. Ok, I'll start that.... later"
Thank you! If anyone is reading this and unsure - I can confirm it works. I watched Automate the Boring stuff go from $49.99 to free with the discount code. It's now in my library with an endless amount of other topics I still need to make time for.
Al you are a great man... I have your book and tried it six months ago but I am not a good learner from book and failed to learn.. I am broke as fuck to buy the course rn and here you are giving free course... God bless you man...I hope some day I can also help someone..
Amazing! I used one of your codes to get lifetime access last year and loving your course. But where do I get practice Material from? I've tried coding bat etc but I was thinking on the lines of assignment or something similar post completion of every topic. 

Also, once I complete the course, what do I do next? I'd love to do a mini project and googling it I find very basic ones which can be done with few loops and functions but they aren't challenging enough. They don't increase my learning either. What do I do?
Haven‚Äôt done the course but just wanted to say this book was what got me into programming. I‚Äôm not a programmer by profession and this has allowed me to, as the title indicates, automate some of the boring parts of my job. It‚Äôs been game changing thank you.
thank you
Hey Al! I love this course and I got it already! I just saw that you have a sequel out for Automate the boring stuff! Will you be making a course based on that book as well?
I tried to open it in my App but it ain‚Äôt free ‚Ä¶
Thank you so much!!!   


I just started learning python maybe a few weeks ago and was looking for a second course/guidelines. Thank you!!
lets goooo
Thank you so much for this! Have been wanting to take this for years, now I no longer have the money excuse, haha. Cheers! :)
Thank you so much! I shared this with my network.
Great gesture, thank you! :)
Ohh My!!! I want to tell you AI that I kove your course. I'm currently doing those 15 YouTube videos. I Missed the last discount offer by a night!! I was thinking of first completing those free one then will go for udemy but now I can do it again. 


I love the flow of contents and your voice. Thank you for creating the course. Also, I'm daily reading the book.
Thank you!

When you click the link it has code may2021code already entered. Just use may2021free and the price will change to free.
> Posts must be related to you learning python, no links promoting blogs, videos, tutorials, or requests to hire someone.

Mods, why does /u/AlSweigart get to promote his stuff but no one else does?
marvelous spoon weary faulty frighten history different domineering sharp strong

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*
Thank you!!
Awesome. I just purchased the 2nd edition of the book.
thanks so much, i‚Äôve been waiting for this~~!
Thank you i am learning python & this will help me ao much!
Just bought your book the other day, and having this interactive guide will really help. Thank you very much for your work!
Thank you for this. You are the real MVP.
thank youu !
Amazing, thank you! I just started your book a few days ago (first time learning python). Hope it'll help my marketing career.
Thank you!
Just enrolled. Thanks for sharing this with the community!
Thank you!
I love you man, thank you for uploading this. I‚Äôm currently trying to learn code to apply for an internship in my city and this will do more than well to prepare me. You‚Äôre amazing
Thank you kindly, as he mentions in the intro video (for anyone who misses this deal), you can get access to the Book for Free legally here:  [http://automatetheboringstuff.com/](http://automatetheboringstuff.com/)

Its release under creative commons license.
Thank you very much.
You're a legend!
Hey, you‚Äôre the guy who wrote the book!!!!!!! What the heck!!! It‚Äôs an honor to know it‚Äôs you making a post!!! You are the best master of Python and I wish to be able to learn to do a 3D graph one day by the help of your book!
Wow thanks for this amazing post. And yeah it did work ‚ù§Ô∏è
I just bought your book! Thank you for this!!!
Dammit, I really want to learn python but having window 7 laptop with 2gb ram is pure agony.Even python 3.9 does not support window 7 while pycharm minimum requirement is 4gb.
Swear this book is free every monthüòÇüòÇ
I wanna just let all the people who are picking this book up as a first step to learning to program that this book is amazing and it really helped me get alot of basic concepts into my head. Also it really helped to actively be writing code while he showed how, and alot of breaks when I felt confused
Question - You mention youtube is built on Python. Is that for the entire site, or just backend? (I'm debating learning JS first for frontend stuff)
You're incredible. Thank you!
To clarify, is this course just videos? So no shipping required?
Why am I not permitted to ask help on python discord server?
Thank you!
OMG Thank you so much! I signed up for the course and it was absolutely free; the code works.

Seriously, this was legtiness - thanks again <3
What do I press in the website, Add to cart or Enroll now?
I love Al swegart, his course goes on sale like every month or two, I used it when starting and I love coding now.
Al is a legend. As usual, his content over delivers. I can't wait to see what next you have in store.
Thank you so much! I've been wanting to get into it for a while, and your post showed up at an oppurtune time! :)
Thank you so much! I have the book and have been hoping to do this too!
I will automate the searching process for the best doujin on nhentai with this crap. See you in 3 years when i became a millionare and everyone uses the searching tool for porn that i created.
Awesome! Thanks!
Amazing!  Thank you sir!
Just bought this book and now I'm extra excited to have this to go along with it!
I'm an absolute beginner when it comes to python, is this course beginner-friendly and should I start with this course? Any advice. Thank you in advance
I am interested in python for a while now, but because of covid I am feeling a bit 'meh'. I was just looking for a while to get started for python and this seems like a great way. Thank you so much!
Awesome! Thanks so much. I bought your book a couple of years ago. This will make a nice supplement.
I just bought this book over the weekend. Wish I'd known about the course online. Anyway, looking forward to diving into it.
You are amazing! I don't even care if it's free online, I might buy your book just because you're awesome.
Any chance you have another coupon code? I just missed out on using the latest code :(
You don‚Äôt have a code for june, only saw this now!
Right? If this is Automate the Boring Stuff, I REALLY want to see what Automate the Interesting Stuff would be like...
Top 10 most dangerous objects in the world
By "Warning: The book is dangerous", I think you meant:

"WARNING: This book contains secret, forbidden, addicting lore. Do not open or your remaining time on earth will be devoted to worshipping the Internet programming forum gods."

&#x200B;

I feel that pain constantly.
December 2015 for me :D ooops
I wish I could have a [28-hour day](https://xkcd.com/320/) just so that way I could have a few extra hours to do everything I need to make time for.
Come to [discord.gg/python](https://discord.gg/python) there's a whole community dedicated to learning more.

Alternatively look up 'competitive programming' on your favorite search index, you'll find results like hackerrank and codewars which will offer problems from trivial to impossible (not really, but out of reach for me (for now))

Lastly, another book, [https://inventwithpython.com/beyond/](https://inventwithpython.com/beyond/)
I also had these questions, and didn't realise Al had already prepared. The last lesson in the udemy course he talks about the steps you can take after the course. 

Also if you want to do a small project, or answer questions regarding this topic, go to automatetheboringstuff.com "automate the boring stuff with python" textbook for the topic. He has what you looking for at the end of each page.
Yes! In fact, I have the first few videos of it done on and on YouTube right now. I'm hoping to have the rest finished in few months.

https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow
The first link redirects to "MAY2021CODE", not "MAY2021FREE" - you either have to change it in the url or enter the correct code on the page itself and apply it
In short because the vast majority of promotional posts are crap quality clickbait for ad-ridden sites or affiliate links. As we don't have the time or willpower to vet every random post they are summarily removed. However we maintain a short list of redditors with a history of high quality content that we allow.

If you want to be added to that list, start by creating a history of helping in this sub.
Because mods make exceptions for posts that become so popular it raises the standard of their otherwise dead and lame sub. If you made a post on any sub about a dog licking it‚Äôs butt and it got a millions views and comment and upvotes they would leave it because it draws attention to their sub which no one was paying attention to any ways. I‚Äôve seen this in one of those visual illusion subs where people might just post a pretty picture- nothing to do with illusions and the mods leave it only if it becomes popular. In short, they apply a double standard when posts are more popular than the sub. Mr. Al is great btw so in this case his work and stature raises the caliber of this sub. He should even make the the mods pay a fee for associating with him honestly since the sub is a barren wasteland without people like him.
RIP my respect for him. I used to organically recommend ATBS. Now its just desperate.
Scroll down to get to the contents links ;-)
This course is good for people with no coding experience. And it also offers things for more advanced users.
        ‚ï§     Thank you for being kind
       ["]üç™  and spreading positivity!
      /[_]‚îò   Please take this cookie
       ] [    as a token of appreciation.
***
^(I'm a bot that tries to detect helpful, supportive and kind comments.
There might occasionally be false positives, sorry about that!)
Same üò¨ though I have made it more than halfway through.
I honestly can not tell you how much that made me laugh
What do they mean when they say that the discord server is raided?
thanks! i didnt know this
Doesn't seem like a community I want to be a part of, good luck.

Edit: Heh, looks like what everyone says about this place on the Discords are true.
He's a best selling programming author who probably makes bank and giving his stuff away for free. Very much doubt he's desperate lmao
lol.  A bunch of trolls showed up and spammed links last night.  


it happens to large public servers sometimes.  Side effect of being on the internet.

&#x200B;

No worries.
lol you just stopped in to say you don't like us? Ok :) Don't let the door hit ya.
Your contribution to the Python community is invaluable. Much appreciated!
Awesome! Can't wait to try it
"You purchased this course in July 2019".
Thank you so much!
That‚Äôs so amazing and generous, thank you so much! Signed up and will definitely enjoy this course. Was about to buy the book after I‚Äôm done with Crash Course. Thank you!
Oh my, this is a godsend. I recently started to learn python with  [https://inventwithpython.com/invent4thed/](https://inventwithpython.com/invent4thed/) by the same author.

Really, super excited to give this course a go once I'm through that! Thank you so much.

E: Oh wow. Only just now realized OP is said author, haha.  
Thank you so much for all the free, high quality content you put out. 

Do you have a PayPal or something, so I can at least send you some cash I can spare?
Thanks Al!  Looking forward to part 2.
Thanks for all that you do u/alsweigart
Tysm for this
Legend.
I got a question.

I want to start learning python but theres so much material online and offline i dont know where to even begin.

Would you say this course is a good place to start or is there a better one?

Edit: spelling
With all this free amazing content, is there a way to support you directly?
Thanks Al! I appreciate you doing this!
Bossssss:]
Thanks so much for this! I've been working through your course and have found the udemy version a wonderful complement to the book. 

Appreciate your sharing this information with us!
Really appreciate it.
Hey /u/AlSweigart , do you have any recommendations on what to follow up your course/book with?
Thank you Al for all your contributions to the open source community!
Enrolled!
For those who like to support Al,

You can donate him from there [https://inventwithpython.com/#donate](https://inventwithpython.com/#donate) 

There are his PayPal and Patreon links.
Thank you very much for doing so.
Is this better than "Python for everybody" on freecodecamp? Because that's always free.
Just to check, now I've enrolled and signed up using the free code, do I have access forever or is it limited somehow?
Thanks!
Thank you! trying it out now!
Thanks a lot, you're a great person!
Thanks a lot! I was just about to start your "Making games with Python and Pygame" book, too.
Thank you Al for providing this course, I can‚Äôt thank you enough
Already have this but thanks! Also thanks for being a voice against hate on Twitter. I think it's easy for tech folks to fade in and be sort of untouched by politics, but you're out there spouting some truths and it's appreciated!
Thank you
Thank you so much!
Thanks for being awesome Al, the course is fantastic.
Thanks! Definitely took a look at the course a couple weeks ago and now I can actually get it done
Couldn't have timed it better! Thank you üêù
im so thankful I don't even know how to properly thank. thank you. thank you very much.
Thank you!!
Thank you so much
Thank you so much! I've just bought your book yesterday too!
Thank you very much.
Thank you so much. This is very very very appreciated
Thank you!!
Thank you, I just signed up and I am going to work on it when I have free time this semester. It'll probably only be a few hours a week, but that's better than doing nothing with that time. :)
I'm restarting school tomorow, i should be sleepingfor at least 3 hours, I go to reddit because why not. Then I find this :) Thanks a lot, it really helps me :)
[deleted]
Thank you!
Thank you very much OP!
This is so great - thank you for making this happen!
Thank you so much!! This is very generous of you,  I have the book already so I will share this with my friends!!
Thankyou very much!
Thank you for making this course, and letting us use it for free!
Thank you again, this is great!
Going to give this a try instead of Google's course on Coursera. Soooo heavily math-based that I'm really struggling with getting past week 3 of it. I want to learn how to develop with Python, not how to solve complex mathematical issues .
Wow!  Nice.  Thank you.  Love the book.  Going to sign my 11 year old up for this.  Thanks very much.
Thank you for your work!
Thank you..My 70 year dad just register for this course ...Thank you again...He thinks programming is one of the ways to keep his mind active
Thank you very much. Just purchased your book last week.
Hi! Thank you for this. Honestly gonna be my saving grace for uni since we're learning Python for the first semester and I have 0 background knowledge in this lol
This is great thanks!
Thank you very much!
Dude, thank you so much!
I'm almost done with How to Think Like a Computer Scientist: Interactive Edition https://runestone.academy/runestone/books/published/thinkcspy/index.html

I'm thinking about taking this as well.  Is there a lot of overlap?
Woah, this is seriously awesome! Thanks so much for this!
Thank you so much!!!
Thank you. I have enjoyed your books and videos in the past and I'm sure I will enjoy and learn much from this class. You've really done a lot of great service for the Python leaarning community. Bless you.
Omg thanks so muchhh ‚ù§Ô∏è
Thank you so much. You are amazing.
Thank you! I‚Äôm excited to start learning a new skill - I haven‚Äôt so much as thought about code since doing it in my senior year waaaay back in 2009
Missed it :/
You are awesome! Tysm for the resource. Can't wait to start the course.
I thought ATBS was always available online for free?
Thank you, Al! Was just looking to get back into your book after putting it down a few months ago. Having the course to use as well is a huge bonus!
We love you Al ‚ô•Ô∏è
\*yoink\*
Happy cake day!
Where's your cake day meme?
November 2017 here ü§¶üèæ‚Äç‚ôÇÔ∏è
You can donate him from there [https://inventwithpython.com/#donate](https://inventwithpython.com/#donate) 

There is his PayPal and Patreon link.
Maybe, there [https://inventwithpython.com/#donate](https://inventwithpython.com/#donate) :)
My next book, Beyond the Basics with Python, which is coming out in October. :)

But until then, I think Serious Python, Fluent Python, Effective Python, and Python Cookbook are great books.
Both equally good. Al gets right to practical coding in ATBS. Professor Severance in py4e literally covers almost every single thing like you would expect a professor to do. FYI, you can read the Automate the Boring Stuff for free forever on the website.
You have acess forever!
The contents of the book are available online at the website, I'm not sure if any more of the content is available at no charge.
The book is.
I usually don't keep an account around long enough to have one.

Its time for fish fingers and custard.
Awesome, thank you :)
Is the table of contents available yet?
I saw October and thought man we have to wait a while, since in my head october is another 6 months. October is next month :)))


Looking forward to purchasing it!
You're goddamn right
No, but I can copy paste it real quick:

Part 1: Getting Started

* Introduction
* 1 Dealing with Errors and Asking for Help
* 2 Environment Setup and the Command Line

Part 2: Best Practices, Tools, and Techniques

* 3 Code Formatting with Black
* 4 Choosing Understandable Names
* 5 Finding Code Smells
* 6 Writing Pythonic Code
* 7 Programming Jargon
* 8 Common Python Gotchas
* 9 Esoteric Python Oddities
* 10 Writing Effective Functions
* 11 Comments, Docstrings, and Type Hints
* 12 Organizing Your Code Projects with Git
* 13 Measuring Performance and Big O Algorithm Analysis
* 14 Practice Projects

Part 3: Readable Object-Oriented Programming

* 15 Object-Oriented Programming and Classes
* 16 Object-Oriented Programming and Inheritance
* 17 Pythonic OOP: Properties and Dunder Methods
Finally OOP, classes and Algorithms by my favourite  author,,, thank you so much u/AlSweigart ü§ùü§ù
This sounds amazing, halfway through automate the boring stuff book. Is there a way I can be notified when it is out?
I'd caution that people not fall into the trap of undervaluing statistics, even though it's a scary word.

Too many data scientists I know have many disconnected islands of knowledge. "Anomaly detection methods" here, "survival analysis" there, "clustering" somewhere over there, etc. with no mental framework to embed them in. This severely limits their flexibility in tackling new data analysis problems. A good understanding of statistics is the cure for that.
This is amazing. Thanks a lot. I'm a physician and a global health specialist currently moving into python for data analysis. This is a very useful post.
[deleted]
Can I start doing this from 10th grade?
Great post, but I'd suggest newcomers to the data science field use plotly instead of matplotlib. Plotly does lack some features in terms of animation, but overall it's a much more pythonic library that's easier to work with and generates much more clean graphs.
This is so amazing, will save the post for future reference :). Thank you OP!
[Everyone Liked That]
This is such a great post, I'm going to save it and inevitably forget to ever come back to it!
Last time this post got deleted I thought I was going crazy. Saved post, wanted to go into details few hours later - and it's gone. Searched everywhere, found nothing and started to wonder if it was a hallucination.
As someone just starting their Python journey with a specific goal of focusing on data science, THANK YOU! This is incredibly valuable.

One question for you - my employer is willing to subsidize a part-time evening / self learning program from a university or other source. Any certification or formal coursework you have found valuable or heard good things about, and one you would pick in my situation? I am certainly digging into these resources listed, and realize that a certification or degree is only as valuable as the projects you can execute on, but figure it can't hurt to supplement with a "formal" curriculum to further boost the resume.
Your PHD is showing. Such a well written, articulate post with an intro that saved everyone a ton of time. Thank you very much for taking the time to do this for the betterment of the community.
Thanks for your analysis on data science
You're a beaut of a beaut, thanks!
I've run into Think Stats by Allen B. Downey as an introductory statistics book which is Python focused.

Have you heard about it? I am mentioning it as you said you couldn't find material for statistics introduction in Python - maybe this could be of help to you as you curate your list or someone else finds it useful? :/

I haven't read it yet, but I liked his Think Python book which helped me while I was starting out with programming - it was a really smooth experience. 

P.S. he has Think Bayes book too, and if I am not wrong, it's Python based as well.
How do we get mods to sticky a post, and then link it into the about?

Awesome post.
I am currently pursuing a Bachelor's Business Administration. I am doing python and my own and my course does contain some basic statistics. What according to you is one think that actually makes a person a data scientist.
Current data scientist at FAANG here

Love the list and esp Elements of Statistical Learning and some of the ML references

For specific interview prep, I'd also add this: [https://datascienceprep.com/](https://datascienceprep.com/)
Great resources
amazing, thanks!
This is great thanks a lot. A quick question about Andrew Ng's Machine Learning course, does it give you a good foundation to learn data science and machine learning?  I know it's got very positive reviews but I've heard that it can be quite basic and surface level. Do you know of any other good video courses or lectures?
Great thanks.
This is great stuff, thank you!
Thanks a lot for this list!
CRISP DM
Thank you üí™
All the data folks seem to prefer Matplotlab, but I'm in the business of publishing data (journalism) and the charting is just hideous compared to Plotly. 

Can anyone with experience in both differentiate those two?
I have just gotten to data analysis and this is perfect for me! Thanks!
What's your thoughts on being self taught, no phD, or masters?

Also, is Matplotlib still relevant, or is it better to use Seaborn?
Not really expecting an answer but I'll put it out there. What do you think of data analysis as a post-military retirement career? I'll be 37 in 4 years with a BS in Accounting, currently looking at DA as a Master's. I've been self-studying Stats and Python slowly. For some reason I've found it interesting so far, never been much of a math guy (passed trig but stuggling with pre-calc because of all the material involved) but I eventually figure it out.
Thank you for taking the time to write this, it‚Äôs deeply appreciated.
This is great! Thanks for sharing!
You‚Äôre a God, great resources here.
Love this!!!!!
What visualization library do you use instead of matplotlib?
Thank you! This is beyond helpful!
Hey anyone and everyone üëãüèΩ. I am currently studying LinearAlgebra for ML right now. Previously, I did the statistics course from Khan Academy. I want to be a ML engineer, but I am stuck. Courses after courses, I find out that I don‚Äôt understand the code. Even though the courses say ‚Äúintroduction‚Äù, the course don‚Äôt go through the introductory code. I am tired doing all of this and on the verge of giving up.

Any thoughts? Also, is it true that for ML you need to know Data Science??
RemindMe! 14 days
Thank you so very much. It's extremely helpful.
I am having a problem,help me if you can.
I am doing data science path on codeacademy. Currently learning matplotlib and seaborn. I can plot different types of plots like box plot, violin plot etc.
But I am having trouble understanding the depth of these plots. Specially with violin plot. I googled them and search on YouTube but can't understand fully. Just to be clear , I am a CSE student , and never learnt any statistics in my life. 
Do you think the resources you provided for statistics will help me(who have basically zero knowledge in statistics) fully understand them?
Do you have any additional suggestions for me?
Thank you so much üôèüôèüôè
Great resource, thanks!
This is amazing. Thank you.
Thanks for this!!
bookmarked! thank you for this.
RemindMe 3 days
archive this post
Whats your opinion on the edx course from IBM?
Thank you!
Getting curated resources is soo hard. Thanks a lot for this!
Isn't linear algebra done right a more theoretical book for pure math majors? Seems like a strange way for people trying to do data analysis to learn linear algebra.
Awesome!
I'm debating between 2 books: Python for Data Analysis by Wes Mckinney an Pandas 1.x Cookbook by Matt Harrison.

The 2nd book just came out this year in February so might be a bit more up to date.  Wondering if you've taken a look at it yet?

The reviews point to both being 'cookbook' like.
Awesome
RemindMe! 1 day
Absolutely, data science is applied statistics not just cut and paste linear models. I highly recommend focusing on the statistics before the programming. I recommend [practical statistics for data scientists](https://www.amazon.co.uk/Practical-Statistics-Scientists-Peter-Bruce/dp/1491952962); the current edition has a bit of R in, but the stats foundations are good
Would it be best to focus on Bayesian statistics or more general statistics?
So... you're not bored right now. :)
I am a pharmacist learning python for data analysis as well! It is fun, but totally feel like a completely different animal than any doctoral program. Kinda funny considering how strong we emphasize clinical trials and statistics.
Most of my work is predictive, but that often involves a lot of inferential stats, so I wouldn‚Äôt separate the two.

I started learning Python about six years ago because I wanted a simple language to test myself while learning Latin. At the time I was writing lots of C# and using Microsoft Solver Foundation for linearly constrained problems, but the sole developer had left MS and it wasn‚Äôt being supported. This was what tipped me off to NumPy/SciPy and pandas and I‚Äôve been using it ever since.

I avoid Excel as much as possible except in cases where it‚Äôs actually useful. I spent quite a lot of time working with SQL, and a little in R, but outside of meetings I‚Äôm probably writing Python 75% of the time.
It is never too early to start anything. I'd advise you to start immediately :)
man i wish i started in 10th grade haha go for it dude!
I wish I'd spent my downtime in 10th grade learning anything useful like this. My advice would be learn absolutely any skills you can, whenever you have the chance. Go get 'em.
IMO if there's one post you should force yourself to come back to, its this one.
I agree‚ÄîI‚Äôd definitely go for a taught stats MS if that‚Äôs not your area already.

I would always rather teach a mathematician or engineer how to program than teach a programmer  statistics!
I personally feel it is a good theoretical foundation for machine learning but I tend to agree with OP that there are many problems in data science that don't need ML to solve them. 

There are past threads on ML that link out to probably a dozen resources beyond the Andrew Ng course. If you decide to take the Andrew Ng course all the exercises are in Octave but there are a few GitHub pages with pythonized exercises that I found helpful.
The course takes approximately 54 hours to complete which is super short‚Äîit‚Äôs necessarily going to be pretty basic and surface level. By comparison, a STEM undergraduate degree in the U.K. involves about 1,500 hours of contact teaching time plus 50‚Äì100% self study on top of that; so this course is approximately equal to two weeks of a 90 week undergraduate degree.

I‚Äôm afraid I‚Äôm not really a videos person so I couldn‚Äôt recommend anything else!
I‚Äôve been using MPL for 6 years, so if I can conceive of a chart I know I can create it in MPL; to that end I disagree that its charting is hideous (even if the defaults aren‚Äôt attractive). Meanwhile, Plotly < v3 (I think) really pushed the online/logged-in model that put a lot of people off. That changed only relatively recently, and the library has improved a lot since then. I‚Äôve used it subsequently, but ran into problems with custom colour palettes that are a non-issue in MPL (it was possible but fiddly). [Edit‚Äîthis was in Bokeh, not Plotly!]

Charting in Python is very much not a solved problem in the same way that ggplot is for R. My favourite interface is Altair‚Äôs, and being JS-based it works very well online. It‚Äôs still in relative infancy and tied to Vega Lite, so the possibilities are not endless, but what it can do it does very well.
I think it‚Äôd be very difficult, principally because you don‚Äôt have anyone to correct your misunderstandings or try different explanations when you don‚Äôt understand something. It‚Äôs possible you could do that outside traditional education but you‚Äôd need some other mentoring.

If seaborn does 100% of what you want out of the box, you don‚Äôt need MPL. This is pretty unlikely, however.
100% of the worst abuses of Excel I‚Äôve witnessed were at the hands of accountants. If you had accountancy and DA skills you could be very useful indeed. (Accountants consider people who know VBA to be demigods.)
I will be messaging you in 23 hours on [**2020-05-16 12:04:42 UTC**](http://www.wolframalpha.com/input/?i=2020-05-16%2012:04:42%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/gk517f/data_analysis_resources_for_python/fqpej2t/?context=3)

[**1 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fgk517f%2Fdata_analysis_resources_for_python%2Ffqpej2t%2F%5D%0A%0ARemindMe%21%202020-05-16%2012%3A04%3A42%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20gk517f)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
what for?
General for a beginning
Frequentist statistics (what you probably mean by general) is the most widely-used. Most introductions to Bayesian statistics will assume you're already familiar with topics like hypothesis testing, maximum likelihood estimation, confidence intervals, etc.

Watch out for the stats-ML language gap here, though. "Bayesian" means different things to both crowds, so now most implementations of the Naive Bayes classifier, for instance, are purely frequentist. MLers use it to mean, roughly, "anything involving Bayes' theorem". Understanding and being able to apply Bayes' theorem is, of course, absolutely mandatory for 100% of people doing data analysis.
I am also a pharmacist learning python. What kind of jobs do you have in mind after learning data analysis ?
[deleted]
Yep. Better to start in grade 10 than when you're 37 :)
What would you recommend for a relatively new user looking to chart relatively simple data in attractive charts?
Thanks for the answer, I definitely know what you mean, by your mentor comment.
Right now im at work, this bot will send me a notification a day later so by tomorrow night go through this post in detail!
> Understanding and being able to apply Bayes' theorem is, of course, absolutely mandatory for 100% of people doing data analysis.

Strange, worked for +10 years in industry, and only a small fraction of "(data) analysts" i encoutered could wrap their head around Bay S. More then half don't know when to use log functions/scales. 

On the other hand, for many business problems, these are not required. Usefull abstractions can often be deviced without special maths.
We use Excel in two ways:

1. To store data that‚Äôs more structured than a CSV file can handle, for uploading to a database (because it‚Äôs quicker than creating a UI for uploading stuff). The uploading itself is handled in Python and the upload file will have a related Python class that reflects the structure of the workbook. The uploaded data is then input to the database tables proper by a stored procedure.
2. Toy examples and sharing results with people who aren‚Äôt as technical.

My first job, 14 years ago and before I did my PhD, was as a risk analyst for an energy company. There I learned VBA, writing wrappers around C++ code for Monte Carlo simulations (among other things), so I have quite a lot of experience with the limits you can take Excel to. One of the many problems with Excel for data analysis is that code reusability is very low‚Äîyou can store code in your PERSONAL.xlsb file or include it in specific workbooks, but there‚Äôs no central store. In addition, version control is non-existent.

In contrast, I have several libraries which I work with in Python that I constantly add to to make life easier, and these are stored in version control and all users can then update to the latest version to get new features. So when I fire up a new Jupyter notebook to do some exploratory data analysis, I import my standard libraries (with a keybinding, naturally) and get started doing interesting stuff very quickly.

I really can‚Äôt imagine a use case where Excel would be superior to Python for any analysis. I will say that while VBA is massively inferior to Python, the lessons you can learn from doing it will be transferable, so it‚Äôs definitely worth keeping it up while at work. Just remember to use `Option Explicit`!
Probably matplotlib with https://seaborn.pydata.org/generated/seaborn.set_style.html#seaborn.set_style for the sake of simplicity.

Another problem I didn‚Äôt mention with data people and plotting is they often don‚Äôt have any aesthetic sensibility, and so any plotting they do often looks like garbage. Read The *Visual Display of Quantitative Information* and you‚Äôll be better than 99% of them!
I am a really big fan of Altair, and have found it a lot easier to work with than matplotlib (but that could just be personal preference).

I find being able to encode/bind a certain aspect of the chart (such as an x column, the colour, the facet) to a column in your DataFrame is really nice. For example, [this interactive Altair chart](https://datapane.com/reports/J35w1k0/) is like only about 10 lines of code, and looks and works great, and is interactive in the browser. You can also see that it's composable - so I can create a base from the data, and use that base to create both a line chart and a scatter plot, for instance. 

Bokeh is really powerful too, but I find it a little less elegant.
Without Bayes' theorem, one can easily make logic errors. See the common (and currently relevant) question about [whether a patient has a disease given that they've tested positive for a disease](http://sphweb.bumc.bu.edu/otlt/MPH-Modules/BS/BS704_Probability/BS704_Probability6.html). Relatedly, see the [base rate fallacy](https://en.wikipedia.org/wiki/Base_rate_fallacy).

Bayes' theorem is a straightforward result of the definition of conditional probability. Conditional probability, in its simplest form (discrete sample space), is a topic that can be easily understood by high schoolers. Hardly special math~~s~~.

So sure, there are people with the job title of "data analyst" who don't know this stuff, but the question is to what extent are these people actually extracting non-trivial insights, and *analyzing data*? Probably not much.
That's a great point, I'm probably not getting a good sense of Seaborn/matplot from physics nerds. 

Thanks for the insight! I'll give Seaborn another close look beyond what comes up in the various communties!
I just found a library called MPLd3, it looks promising and really easy to use to make interactives. But I'll check out Altair too. 

Thanks!
> Logical errors

One can know precision, recall or null hypothesis without understanding Bayes. If you want to combine multiple probabilities, it does come in handy. Yes, it's great.

> So sure, there are people with the job title of "data analyst" who don't know this stuff, but the question is to what extent are these people actually extracting non-trivial insights, and analyzing data? Probably not much.

Please, all i'm saying is there is more to insight then Bayes. The fountain of knowledge shines in many more colors then any [single theorem](https://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems) can explain. 

> a topic that can be easily understood

Life takes it root in mud. Flowers sings their siren-song for bugs. Like someone once said "an idea is not a glass of water, it's like of a bottle of whiskey" (John Carmack).
[deleted]
> Would you hire a Python programmer who doesn't know what a for loop is? 

I've never encountered one.

> Maybe a sonnet would sweeten the deal?

Ha, i'd might indeed regard it as bonus, if the words reveal a [sensible context](https://www.ted.com/talks/iain_mcgilchrist_the_divided_brain/discussion?c=104251).
Not sure what email provider your using but sending to many emails at once can flag your system.  Look into breaking them into batches and staging their sends.

https://sendpulse.com/knowledge-base/email-service/general/send-bulk-email-without-getting-blacklisted
[deleted]
Just don't forget to pretend to be busy and to not give them your code for free
> Terrified when I hit run, but it actually worked!

Well done!  But it's best to get **out** of the habit of testing on live code.  You have the perfect opportunity right now of figuring out some way of testing without sending live email over the 'net.  Even with the best checking mistakes can, and will, happen.
Next things to look into:

* `nose2` / `unittest` - have those emails go into a file to look at / check
* I'm a fan of `chevron` for templating since email is probably pretty straightforward
* "mail merge" is what you were doing, if you want to read more about it
* As noted elsewhere, don't get flagged as a spammer
Terrified to hit run, haha. Perhaps incorporate a method to print the email before sending, for a quick visual verification. You can set user input to send the email something super efficient like so,

for email in emailsObj:  
‚Ä¶.print(email)  
‚Ä¶.if input() == ‚Äò‚Äô:  
‚Ä¶‚Ä¶..send(email)  
‚Ä¶.else:  
‚Ä¶‚Ä¶..dontSend(email)  

Sorry about that formatting. I‚Äôm on mobile. Anyhow, the ‚Äò‚Äô is an empty string. You just hit <enter> and that satisfies it. Hitting anything else will push to the else: Statement. dontSend() could include an object with each email you chose not to send appended to it, and after you finish running through the email send verification you can have the code go back to the ones you didn‚Äôt send for correction.

You can also put in a separate object that tracks all sent emails and use it to verify ones that are about to be sent haven‚Äôt been already, to prevent duplicates. Lots of fun ideas, just keep optimizing the code and adding helpful features. 


Be sure to document your code with comments though, even if you‚Äôre the only person to use it. IT will thank you if it ever becomes a shadow system and they‚Äôre tasked with reverse engineering it, plus comments will save you time as the program becomes for advanced.
Congratulations on your success, but you definitely could have used mail merge in Word/Outlook to do this.  Good for you though.
Never tell your boss. Enjoy your Netflix.
congratulations, we, your employer, no longer need you.   Good luck!
I remember the first time I automated a tedious task in Python related to image manipulation in Pillow + tkinter that took me literally hours to do by hand in Paint.NET that I had to do every couple of days. I felt like a God.
Congrats you now have an extra 2 hours every day to browse Reddit!

Seriously though, good job!
Congratulations!

I am learning Python now.

I wonder what people mean when they say that a language is "intuitive". 

Would you care to elaborate on that?
Congrats!  Your first spambot!  All jokes aside, I,d make sure your ISP doesnt flag your company SMTP servers as bulk mail servers.  Volume over time and content can be considered when evaluating this, so be careful but have fun!
Glad you did this but would question why you're not already using one of many services that do this at low cost and with many added features, automatic resend, tracking and reporting etc?
As you‚Äôve been doing some repetitive work, you may have realized that you could be doing all that via some automated tool. That‚Äôs the essence of programming. That itch made you think that you could find another way of doing your job. That‚Äôs great. So you can see that for some jobs there is an excessive amount of workforce going to waste. As a human, you can easily tell that some work you do can be done using way less resources. More people should realize that.
Nice work. How are you automating the execution of the script?
Congratulations on your accomplishment. However, why didn't you use the email feature in a word processor like MS Word which does the same thing?
Great job! Tell no one
[deleted]
I am facing the exact same issue!! Can you tell me how you did it? I also run a magazine as well.
Don‚Äôt brag about this to anyone at work.
It's all fun and games until you hit messages into sms gateway in loop which send whole queue several times over..... I have done that in php, C# , js , SQL and they all had their pros and cons
That is magic.
yeah python is very intuitive and very powerful. its a joy writing small scripts and automating
Nice. Now your boss can finally let you go. Just kidding. Good job.
Jealous!  This is my dream
Be careful not to make your role redundant! :)
Can I ask where you learned the most about how to do this? Any particular resource that was most helpful?
Can you suggest a good book/way to learn Python for free (or <$50)? This language sounds too useful to me not to learn.

I‚Äôm a fairly smart guy with a *little bit* of C++, and a decent understanding of database architecture. I‚Äôd probably try to learn how to use and API (REST, likely) to handle bulk edits, more-complicated/multi-file search+replace operations within files that are readable as plain text (i.e. *.txt, *.html, *.css, *.php). I have a tiny bit of SQL experience as well.
So you among those spamming/spammer a-holes huh?
One if our clients had a task they would do once a year which took a person two months. I wrote a python script that did the job in 12 hours. In theory I can make it much quicker but haven't figured out how to run it threaded..
Hey! how long have you been studying python? Where did you learn it? I too m studying python watching YouTube tutorials. Do you have any advice for me?
‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è
[deleted]
You can even do better if you hire someone to do that for you.
If you are totally new to Python and can finish it in 2 hours, then an experienced people can finish it in 10 mins (just for the sake of argument)
I could do that with bash
You mind posting the src code? Maybe I can help my mom out with her emails lol
This is the way. 

I‚Äôve heard of people doing things like this, and then goofing off half the day, then being given bonuses for their productivity. Id do this but my company has shit locked down so tight you can‚Äôt even so much as sniff at a script of any kind without supervisory and ITs permission. It‚Äôs like they want people to take as long as possible to do anything.
That's great advice, thank you!
Excellent point.
I stuck with same problem when working on telegram bot. So I resolve this with ‚Äútime‚Äù package and just create timeouts as a current limits
[deleted]
> DO NOT TELL YOUR BOSS

And don't tell your coworkers too..
It's okay, I'm the boss!
.. or maybe not posting on Reddit? üòÉ
I just spent 8 hours yesterday automating something in VBA. I'm going to use it once a month to save me 10 minutes... It was a valuable use of company time, I promise
Good advice, because even if they supported it they would look out to just squeeze more out of you instead of allowing you to take break from other tasks or if you have bandwidth have extra time to pick up on tasks that helps you with your skillset growth, planning your career, or do whatever to make yourself more valuable.
Extra emphasis on this. I‚Äôm the only software engineer at at a robotics company and when I came onto the team and automated everything, I started getting penalized for ‚Äúmoving slow‚Äù on things that weren‚Äôt automated.
I automated load posting for a freight brokerage. They instantly promoted me to IT Manager, gave me my own office, and a huge pay raise. I then automated the rest of that company.

Now I have my own company and, while we're still getting off the ground, it's going really well. My former employer was my second client and I still do business with them.

Tell your boss if you do something awesome, just be prepared to ask for what it's worth. :)
I concur. One of three things will happen, none of which will be good. Either A. You‚Äôre going to get put through the wringer for it
B. They are going to expect more out of you including you share your shit with everyone else and then half of the staff will get fired because less than half of the staff will be needed or
C both.

Probably both
Right!, and don't tell anyone at your office about your scripts.
He did it while working. They already paid for it. It is their script.
Oh I did test it a lot with another email account before going live. I think I ran it about 50 times, ironing out all the kinks!
Awesome, thank you!
üëç
Just a `--dry-run` flag
True enough, but then you're requiring an MS Office install (neither free nor libre), plus keeping it up to date. MS Office Mail merge is still basically f-strings.

(FWIW I'm an old and remember scripting mail-merges in WordBasic, before they built mail merge into Word(/office)).
I'll definitely check that out!
It's good to learn both!
This. Keep those two hours.
This right here.
Don't tell your boss and your coworkers how you do it, buying time is important too. Don't tell them you already finished your works earlier.
I automated myself out of a job once. Unfortunately, they "rewarded" my ingenuity by laying me off. It's ok though, some jobs aren't worth having.
1. Automate job, then
2. Keep it to yourself, then
3. Get an additional job for more money, then
4. See step 1
No matter how hard I've tried, I've yet to be able to successfully automate myself out of a job.

Buying back time on mundane tasks just gives you more time for innovation and future proofing.
It would be cool if you did a post with some details
It feels a bit like a cheat code!
Or reinvest that newly found time into learning how to automate more things.

Just be cautious letting your employer know. In my experience (and many others from this sub) your talents will just be misunderstood and abused. Don't sell yourself short when the time comes. When they realize you are the most efficient employee they have, they will just dump more work on you or expect you to share your efficiency for no extra reward. Be prepared to negotiate when given the opportunity.
Easy Syntax and easy to integrate one of the million libraries somebody else wrote to accomplish whatever the problem is.
The flow is very easy to follow and compared to other languages like c++, the syntax is extremely readable because it often uses full works like the print() function. Rather than say JavaScript where you would use console.log()
Just adding to the replies already, I remember thinking to myself, I wonder how you make an IF AND statement in python and the answer was simply to use the word AND. It's a language meant to be understood by humans, it feels like.
[deleted]
It's what people that love python say, but don't know other languages well enough to know that it is a superficial view. The intuitive aspects disappear almost instantly once you move past the basics of the language sadly. That said, it is still a great language for scripting and rapid prototyping, despite the fervor it's supporters bring to it.
I've always interpreted intuitive as a way to say its easy to quickly conjure up something and get it running
This is why you should use a legitimate bulk mail service like MailChimp with proper SPF/DKIM setup. Blasting bulk mail out of your own server is a bad idea.
One I wanted to see if I could, and two our budget is minimal so I was trying to save a few pennies.
I'm sure there are some that get around this, but, at least in my org, we can't use them because they (necessarily) need pretty comprehensive permissions and that poses a security problem. 

https://imgur.com/H3vhsMJ
Can build a email sending CI/CD pipeline lol.

For real tho you could. Basically every time you submit content it does it all automatically.
Heh, if they come from academia, they might have used LaTeX and Markdown for so long that the Office suite is basically foreign territory at this point

*edit:*

I'll admit, this is me projecting my own situation, actually. The most modern "word processors" I'm using regularly, are Google Keep, and... Slack, if that counts. It's got the "Post"-functionality!
This‚Ä¶ if anyone at work knew how much I use python scripts, they‚Äôd‚Ä¶ be amazed‚Ä¶ and then find more work for me
ahhhh, I get it.
[removed]
Another Redditor has pointed out that it might better to use Mail Merge instead as you might get flagged as a spammer otherwise!
Yeah I'm the boss so it's all good!
They run the magazine tho?
I'm curious, why not?
It depends on the situation and the goals of the person. If you want to chill at your job, stay quiet. If you want to get a higher position, more salary, better tasks, the show it to your manager and use it in negotiations.
yes idk why anyone would bother learning a language that can't do these things.
Luckily I am the boss so it just means I get to do less work.
No, you make your role redundant but don‚Äôt tell anyone and you enjoy your new found free time!
Well, op runs the magazine, so it sounds they just made their job a bit easier.
I have been following Angela Yu's, 100 days of Python course on Udemy.com. Its incredibly informative, tonnes of practical experience and it's really fun. Highly recommend.
I like "Automate the boring stuff with python" you can get the book but the course is often free on udemy. Check out r/udemy for free coupons
Automate the Boring Stuff is basically the everyday life guide to python. it's not gonna teach you everything about the language, it's not gonna teach you more than basic programming fundamentals and concepts, but it will teach you how to automate stuff in your day to day life, or in your workspace.
https://www.reddit.com/r/learnpython/comments/pzb3m8/giveaway_the_indie_python_extravaganza_bundle_is/

This bundle is free for October.
Checkout the [r/learnpython wiki](https://old.reddit.com/r/learnpython/wiki/index) for resources.
YouTube. Corey Schafer, sendtex, there are others but they are really good and great places to start
Edx.com
No! These people were waiting on a reply from me. But it did shock me how incredibly easy it is to create spam emails and how difficult it must be to stop.
Just do it. Seriously, think of a problem, and just start googling bits and pieces of code that you need. It's how I started and I already automated a few minor tasks.
I said in another reply but about a month now studying Angela Yu's course 100 days of Python on Udemy. Would highly recommend!
The best advice is almost always to start a project. Not follow a tutorial series but a unique project to yourself. Is there something you do regularly on your computer you‚Äôd like to automate? Is there something that you would find useful or cool?
I think you commented on the wrong thread.
I 100% disagree. Hulk Hogan recommended young athletes eat a raw egg for breakfast every morning, and he‚Äôs still alive. Froot Loops be damned.
Let the man have his win. I‚Äôve always hated when people have to point out stuff like this. Yes there will always be someone better, that‚Äôs not the point. The point is someone had a win
If it took a couple hours or even a couple days to write a script they can reuse now, than hiring someone would be significantly more expensive.
25 days seems long when learning python! But I think there are better ways to do this that won't get her account flagged as a spammer. The main one is: https://support.microsoft.com/en-us/office/use-mail-merge-for-bulk-email-letters-labels-and-envelopes-f488ed5b-b849-4c11-9cff-932c49474705

I hope that helps!
Consider using random delays between sending each email
Nah, randomize the sleep interval for extra security
Yeah. Right
Genius
Exactly.
You da boss!
It makes work fun. There has to be value in having a happier employee, no?
I don't know who downvoted you, but it's true.   If you did it on company time, it's belongs to them.
Nothing in his post says he wrote this on company time ü§∑‚Äç‚ôÇÔ∏è
[deleted]
It depends on the legislation. In some cases, the software code belongs to the writer, unless otherwise specified. But companies usually include a clause in the contract to overcome this.
Did you have a lot of spare emails lying around?
I pretty much just assume everyone has Office at work.  Don't disagree with you, it's just a functionality that's already widely available in software that's ubiquitous, as opposed to making it yourself.
Yeah good for you on your python, but this option is way easier.  Plus it allows you to edit individual emails, and some other powerful things.
I'd like to hear more.
With your words of encouragement I'd definitely do this once I get home hah.
Oh is that true.. I have been learning R for the past few months and I like it!

I did some intro-level python courses so it is hard to compare but if python is easier then that will be great!
Yup I was curious about this too. I wondered if they meant intuitive to learn, but I‚Äôve seen other languages based on English that appeared just as ‚Äòintuitive‚Äô by that sense. Perhaps they mean intuitive as some kind of dialog for the fact that Python is often used for AI? That wouldn‚Äôt make the *language* intuitive though, and arguably the program isn‚Äôt intuitive either. It‚Äôs just doing as it was programmed to. Maybe they mean intuitive by that you don‚Äôt have to specify a lot of things with Python, such as declaring an objects type before using it.
Nice work, OP. You should be proud of your progress. It is very satisfying to automate something that 'really should be done by a robot' for the first time.

Just a quick warning from a veteran... You should maintain a healthy fear of your script. Use it enough and you will almost certainly botch an email campaign by sending dupes, sending to too wide a list, sending the wrong email, borking the template, whatever-- it happens to the best of us. Think about what can go wrong when you're broadcasting to an audience and you'll write safer tools.
Usually they're done via api, sending a list out or via a Web page interface rather than trying to do via an individual Google account.
Someone escalates to hr how abc is making money while doing Jack and boom there is now a reason for you to either do more work or if your unlucky to be let go off as "job is automated what's your purpose here?"
Do what things exactly?
[deleted]
>smtplib

Abso-fucking-lutely!
This
THIS is how you do it.
Is it worth 12,5e? My teacher is an ass and cannot teach properly and/or understandably so i'm looking for something like this.
I just opened Udemy after reading your comment and behold‚Ä¶it‚Äôs right there under featured! I am enrolling into it right now‚Ä¶ thanks for sharing
I agree Angela‚Äôs course is awesome I‚Äôm on day 31 and looked at my projects folder yesterday and was blown away by how much progress I made and I only started about 2 weeks ago!
Although I already knew some Java so the first 10-15 days were easy.
[deleted]
I second this!
Yes.  It's good.  Plus the things you learn you can modify a bit and use in your own projects
+1 on sendtex
Its always been easy, not specific with python. Heck someone can even send email using your address, so that's there as well
[deleted]
Yep. My point is that he can even save more time by letting other people work on something he has no experience. That‚Äôs how freelance services like Fiverr works.
The bit I heard about guys doing this was to have them sent at specific times throughout the day to simulate a time frame for having gotten the work done. One story I heard about was a dude that pretty much had his entire weeks worth of work done in a matter of minutes and then had the work emailed and saved to places on the network at times commensurate with about when most other people got their shit done. Then he‚Äôd day trade the rest of the week.
This is the way.
Yeah I figured I‚Äôd be downvoted but people that don‚Äôt know any better. 

Anything you produce on work time and work property is owned by your work. I didn‚Äôt make this up. It‚Äôs just the way it is.
No it doesnt
No one "owns" code. Information can't be "owned" by anyone. Intellectual property is a statist/corporatist scam.
Does this also include personal breaks such as lunch and super/tea?
It doesn‚Äôt matter if he used company equipment. I don‚Äôt know why people keep defending it. Again, I don‚Äôt make the rules. I‚Äôm just letting you know how the real world works.
That‚Äôs not how it works at all. If they did it on company time and with company resources, they don‚Äôt own that IP anymore.
[deleted]
Weirdly I do. I've also made ones to practice python with.
I would really like to hear about it.  Automating image manipulation is one of those things that always seems super complicated to me and if you had some tips on how you got started I would love to hear and I'm sure others would.
I'm much more experienced with python than r, but the only thing I think is more intuitive in R is the assignment operator (a <- 'apple') vs most other languages I've seen using an 'equals' sign (=). I remember learning to read = as 'gets' rather than 'equals' when learning c++ back in the day, and i found that really confusing for a while. Now it just looks right and R's arrow looks weird. But i think if I had learned R first, I'd hate all the other languages using equals for assignment and then making up a new equals sign.
Take a look at these couple examples of code:

c++

    #include <iostream>
    #include <cstring>
    using namespace std;
    char g_a[7];
    int main() { 
        strcpy(g_a,"apples"); 
        for(int i; i < strlen(g_a); i++) { 
            cout << g_a[i] << endl; 
        } 
        return(0); 
    }

python

    a = 'apples'
    for v in a:
        print(v)

These do the exact same thing but one is, at least to me, much easier to read.  Also, I don't think it gets much better than pip installing new packages and being able to use them immediately without having to think twice.

Sorry to the "c" snobs out there, I'm sure I could have made the c++ more simple. The goal was to store the string "apples" to a global variable then print each letter individually. It took me like five minutes to debug the c++.
I had an off by one error on a mailing list spreadsheet so the first name didn't match the email address. Dozens of annoyed/confused emails after that one.
Thanks, that's really good advice.
I don‚Äôt know.  I have done really well for myself doing exactly this (automating tasks).  

What has happened to me at multiple companies is that I end up being the only one that knows how to do things.  I am very open about training anyone on anything but only 2 people in my career have taken me up on it and it never got past basic excel macros.  

Having a job that your boss can‚Äôt do on a technical level allows for a lot of freedom.  Plus this stuff looks great on a resume.  Just stay humble and offer advice and help freely and you will become a hero.
That's why he/she should have developed that script at home on their time off. If they're fired, just remove the script and let them fucking figure it out without the person. (LOL in evil)
You realize op runs the magazine, right?
writing small scripts, or apps, or games, Python can do it all pretty efficiently.
Better yet, copyright the program you built to automate your work. If you‚Äôre fired, require that they pay to use the copyrighted work.
If you're looking for something for free, try Al Sweigart's "Automate the boring stuff with Python" course. He usually makes it free every month to two. Just, keep an eye out on r/python and try hunting it down. I *would* get you the link, but I'm on mobile right now, so sorry :p
I would 100% say yes it is.
I'm currently following it.  I'd happily have paid $1000 for it in hindsight.
What I love some much about her course is that it's project based. So it's not just "do these drills"... It's a well designed class.
I thought that exact same thing. I have at least 50 projects in my folder now.
I think around 40 ish. But if you know the basics of python already you can skip a lot of the beginner lessons.
Agreed. My typical process is:
1. Get something working at a rudimentary level
2. Remove steps and unnecessary code
3. Improve and optimize code and add error checking
4. Pat yourself on the back for learning
5. Profit?
You know this subreddit is called r/learnpython, right?
Or‚Ä¶hear me out, it‚Äôs good to learn a new skill
What company is going to let you hire someone off Fiver?
Randomize the interval over a bell curve, not a flat distribution
I get that that's the rule of the legal writing. But do you really think that's just? You seem to layer a normative or moral claim here on top of the factual claim every one of us agrees to with every contract, and I disagree on those grounds.
I work on side projects sometimes at work. And they are MINE. If they don't know about it, no harm, no foul.
It‚Äôs in basically every employment contract that if you develop something on company time, property and with information you gathered from the company then the company owns. Some contracts even extend it into your personal free time at home with your own property.
yea, ok.
Nothing in his post says he made this on company time. ü§∑‚Äç‚ôÇÔ∏è
That's interesting!

I guess the sequence in which people learn different languages does matter a lot.
Could you not have just used string instead of char or were you trying to show the complexity of c++?
Well python is far from perfect. Its speed is an issue, theres no type checking, its not compiled so that means it can only run on computers that install python, its also not a low level language, to implement sth low level u need to write it in c, cpp or rust. For example pygame uses sdl, a library that is written in c
Because other languages are fast and there‚Äôs many other use cases and criteria outside of what you described?
I'm willing to pay but just hunting for that good one

Still thanks.
Imma buy it. Thanks
Enjoy!
[deleted]
You really expect them to break down the variation in intervals between emails? Bell curving it really isn't needed, just have it be a flat amount plus a random amount to create a minimum pause between emails.
It sounds just to me. Especially if your job is to write or debug software. Practically speaking in my jobs, I wrote libraries of scripts to speed things up and since how I do my work is flexible, my boss wouldn't even know how I've done what I've done if I didn't tell them and they don't connect the dots to think about using it if I'm not around, they just are thankful that I am. I've been using Cygwin, Excel VBA and UI.Vision.
disagreeing with reality, doesn't change it.   In fact, it seems a bit insane.
>implying law and justice aren't mutually exclusive
Wooow, just woow, ***some contracts extend it into your personal free time at home with your own property*****...** How now ????

Does the company own me outside their premises with my own resources?
You say that as if you disagree. What's your reasoning?
The JIT compiler is extremely slow with some things. 

If you know how to code so that these don't bottleneck your program then you can still get close to C or Fortran speeds. These include:

Avoid loops at all cost (stick to list comprehensions or functional functions -ie map, pop, and zip), avoid recursive function calls, stick to the standard library or libraries that are written in C. You can also add additional speed through precompilation at runtime using Numba decorators. And then there are some optimizations that can be made via program structure/syntax. IE using numpy over math, multiple assignments, etc. 

Speed in python is a hat full of tricks whereas speed in C is more built-in. It can be achieved in either with enough care. However, poorly written C or cpp can equally be slow if you're that bad at programming.
speed isn't really an issue, today's computers are fast enough. there are plenty of online compilers. high-level languages are the future as they're easier to learn and can do more. as I see it python is an improvement upon C, even if C is the original.
to me, Python meets a lot of criteria for being a good programming language.
Oh don't you worry, it's an amazing course and it's normally paid. He just makes it free for a limited time only.
62 Currently using Flask to make websites.
the difference in work is 0
Well‚Ä¶if they ever get it in their brain that this might be going on, the proof that it is will be that the distribution of the emails isn‚Äôt normal. Not that administrations are that smart but they might ask someone smart enough how to prove it.
Wait you're saying anything against the law is just to do? I think you mean >implying the law and justice are the same<
So you believe that an author shouldn‚Äôt get paid for their work.
Is python jit compiled? I think cpython isnt, but i think there is a jit compiled version of python that is a lot faster
Python isn‚Äôt an improvement on C. Python is great at what it does, but it‚Äôs rarely the right tool for the job. It‚Äôs excellent for data analysis, modeling, small scripts, and to some extent, server side web dev (and does okay there). On the other hand, it‚Äôs garbage at anything that requires speed. It‚Äôs at best a middle of the pack choice for web dev -> I think TS+Node, C#.NET are both better than Django or Flask at scalability, ecosystem, speed, and ease of deployment. They‚Äôre different languages for different purposes. If you want something fast, i.e. me right now, writing 3d modeling software, then C/C++ or Rust is the way to go. If you want something that compiles fast and has low level performance, use Go. This isn‚Äôt a knock on Python. I love using it for data analysis and prototyping things quickly, but it is in *no way* an improvement on C. They‚Äôre not even in the same category of use case.
Speed definetly is the issue with big systems. Look at web browsers, look at games. Theye all written in a low level language like cpp. Python cant even be compared to c or cpp. Ofc python is good for some things, but cant do a lot of things low level languages can
Thanks for the info, I'll check that one out.
[deleted]
And who would do that? If it works, it works.
I'm stating injustice is law and justice is illegal
No, I just believe that you can't own information, so it wouldn't be justified to use force to ensure that no one consumes media that you only want certain people to concern, e.g. through copyright law. Plus, in most cases of piracy, the content being pirated is popular enough that the pirate isn't making a difference, and it's not like the distributor is losing money because of a pirate, because a pirate likely wouldn't have paid for said media anyway.

Also, in this specific case, this guy wrote this code because he chose to on his own. The company didn't pay him to do it. It's all his as long as he doesn't share it.
Numba, PyPy
it can do a lot, that's why it's one of the most popular languages in web development, game development and AI
https://inventwithpython.com/automateudemy

That's the link that automatically applies the coupon code, but it seems it's not free right now, but *is* on sale, so...
‰πÅ( ‚Ä¢_‚Ä¢ )„Ñè
He runs it free as much as possible, it's usually around the start of every month. Just keep an eye out on his profile around the start of a month and you'll likely get it
He posts the code at the beginning of every month in here and r/python. Next one will likely be NOV2021 since it's just the month and year each time
It has been the same for me sometimes. I think I spent 2 days on one problem. Classes really confused me but I just kept at it and now I feel I have a good grasp on them. It really is amazing when you get to the later lessons how much the early stuff just clicks.
Administrators ask for really stupid things sometimes.
Ok I'll state that's really dumb and your comment still doesn't make sense
Ok so how would an author make a living with absolutely no way to enforce it?
U are missing the point here. Libraries like pygame and ai libraries are all written in a lower level language like c or cpp, but people are using them from python because of the ability to wuickly prototype and script in it. Python without lower level languages is useless, it wouldnt even exist without them.
[deleted]
Off of the people who actually buy said media. People who don't make up a very small portion of the population.
C and low-level languages might have been the top (and only) languages in the 70s, it simply isn't that now.

"Python without lower level languages is useless, it wouldnt even exist without them."

you wouldn't exist without your dead great-great grandparents but does that make you useless now?

your logic is completely flawed.
I did. I actually had a to have a forced break from studying so I related the whole 20 lessons. But yeah I'm often going back and forth.
Thanks for sharing! Just curious if this comes with a certificate at the end of the course?
Always wanted to go to MIT
Can a person with no prior experience with computer languages take this course?
I‚Äôd be curious how this stands up to Harvard‚Äôs CS50, (I think it is?).

Seems the sub is split at times about recommending beginners going with a comp sci intro before diving into programming in python - or any language - or if it‚Äôs better to do something like ATBS & supplement with some additional resources, as needed.
You can get a free access from MIT web with all lectures and exams as well for free, also can download on your computer : ) 

https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/assignments/
You can get 15% off the Verified Certificate by applying coupon code EDXWELCOME at checkout.
Is this only for Americans? Or can we Europeans sign up for extern learning?
why did this get removed? was it incorrect??
I‚Äôve tried to learn Python on and off for several years and this series really helped it click for me. It‚Äôs comprehensive and approaches programming from a fundamental level before you even write lines of code. Even without prior coding knowledge you will pick it up relatively quickly. The learning curve can feel a little steep but just revisit the material until it sticks, trust me it‚Äôs worth it. 

The IBM course *Python for Data Science* is also a great compliment for extra curricular work, the pace of videos is a bit faster but the learning materials are solid.
[deleted]
Up to date, the best course that finally got me to learning and understanding Python.
Can you enroll into the course for free at the beginning but later get a certificate if you change your mind?
You can also just watch this whole course on OpenCourseWare without going through EdX. That‚Äôs what I did last summer. Even without doing any of the assignments I learned a ton.
Thanks will take a look.  

Anyone have thoughts on the MIT course vs this one: https://www.edx.org/course/python-basics-for-data-science

I'm interested in automating the retrival of some data points from financial statements/bloomberg and working up some ratios and reports, so figure the data science oriented course is probably better for me?  Think its worth revisiting the MIT one once done auditing the IBM course or is there something else I should look to instead like: automate the boring stuff? Or just go down that data science pathway with IBM on edx?
I have Enrolled, Coarse Starts today.Thanks for the information,
!RemindMe 7 hours
!RemindMe 4 days
!Remindme 1 week
!remind me 7 hours
!remind me 3 hours
Is the $75 verified track worth it?
What would be the advantages of acquiring the paid certificate regarding the practical real world?
!RemindMe 3 days
Is it worth purchasing the verified path? I can afford it, is expensive but if the money is worth it I can look to invest in it
Thank you! I'll sign up
Thank you man. Appreciated!
How does the course compare to GeorgeTown‚Äôs university Python course in EDx too?
Is this exclusively for american citizens?
Very nice, thanks by share. I already joined to the course.
You can audit for free or cert for $75
Lol same
> Always wanted to go to MIT

My very bright hard-working friend who got his engineering degree at MIT says he wouldn't wish it on his worst enemy because it's too competitive, making it a miserable experience.
From the Edx Website:

High school algebra and a reasonable aptitude for mathematics. Students without prior programming background will find there is a steep learning curve and may have to put in more than the estimated time effort.

So, if you put the hours into that, surely you can do it.

Suerte!
I would suggest you learn a little about basics first. It starts out easy enough, but then it really gets rolling, and you'd likely feel overwhelmed. I audited it for free, after knowing a decent amount of basics in 3 back end languages, and I barely kept up on time(had a part-time job). I don't recommend paying for it if you're just getting started, and the fact that your access ends a week after the last class is aired means little to no time to catch up if you get stuck.
That being said, I highly recommend it-Dr Grimson is an amazing teacher, and it'll really help you once you have an idea of concepts like loops and writing dry code. Just my two cents.
It's an incredibly steep learning curve I found - almost to the point where it was a bit off-putting at times.  I'm far from the cleverest person around though üòê
I did, this was the first programming course I took. I really enjoyed it.
This course is difficult without any prior programming knowledge while CS50 is fine for a complete beginner (IMO)

I would suggest a book (I don‚Äôt personally recommend ATBS because I didn‚Äôt enjoy it‚Äî but that doesn‚Äôt mean it isn‚Äôt helpful to someone who would) that teaches you the basics first. Learn Python the Hard Way was what got me started in programming. Then once you‚Äôve done that try this course.
I've taken both (haven't finished CS50 yet)... I prefer the lectures in the MIT one. These are more low key, given in a quiet room for a webcam vs. CS50's live lecture hall filming. I find Malan a bit too bombastic. Maybe others will be more bored with Grimson but his style suits me better. 

The main real difference is the problem sets in CS50 are a lot more difficult.
If you do this and ATBS, that's a very well rounded start to python.
Thank you!
I'm from Europe and I signed up successfully.
It's accessible from almost anywhere across the globe. Some countries sanctioned by the USA, like Iran, were excluded in the past (but could use VPN). Not sure about the current situation.
It broke subreddit rules and was removed. It's been restored as I think it adds value despite that.
What did you end up doing after you completed the course? I just finished Stanford‚Äôs Code In Place course and I signed up for this one next.
I‚Äôve done both. The MIT course is more comprehensive. The IBM course has more self learning and is very good for getting someone with prior coding knowledge up to speed quickly, and the Jupiter notebook lab sessions between videos are really well detailed.

My recommendation is to do both. They are both very accessible and free to audit so you‚Äôve got nothing to lose but time and your mind. 

Neither one is going to teach you how to write the exact program you intend to write, however, they will both enable you to work it out on your own. Programming is actually a state of mind, once it clicks anything is possible.
There is a 13 hour delay fetching comments.

I will be messaging you on [**2021-05-17 23:07:40 UTC**](http://www.wolframalpha.com/input/?i=2021-05-17%2023:07:40%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/neg3hb/mit_offers_free_online_course_in_computer/gygjt7a/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fneg3hb%2Fmit_offers_free_online_course_in_computer%2Fgygjt7a%2F%5D%0A%0ARemindMe%21%202021-05-17%2023%3A07%3A40%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20neg3hb)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
There is a 13 hour delay fetching comments.

I will be messaging you in 4 days on [**2021-05-21 16:16:13 UTC**](http://www.wolframalpha.com/input/?i=2021-05-21%2016:16:13%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/neg3hb/mit_offers_free_online_course_in_computer/gygl18c/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fneg3hb%2Fmit_offers_free_online_course_in_computer%2Fgygl18c%2F%5D%0A%0ARemindMe%21%202021-05-21%2016%3A16%3A13%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20neg3hb)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
There is a 13 hour delay fetching comments.

I will be messaging you on [**2021-05-17 19:02:00 UTC**](http://www.wolframalpha.com/input/?i=2021-05-17%2019:02:00%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/neg3hb/mit_offers_free_online_course_in_computer/gygj07q/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fneg3hb%2Fmit_offers_free_online_course_in_computer%2Fgygj07q%2F%5D%0A%0ARemindMe%21%202021-05-17%2019%3A02%3A00%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20neg3hb)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Think of it as a donation. Fine if you can afford it, not necessary if you cannot.
Nope, I'm from Europe and I signed in successfully.
Question: why would u need a certificate?
Out of interest can I go for the audit, then change my mind and upgrade to paid during the course?
Thank you!
Do you think someone can do this course with an internship during the summer?
Do you have to keep up with it at the designated pace? I have exams in June and only finish on the 21st, so I'll only have time after that. Is it doable in a month?
> I would suggest you learn a little about basics first. It starts out easy enough, but then it really gets rolling, and you'd likely feel overwhelmed.

I did the first three weeks' assignments then found myself lost and wasn't ambitious enough to dig in and learn it. I'm retired after a 30-year coding career.

>I don‚Äôt personally recommend ATBS because I didn‚Äôt enjoy it‚Äî but that doesn‚Äôt mean it isn‚Äôt helpful to someone who would

IMO ATBS is better for people not interested in programming more than a hobby, it covered what you need to know, and leaves you with enough to do as the book says in the title.
Running through ATBS now to get the basics. Still imagine it would be worth it to pick up Learn Python the Hard Way after?
I'm doing CS50 now, is it overkill to do the MIT one after, as in would I mostly just go through things already covered in CS50? Trying to figure out if I should use that time doing something else instead, like working on a project.
Hmm okay thanks.

And im just reading though it, and it seems like we can.

"Who can take this course?Unfortunately, learners from one or more of the following countries or regions will not be able to register for this course: Iran, Cuba and the Crimea region of Ukraine. While edX has sought licenses from the U.S. Office of Foreign Assets Control (OFAC) to offer our courses to learners in these countries and regions, the licenses we have received are not broad enough to allow us to offer this course in all locations. edX truly regrets that U.S. sanctions prevent us from offering all of our courses to everyone, no matter where they live."

But do you know about the credit you have to pay afterwards ?

Im thinking about this?

We're partnering with Charter Oak State College, Connecticut's public online college, to provide students with a unique opportunity to be awarded transferrable credit for work completed in selected edX courses. This partnership will give students from all backgrounds an affordable and flexible way to earn college credit, track their accomplishments and work toward a degree. Students who enroll in the Verified Certificate track and pass the course with an 65% or higher are eligible to receive Charter Oak State College credit. \*\*

Credit details:

***Number of credit hours for this course: 3 credit hours***

***\_ Cost: $300 USD ($100 USD/Credit Hour) - pay for credit earned after passing the course with a 65%or better.***

***Eligibility:\*\*\_***

***Learner must enroll in the Verified Certificate option to be eligible for credit upon completion of the course.***

***Learner must abide to all course and academic integrity policies throughout the entire course.***

***Learner must receive a passing grade of a 65%or better in the course***

Or is this if you wanna educate your self futher you can use this to withdraw points or?   


Maybe its just because its US i dont understand it... Im not sure. :)
good mod :) wish more were like you
Thank you!
If you don't pay for the certificate, you won't be able to take the midterm and final, which will really help test your knowledge. And all the content will be gone as soon as the class is over.

I took it before it was all behind a certification, basically a paywall. I would say it's worth it if you can afford it.
Probably if you need one to spruce up your resume or if your employer requires one.
You don't have to, but then you can't do the exam.

Is worth it at 3 times the price.it's a top course.
If you study elsewhere and you could include this course into your studies
Yeah u can do that
Possibly, but it will require you to utilize a huge portion of your free time. There's no harm in starting it and picking it back up later, BUT I think it's only given once a year, and classes are only released a week at a time, so let's say you get three weeks done and quit, you'll have to wait til next class AND three weeks to pick it back up. I still say it's worth it, but the absolutely best part for me was his coverage of algorithms. Someone else on here might have a suggestion for something else for algorithms
I don't really think so.
It won't all be released at once, so you can wait until a month before the end of the course and THEN cram if that makes sense, but otherwise you won't have access to all of it when you need to
I agree with your assessment
Can you tell me what ATBS is please?
Hard to say and as this conversation hit on a bit it depends on what you‚Äôre looking to do with programming. 

The way LPtHW teaches you is kind of a ‚Äúf-you figure it out‚Äù approach. This isn‚Äôt for everyone, but I think it helped me become a better programmer. It introduces you to a concept and if you want/need to find out more it tells you to look at the documentation or google the question. This teaches you what actual working devs do every day. 

I can‚Äôt specifically recommend it to you though, because I don‚Äôt know you and I don‚Äôt know what you will know at the end of ATBS.
I think the payment is for further education.
All the mods in this subreddit are pretty good and I'm glad they let me join them.  It's a great community too and that helps a lot.
Yeah, though if you‚Äôre applying for a university you basically need a screenshot of the ‚Äúcompletion‚Äù page. But the main thing you need is (in top universities) they usually don‚Äôt care about certs, rather much mote about what you have done with the knowledge required for the cert. That‚Äôs why I don‚Äôt pay for these certs because it‚Äôs becoming less and less valuable.
[deleted]
Stands for Automate The Boring Stuff with Python (https://automatetheboringstuff.com/)
ATBS or ‚ÄúAutomate the boring stuff with python‚Äú. A (still) popular book and online resource for complete beginners. I enjoyed it immensely but I would think there are many good alternatives.
Sounds like if the goal is to be a dev at the end of the day, there could be some value in that book. 

Thanks!
Anyway even if its 300, i dont mind paying that for a MIT course :)
\>>if you‚Äôre applying for a university you basically need a screenshot of the ‚Äúcompletion‚Äù page  
Wait a second here, how do you say that? Can you please elaborate? Which university told you to send them a screenshare of completion page?  
I have been in a similar process and I was told that I need "courses with letter grade" (e.g. take classes from community college, extension universities etc.)
Anything bud? Your response could save me some money since I am taking classes and earning academic credit.
But still it may looks good on your resume. I am excited about this.
What's the point then a piece of paper you can print out that says the letters MIT with some fancy text nice üôÇ
Meh.  I finished it a couple of months ago.  It's just pre-recorded videos and recycled questions they've been using for many years.  It's just about worth $75 for the certificate if you need to build up a resume.
As someone just learning Python I also found PyCharm to make it so much easier to deal with the environment setup so I could focus on the problem I was trying to solve.
Thank you for this intuitive write up.
If you think pycharm is cool, give VSCode a try... 

GAME CHANGER for me.  I had been using PyCharm for a couple years, it was amazing for this one year long project I was working on, but for small projects I felt it was a pain.  VSCode is fast and light and has all the chops to handle the big projects and make them feel light.

Glad you are enjoying Python, keep on rockin'
Thanks man
This is the uplifting story I needed when everything seems so bleak. Also thanks for the inspiration to stop doom scrolling and get back to Python.
This post really motivated me.
Thank OP.
New to programming here. Thanks for sharing. One question I started with Android studio cuz I wanted to learn to make an app, is it ok!? Should I switch!? Any tips for AS learning. Thank you all for responding and Op congratulations and am very happy for you.
May I ask what kind of mobile apps you were able to create? Especially ones you were able actually professionally create and sell?
Do you think it's doable to make a living without a degree?
Thanks for sharing. New to python but looking forward to diving into your suggestions along with the YouTube series now.
/r/wholesomeprogramming needs to be a thing.

Edit: oh hey, it *is*! Seems to be dead though :(
[deleted]
lol okay you convinced me il give pycharm a chance. I kept getting ads for it but have ben sticking with sublime because how clean and lightweight it felt.
Awesome thanks for posting this
I just started trying PyCharm myself coming from Sublime. It has some great features, still trying to get used to it and decide if I want to switch full time.
Congrats
Really motivates me in learning Python
What kind of jobs did you get on fiver and upwork? Apps or other stuff? Any tips for starting out doing gigs?
After learning the basics such like looping, data types, functions and classes what did you look into after this?

I love Python but haven‚Äôt used it in too long as I‚Äôve been learning a few other things. I need to jump back in and probably start with some libraries and just getting my brain back in the right gear
Glad to hear! I was trying to mess around with the same Kivy tutorial and I was getting more and more confused lol.
Gonna give a shout-out to pycharm with you. Great Segway into virtual environments and eventually the git world
Thanks for sharing. Very uplifting. Some things are just starting to click for me. Gives me the incentive to keep going.
What a great post. Very motivational. Thank you. I‚Äôm only on chapter 5 of Python Crash Course but I‚Äôm enjoying myself! Excited to learn more!
I started learning Python by following tutorials on W3Schools. I won't even regard myself as a beginner at this stage, but I'm happy to learn some bit by bit, everyday.
I wish more YT tutorial creators would use Pycharm in their videos. Even though Pycharm is superior to Sublime for a beginner, the creators will use Sublime in the video. I think this leaves the beginner spending way to much time just trying to figure out how to build an environment for learning.
Thanks for the post!  
I was wondering how you went about your daily practice: where did you pick your exercises from, or did you everyday come up with an idea "today I'm gonna try THIS!"?
Thank you for sharing this is the inspiration i needed
Seeing this post gives me hope for our world! Keep killing it!
Nice to see a huge shout out to Tech with Tim. Many channels are great for lots of seemingly specialized purposes but Tim‚Äôs channel just has it all in a very accessible, easy to learn, and applicable vids. It‚Äôs really the first (and usually only) channel I always recommend, so I‚Äôm super glad it‚Äôs gotten you too to up your python skills=)
!Remind me in 2 days
I don't know why but this post fills me with such joy to see that you have found something that you continue to enjoy and that is paying you back in so many ways.  Great work!
I've used python for backend stuff before and I've experimented with Kivy before but is Kivy actually viable for making proper apps? I'm a react native dev and I've always wanted to try out Kivy.
great job man!
Woahh love this, I'm so happy for you. I started learning python last year as well and recently some stuff happened and i got an opportunity. Python helped me immensely. I'm currently having my sem exams. I'll make a post on it after my exams are over. Thank you so much, you've inspired us all. Hope you grow more and more. Best of luck
So you mentioned that it took 3 months to learn python. How many hours a day did you spend on learning? Also were you just following tutorials or did you make your own projects after tutorials?
I‚Äôm new to python too! I‚Äôve been learning for almost 2 months now. Started with Tim‚Äôs videos (Tech with Tim) and now I‚Äôm in a udemy class.
I‚Äôm in the medical field and I use python as a way to relax but keep my mind active the same time! I love it!! I try to practice every day as well sometimes for hours and others less according to my studying for med.
I use sublime and VSC. I have tried pycharm as well and I think it was the most easy one to use! VSC works pretty good for me at the moment! I use sublime to make simple code for stuff that I want to keep as a ‚Äúpython dictionary‚Äù (not dict()) I mean true dictionary! When i need to review specific things like lambdas! 
Thank you for that post! You make my day!
That‚Äôs great :D , can I know what major sources did you refer to for learning python , one is tech with Tim
What a wholesome post. I'm glad i read this.  


Wish you all the best!
Is it possible to create a fully functional app using only the language python?
Thank you, this  post is really motivating, I just want to know what is your full-time job if that wouldn't bother you off course.
Besides learning with tech with Tim, what other YouTube channels do you learn with or recommend watching?
Hey, congrats on making it with Python man, I'm trying to get there but with a traditional job maybe. I focused on web dev with using Python for backend the usual HTML/CSS/JS for the frontend. I was wondering how your approach of using Kivy would compare to this? Does having a native interface on all platforms instead of a web browser ease things or produce more problems? Also, how does packaging and shipping the app on different platforms work?
Just started python couple days ago at the age of 14 I want a job with something to do with web development in the future or something to do with web and I am planning to learn 1 or 2 more programs whatever helps with web development ( HTML, or Javascript)  i have so much time am I heading in the right path to eventually get a 6 figure job eventually with this? Any tips?
Currently trying to get a jobless friend of mine a job. He doesn't have any programming experience but is very eager to learn. I hope I can get him into programming via Python and finally into a job he enjoys. Job offers for programmers are quite good I've heard. And if it doesn't work then he has a new hobby I guess.
Thankyou for this!
you should learn c or c++ it's even more fun!!
Great write up.. very motivating. Keep it up and thanks!
I do want to warn you about something - _do not_ take the Kivy API as some sort of example of how to write Python, because these guys are not.

For example, it's perfectly common to see a color constructed - and then just thrown away!

It turns out that the constructor of `Color` (and several other classes to) has a side effect that adds it to any graphics context you might be in.

This isn't just not Pythonic - it would be a bad idea in any language.

And their Kivy "language" is worse than useless, because if you use it in a component, you can't then generalize that component.  (Also, all the variables in that language, anywhere in the code, are in one huge global scope.)
As someone who has used both PyCharm and VSCode for many years each, my productivity is much higher with VSCode; also everything is free. With PyCharm, to have to purchase to unlock all features.
I'm just starting with pycharm after two years of using the standard. The ability to create an environment within Pycharm is pretty nice, but it's so complicated and seems to work slower than the notepad-style standard one. I dunno, both have merits but it seems like anybody who takes Python seriously uses Pycharm so I feel like I'm probably in the wrong.
Lol seems I got carried away writing xD
I've been looking for this .. I just recently shifted from PyCharm to VS Code and i just love it
I'm write mostly Java and I love IntelliJ and already know the interface. But Python's syntax is so much more casual, I prefer VSCode for Python. It's a much calmer environment.
This!!! I started on PyCharm and it's cool but I love the simplicity of VS Code. It also integrates really well with Azure dev ops projects.
Ahhh, same here I used to use Pycharm for python, and Intellij idea for java but switched to VS Code and I dont think I am going back.

Now pycharm has some cool features but you can probably find an extension to do the same in VS code.
Currently I'm amazed by PyCharm and IntelliJ, but I have to give VSCode a try it seems...
VS code > All
Thanks! AS is great! I don‚Äôt think you shouldn‚Äôt switch, because it‚Äôs a native software. So it runs best on Android, and has all the latest features. For learning, don‚Äôt focus on whole apps at the start. Instead, focus on creating an app that focuses on a certain feature. Good luck!
Android Studio is for Android development (duh...) with Java and Kotlin. Python is worth learning as well but you don't need to "switch". Just keep learning whatever you like.
Mainly fitness and messaging so far. Also had one todo app. I am working on transferring from python for both front and back end to only back end, and then using a specialized tool for front end.
Honestly, degrees need to go fuck off in computer science. Sure, it might look good when getting a a full time job. But it‚Äôs not like fields such as medicine. It‚Äôs about how you do it and do you understand it, not do you have trusted training. I know people who taught themselves, and make 6 figures as a web dev.
Yeah, I have. I just had a bunch of personal projects and I'm always talking to people about them, because well, I'm obsessed. Then I ran into some people who wanted to get me a job. But you can create a portfolio and apply for jobs with projects.
Ya, anything by Tech With Tim I seem to automatically understand. Just something about how he teaches.
No problem. Thought I would just let y‚Äôall know that someday you will be able to code anything you want.
Ya, I wanted to stay loyal to sublime, but I gave PyCharm a shot and it really got to me.
Yeah pycharm is good but its a bit bulky, I switched to VS code and its light and has all the features you might need + extensions are available as well.
Np
Normally just companies looking for a new app design or an individual with some ‚Äúgreat idea that will make millions‚Äù or something.
Python is a general language, and arguably the best and most general language out there. So you can do things from AI, to automation, to web development! The main categories you would want to look into and choose your favorite are: Scripting/automation, data science/AI, Web Development, mobile development, and desktop development. Research all of these, and give them all a shot. Continue to mess with them until you find one that stands out. Get really good with libraries related to that, and practice creating full projects in your category. If you want to become a software engineer, try getting familiar with all of them, but I would focus on things like data and scripting. Good luck!
What didn‚Äôt you get about it?
Good to hear üòä
Thanks! I heard that course it great, and I wish you good luck.
Honestly I‚Äôve gotten so used to PyCharm, when I try to manually create an environment I think ‚Äúsince when was this so complicated?‚Äù
Typically I‚Äôm not that creative in coming up with ideas(unless I‚Äôve already started coding it), but somehow I managed to say ‚Äútoday I‚Äôm going to try THIS!‚Äù
I wish you good luck for the journey ahead of you.
Haha, thanks man.
Thanks. Honestly if Tim didn‚Äôt start his channel, the world would be a different place(in terms of programmers)
Lol
I will be messaging you in 2 days on [**2021-01-22 04:42:57 UTC**](http://www.wolframalpha.com/input/?i=2021-01-22%2004:42:57%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/l0lyh2/thank_you_guys_and_python_for_giving_me_joy_new/gjwvkql/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fl0lyh2%2Fthank_you_guys_and_python_for_giving_me_joy_new%2Fgjwvkql%2F%5D%0A%0ARemindMe%21%202021-01-22%2004%3A42%3A57%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20l0lyh2)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Thanks!
Well personally I use Kivy just more design and stuff. Not the total backend. Although I won‚Äôt go into that because my process some people might not agree with, and also is a bit complicated and hard to explain.
Thanks!
Best of luck to you too.
Ah, no it took me about 3 months until I felt like I could build any app on a couple days with Kivy. For that, I learned from Tech With Tim and followed along with my own code. I would use the features he taught, but I would try to push the boundaries a bit(a thing every programmer should learn to do)
Glad to hear that üòä
For basic learning python, I found that even Tech With Tim really rushed through it, and I learn by mastering every step. So when they do it all at once, I get confused. So I resorted to the python docs, looking at all the basic functions and mastering every one. It took a while, but I would write a program that includes and revolves around that new thing I learned. Whenever I didn‚Äôt know of a function existed, I would just look it up on google. Typically W3Schools or something would have it. Whenever I learned a new function, I would put that code on a replit at repl.it. I would also put how to use it exactly in comments(#[your text]). So whenever I got lost, I could scroll through my replits and find one I was looking for. I then could look at how you use it, and then I would include it in my program. This eventually led me to remember every single one.
Thanks man.
Yup
According to a contract I signed at the beginning, it‚Äôs illegal to tell you what I do. But that might give you an idea, maybe. :/
Really sorry, but I don‚Äôt think I can answer that one. I don‚Äôt love YouTube tutorials for coding, as they seem to rush through it and not step by step. So I really only watched Tech With Tim. Unless Google and docs count as tutorials :/
Wow man. Congrats. Sadly, I don‚Äôt have any real experience for actual jobs. But I do know that not giving up is key.
That‚Äôs nice. Good luck!
lmao why the downvotes?
It‚Äôs fun until the dreaded text comes out

>!Segmentation fault (core dumped)!<
Thanks everyone for the love! Didn‚Äôt know y‚Äôall would like it so much!
dude respect to you for learning the pad environment, after tasting clion and pycharm (JetBrains stuff) i don't think I can go back.
Honest question: what are you coding that PyCharm is too complicated for?  I‚Äôm curious.  

I‚Äôve been working on a self-driven learning project (I‚Äôve only been learning Python for a few months), and PyCharm has already paid for itself in Git integration, markdown preview, managing the environment, linting, and debugging.
15 years of Python, and I use emacs still for everything.

If I were starting a new team, I would probably recommend using PyCharm, though.  I'm very fast with emacs but it took me a long time to get there.
Yeah, when you find pycharm, you think, ‚ÄòThis is amazing‚Äô! When you find VSCode, you think ‚ÄòThis is amazing AND EASY!

Oh, and VSCode works with all those other languages!
This. Focus on creating an app - code is up, and you just got a blank page for an app. Now add a search bar, then add the button, add the ability to take input from user, add the ability to store that input, now show it to the user, etc.. 

This is where it took me so long when starting to learn programming.  I focused on the big picture. Rather than just a small component of it. Once you do the small pieces so many times, it will become second nature. You will not have to think about it really that much. It's not that you will not think about it so often, it's just that you will be familiar with design of the code or understand in a precise manner how to word your question? If that makes any sense.
Thank you mate.
That's amazing. I'm honestly happy you found personal and professional success.
Any examples of such front-end tools?
To say CS degrees should go fuck off, is frankly off putting. Why hate on those that took that path?
[deleted]
Can you link the Tech with Tim series on Kivy?
I'm not sure, think I need to do more with OOP beforehand. Personally I learn/retain better with building something using everything bundled together, rather than learning each individual function. 

Might try it again later after messing around with OOP more.
Wow that's impressive for over a year!
Thank you and good luck
Yeah, websites or anything that can help
Python has a special place on my heart
May I ask why you like pycharm so much? Also, how long does it take to learn the interface lol
It's not that anything I'm coding is particularly complicated I just find that when you run your code it takes longer to run. The complications I was referring to don't extend beyond my struggles with the interface lol.
Thank you so much.
Thanks :)
I know Adobe has a couple UI builders, but forget what they‚Äôre called. I personally am starting to use Flutter.
I was over exaggerating a bit, prob should‚Äôve clarified. Computer science degrees need to not be a standard in computer science. I have a degree. I got it because I wanted a higher business management position, and I‚Äôm on a pretty good path. Working on my MBA and it‚Äôs great, but for the general public, it is not as needed if you just want a basic computer science job.
Glad to hear that. If you have any questions feel free to ask.
Hope [this](https://youtube.com/playlist?list=PLzMcBGfZo4-kSJVMyYeOQ8CXJ3z1k7gHn) helps :)
Wow, I never knew people really learned that way. I always thought people learned different ways like having a teacher, online courses, listening, writing stuff down, but never thought about how people learn in terms of that. For classes, here‚Äôs my tip:

For self, think of it as a universal variable for your class(Might make it harder to understand, but a variable for your class specific to the object your using it with). So it‚Äôs kind of like a messenger. It delivers variables from that object to your functions. It also delivers functions to other parts of your class, etc. 

For __init__(), it‚Äôs what you use to create that object. It‚Äôs the initializer. Also for passing something into a class like GridLayout or App(talking about that tutorial), don‚Äôt worry about that. In base python, you don‚Äôt really use that. In fact, I don‚Äôt pass on things to a class very often at all besides Kivy and stuff.
Haha, thanks
Thanks.
W3Schools is great. Other than that, google and stack overflow are your best friends.
hahaha, SAME
Addons. There are so many addons that make your programming easier. Also for me if i have a bunch of functions im not gonna remember the perfect spelling to each, so having some kinda like intellisense is a must for me. But i respect people that dont use it, for me it feels like it requires an extra installation of mental bandwidth if you know what i mean.
It might look cluttered but the only absolutely essential parts are running the program, creating new files in the venv and writing code. The type hints are really nice and once you get used to it you can slowly look up how to do certain shortcuts that you find handy as you see fit. It's the wrong approach to go in and try to learn everything before you write a line of code.
Thanks! I've been working on a game in python with pygame and my family and friends have been requesting I port it to smartphones (its a productivity game using a pomodoro timer). 

I thought I would have to recode it in Unity but this might be a much easier way to get it on mobile! I'll post about on this subreddit if enough of my testing groups enjoy it.
Good luck!
I'm even worse. I have one program that's 268 lines, with over 2000 lines commented out below the end of the program. The complete previous 4 versions.
Never heard of version control software, like git?
You didn't have to call out us like that üòÇ
Nope sorry all my code is either in use or broken and not fixed


For real though the only comments in my code for my side projects at work are pretty clean lol. But they're also sub 200 lines of VBA, Python, and Powershell.
Yay I‚Äôm not alone. We‚Äôre all here together with this commented our code blocks.
This is not the way.
Remember "git good"?

Only, in the context of programming it is actually good advice. Especially since file versioning not only allows restoring previous versions, but also comparing the changes and who made them.

For private-use scripts, it usually ends up a single linear history for me. But even then, tracking if the changes can be quite more helpful than just storing the old version.

Though for office documents I have retained the time-proven folder structure of

    ~/Documents/
       |-- thesis_v1.docx
       |-- thesis_v2.docx
       |-- thesis_v3_final.docx
       |-- thesis_v3_final_v2.docx
       |-- thesis_v3_final_v3_final.docx
       `-- thesis_v3_final_v3_final_v2.docx
‚úãüèª
*both hands up*
Like, I might need it some day. ü§£

&#x200B;

Thats my excuse, and no one can change my mind! üòÜ
Although I don't do it too often now, I used to be in this category as well (I still am, sort of, until I have to clean my code).

It is like looking at your child's growth from 0 to where it is now. All the unnecessary building blocks are still visible to you. The hard work and struggle that went into it, and the various methods that you tried and failed, and redid.
git gud

git is REALLY easy though, has some quirks but on the long run the feeling that you can't delete anything by accident or some other way or form is a great safety net, since you can always roll back the code to some "save state" if you will
No. PyCharm has Scratches.
üñê
Raise both hand üôå and both feet üë£
I lay down on the ground and wear the earth as a backpack so wherever I go I'll always have home...
Yes because he who knows not his history has a dull present and his future in the shadows
No. I do work out in the comments algorithms and flow, but I promptly delete it once I have it right.  As soon as I have something that works, I commit, and if i want to change it, I do so in new  a branch and merge it if it's better. But then if I want to go back I can. There really is no need for this even if you code alone.
Please, I just use the bad code too. Amateurs.
I use GitHub be but I didn't know why i still comment out code .
Had a coworker that did this.  We used a CMS so I just deleted it when I was in the file.

What he did that was funnier though, was when our idiot manager told him to do something stupid, he'd put the email from the manager into the code as a comment.  I always left them in.
Pro tip, use Git and then you can just save deprecated in old commits.
I comment out code while I'm actively replacing that bit of code. Once I have, I delete the commented out block, and let git remember the old version.
To people saying "use git". The problem there is the snippet is visually lost. You have to go looking for it. So you have to know it _was_ there.

I wonder if someone wrote an alternate version of this function eleven commits ago said nobody ever.
Nope; that's what version control is for.  If I need the code back, I'll pull it back out from the commit history.
Is there a support group? I'll be there.
üëã
no i keep that shit in branches
I just leave them out as a resource I get back to when I have something new, instead of memorizing commands
Don't know how to operate git yet. Just trying to make my code properly as of the moment. Is 200 lines of comment good or bad??
Only for short-term changes. If the change works, the crud gets deleted. If I ever need it again, I'll find it in the subversion repository. You *DO* have and use a revision control system, don't you?
Eh. i remove the commented code once i am ready to release.
My code is so messy if you put it into production it would become the antithesis of a sentient AI and rob the universe of sentience the way the ring gate entities in The Expanse book series did just by running ass-fuck_peepee12345.py
Can I raise my hand if my ~/scripts directory is like this?

Sometimes I go in and look and the old ones won't even run due to missing modules, outdates features, etc..
They were until I learned git.
Pretty called out here, haha.
I‚Äôve started to get familiar with git and holy shit its a savior. 

Branching major steps, and deleting away in the code
My projects always have a "notepad" folder, which is just random code I'm keeping, multiple files of course.
Every project I get serious about gets it's own folder that holds the code itself, a "Notes" file with links/bookmarks to resources (github repos, stackexchange, blogs, etc), comments on problems I've encountered and the solution if I found one, and **LOTS** of snippets of code I didn't want to leave littering up the main code. it also holds any resources I downloaded along the way.
At least I am not the only one ü§£üòÇ
I make it a point to leave my files with as few lines as possible. I'm more likely to regret deleting something I have to retype.
I can relate, but also do you work with git ? Even when working alone for personal use it can be quite useful for testing features and managing versions.
Commented out code immediately gets shit on if makes it into a pull request.
I must be the only one that hates git here lol
I still do this sometimes. Even with git. I‚Äôll also save copies on my local storage of previous versions as well.  
  
I do, of course, remember to clean things up before I push.
üëã
Only for testing, I like to make a new script and use the pieces I need but I'd still keep the old script in a "legacy" folder üòÑ
Here, here Sirü§ö
Those commented out lines helped me trouble shoot. I keep them as respect for their help
I [made another comment about git workflows here](https://old.reddit.com/r/learnpython/comments/s89bpz/raise_your_hand_if_your_scripts_are_littered_with/htg2ofi/), but at the top-level wanted to note that I _do_ have a few comments about code _but not the code itself_, _e.g._ "This code used to make calls to the second DB that it was decided wasn't needed; see 1234abcd" where it's a single-line breadcrumb to a revision in the repo that has the unused legacy code.
Title feels 'judgy'. 

*triggered*
Do people not use github?
I‚Äôm gonna need you to stop calling me out like that.

I usually have a `scratchpad.txt` in the root of my projects.
In the middle of rewrites only‚Ä¶ I enjoy the feeling of deleting the old stuff.
I am working through my first full python project right now. I have had to fully rebuild the thing 4 times now, and I have scrap code scattered across 7 documents... I am a mess right now, but I cannot wait to go back and delete all of the scrap in my many code graveyards.
I normally take out everything when it's done, but I'll leave the "this block does x"
Do you have a moment to talk about our lord and savior, git?

Everyone knows that Jesus saves, but he also commits with well-written commit messages, and frequently creates feature branches, pull requests, and version tags.
Bruh.  No disrespect but ... bruh.
I was also going to recommend git. Keep your previous versions in separate branches and don‚Äôt delete them until you don‚Äôt need them anymore. Keeps your code very clean and nice :)
I would smother you in your sleep with a pillow if I had to work with you.
if only there was a solution for that...
yeah who needs a commit history when you have every one of you're previous versions commented out
Haha one of my coworkers "saves code for later" this way too, even though we self host gitlab.
[deleted]
how often do people commit? like, what is good practice?

when i'm writing code i usually only commit at the end of the day (i code to enhance my job, not *as* my job, and am the only person who uses my stuff), or sometimes less often than that. just working locally in my pycharm project, making edits, whatever. then I treat git as a backup once in a while after maybe i've written something completely new or want to work on a different machine.

so.... as a consequence, instead of deleting code, i'll just comment it out as i rewrite or tweak stuff... and then i just leave it there. and it grows.

i'm realizing in this thread that this is not good behavior. 

so how *should I* do it?
Just as long as I don't need to clear my `git stash` or local wip branches. It's not a hoarding thing, it's useful.

What if I need that some day!? That's a perfectly good commit right there, just need to fix it up and make the tests pass and finish refactoring is all. Solid commit, can't delete that one.
Where do you back up github???
Assuming you can track down that one commit where that block of code that you want is stored.  Ahhh, but you didn't store it cause you didn't finish it...I just don't get it.

Sure, once it's pretty solid, go ahead and clean it up.
Sometimes it's legitimately less cumbersome to quickly comment and test instead of delete, commit, test, revert.
Comment IS the fix for me lmao
Haha, '*but I really loved that function*'.
No, not that final, not that one either ü§¶‚Äç‚ôÇÔ∏è
I lose stuff in branches all the time. Like, it's there. Somewhere. But I'm not going to spend time splitting the atom to find it.

I'm not saying to hoard stuff in one file, since that is even worse. but hoarding stuff in your git history has some downsides
I feel validated, thank you for this
If it works, it works ü§∑‚Äç‚ôÇÔ∏è
To me it seems easier to comment out here and there than rely on git to track every little tweak. At least when you first start and nothing has made it to production.
What a merry prankster
git is REALLY easy though, has some quirks but on the long run the feeling that you can't delete anything by accident or some other way or form is a great safety net, since you can always roll back the code to some "save state" if you will
yes
Yea, that‚Äôs my plan too. IF I finish this project AND IF it‚Äôs properly refactored I will share it on GitHub and it will look sparkly clean
The ring gate entities did WHAT!?
Haha. Don‚Äôt get me started on my Documents folder. Sometimes it‚Äôs like looking at a drawing from 1st grade‚Ä¶ technically the same human being but the brain has changed‚Ä¶
Honestly Felix, git has been on my to-do list for awhile. I always put it off because I‚Äôd rather learn a new module or work on JavaScript (heresy!). After seeing the feedback on this post I read up on git a little today. I have seen the light üí°
Learning how to use git was one of the best decisions I've made. It's an indespensable tool for me now.

If your issue with Git happens to be learning to use it, grab an [easy book](https://www.packtpub.com/product/git-version-control-for-everyone/9781849517522).
Proper reverence and humility in the eyes of the #
touch workbook.ipynb

echo "workbook.*" >>.gitignore
So when are we moving to a branch that is not a testing branch?

I mean... You don't test in production.
[deleted]
Praise ü§≤
sure, but who does he blame?
RNJebus needs less branching .. more CD in his life
Git is a nightmare. It's so overly complicated I've also reverted to commented out code.
Look my credentials when I wrote the first one were my boss saying "hey you're good with excel, we need you to learn c# and make this thing work"
I really need to learn git. I'm 100% self-taught and I didn't know anything about git until I was several versions in. It's a program that only functions within my company's ERP system though, would it still be useful?
Fair. Luckily I'm 100% solo
Maybe if I think about it I'll git an idea
This is me üòÇ
It's the other way around. Learn Git first, then learn GitHub (which you will have to, once you learn about remote repositories).
As the adage goes, Git is to GitHub as porn is to PornHub.

Git is universal: GitHub is just one hosting solution for a Git repo.
Ideally: 

- think of a feature you want
- write tests for that feature
- write code so the tests pass (and the feature is implemented)
- clean up  the code if you did something weird / tried different things
- commit

If you are working on a big feature, just commit a bunch of subfeatures. E.g. if you are adding an authentication system, you could commit after adding a user model, after adding a login function, after the registration function is done, etc.

In practice, very few people follow TDD practices, so at least commit whenever you implement a feature.

If you commit everything at the end of the day, you may be tempted to commit partial or broken code... that's not really good. Save for some exceptions, every commit should contain working code. (Bugs you haven't found yet excluded, haha).
Every time the code is working - if you add a function and call it, then commit.

If you get your test working, commit.

Once a feature is ready squash and merge that branch into your main / master.
Commits are "one level above saving, one level below completion".

Generally, when completing a coding task, you're going to make a bunch of changes throughout the project, then you save. Saving is essentially: "what I've written is what I intended".

Then you'll run or test your code, and discover that while you wrote what you intended, it's not what you *meant*, so you'll make some more changes, save, and repeat. At some point what you've written will work the way you want. A commit is essentially: "what I've written is what I need".

Then you'll combine a bunch of "what I need"s into a working feature, repeating all the above. This is when I push--probably not to `main`, but to the dev or working branch. A push is "this is complete".

Remember that commits are free, easy, and can be infinitely modified especially when local. You can take a bunch of commits and merge them into one, you can split a commit into multiples, you can reorder them, change them, add to them, etc. Too many people treat commits like they're carving stone.

----

My workflow looks something like:

* Identify a feature to work on
* Make a dev branch for that feature
* Write some code, save, repeat
* When things work (but might not be complete) commit, even if it's "WIP"
* When I get up from the desk, commit
* When I'm leaving for the day, commit
* When I have to switch to another task, commit
* When the feature is working, then I squish all my intermediate commits into one, logical "component" with more descriptive commit messages and push.
* A feature usually consists of multiple, squashed "component" commits
* Then the dev branch is merged with a pull request

Commit messages are a very powerful tool to remind yourself of what you were doing, so use them. Even if I haven't touched a particular branch or code in a while, I can jump back in by reading my commit messages.
Technically, you should only **push** after all the code has passed the test suite, ie, don't push broken code.  I've often pushed at the end of the day whether the code works or not if I'm the only person working on the code base for two reasons:

1. Use the remote repository as a backup
2. I may want to work from home later in the night or tomorrow on another computer

I **commit** after every discrete complete change.  That is, when I can write a commit message like "finished the #123 bug changes".  You shouldn't have multiple changes in a file made for unconnected reasons.

I never comment code out because "I might need it".  There are two reasons why you might need it.  First, you are uncertain that the changes you have made are something you should do, ie, they are experimental.  In that situation you may want to go back to the earlier version, or two.  For a single file you can just go back one or two commits.  For larger, longer timeframe changes, I try to remember to tag before starting the series of changes so I can easily revert multiple files back to a known point.  For smaller code bases I have been known to nuke or rename the directory and reclone from the remote repository as a last resort.  Really only possible if you know you started from a clean state with no pending pushes.

Second, if you think you might use that commented out code in other files or projects then it's worth taking that code out and making a proper mini-project of it with documentation, examples and a test-suite, all in a git repository somewhere.  Much easier for you and others to reuse that way.

That's what I do, but YMMV.
If you use github/gitlab, or locally hosted systems, you have your source code in your personal filesystem, the filesystems of anyone else working on the code, as well in github, etc.  In a sense, github/gitlab/your git* server **is** your backup.
Every local copy of the repository is a complete backup of the entire history.
    git push origin
‚ÄúI may need that function in the future‚Äù

- me
Same for me I don't do anything for production yet.
You and every undergrad. But that almost never happens.

Just release your mess and learn how to refactor and clean up as you go.


Same goes with testing. Gonna suck at first, gonna take baby steps, but eventually you'll test as you go. And it'll never happen if you try to test all at once
Did you know that you can put that in you .git folder without tainting you gitignore with evidence of your inequity?
Testing in production? Nah I would NEVER do that... promise.
Try Gitkraken free edition. Makes git tolerable and easy, since it lets you visualize branches gives you clean menus for options

It's a bit of a crutch, but it's helped me a lot.

These days I mainly use VSCode's git tools, but to fix big messes I still like Gitkraken
Ask and ye shall receive! [https://www.youtube.com/watch?v=USjZcfj8yxE](https://www.youtube.com/watch?v=USjZcfj8yxE)

The basic idea is that it's a tree for your versions. If only your RPG save games had an arrow pointing to the previous game load that a game save started from, then you could easily see where your game plays branch off from each other, and it would be easy to back track and try alternate story narratives. With Git you can see the tree.
At its most basic:

1. Write some code you like.
2. Commit it with a useful, identifying message.
3. Remove some code you didn't like that much.
4. Commit again, also with a message indicating what was removed.
5. Write/remove/commit some more.
6. Remember some long-removed bit of code you actually need again.
7. Now, instead of digging through 10x your codebase's worth of comments, you just search the commit history for that useful message you left at the time.
8. Checkout that commit, and your file (the whole repo, really) will be returned to the exact state it was in when you made it.
9. Copy whatever you needed from it.
10. Go back to the last commit again, restoring all your subsequent changes.
11. Now you've got all your shiny new code, plus that dusty old function you thought you'd never need again, without having to lug it around in a comment the whole time.

There's a lot more to it ultimately, like branching and merging parallel commit histories, undoing or patching individual commits onto others, etc. that gives you a lot more flexibility, but that's all you really need to get started down the road out of overly-commented hell.
Here is a basic git workflow with a simple, useful diagram:

https://uidaholib.github.io/get-git/3workflow.html

And here is a more in-depth workflow for using git with a team:

https://www.robinwieruch.de/git-essential-commands/
Whilst I understand the purpose and benefits of git, having not used it in a team or professionally, I really struggle with when to add and commit.  This is mainly because as a solo (amateur) developer I don't tend to work on one part of the program, I work on it all and in a coding session, I am continually working on it, so there's not really a break in time or completion point where I would instinctively do this.  

I would love to add git to my workflow but I don't need to do it and it just seems to add hassle (at least for now).
I recommend this video by Jessica Kerr:
https://m.youtube.com/watch?v=Dv8I_kfrFWw 

She explains the structure so that you get a feel for what operations you can *expect to find* to solve problems. She does not talk about the commands.
Totally agree. I now have a colleague who knows how it works and finally I understand why I'm doing what I'm doing.
It's not "overly" complicated. It does have some complex features, but they're all necessary for large collaboration. Once you get used to the basics though it's pretty straightforward. If you're struggling with it, you should try reading the [Git Book](https://git-scm.com/book/en/v2).
Your boss must be an amazing salesperson
What does your company use for version control? It is standard for any serious company to use some form of version control, and most use git. Even if they don‚Äôt, it may be a bonus on a future job if you ever end up switching companies.

It is definitely worth learning it for yourself too. It is an extremely useful tool that lets you dev faster, even in personal projects. Learn git flow. There‚Äôs apps and sites that actually simulate a git repo to learn the commands and common practices. The whole idea is to keep separate dev and production branches and develop new features in feature branches. This way if a feature breaks the app, only that one feature branch is broken and you can easily roll back by checking out the develop branch again. Meanwhile, your production code is untouched on the production branch, waiting for finished features to be merged in. I use it on all of my personal projects.

https://www.gitkraken.com/learn/git/git-flow
...Wow. What an explanation.
I commit a bit more often than that so I can go back if something fails, but I always make sure to squash my commits to a single feature before pushing =)
This is soooooo wrong IMHO. A major point of `git` is "lightweight branching."

 *    think of a feature you want
  * make new `git` branch for it
 *   write tests for that feature
  * commit whenever you get something you're even partially satisfied with in case you want to go back
  * commit when you think you've got most ideas solidified
 *  write code so the tests pass (and the feature is implemented)
  * commit empty files as soon as they're imagined so you don't miss them later
  * commit every few hours, every few ideas, etc.
  * commit every time you think you have a better implementation as you polish it
 *    ~~clean up the code if you did something weird / tried different things~~ (this happened in between everything above)
 *   ~~commit~~ Either *squash merge* back yourself, or if on a team submit a pull request *as a squashed merge*

At every commit or at no commit, your choice, you can or cannot push your branch to other users.
Do you have a recommended reference for someone to learn about writing tests?  I‚Äôm a hobby coder who has never written a test.  

<hangs head in shame>
Idk why it never occurred to me to write tests first, but it makes a lot of sense
[deleted]
I don't agree. For each task we just create a new branch, usually with a single developer per task/branch. Pushing often means the code is safe (in case of computer problems or the two reasons you mentioned) and other developers can see what you're doing. Once it's finished and passes all unit tests you create a pull request and move on to code review, testing and merging.
>Technically, you should only push after all the code has passed the test suite, ie, don't push broken code. 

That's only if you're pushing towards a shared branch (and not a feature branch) AND you don't have any CI.
Yes but what if I want to backup all of github
ü§£ but the apocalypse
Whooooooh
"I am just really proud of that function!"

 - me
Even if you later on move to just command based git, having it visualised to sort of understand the structure to begin with seems a pretty good way to learn it.
I have seen the light! This is exactly what I needed for my heathen ways.
What if I don't want a Gitkraken account? There seems to be a standalone version which I assume just manages your local repositories. Can you use the standalone version and then just use command line git commands to update a GitHub repository thereby circumventing the need for a GitKraken account?
I'll check that out thanks
[deleted]
The thing that helped me was to start setting up my personal projects as if I were working on a team. This would force me to use a lot of git commands I wouldn't find useful otherwise (every day making sure my local repository was in sync with the remote, learning when to merge, etc.), and also had the added benefit of keeping my project more organized, and my process more on a single track at a time.

Doing it this way also takes the pressure off, knowing I'm not going to fuck up anyone else's work if I don't know what I'm doing. You can start with super simple "projects". It's really hard to lose anything even when you're learning.
You must have points where you have something basically working but you plan to do some more work on it. Maybe clean it up, or add the next feature or whatever. It's at those points that it's worth committing because if you mess up in your next round of work, worst case is that you can revert back to your last decent version. But even that might not be necessary because your last commit acts like a checkpoint against which you can compare your current code and you can often use the diffs vs the last commit to figure out where you have gone wrong.

BTW add and commit are different things. Add is used to say that you want the file you are adding to be part of the next commit. Commits should be your main focus. Add is just part of the process of preparing a commit.
Even the basics are overly complicated. The commands don't make sense, etc etc. If this wasn't the only option initially I bet there would be a lot better options
Tbh it got me from data-entry drone to budding software developer in 5 years, with a pretty solid pay increase to go with, so I'm grateful overall.

The worst part is it Took me about 8 months of 50-60 hour weeks to get the thing set up right, when I realize now that if I had known what I was doing, I could have done it in a month while scrolling reddit for 15 minutes of every hour.
Appreciate the info and the link! I'll definitely be learning that. I don't work for a software company, I work for a healthcare manufacturing company that bought an ERP that it had nobody to manage lol. With stackoverflow and occasional calls to the ERP's tech support I was able to put together something that works, but now that I actually know programming I'm constantly rebuilding the programs I wrote when I had no idea what I was doing.
So vivid!
Yeah, that depends a lot on the scope of the features, size of the team, the project, personal preferences, etc. When I am working alone, I never squash, and I just use a rebase flow. If features are 1-5 commits, I don't mind them being separate, personally. For large applications and bigger teams, squashing definitely keeps it tidier.
What does ‚Äúsquash commits‚Äù mean? Why would one do this?
- Commit when inhale

- Commit when exhale

- Commit when eat

- Commit when drink

- Commit when piss

- Commit when shit

- In short, remember you ABCs!

- Always Be Committing!

The Zen of Git
Do you have to set up an upstream for every git branch you make?  I'm learning to work with branches but when I `commit` and `push` it says I need to set an upstream.  Since my remote is on github I think its saying I need to create a branch on github too.  But I can just work on my branch and when I'm done I can just merge it with my main then `commit` and `push`.
> This is soooooo wrong IMHO.

OP said they work alone and only they use their code. If you split up your sub/features into the appropriate scope, I think it's far more reasonable to commit a completed step rather than commit empty files (wtf?), broken code, and spend more time writing git commands than actual code.

If you do TDD right, you really don't need to refactor all that much. One feature, one commit. You add another test / feature that breaks a previous test? You refactor as part of the new commit.

> - commit every few hours, every few ideas, etc.

Sounds like you have a really hard time scoping your features, if you need hours to implement them...
This book is pretty complete: https://pragprog.com/titles/bopytest2/python-testing-with-pytest-second-edition/ (at least, the 1st edition is really good).

For Django, I like this talk: https://www.youtube.com/watch?v=41ek3VNx_6Q

You can always search for "pytest tdd" on youtube; it has a few more general tutorials.
I am a hobbyist like you and was a bit intimidated by writing tests.  

I used this page to learn pytest basics.  Should get you started without being too difficult.

[https://realpython.com/pytest-python-testing/](https://realpython.com/pytest-python-testing/)
https://www.manning.com/books/unit-testing

If you're willing to purchase a book, that is the most comprehensive and pragmatic explanation of how to write tests I've come across. It's examples are in C#, but the book is not so much about the code as it is the best practices for tests (also, most test frameworks work in the same way so you can translate the examples into any other language).

I say pragmatic because he focuses heavily in not "over specifying" your code, which I think is often missed when people are new to TDD. There IS such a thing as writing too many tests, and being careful not to can lead to tests that are easier to maintain over time.

He even covers some integration and end to end testing practices, so the book covers the three major phases of testing.
> If you are working on a big feature, just commit a bunch of subfeatures.

Depends on the feature, and on the nature of the code. For web dev, a lot of features are small, quick to implement, and it makes sense to commit the whole thing at once.

If you are building a class, you can commit after every method if that makes sense. If methods are simple and complementary, I'll often commit them together. If they are more complex, I will see what can be abstracted, commit the abstracted function, and then commit when I write the method that uses them.

Depends on your definition of feature/subfeature.... I don't mean "commit entire user stories at once." A single method or function can be a "feature." I use the [angular commit message format](https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit). In that sense, `git commit -m 'feat: implement method foo'` is much more logical than `git commit -m 'it's a bunch of shit but I didn't commit in 2 hours so here goes nothing'`.

The important thing to me is:

- commits should be a whole [whatever], as much as possible
- commits should not break existing code (I sometimes do commit broken code to some branch so I can resume somewhere else, but avoid it as much as possibe).
I assume you mean backup your repositories on either github.com's or your local servers?  Then you must rely on the server's sysadmins standard backup procedures.  If you mean a backup to a filesystem you control then just do a "git clone <url>" somewhere and a "git pull" now and then.

Otherwise, what do you mean by "backup all of github"?
Who said Git isn't fun? :)
That's exactly right. I got the concepts nailed down with the GUI, then I was able the learn the CLI

And some things like complex merge conflicts are just faster for me in the GUI
As far as I know, you can use your GitHub account to get the free version. That version will manage your local repos and your public GitHub/Gitlab repos, but won't let you push to private repos.

That's obviously a pain in the ass for corporate work, but then again if you're a paid pro, consider supporting the tool, because it's the best out there for now. The subscription is 5 bux a month, and it really saves you pain if you're pushing PRs to multiple private repos.

If you are a bit more experienced in git or are willing to take a higher learning curve, VSCode integrates with private repos for free, and it's Gitlens plug-in lets you visualize branches. Not as polished as GK, but it's what I use at the moment due to being in between jobs and having private repos
git clone is what you do to initiate your local copy of a repository from github. It can be as simple as downloading the zip from github. git pull is more complicated, and has more to do with updating your local copy when there's been changes to the remote copy of a repository that you already have cloned.

say you cloned somebody else's repository a few weeks ago. Last week the owner of that repository pushed some changes to it. So now in order to be working on the same version, you need to pull those changes to your local copy.
This is exactly why I want to learn git, I am unlikely to need to work as part of a team on a coding project in the near future but I'd like to be able to and know what I was doing if I had to.  My issue is mostly around when to do the git actions required - if I spend two hours on a project usually only one or two files how often should I add, commit, merge? Do I do that at the end of each session or should I be doing it at waypoints in-between (those are not always obvious to me as I may change code all over the project).
Thanks for this. I appreciate that add and commit are different and this is part of my issue, I don't see when I would do both? My instinct would be to add everything I have worked on and then immediately commit it the files too.  OR should these commands be done at different points?  Should I "add" more often and then only "commit" say for every 5 times I do the "add"s?
This isn't the only option. There were several SCM tools before git like Subversion. Git has become the defacto standard because it's more powerful than the previous generation of tools.

I'm not sure what you mean by "the commands don't make sense." The basics are:

git clone <repo>: copy a repository to your local computer

git pull: get the most recent changes from the remote repo

git add <directory | files>: add or stage these files for the next commit

git commit -m "commit message": commit the staged files with the provided message

git push: sync my local commits with the remote repo

git branch: see what branch I'm on

git checkout <branch>: switch to another branch

git checkout -b <branch>: start a new branch from where I'm currently at

Those commands are enough for most developers starting out. The Git Book does a great job explaining in more detail what these and other commands actually do.

Merging can be seen as a difficult or complex thing, but that's not because of how git handles conflicts. Merging conflicting files is just a complex thing in general. This is part of why continuous integration is so popular: it's easier to manage continuously integrating and resolving conflicts throughout the day than it is to wait until a bunch of features are done and then try to merge them all into the main branch in one go. From the perspective of git though, merging is quite simple: git will tell you what files conflict and show you the two conflicting changes. You can then choose one (or even write new code to replace them) and commit your choice. Many editor plugins and external tools have features to help with this.

Rebasing can be a little trickier, but if done right can keep the commit history nice and linear. To me, this is an example of a feature that could be considered complex, but also isn't necessary. It's something that's done a lot in continuous integration scenarios where everyone commits to the same "trunk" branch and the goal is to have a completely linear timeline of code changes.

In my experience, the most difficult part of git to understand is how to change things that have already been committed in a dirty way (i.e. not adding a "revert" commit, but actually changing history). These kinds of operations should rarely if ever be done, so 99% of your workflow shouldn't involve them. The only reason I can think of off the top of my head is if someone accidentally committed a secret like the database password or a private key or something along those lines. Even then, you need to change the password/key out and assume it's compromised. But you could also go back and erase that part of the commit if you're well versed in git. Outside of edge cases like that, I don't find git to be too complicated once you get some experience.
Well done! That‚Äôs some amazing work ethic. (**Shudders at the hours**)

What I did notice about ppl who‚Äôs good at Excel was that they tend to be ppl who can also self teach stuff (motivation + research) so I guess your boss had that right!
To "squash" in Git means to combine multiple commits into one. You can do this at any point in time (by using Git's "Interactive Rebase" feature), though it is most often done when merging branches.

If you are working on a very big project you want a clean commit history, instead of 999 commits from n3buchadnezzar

[https://xkcd.com/1296/](https://xkcd.com/1296/)
People squash to keep large projects manageable. When working on a complex feature, a developer might make several commits during the process, treating the commits like checkpoints that they could easily go back to. So locally a developer may have a series of commits like:

- OAutb for Google working
- WIP GitHub OAuth
- GitHub OAuth working
- Clean up OAuth code
- Add AuthStrategy class

This is good locally because the dev can revert small chunks of code and easily see what all they've done. But at the end of the day this is all for one feature, so in the grand scheme of things it is better if it's all one commit. To achieve this, the developer squashes all those commits into something like "OAuth support" before pushing. As the commit history for large projects grows, this kind of cleanliness is actually very useful as you can see a definite timeline of features that have been added and bugs that have been resolved, rather than just seeing a timeline of all the small things developers did/undid.

This strategy is especially helpful for projects using true continuous integration practices and commiting to a single "trunk" branch instead of creating tons of feature branches. In this environment, your commits need to be cohesive and nothing can ever be committed that isn't fully functional (since the CI/CD pipeline would reject it if tests fail). Combining all this results in a very robust feedback loop since when the CI/CD pipeline fails, the team can look at these "full" commits for problems, rather than having to look at several small "in progress" commits, some of which undo previous commits.

Until you've had to track down sneaky bugs with the help of git diffs this may not seem super important, but it is actually a tremendous help.

Another slightly related subject is formatting. One of the most annoying things I've run into with a large project is multiple developers who have different formatting styles on their editors such that a file where they edited 2 lines shows up in git diff as the entire file being changed because of indentstion differences, etc. When I first started programming, explicit styling seemed OCD and pointless to me (as long as the code was readable). But once you get into a large project, you need to make sure that git only tracks actual code changes and not styling changes in order to be able to use git diffs effectively.
Setting the upstream means that your remote repository will have a branch that mirrors the one on your local disk. You can do either but my general flow is:

1. Create a branch on GitHub
2. Clone the branch to my local disk
3. Work like you normally would 

Now your work is being saved in two places and you can take advantage of GitHub's UI should you need to.
It depends. You already have a good response from /u/Airmaverick11 . That's the beauty of the lightweight branches - if you _want_ them to just be "yours" in your local repo, then you don't *need* to push them anywhere else. You can make three parallel branches with three different implementations and then later decide which one to merge in. Then do a squashed merge into the branch you "normally" work in and nobody is the wiser.

If you have the right permissions, from the command line you can just do `git push -u` and that will create the remote branch and automatically set up all the tracking etc for you. But you might not want others to see it... after all, it's a WIP and there might not be a reason for others to see how the sausage is made; that's fine too.
One of the benefits of TDD is that you can refactor more confidently. In fact, without TDD it could be argued that refactoring is too risky, so in general I would expect to see more agressive refactoring in TDD environments since (presumably) there's a strong suite of regression tests that would prevent accidentally introducing a bug during refactoring.

To be clear, refactoring means changing code in a way that does not change it's behavior, usually for the sake of maintainability, readability, etc. So in a project with poor testing, this would fall under the "if it ain't broke, don't fix it" category. But with a solid testing suite in place this becomes "try it out, we'll catch any bugs along the way and fix them."
Awesome, thank you.
I look forward to snuggling up with that article and a cup of coffee tomorrow morning.  Thanks.

It'll be much more efficient than a bunch of random (but effective?) print statements.  :)
Yes!
Thanks very much.
I'm still new to git myself. I'd recommend starting a new branch. You can commit to your own branch as much as you want - it's like hitting save.

If it's your own repository, you can start a branch from github, switch to it locally, and push to that branch instead of main (then merge if/when you feel like you've added something worthwhile to the original). If it's someone else's repository you can start a local branch to commit to locally so that you can switch branches as you need. If you end up adding some functionality that's cool, you can tell the owner and they can decide if they want to merge that branch or not.

The main utility of a branch (afaik) is that you have to commit changes before you can switch versions (checkout another branch), so a branch is like a bookmark of your different versions.

Everything gets a lot clearer as you learn the structure of the program.
It doesn't make too much difference when you add as long as you have done it before you commit. You don't get any history from multiple adds - it is the commits that give you history.

I usually rely on `git commit -a -m "<commit message>"` where the `-a` means add any "tracked" files that are modified. So basically commit and add in one go. A tracked file is one git knows about. This means that it has previously been added (including before an earlier commit) so an explicit add command (`git add <file>`) is only really needed for new files. 

What I tend to do, when I am ready to commit, is to do `git status`. This shows me a list of all modified tracked files and a list of untracked files. The untracked files can be a mixture of files that I don't want to add to the git repo at all, and new files that need adding. At this point I will add the new files, before doing the commit command I mentioned above.

Sometimes I will instead add a new file just after creating it or after I have finished working on its initial version but I don't particularly distinguish between doing this and adding just before committing as I just described.

The process I outlined there is a good argument for maintaining a clean working tree - i.e., one in which there are very few untracked files other than ones you intend to add. This can be achieved by a combination of simply removing files that don't need to be there any more, and making use of the `.gitignore` file to tell git what files to ignore when looking for untracked files. Keeping things clean in this way makes it less likely to miss a new file in the untracked list.
wow thank you so much for the thorough explanation. it seemed like that guy was just being bitter, but you genuinely want to help. im saving your comment because i haven't been pushing code enough to remember the commands, thanks again
Yeah the hours were terrible, but on the plus side, they didn't trip about the overtime, so I was getting paid like 50% more than on my usual checks at the time. 

Also, I work at an ESOP (employee-owned), so I had a pretty vested interest in making sure the $350,000 ERP system would work lol.
If you keep everything local and not `push`, is there any benefit to using `commit`?
Print statements have their place too I think :)
This is really helpful thanks, I think I just lack real-life experience of using git (all the theory but no practice, like a university student starting work in the real world). I am sure within a month of working with git in a functional environment I'd pick it up easily but it's more difficult with no-one else to interact or guide me.
Oh your boss paid you for the overtime! 

Fantastic. This is a good boss. 

Well bloody done to you both then.
I don't say this often, but that sounds like a great boss
Yes, that's the point - you now have an immutable copy of your work at a certain time. You can diff against it to see what changed between two points. If something broke somewhere, you can `git bisect` and find your mistake ("it worked _yesterday_! WTF!?). You can go back and grab code out of it if you decided it was useful but has since then be removed. 

But in the _long term_ it's _not_ important, so that's why I would just squash it at the end.

You can even clone it in another place on your file system if you wanted.
I learned it at work, but we were thrown in at the deep end TBH. We got told "we're going to start using git now..." and we had to figure out how to use it. I found the online book on the git site to be very useful: [https://git-scm.com/book/en/v2](https://git-scm.com/book/en/v2)

For local work, the first three chapters cover what you need to know.
He really is. I really lucked out with how everything turned out with this company!
Thank you for your time and comments. üëç
You're one of the unsung heroes I think ought to be awarded Pulitzer Prize. You will have helped thousands of people pick up Python who otherwise wouldn't and who will have gone on to improve their jobs and lives with programming. The impact you'll have made economically and to people's quality of life is going to be immense. 

Thank you.
Well, that's what I get for buying in m months ago!
[deleted]
Hey Al, I always see you giving away your courses for free. You're an amazing person and thank you providing this course to us for free. It's an amazing course and everyone starting their journey should take this course.
Thanks! Just signed up, looking forward to learn a lot with you, been reading a little of your book and it's awesome for beginners.
Bought it last week. Wish I'd known
I've worked through the book 2 times already and I'm taking this opportunity to do it again with your course and my brother who is a total beginner. 

Just want to say thank you. Your books have been amazing.
I completed this course and it helped me get an awesome job! Thank you so much Al!
Just finished it and while it's a great follow up to something like Crash course, I found the lack of updated commands, etc with modules a bit frustrating because I had to stop what i was doing, read the updated documentation, and then try to make my stuff work again.
I register thank you op
Got this course for free a while ago and just got a job in part due to this course. Plan on buying it sometime soon. Thanks Al
i really appreciate this! i bought the book but, my learning style requires more than just me lol
They do this every few months so if you miss it there will probably be opportunities. Though the course is helpful so I'd still have paid full price for it.
Thank you!
Best way to Learn python ever! I already finished your course and thought it was great :)
Hah! I have literally just taken delivery of the book yesterday. Nevertheless, more than happy to send some royalties your way if you're giving away the course free of charge so frequently!
Thank you ! 
Does it mean I don‚Äôt need to read the book ? 
Meaning the course runs through the entire book ?
Your awesome 
Thank you so much man
thnx cuz automating the boring stuff allowed me to learn how to make discord bots, automation etc... but I already read your book
And how to automate the boredom of python itself?
Hey, aren't you one of the guys on twitter that was traveling around the USA rioting and blowing tear gas at cops with a leaf blower?
Another day, another post giving the course for free

I haven't finish mine
[deleted]
Dude wtf.. I‚Äôve spent 30 min now trying to get this. The app on my phone doesn‚Äôt work with promo. I tried on my computer, code doesn‚Äôt work. On safari via phone is shows as free.. but won‚Äôt let me login. Anyone else not working?
[removed]
[removed]
Thanks for this.
You‚Äôre awesome man, thanks a lot !
Oh, sweet, thank you very much!  I've been trying to learn Python for a while now and your 'Automate' book is one of the ones that is getting through to me.  This is awesome, thank you very much. :)
Thanks ;)
Thank you for allowing others to learn, myself included!
You are a fantastic person for this!! The world needs more people like you! :D
I studied the 2.X version of Python up until we reached the concept of classes. From there would have been data structures, more complicated sorts and algorithms, and so on (likely coursework conducted in binary and involving operating systems and the C language). 

Do you find those concepts to be natural extensions of this book, or are there other things I can learn, before linked lists and stacks and heaps, while looking for practical applications for Python?
Brilliant! Thank you so much. This was just the motivation I needed to take the plunge and actually start learning.
Was cool until the reduction for the other courses stopped. i get it now, best not to sign up until bought all the courses you want as soon as you sign up you lose the reductions, ok.

Still not cool, motivates to buy as much as you can without really getting to test a single course first.
Thanks
Awesome
The course that literally changed my life.
And I bought it like a week ago. Damn it
Which is more up to date, the Udemy course or the 2nd edition of the book? I have the book and chapter 9 is covering pathlib. I tried watching the videos on Udemy in this case Section 11: Files but it's only covering os.
Thank you for this you sweet angel!
You Sir, should be knighted
I missed this twice already. Which week of the next month will you do this again?
Does your course still free?
Automate the Boring Stuff helped me land the job I currently have. I couldn't be more grateful.
This, seriously.
Ya I love Python and I love you too man
https://www.onlinecourses.ooo/ 
Now you don‚Äôt ever need to pay again
Mine says "You purchased this course on Mar. 04, 2021" and I don't remember buying anything
Lol nabbed this and the crash course just a few weeks ago, I just keep telling myself I learn better from physical books.
\*shrug\* My reddit account is under my real name and 13 years old.
https://www.onlinecourses.ooo/
Never pay for one again
w8 did u get that for free?
It was mentioned how the coupons/promocode whatever expires or something. Plus he's just a decent guy judging from the fact he's giving away countless hours of his work for nothing. Why exactly is that a problem?
That's weird. What country are you in? (I remember someone in the past said the codes didn't work in South Africa.) Are you manually entering the JUL2021FREE code? Note that it is not JULY2021FREE.
You should try searching this sub and /Python for it before jumping in with baseless judgement.  It‚Äôs talked about frequently in beginner threads and known as a good reference.
The guy is trying to be nice. He doesn‚Äôt have to do this. There‚Äôs a reason why this is only posted on programming subs and not on every sub on the website.
This campaign of free, accessible learning has gone too far!
Report noted. Al has asked for, and been given permission, to give away his course here.
The author posted this‚Ä¶doubt it‚Äôs a scam.
you got that for free?
Bump
How long did it take for you? From beginning to actually landing a job?
What job might that be? I'd love to learn python for a job but everything I've heard is you need to have experience coding first then you can get a job because most of python is server side. I can understand why people wouldn't hire a newbie to work on the server. Anyways any advice will help and be appreciated.
Thanks for this
You might have signed up for free before. It'd appear as a "purchase".
I didn't remember buying it either till I saw the notification
head into python 2nd  changed the way I look at python. and for that, I will always be super grateful.

<3
I think Rebecca was expressing awe rather than genuine disbelief.
This is genius. Appreciated
Yeah
It's not an issue and I didn't reread what I wrote to realise how negative it came across. I thought I was just conveying surprise. I'm sure it's a great course and I'm glad people get to take it for free.
My phone was being weird. I got it in the pc. Thanks op
Well I didn't think about it, so I am sorry
nine bear money violet rain swim hobbies apparatus books alive

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*
I studied throughout lockdown for almost two hours every day. It took me about a year and a half total. I come from a different area in IT that doesn't require coding which helped get my foot in the door.

There's a lot to learn during the interview process, so the more chances you get to interview, the better.
Don‚Äôt thank me, thank the absolute legends running this beast! There‚Äôs so many courses so definitely try share this out as much as possible to help others too :)
[deleted]
If you highlight over someone's name do you see an ignore button? (I can't recall if that's standard reddit or Reddit Enhancement Suite feature.)

Btw, I'm pretty disappointed that you got so many downvotes there. You're absolutely right that it's a spam post. It just happens to be one the mod team has decided to allow.

Should have been as simple as you saying it's spam, me saying it was allowed, and then everyone goes on with their lives.
Sounds harsh, I keep hearing about the interviews but the jobs I‚Äôve had before were pretty easy on interview process. Thanks for the info tho, rn I have to grind  python hard, then
But someone actually cool.
Im using old reddit. I clicked the [username](https://www.reddit.com/user/AlSweigart) and found a block button in the right column, hope this will be sufficient. Thanks for your reply
congrats!
This is dope, congrats!
I know I shouldn't be asking this, but as a high school pass-out who is expecting to enter Comp Sci, I can't help asking this. What was the initial payment and what's the pay now? Is the pay good for the load of work?
```
def the_best():
     you = 1
     while you <= 3:
          
          print(‚ÄúYOU are the f-n greatest!! And and inspiration!!‚Äù)
          you += 1

the_best()
```
That‚Äôs what‚Äôs up bro. God bless
This is amazing. You‚Äôve earned it. Congratufuckinlations man
Congratulations on your success. I am currently in the boat that you WERE in. How is your anxiety and depression these days? If you don‚Äôt mind me asking, of course.
International relations doesn't seem useless actually. two of the most underrated skills are communication & reading+comprehension; which im sure there was a lot of in that degree.  most cs degrees don't really emphasize either of the two, but day to day, these are so important. team work but no communication is a catastrophic combination. try to build any project w/o reading documentation or resources thoroughly, good luck lol.  respect, congratulations
I have already given up tbh theres no point trying anymore. Been coding for so long but my mental health is always taking over and stopping me concentrating.
>	(turns out it‚Äôs very difficult to get hired with an international relations degree)

Hi it‚Äôs me from 16 years ago confirming you are in fact correct and that it wasn‚Äôt much easier back then. As the job market has only gotten worse (me from back then wouldn‚Äôt have thought that was possible) I feel so stressed on behalf of everyone trying to start a career or in early career now.

But congrats on the hard work and the payoff.
Don't be in a rush to buy a house. Congratulations.
any advice for someone looking to follow in ur footsteps? I am finishing a media/marketing degree and struggling w depression which makes it hard to focus on my independent python studies :/
What kind of projects do you have in your portfolio?
Holy shit, python can save many office hours . Congrats bro and a very inspiring story for those who are in shitty jobs and want to change into IT
Congratulations!! And thank you for sharing your experience. It made me feel a little better about a similar situation. Congrats again!
You've got your foot in the door and there's no limit to how far you can go. I had a similar shitty college experience and got a programming job like you. Today I'm in the 90% income bracket in my city.
>TLDR Thanks to stack overflow, reddit, and a resume that only   
highlighted my technical achievements, I managed to go from a depressed   
college student to someone with a good job, a fianc√© and a house (albeit  
 rented). So that‚Äôs pretty cool I guess.

Oh, don't be humble - that took a lot of dedication/work/creativity, and you should be sure to let everyone know about that part. One thing about 'pulling yourself up by the bootstraps' is that generally there's just you pulling once you've encountered an opportunity.
Congrats! Did you include cover letters as well for your jobs apps or just the resume?
Congratulations. Hard work pays off, hope you enjoy it üòä
Absolutely dope to hear. Congrats my man
Great story. So happy for you. Working on getting my first job üëç.
Most excellent! Congratulations!
wow! congrats man, I've been struggling also my studies rn cuz i dont have that passion for going to uni. i think this is my wake up call to focus my goals for the long run not just what makes me happy right now.
amazing achievement, congrats!
Much inspired. Congrats man!
Hey congratulations! I'm also trying to learn python. However it's mostly to implement in pen-testing as I aspire to work in the infosec field.
Congratulations.
Congratulations! üéâ
[deleted]
Congrats
Hi OP,

I'm a marketer and new to python.  I've learned the fundamentals, just looking for modules etc. to learn that will best fit my goals to get better.

Can you share with me some resources that you used to learn about things such as automating campaign budget allocation and media upload and reporting?  What modules, etc. did you learn?  I want to be able to do the same stuff for my own marketing. :)  


Edit: For more clarity, I do a lot on Facebook/Instagram and would love to be an expert on dealing with APIs and reporting.
Congratulations!!!
Congrats man! That's super exciting. You've got a great career ahead of you.
Happy Cake Day buddy. Hope you're doing well now. I'm in a similar situation like you and planning to get started with Python.
> a house (albeit rented)

(U.S-based advice, may not apply elsewhere) - Get your credit score sorted out! Generally speaking, the quicker you can move from renting a house to a mortgage, the better! There are lots of resources to finding out about your current credit score, and improving it. You should look into that! You are getting into a position to really be able to work towards an even more awesome future! And, renting sucks.
That‚Äôs awesome! Congrats, OP. And there is yet another thing to be proud about: you are useful to the society! More then as International Relations something something. The fact that it is so much easier to find a job and one with good pay in tech is an evidence that this is what drivers what people (not your boss or CEO, but consumers) most want and need.
Congratulations üéâüëè well done. Well deserved.
Congratulations !

I am struggling with depression and it is hard even to start to learn to code (because of fear of failure) ...
Cool, now get deleted, lol.
You should buy a diary in which you can write such posts
Nice dude!! You‚Äôve succeeded. Keep up the great work and your relentless spirit üôå
Man, that sounds... really good! From someone who doesn't have a good job, fiance or a house. 

Congratulations!
Congrats!
I absolutely love this story. Congratulations!
Congrats man
Wholesome
Congratulations!
How is your math? My understanding is data analysis required advanced math.
Congratulations. Motivation post
I got an internship as a high school pass-out and a year of college drop out, my initial pay was $30k a year but it doubled after 1 year of working!
Can‚Äôt share specifics but the first ad agency job was barely above minimum wage and my current one is considerably above it.
Depends were you are. IBM Canada works closely with universities through the co-op programs. During a co-op term you can expect to be paid on the basis of $50K CAD annual salary. 
If they like you, you will get a full-time offer after graduation of $80K CAD.

Caveat, when I joined it was all Java, only the ops team used Python. But from there was able to join younger companies and switched to Python.
Missing a you += 1
Wouldn‚Äôt it be best to use a for loop and define the range to 3 in this case?
[Fixed formatting.](https://np.reddit.com/r/backtickbot/comments/o19hxq/httpsnpredditcomrlearnpythoncommentso16gvri/)

Hello, iFlipsy: code blocks using triple backticks (\`\`\`) don't work on all versions of Reddit!

Some users see [this](https://stalas.alm.lt/backformat/h1zk4i5.png) / [this](https://stalas.alm.lt/backformat/h1zk4i5.html) instead.

To fix this, **indent every line with 4 spaces** instead.

[FAQ](https://www.reddit.com/r/backtickbot/wiki/index)

^(You can opt out by replying with backtickopt6 to this comment.)
I think it is spelled "confuckingratulations". üôÇ
It‚Äôs a lot better honestly. I think a lot of it was caused by feelings of insecurity and the fear that no one would ever think I was good enough at anything to hire.
same here. congrats to op! seeing posts like theirs helps. sending some encouragement to you, too.
Noooooo don‚Äôt quit! Take a break to regain mental stability and continue your path! I have quit coding before and coming back was 10 times harder
That‚Äôs the same thing that used to happen to me when I tried to learn Java. Does it still happen if you work on a project you‚Äôre more interested in?
May I recommend therapy? It's worth it imo
I'm curious why? (Other than the exceedingly weird and expensive housing market at the moment)
It really depends on your situation, but if you have long boring lectures that you can afford to zone out in I‚Äôd recommend trying to do tutorials instead of zoning out. Also having some sort of long term project really helps. For me it was Corey Schaffer‚Äôs Flask tutorial. I ended up completing that and spending a lot of time turning the basic blog template he demoed into a project managment tool with email alerts and stuff.
I had a few wrappers for dealing with APIs, a captcha solver and a fastapi / Vue project for an app similar to Trello.
Nope! Tried a bunch of times but too much effort tbh. I had more luck following up with people on LinkedIn about my application.
Definitely better to start with small scale stuff first. Find something tedious in your life and try and automate it with a script. Doing a tutorial and then trying to adapt it to something else can be kinda fun too.
Hi. Honestly I just tried to write down the rules we used for determine whether to raise or lower the budget for a certain line item or ad set. This was mostly for google dv360 and AdWords though. Once I had a solid set of logic, I looked in the documentation for basic examples of how to do things with the official client library and created a few scripts to run daily on aws lambda.
Source: bought a house in my late 30s. Even considering I moved out of my parent's place much later than most people (around 25), I just did the math. Without factoring in inflation, I spent about $150,000 USD in rent. Even with a *bad* mortgage, I would have been in much better shape!
Why tho
And once done writing in it, smack you on the head with it for this dumb comment.
Learn to be happy for others!
Lol go bust a nut bro and relax. Semen retention isn‚Äôt working for u.
Thanks guy who posts on r/semenretention
Not really, it may be preferable, but if you can code and understand some basic concepts of the industry you are in, you can easily do data analysis.
Missed that lol thanks
Yeah u can

```
for i in range(0,3):
     print(‚ÄúYOU are the f-n greatest!! And and inspiration!!‚Äù)
```

I‚Äôm new to Python but one thing is clear: there‚Äôs many different ways to accomplish the same thing.
Idk why they hate on you, it doesn't render right for me.
I like congratufuckinlations better
Well I am genuinely happy for you. Keep on friend
I don't even bother starting anything now
Because he might feel like it‚Äôs the next natural step, which it may be, but especially in software the first few years there‚Äôs a lot of opportunity to greatly increase your income by moving around.
Thanks for your response. :)
Did you factor in the opportunity cost of not investing your money in something with actual returns? Depreciation? Taxes? Maintenance? The loss of liquidity? Being in debt for the most part of your life? It's crazy how people think that buying a house is always a good move financially.
\>Subreddit for posting questions and asking for general advice about your python code.

\>5. Posts must contain a question about python.

Well grats on the job, tho. Hopefully I can get a similar job, haven't applied to anywhere yet.
lmao at learn to be happy for others. You think I'm sad for him?

Anyone getting a job is great. Writing a story for some kudos is weird though

Like don't people have family members or friends. I also got a job but see no value in seeking attention via posts.

Maybe I'm too pragmatic or too saintly not to need the praise from some strangers 

You lot need to grow the fuck up
please read more of my comments so you can feel powerful when you refer to them
I'm glad you felt so insecure that you stalked my comments. I hope you also stop busting nuts carelessly
[Fixed formatting.](https://np.reddit.com/r/backtickbot/comments/o1lz3v/httpsnpredditcomrlearnpythoncommentso16gvri/)

Hello, iFlipsy: code blocks using triple backticks (\`\`\`) don't work on all versions of Reddit!

Some users see [this](https://stalas.alm.lt/backformat/h21jd2b.png) / [this](https://stalas.alm.lt/backformat/h21jd2b.html) instead.

To fix this, **indent every line with 4 spaces** instead.

[FAQ](https://www.reddit.com/r/backtickbot/wiki/index)

^(You can opt out by replying with backtickopt6 to this comment.)
Absolutely
Untested alternative approach:

    print("\n".join([f"YOU are the f-n greatest{'!' * 2} And, an inspiration{'!' * 2}‚Äú] for _ in range(3)]))
Somehow while loops give me deep anxiety but for loops feel comforting
I don't know, my house doubled in value in 4 years. I'd say buy asap.
Agree that it's not always a good move financially. That said, *preparing* for it is a good move; building credit can take years, starting as soon as possible is usually really a good idea

As for the opportunity cost, in many places, rent and mortgage payments are very similar. In that situation, there isn't nearly as much opportunity cost.

This does, of course, assume single income, single person renting. With roommates, there's a lot more financial opportunity it would seem.

Anyway, generally I'd suggest looking into buying, at least - not just assuming it's for much later in life.
Idk as far as I can tell there‚Äôs tons of posts like this.
 üòÇ just having fun sir. NoFap is great.
The opportunity cost is not about rest vs mortgage payments. It's about the down payment.
That makes sense! It looks like the average down payment for first time buyers and 2021 is 7%, $19,000 or so. Over 5 years, given ~5% interest rate, and not factoring in inflation, you end up with ~$24,250. So, by not having that money, you lose out on $5250 over the course of 5 years. That's comparable to something between 3-12 months of rent depending on the area.

Lots of big assumptions, of course, including "can't do better than 5%," but given what CD rates look like...
This is great, thank you so much for your input. I‚Äôm very glad you got a good opportunity and took it. I agree with pretty much everything you said and I think it‚Äôs very helpful for someone looking for a job who might feel threatened because they aren‚Äôt at the same level as a developer. 

For me personally, python and sql have helped me grow so much in my current role, especially when other people in your team benefit from it (not just clients).
I condider your experience as a perfect example of determination, and lesson to other beginners - 9-10 months full-time is a perfectly reasonable time to learn 1-2 programming languages, related technologies and toolchains. Lovers of books "In one week", "15 minutes a day" will go nowhere. No "easy" programming languages around, knowledge of every language, framework, technology - is a matter of hard work and determination. No exceptions. 

One more time, congratulations entering our beautifully crazy industry! üéâüçæ
"If you throw enough shit on the wall something will stick."

In no means meant to be derogatory. I'm in sales, I speak with A LOT of people every day. Learning Python in the evenings. 

So on regards to you saying that you need to be lucky you're right. However luck is probability. So if you talk to enough companies you will get lucky and find a job sooner or later, hopefully.
Well done and thanks for the feedback. I think having and stating you have some SQL experience cannot be underrated in a data reliant field.
Congrats!~

Out of sheer curiosity, what topics did you cover during your 8 months of python? :)
Well done! This is really inspiring. I am glad it worked great for you in the end and found your true passion without even planning it. May I ask, what resources have you used to learn Python?
Just wanted to stop by to say congratulations and hope that experience can be an inspiration to others.
That‚Äôs great! I‚Äôm glad the other company contacted you before you begrudgingly accepted the first offer. 

Similar to you, i am a working in a traditional science role but am looking to transition into data engineering. Most scientists are not trained to use software beyond the Microsoft Office Suite, and there‚Äôs such high turnover in academic research (I.e. Grad students, postdoc) that any knowledge gained and implemented is lost when the new crop arrives. ‚ÄúLOL what even is a ES-Queue-El?‚Äù This has motivated me to learn ways to best store and analyze data, and from that, I‚Äôve gained interest in providing data solutions to folks who need it.
I might have missed this somewhere but before you said you were a scientist of some sort prior to losing your job. 

What‚Äôs field was that and what sort of degree do you hold? I think that‚Äôs very important to your ‚Äúzero to hero‚Äù message.
Thank you for the share, really cool to see people going from "zero" to hero :)

I'm ending a masters in Mech. Eng. next year, but i want to persue a some kind of software dev. or data engineer job. I've been learning Python in and out for the last couple of years and i'm having troube move forward from the beginner phase. I've made some projects (scripts) at the company i work for now in terms of automation of my job. Mostly to import a lot of data from the SQL Server, work the data and export as excel, as GUI or a report. Not too hard but i really enjoy it! Any advice on taking "the next step"? What skills should i effectively evolve?
Awesome to hear! Keep up the grind üëèüèΩ Thank you for the really insightful feedback as well, cheers man!
Great story man! Good luck at your new job.
Awesome to hear! Did you have any specific projects to showcase on the CV/portfolio? Or did you just state that you have been working with Python for 8 months and know this, that, other?
[removed]
cool
Good job mate. Definitely inspiring post for others here.
How much time you've spent learning python?
Do you find pandas to be more useful than excel?
Hey can you provide some links to resources to study and practice SQL like hackerrank please?
[deleted]
How did you study SQL by the way? I  already know the fundamentals but I find it hard to practice more complicated queries without an actual full database to play with as opposed to a table of a few rows of dummy data. Back when I was working I could practice it with the work's DB but right now I'm not.
Congrats! 

Any reccomendations what to learn?

I‚Äôm currently learning SKlearn and already know a bit of Pandas, Numpy, Matplotlib and PySpark. 

Not sure whether to learn webscraping or Django next. Thanks.
Now that we mention the two: can someone dumb down for me the difference between Python and SQL? I understand that Python can scrape, make apps, analyze and stuff. I'm not entirely sure how SQL complements that process or Python in general. Thanks!
This is an inspiration. Can you please share the resources/tutorials you used to learn python and sql? 
I am almost done with automate the boring stuff.
Thank you so much for this, I'll definitely give it a read later.
How many hours would you say on average you spent a week studying?
Did you have to provide project you worked on or GIT
I can't quite say why, but this post is really awesome and gave me goosebumps.

You seem like a sensible and motivated dude and should be proud about ... just writing up this post, really. I really love its structure and helpful nature. And it's arguably really authentic/honest. Thank you. :)
Great post! I hope the new job goes well for you.
Thank you for sharing your story! I am on a similar path myself, learning exactly the same things in exactly the same timeframe, and hoping to land a similar job as yours. I always thought that I am not quite at an employable level yet and didn't really have the confidence to think those jobs are within my reach. Would you mind sharing your whereabouts in the UK? This is really inspiring, I am saving this post to read when I feel discouraged! Congratulations on your new job, you're going to smash it!
all data is dogshit to begin with, it is our job to refine it and sift it for gold
Congrats! You're right about the luck - I can very much relate! Also thanks for the info you shared, really helpful as I'm looking to change work company soon once I'm done with my current project.

Just curious,

* You mentioned in one of the comments that you studied Data Structures (And I would also assume algorithms). How did you study for those? I'm still having a hard time because I tend to study it like a text book (Go through each page of an algorithm book and read and do the quizzes). Perhaps your approach is different, and maybe more efficient than mine, I'd like to know.
* Did you do some code contests/quizzes (Hackerrank, Codewars, etc.) or were you mainly focused on developing stuff and applying your knowledge there?
* I really don't have much of a math background besides some college level statistics, and I'd like to know if the maths are integral to becoming a Data Engineer or at least on the position that you landed.
Congrats! This is really helpful as I‚Äôm finishing my data science masters in 3 months and have very little idea what to expect or look for. Thanks a lot!
So useful, thank you! I'm currently in the early days of your journey (hopefully!)
Is the print ‚Äúhello world!‚Äù a traditional thing? That was the first thing I was instructed to do as well
What were some of the toughest interview questions you faced?
Wow! Great story and congrats!  
I'm in the same boat, where I've been laid off for about 7 months now and during that time, I've been learning python, pandas, sql, ML, html, css, js, etc.

I still feel like I have impostor syndrome when I apply for jobs and I'll take your tips from now on to make sure I get the right jobs.

Any tips for someone who's been going at it for a couple months now and feels as though it might not be worth it?
Hey! Your story is inspiring! Thank you for sharing..

Could you pls let us know your study plan and what courses (if any) you took up?
I‚Äôm trying to learn pandas and struggling I do a lot of manual work with sql and excel and I know Python can make my life easier and hopefully land a better job/ promotion.. anything that you would recommend?
Nice
You may have been previously employed by a dummy corporation whose job it was to create and upkeep a facade of a legitimate company. You seem like someone who began poking around. You may have been rehired by the same racketeers. Be safe.  Stay vigilant. And if the new starts feeling like the old you‚Äôll know why.

J/K! üòÑ

Congratulations and good luck. üëç
Congratulations on the job and more importantly on your new chosen path. Sometimes luck is a residue of design. Good luck to all your future endeavors
Do you think your education history played a huge role in your hiring? How important would you consider a degree?
Sorry for the late reply, but I found this post very inspiring to read. I have a question and I hope you  have time to answer it:

I already have experience working as test Automation engineer but only have used C#. I am interested in doing data engineering and have been learning python and built a data scraper with selenium and pandas and small web application using Flask. Do you think these projects are enough to get a job or do I need to learn other skills as well?

Do you also have tips maybe in term of soft skills and how I can explain the switch?

Again, thank you for this post.
Thank you for the comment!

> For me personally, python and sql have helped me grow so much in my current role, especially when other people in your team benefit from it (not just clients).

I can imagine and this is really encouraging.  I think it's so important to emphasize that programming languages are complementary and are very rarely used by themselves.
Thank you so much for the kind words! I still feel like it isn't real - the career change has long been a pipe dream and I often feel like I'm waiting for them to say they got me mixed up with somebody else.

Aside from that, absolutely.  Not giving up is a huge part of being a beginner.  Thank you again!
For sure and no offence taken! It really is a battle of attrition when it comes to applying and I think after applying to 100+ jobs (I think I applied to around 250), it can get very tiresome.
Thank you and absolutely! I noticed a huge uptick in interest after showing people on my CV I was taking interest in cloud computing services as well.  AWS in particular although I'll be using Azure in my new role.
Thank you and sure:

* Basics and fundamentals (syntax, data structures)

* Automation (using Python to schedule processes)

* Webscraping (Selenium, BS4)

* Data cleaning and analysis (Pandas)

* Miscellaneous stuff I touched along the way: web design, data science, machine learning.

All of those were used with the mindset of "how do I make this run by itself?" and the automation angle has a lot of value in big businesses as they want people to be doing stuff other than repetitive tasks.
Hello and thank you! I was extremely fortunate to go into something I ended up loving and really can't emphasise the perfect storm that occurred.

> May I ask, what resources have you used to learn Python?

Udemy courses:

* Automate the Boring Stuff with Python Programming

* Complete Python Developer in 2021: Zero to Mastery

* Complete Machine Learning & Data Science Bootcamp 2021

* Datacamp: Introduction to SQL

A lot of Google, some codewars for SQL, and harassing scammers by spamming them with emails.
Thank you!
Yes and thank you! I was honestly so relieved.

It's mental how technologically illiterate a lot of scientists are.  What really damages certain fields of traditional science is the resistance to adopt modern techniques to improve quality of life and you're totally right - a lot of skills are lost once you get a rotation in.

If I can do it, you can too, mate.  It's a slog and can take some time to convince people to believe in you although it'll all be worth it! Best of luck.
I did!

I have a Masters in Chemistry (non quantitative) with pretty much all of my work being practical as opposed to theoretical.
Hello and you're welcome!

> I've made some projects (scripts) at the company i work for now in terms of automation of my job. Mostly to import a lot of data from the SQL Server, work the data and export as excel, as GUI or a report. Not too hard but i really enjoy it! Any advice on taking "the next step"? What skills should i effectively evolve?

To be honest, I'm not a DE yet as I haven't started although you could definitely ask the people down at /r/dataengineering.  They're really knowledgable and helpful and will definitely point you in the right direction!
You're welcome and thank you!
Thank you and I'm glad you enjoyed it!
Hello!

I definitely included my github which is populated with all the projects I have ever made.  This is because I wanted the employer to see how far I've gotten within the space of time on Github.

Of those projects, I had a couple of data pipelines on there that I made which took webscraped data and packaged them into CSVs which were relevant.  I also included a very small automation project which was a program which runs a crypto mining program when my electricity cheap and shuts down my computer once the electricity becomes expensive again (I'm usually sleeping when this happens).

As for approach, I emphasised how I really enjoy automating stuff and if I can, I will and if I can't, I'll look for a way to do so.  I also explained my own personal interest in the data side, how I got into it, and stuff that I know now, although I'm certainly no expert.
Thank you!
Cheers, thank you!
Hard to say exactly, part of me wish I recorded the number of hours.

I spent around 50-70 hours a week for around 8 months relatively consistently with a mix of passive and active learning as well as building my own projects.

I took the odd Sunday off (let's say every other Sunday for arguments stake).

I took two weeks off for Christmas.

Works out be roughly 1556-2276 hours total.
Depends on the application.  For analysing and manipulating big data sets? Pandas all day.  For managing really small things? Excel is totally fine.
Codewars SQL bit is what I've been using and it's pretty good! Nothing beats querying proper data sets though.
I used to do practical chemistry so not as much maths as you might imagine.  A little, but nowhere near as much as any quantitative field.

Never say never.  My friend has a PhD in Astrophysics and is currently a DS with the desires to be a quant.  Perhaps, with some time, you can too! I'd definitely look into algorithmic trading and building a few models as part of your portfolio.  Maybe even ML powered ones.

Good luck!
Using data from Kaggle and open data registry S3 buckets.  They're decently sized and you can come up with your own interesting queries for them.
Thank you!

Have you tried doing any of your own data analysis/visualisation/modelling on datasets yet? If not, definitely get into that.

> Not sure whether to learn webscraping or Django next.

Both are useful.  The other stuff you've learnt leans towards data science so I would try webscraping because it might be more interesting and I have experience with it.  I don't have a huge amount of experience with Django although know it's extremely relevant in the job market.
Sure! SQL is a language which is designed solely for asking a database questions.  Specifically, relational databases.

Python is a general purpose language and can do significantly more than SQL.

How they complement each other is that Python can send SQL code (queries) to a database and in our current age of data, automating a lot of work and being more time efficient is highly valued.  How this fits into a hypothetical example is let's say you have a new table every week with a billion rows and you want to analyse every week and turn the results into a graph.  You would have to get into the office, execute the query, wait for it to work, then convert it into a graph.  With Python, you could schedule to run your SQL query in the middle of the night, process the data, check the data's right, and even make the graph so when the analysts clock in for work, they get can get on with analysing the data instead of waiting around.

Of course, this really is a very high level, low detail example.  I am by no means a professional yet although I hope to be soon!
Thank you!

Copied and pasted from a different response:

> May I ask, what resources have you used to learn Python?

Udemy courses:

* Automate the Boring Stuff with Python Programming

* Complete Python Developer in 2021: Zero to Mastery

* Complete Machine Learning & Data Science Bootcamp 2021

* Datacamp: Introduction to SQL

A lot of Google, some codewars for SQL, and harassing scammers by spamming them with emails.
You're welcome! Hope you enjoy it.
50-70 hours doing programming both active and passive learning.
I provided a link to my github and talked through my work.
Thank you for the kinds words! I'm glad you enjoyed it.  A lot of stress (and stress relief) evolved whilst writing the post hahaha.
Thank you!
> I always thought that I am not quite at an employable level yet and didn't really have the confidence to think those jobs are within my reach.

As they say, sometimes you have to run before you can swim.  I heard a really sage bit of advice which is a new role *should* be challenging.  If it isn't, you'll get bored and think you're too good for the role and when you stop learning, you want to move on again so it makes sense to apply to jobs you think you could grow into.

> Would you mind sharing your whereabouts in the UK?

Sure, I'm based in the North West and (fortunately) so is my new role.  All the jobs I went for were either in the North West or London.

> Congratulations on your new job, you're going to smash it!

Thank you, I'm sure you will too!
Absolutely.  Are you a DE?
Hello and thank you!

> You mentioned in one of the comments that you studied Data Structures (And I would also assume algorithms). How did you study for those? I'm still having a hard time because I tend to study it like a text book (Go through each page of an algorithm book and read and do the quizzes). Perhaps your approach is different, and maybe more efficient than mine, I'd like to know.

Not the best answer from me, although a lot of my career is understanding stuff in steps and then deciding where something isn't working.  Same with programming.  My personal process for understanding how stuff works usually involves going back one step to get a deeper understanding or breaking it down into parts rather than saying A to B.

> Did you do some code contests/quizzes (Hackerrank, Codewars, etc.) or were you mainly focused on developing stuff and applying your knowledge there?

I've definitely done some of those early on (around the 2 month mark) just because it's always recommended by everybody in the subreddit.  I spent way more time building my own projects and trying to commercialise skills via freelancing because I felt it was more relevant.  A high score in codewars is great although you miss out a lot of important skills such as client interaction, time management, project management, and negotiation which you get from chasing paid work.

> I really don't have much of a math background besides some college level statistics, and I'd like to know if the maths are integral to becoming a Data Engineer or at least on the position that you landed.

I can't answer this yet as I'm not a DE although I can say it's definitely going to be important.  Head over to /r/dataengineering and ask the people there as they're really knowledgable!
Hello and thank you! As far as I'm aware, the DS market is a little bit slower than it used to be (a lot of data to process before modelling can begin) although there's still loads of opportunities out there in ML and NLP.
Thank and best of luck to you! Looking forward to seeing your own success post in here too one day.
I believe it's universally the first thing you do in Python.
Definitely the very very technical questions.  

I have a website which is bunged together using tutorials and a HTML template and it has an HTML form for the "contact me" section.  I got asked, "So, how does this form work?".

I never felt more stupid in my life.

The same place also asked "When would you use procedural over OOP?".  Again, I have no idea and I said this is something I don't know.
> Any tips for someone who's been going at it for a couple months now and feels as though it might not be worth it?

Keep going.

If you aren't hearing anything back from people, something needs to change e.g. your CV/resume missing something that employers are looking for.  Be very clear what you want and make sure your profile says that.

Keep applying for roles, applying for everything and anything so you get an idea of where you are at as a candidate.  Get some interviews under your belt which is experience in itself, and then keep improving!

Ultimately, the message is now is not the time to give up.  You've worked way too hard to just stop now.

Thank you for your message and good luck!
Hello and thank you!

[Courses I did here](https://www.reddit.com/r/learnprogramming/comments/lmi0zp/from_a_beginner_to_beginners_from_printhello/gnwfwv9/).

In terms of study plan, it was extremely unstructured and I kind of liked that because it meant I could work on what I wanted to work on instead of following a regime which would mean learning stuff I didn't want to learn or wasn't ready to learn yet.
Kaggle does a decent intro course to Pandas.  Alternatively, there's a lot of videos on YouTube which go through Pandas, ultimately it will depends on what you need to do.
I knew it!

Thank you and thank you!
Thank you for the kind words!
Hello, I saw you wrote twice and I'll answer both of your questions here.

> Do you think that played a large role in your hiring?

> Do you think your education history played a huge role in your hiring? How important would you consider a degree?

Tying in with the top point, degrees and experience are as relative as you can make them and that's a big part of job hunting - being able to tell your potential employer you have demonstrable transferrable skills. 

A degree is important for a number of things.  It tells an employer you can actually see something through.  A lot of people complete degrees and it's not a special thing, although starting one and then dropping out would be something that would make an employer ask why.  Additionally, it adds social value as it's a shared, common experience that people can relate to, compare, and contrast their own experiences with.

That being said, would I say you need one? Hard to say as I technically haven't entered the field yet.  I'm completely unaware of there being pay ceilings based on level of degree unlike Chemistry where I know not having a PhD these days often presents glass ceilings.  

Personally, I think commercial experience and working within a company is more important as you learn things which will never got taught in university such as how to constructively argue, how a company works, and, most importantly, the concept of being valuable.  It's extremely easy to think that somebody is only as valuable as their technical skillset and title of their degree.  In reality, it's a very complicated concept and one that only makes a lot of sense when you see completely useless people earn an insane amount of money.  In my previous role as a scientist, I worked with somebody who's core value came from being bilingual in the language where a vast majority of our raw materials suppliers are based whilst completely lacking in Chemistry, technical approach, project management, and general competency.

In short, the most important thing to a company is being able to demonstrate you have valuable skills.  How you do that is through a previous history of being able to do stuff and/or examples of being able to do stuff.  I say this because at one of my old companies, we hired some marketing person to "supercharge the business".  They ended up getting sacked because they were found out to be lying about all of their business credentials and passed out on site in the changing room, reeking of alcohol.
Hello and not at all! 

>  and built a data scraper with selenium and pandas and small web application using Flask. Do you think these projects are enough to get a job or do I need to learn other skills as well?

I would also research about data architecture as well e.g. what does an ETL pipeline consist of, what is a Data Lake, what is a Data Warehouse, structured/semi-structured/unstructured data, and the rest of it.  Also different data types although you'll probably be familiar with those.

SQL is a really big part of DE too so if you haven't already definitely research relational databases, SQL vs NoSQL, and generally understand relational database design.

> Do you also have tips maybe in term of soft skills and how I can explain the switch?

If this is a field you're genuinely interested in (as opposed to wanting to cash in on the hype), it'll definitely show in the interviews.  Less so coding advice and more interview advice, explaining your journey and why you got into a field is always something people want to hear because if you have good motivations, that's always a huge plus.
Very well done for 8 months of progress!

I'm covering most of these as well, currently going all in on pandas for a few weeks and then Tableau/ R

As for ML, how deep down the rabbit hole did you go?
How much time did you spend on this on a weekly basis?
May I ask, did you use only one site, more sites, to learn by yourself? I'd also be grateful to know which ones, so that I can do the same :))
What do you use for automating tasks? I've been working through automating my work tasks with openpyxl, and anything else using a slow and long-winded pyautogui (look for this button, click here, etc) script. Although it works, I have a feeling it's not the most efficient way to do it.
That's nice.  I've always been intimidated by stuff like Kafka and Hadoop which were too big to be learned as an individual.

By process scheduling, do you mean using Python for cron/task scheduler/Airflow?
> and harassing scammers by spamming them with emails

And this is why I learn Python .
Can you go into a little detail on how you translated those courses onto your resume? Did you just list the certificate of completion in your education section? Did you break down projects you completed in each one? Something else? Thanks
Do you think that played a large role in your hiring?
Had no idea  [r/dataengineering](https://www.reddit.com/r/dataengineering/) existed, thanks. I'm going to ask a few questions there, gotta prepare the future!
If you don‚Äôt mind, I just recently started playing around with sql and it‚Äôs documentation. (Postgre) and I think it‚Äôs a lot of fun. But what did you do in your few months to feel confident working with data?
Thanks! Suggestions for datasets/ dataset repository?
Are there datasets with different tables as well? Practicing more complicated joins is something I specifically would like to do.
Jesus bro that's wild, so like 5-10 hours a day? Dedicated as hell, congrats man
DBA & analyst in training
Ya Derrick she roll has some awesome tutorials on YouTube.  I‚Äôll checkout kaggle thx
Thank you so much for taking the time to respond. Congrats on your new job and wish you the best, good luck!
and lol The guy who got sacked, that's quite a story
Thank you!

> As for ML, how deep down the rabbit hole did you go?

Not that deep.  I understand the very basics of ML (how to choose a model, train and test data sets, why you should cross validate, what stats to use, and basic identifiers for when a model might not be very good).  This has been helpful from a DE point of view as I can potentially forsee how the data I send across might fuck with the model.  

As mentioned, I'm a little put off by ML after seeing it in industry.  In principle, ML is great and can do great things when used correctly.  In my previous experience, and possibly others, ML is massively hyped by middle managers with no technical knowledge and have politicised it to the point where it becomes a focus for their appraisal rather than a tool which can be used to improve a part of the business.
Between 50-70 hours.
Mainly Udemy although there isn't one resource for everybody.  I used Udemy because I had no idea what to do and it's a great way to be introduced to a subject.  After that, it was discovering everything else out by either trying it or watching videos on it on YouTube.
Pandas does a lot of work in spreadsheets and has a lot of useful features.

Pyautogui is also something I use, although, very niche purposes and for personal projects as it doesn't scale well.

For webscraping, I love Selenium.
All of the stuff I learnt was WAY less sophisticated than all of those, but essentially, yes.  I looked into learning Kafka and Hadoop and, presumably, will be using those on the job.
Isn't it why we all learnt Python?
Hello and I can! 

At first, I listed each course and what I learnt from it e.g. "Basic syntax, data structures, OOP" etc as well as what projects I built during the course which were listed in the github.  Obviously, these are a little useless because they are essentially copy and paste projects.

I didn't list the certificate because, to be honest, I didn't really feel they added much clout.

The course stuff was really to get my foot in the door rather than to prove anything.  It also showed what kind of path I was taking e.g. I did only python, SQL, and data courses.
Absolutely.  Best of luck!
> But what did you do in your few months to feel confident working with data?

Querying massive data sets helps as well as completing codewars challenges for SQL specific stuff.  A lot of is to with my previous role as a traditional scientist where I'm used to looking at a lot of various sources of data on a daily basis and having to normalise a lot of it.
Would either use Kaggle or any open data registry buckets on S3.
None that I've found.  I usually made my own extra tables for practice.
Thank you!

Either way, it was a lot of hours and a lot of stress hahaha.  Really lucky to have got somewhere with it.
Thank you! If you have any extra questions, or there's anything you think I could answer, please let me know!
Over the course of 8 months? That's insane, really impressive
Hey, I know I'm responding to an old comment you made here, but hopefully you'll see this.

You mentioned Pyautogui. Was there anything in particular about that library that made you choose to use it? Or was it just kind of the first thing you landed on and put an effort into learning? I ask because I also have a small personal project I'm currently working on and I'm struggling to figure out which GUI library to attempt to use. There are quite a few and it seems like they all have their pros and cons.
That and auto swiping on Tinder
Many Congrats for your wonderful perseverance and eventually bagging the roleüëç

Can you pls elaborate more on "completing codewars challenges for SQL specific stuff". What are these and may be some relevant links.

I am myself self taught Python guy but often the challenge I am facing is specific to OOPS. Though I hv basic understanding, I am unable to develop the maturity to think and handle larger projects requiring multiple python scripts. I am comfortable with fairly complex functions but less so with writing larger classes and the subsequent things.

Would you be able to point me to any relevant practice projects where I can enhance my OOPS and get to the next level.

Many Thanks and congrats again!
Awesome! Thanks man! I hope this job has everything you hoped for! Good luck!
Thank you! Although you get those crazy ass kids smashing out Google competitions at the age of 15.  I am but a slow ass mfer.
> You mentioned Pyautogui. Was there anything in particular about that library that made you choose to use it? Or was it just kind of the first thing you landed on and put an effort into learning? 

`pyautogui` was made by the legendary Al Sweigart who wrote the book Automate the Boring Stuff with Python and he included it as part of his course.

> I ask because I also have a small personal project I'm currently working on and I'm struggling to figure out which GUI library to attempt to use. There are quite a few and it seems like they all have their pros and cons.

I'm afraid your research is correct.  I'd recommend trying just one and then if it doesn't quite feel right, try another.  Good opportunity to make your code nice and portable!
This person fucks.
Hello and thank you!

> Can you pls elaborate more on "completing codewars challenges for SQL specific stuff". What are these and may be some relevant links.

It would be doing the SQL challenges in Codewars just to get an idea of how to solve certain problems.  An ideal world would be querying on real datasets because they often have an element of needing to be cleaned or preprocessed before being queried on.

> I am myself self taught Python guy but often the challenge I am facing is specific to OOPS. Though I hv basic understanding, I am unable to develop the maturity to think and handle larger projects requiring multiple python scripts. I am comfortable with fairly complex functions but less so with writing larger classes and the subsequent things.

This is something I'm learning myself so can't really advise hahaha.  I'm going through my old projects and trying to refactor the code to be use OOP right now.
You and me both! Thank you and same to you.
How did you time manage this and your job?
This person rocks.
This is an easy question - by being made unemployed 6 months ago! Unlimited time to do almost anything.
Awesome! I really admire your tenacity!
u/AlSweigart's ATBS is the first book listed in the required reading by NSA. That would make a fun "endorsement" for the cover of the next edition
Cool. We paid for it, so why not?
Opening line:  "So you're teaching the Python class. What have you gotten yourself into? You should probably take a few moments (or possibly a few days) to reconsider the life choices that have put you in this position."
I know NSA is secretive but why the heck would any of a Python course be classified?

I remember when NSA first came out of the shadows. Two initiatives I know of:

\- they began a mission of helping US companies improve their security by certifying operating systems as "trusted" and having open training in security

\- they created the Cryptography Museum, putting a bunch of historic code-breaking equipment that had been in the basement on public display. It's a cool place, you should visit it if you're ever in the Baltimore area.
Instructions unclear, mass collected phone data from my neighbors
Is the training material any good though? Is it better than other free courses?
Is it recent/Python3 etc?
Why is this pdf so large! I could fit an entire Linux distribution inside it.
Fantastic!
Finally, there is a way to learn python. The secret language of the NSA.
I used to teach Python (and other CS stuff)... I thought this was cool when it came out a few years back and read it.  It's not garbage, but there are a lot of better, free resources if you want to learn Python.  This is lowest-common-denominator shit -- think about it -- the smart folks at the NSA already knew how to program when they walked in the front door, and if not in Python they could figure it out quickly!
Where is the download link ?
Knowing his politics from twitter I dont think he would be too thrilled üòÜ
yep lol
> why the heck would any of a Python course be classified?

Based on what I saw, it looks like it was "For Official Use Only" which isn't classified _per se_ but just not public knowledge. Then they stripped out employee names everywhere (from what I saw on Internet Archive) to remove that.

Unless they're a bunch of idiotic fucktards, they're going to have an airgapped network and _everything_ on there would be "classified unless explicitly told otherwise."
>I know NSA is secretive but why the heck would any of a Python course be classified?

Their version likely includes some ways they use it for data analysis, or includes or references some code developed in-house.  The Big Two for classification are "sources" and "methods."  Probably had some stuff in there that fell under the "methods" category.
It doesn‚Äôt appear to have been classified. Classified documents are exempt from FOIA.
They also open sourced Ghidra, a decompiling tool used for reverse engineering software.
>I know NSA is secretive but why the heck would any of a Python course be classified?

It's not. Almost everything is unclassified (U marking). It is FOUO only because of certain references to internal stuff, like repos.
I really want to know this, so I took a quick skim of the PDF (it takes a damn long time to load -- [archive.net](https://archive.net) isn't particularly fast :/)

Looking through some of the beginning pages, it doesn't look like it's an introduction to programming (jumping into naming all the basic data types, giving a list of tonnes of built-in top-level functions). It jumps into using loads of built-in methods before even talking about variables... 

There are also a few exercises at the end of each sub-chapter. It doesn't seem like it would be enough for an introductory programmer -- maybe an enthusiastic one, but it's likely that this was meant for people with some good programming background. After all, it is the NSA.

All in all, it seems like a really thorough crash course (with loads more than the introductory python -- lots of modules included for the NSA lol) for someone with a good amount of prior programming knowledge.
Python2.7 is listed in the documentation reference but so is Python 3.4 and 3.5.

Just by checking the beginning of the first couple of chapters, they are using Python 3.

However I cannot confirm (or deny) if all listed examples are Python 3 or if they also mixed in some Python 2.7. They may have just listed that for extra documentation (e.g. when patching legacy code written in Python 2.7).
lol
In your opinion, what's the best free python resource for a beginner?
"Why shouldn't I work for the NSA.? That's a tough one, but I'll take a shot. Say I'm working at NSA Somebody puts a code on my desk, something nobody else can break. Maybe I take a shot at it and maybe I break it. And I'm real happy with myself, cause I did my job well. But maybe that code was the location of some rebel army in North Africa or the Middle East. Once they have that location, they bomb the village where the rebels were hiding and fifteen hundred people I never met, never had no problem with, get killed. Now the politicians are sayin', "Oh, send in the Marines to secure the area" cause they don't give a shit. It won't be their kid over there, gettin' shot. Just like it wasn't them when their number got called, cause they were pullin' a tour in the National Guard. It'll be some kid from Southie takin' shrapnel in the ass.

And he comes back to find that the plant he used to work at got exported to the country he just got back from. And the guy who put the shrapnel in his ass got his old job, cause he'll work for fifteen cents a day and no bathroom breaks. Meanwhile, he realizes the only reason he was over there in the first place was so we could install a government that would sell us oil at a good price. And, of course, the oil companies used the skirmish over there to scare up domestic oil prices. A cute little ancillary benefit for them, but it ain't helping my buddy at two-fifty a gallon.

And they're takin' their sweet time bringin' the oil back, of course, and maybe even took the liberty of hiring an alcoholic skipper who likes to drink martinis and fuckin' play slalom with the icebergs, and it ain't too long 'til he hits one, spills the oil and kills all the sea life in the North Atlantic. So now my buddy's out of work and he can't afford to drive, so he's got to walk to the fuckin' job interviews, which sucks cause the shrapnel in his ass is givin' him chronic hemorrhoids. And meanwhile he's starvin', cause every time he tries to get a bite to eat, the only blue plate special they're servin' is North Atlantic scrod with Quaker State.

So what did I think? I'm holdin' out for somethin' better. I figure fuck it, while I'm at it why not just shoot my buddy, take his job, give it to his sworn enemy, hike up gas prices, bomb a village, club a baby seal, hit the hash pipe and join the National Guard? I could be elected president."
>Based on what I saw, it looks like it was "For Official Use Only" which isn't classified per se but just not public knowledge.

Ah, OK. I'm familiar with FOUO. That's a specific Department of Defense marking. President Obama found that there were (I think) 15 different markings across the government that meant basically the same thing, and tried to reform that system with one unified marking, CUI, Controlled Unclassified Information. So FOUO was supposed to go away.

Unfortunately [it didn't work](https://sgp.fas.org/othergov/intel/ratcliffe-cui.pdf). Bureaucrats will bureaucrat.

>As currently conceived, instead of simplifying and replacing a handful of current markings with one new CUI marking, the CUI Program has expanded to over 124 categories in 20 groupings, with 60 Specified and 60+ Basic categories. It is vastly overcomplicated.

The memo I linked is marked FOUO, the category that wouldn't die.
> I cannot confirm

You forgot "or deny."
> maybe even took the liberty of hiring an alcoholic skipper who likes to drink martinis and fuckin' play slalom with the icebergs, 

This is my favorite part of that bit hehe
^^ from Good Will Hunting - outstanding flick.

Also, check verified username‚Ä¶
Love you Al thanks for all you've done
How do you like dem apples?
$2.50 a gallon? Those are rookie numbers.
[relevant XLCD](https://xkcd.com/927/)
Just to add on, I think the hardest part about starting to program is the mentality. Regular people will see an issue, not see a solution and respond with "welp, guess it's broken". 

We're different though, we're programmers! "Why is this broken?" "How does this work?" "Can I make this better?" those are the hardest things to stick to your brain when starting out.

Learning to program isn't so much as to just learn the language, it's to get into that mentality, breaking things down into their simplest steps, then going on-by-on into them, just like IKEA furniture instructions.

Hell you can even apply that to anything in your life, car issues? Break it down! Painting a room? Break it down! Doing yard work? BREAK IT DOWN! 

Once you get down the mentality, you can learn any language. It's just a matter of knowing the syntax and the usability.

Keep up the great work everyone, programming is really an art, grab the keyboard and **HAVE FUN!**
Not sure who this may apply to, but this has helped and continues to help me:

It's okay to walk away for a moment and rest. If you're stuck, walk away and rest your mind, whether it's with a book, a game, music, or a nap. Many times, the answer will present itself to you after that moment away.

Not grasping something? Look to see how someone else explains it.

After you read it, do it. After you do it, teach it. That will cement your understanding and serves to not only self-identify your weaknesses but also gives you the best chance at mastering something.

**BEST PROGRAMMER ADVICE**: rubber duck. Get one and put it on your desk. If you're stumped and know that something should work but it doesn't, walk the duck through the problem, what you've done, and why you believe it should work. Communicating the problem uses a different part of your brain and allows you to see parts of the problem you may not have been acutely aware of before. Sounds silly, sure, but there are mountains of successful devs and SEs that have had or still keep around a rubber duck.
I have to remind myself of this every day.  I'm a construction worker that got laid off last October.  My Union Hall has no hiring prospects for at least a month from now.  So I took the advice of a successful friend and started learning programming, despite not having even owned a computer in over 10 years.  The curve is steep, and not easy.  But you will not learn what you don't learn.  You have to force it down your throat until you get it.  And you will get it, even if it's not as fast as you thought.  Change takes effort.  Now I'm at the point that I can answer a lot of Beginner questions, when just a few months ago I didn't even know how to pip install or use f strings.  I still feel dumb, but that will never change.  As long as I can answer more questions every time I see them, I know my knowledge is increasing.
ty = ("thanks for the motivation")

print(f"I started learning python a month ago so {ty}")
I started learning Python last year, and since then it's been a wild ride. 

I don't work in IT (Data Analyst / Junior Data Scientist) so my understanding of Python consists mostly of Pandas, Numpy and Matplotlib. My job heavily relies on SAS for crunching big numbers and Python is considered a niche skill, but I kept at it anyway since I find Python to be much more intuitive and straightforward than SAS (which feels like a fossil compared to Python). Most people around me told me to stop wasting time with a skill I will never use at work, but I kept at it cause I find it extremely fun messing around in Python.

As luck would have it, my latest project requires heavy usage of Python as most of the data is in Thai and SAS Enterprise Guide apparently cannot deal with Thai. Since I'm the only guy on my team who knows Python at all, I've basically been given an unprecedented opportunity to flex my knowledge. Feels good to know that all the troubles that I went through over the past year paid off
[deleted]
Thanks for this (:
The pain of coding itself is nowhere near the pain of dealing with coding ecosystems. I swear everyone would be coding if they didn't have to deal with setup, package management, linking, toolchains etc. I've spent weeks/months stuck on those kinds of issues, none of which are related to the logic of code itself, and in the end I learned nothing useful from the experience.
Nothing in life worth having is easy. 
The best part is if you stick at it you‚Äôll do well. Keep it up.
I think coding is one of the areas where you really noticeably see the benefits of trying and failing at something over and over. 

You could spend an hour working on a problem and not solve it. 

But if you've been actively working on it, writing code, editing things, rewriting whole parts of it, then that not only helps you eventually solve this problem but sets you up to have a better shot at solving similar problems in the future.
Thank you for the motivation.
I needed this lol

Yesterday I gave up and turned my laptop off because I thought it was too difficult
>You can learn to code. I can learn to code. We can learn to code.

This sounds like an Oprah meme.
I don't find it hard, I find it challenging. And I like it.
Patience and motivation are crucial.
You are not going to solve a problem if you don't care about its solution or if you want to solve it NOW.

Also, to have big projects in mind is perfectly fine but don't expect to be able to do this at the beginning, it could be very frustrating to think like so and eventually it would bring you to crave others chunk of code to get an immediate result. But are you going to be satisfied then?

This doesn't want to be demotivational. It's ok to take chunks of code here and there, but first try to do it by yourself. Be patient, find the motivation which drives you over the failures, learn how to deal with this feeling, because you are going to fail a lot while in the infinite road of programming.

My 2 cent
Something I‚Äôve noticed on this journey. It literally rewires your entire way of thinking, the way I can literally see the different ways I assess scenarios and problems as I‚Äôve been progressing.
Bruh, wait until OOP.

Once you got OOP down, though, you're on a new level and moving to other languages object oriented languages is easy.
Thank you!! I needed this today.
Same. I am feeling same. I have been learning it for 4 months still struggling with logical building and some concept.
When I work with our apprentices, students who already work with us or even some fresh junior developers, then I always try to make them focus on breaking down problems.

I think that's one of the critical things to learn and practice: How do I break down that fucking huge task that I got into small and easily researchable pieces.
I am self learning to code for over 3-4 months now, I am unable to make any progress. I find it difficult to recollect basic concepts and even after dedicating so much time and efforts, I feel I like don't know anything.
This makes me feel better. I beat myself up a lot thinking I'm too stupid to get it. Sometimes I can get over that feeling when I look at all that I've accomplished in 3 months of learning. Thank you for reminding me!
Thank you for this, it's so true.
Well thanks. Guess i needed to read this
i always remind myself: you didn't enter the coding field cause it's easy, you entered because it was fun
It really is. I briefly started with Python, but decided to swap to Swift/SwiftUI for iOS development. I learned the very very basics in Python, relearned them in swift, then spent weeks on my first project of my own (recreating a basic text interface app I made in Python with SwiftUI). Most of that time was trying to learn how to use binding states and persisting data. 

I‚Äôd also add to save all the resources and tutorials you use to learn. Never know when you might have found a gold nugget of code or approach to code that you will want to go back too. 

In all my struggles, following many random videos for how to make similar apps, I stumbled across a tiny snippet of code that was casually mentioned in one video. It eliminated the need for lines of code for clear buttons to clear a text entry field/form after you submit it with a button. 

Also, applicable to many forms of learning:
Build a solid foundation of fundamentals. If you get stuck, and don‚Äôt know what to do, and realize you don‚Äôt even know what you don‚Äôt know, revisit the fundamentals‚Äîin excruciating detail. In swift, as an example, closures and nil coalescing can be horrible confusing to learn, but once they click your life gets much easier; they only click if you keep working to learn despite how hard it is.
Its all so worth it at the end, makes all the struggle feel like nothing
I've been wanting to learn python for a while but I'm struggling from not knowing on what I want to do
Thanks for the motivation sir
One of the issues I've struggled with is the sheer amount of "stuff" to learn. We're learning the syntax, tools of the trade (pip, IDE, git, virtual envs, etc.), how to interpret a library's docs, and *how* to code.

Following along to books and videos is one thing but it's kind of like learning martial arts without ever sparring. I've found CodeWars to be really helpful in that regard by giving me little challenges to solve but it won't teach you to be a better programmer (that, I think, comes from the tenacity that started us down this path).

Although, I'm still struggling mightily with figuring out Pycharm's virtual environments. What do you mean "pandas does not exists"?! I can see it in your little libraries folder, it's in the project's settings, I can run it from your the python terminal window in Pycharm...argh! Screw it! I've spent three hours trying to figure this out. Pandas, welcome to the main install.

Tool woes aside, I  realized last night that I'm using the same solutions to a lot of problems: Counter variables, an empty dict to be populated, for loops, etc. My code, while functional, isn't pythonic. Time to set the next goal of writing *better* code: comprehensions, figuring out how to use enumerate(), lamdas, etc.

Good luck folks, it isn't easy but you're also not alone in the struggle. :)
Just wanted to add even when you become really good in one part something else will make you feel like am idiot again. Been coding since starting college in 2012 and I code for a living and still end up feeling like an idiot whenever it's time to learn something all new. 

Point is don't be afraid to feel and admit you don't know what your doing but use that as drive to improve yourself. Most the time you think all these "masters" know more then they really do. Good programmers are good and figuring out how to do things not knowing how to do everything off the top of their head.
Went from hobby Python programming to completing a recommendation system from my company in Python and Django over the last year. I did know some basic Python but didn‚Äôt really know Python. 

I did tutorials built same clone stuff, and did projects in the past but none of it was from my own vision. 

Then at work I really wanted to upgrade the websites and add recommendations, sort by moods and other more modern features. But it wasn‚Äôt  possible to spend and covid hit so company was losing money. So I decided to jump in see if I could do it myself.

For me the best thing to keep progress was to follow this(might not work for all but was effective for me)

Don‚Äôt try to do or know everything all at once

List of parts / features/ functions 
Breaking them into pieces
Try to accomplish a piece
Learn what‚Äôs need for that piece or part read docs, videos, view others codes of GitHub 
If stuck you get stuck StackOverflow, docs, or ask for help
Once working ... review and study why .. don‚Äôt just move on .. till you understand 
Repeat.. til done
I dont even know what to choose to learn at this point #\_#
Thanks for post, just paid my "holding deposit" for my program. Waiting for financial aid, recall back to work or news from a Nigerian prince including me in his will. Anticipating frustration. 

Joking aside, I'm ready to learn from professionals now,  self instruction and tutorial rabbit holes are at their end for me. Learnt Python via Coursera. 

Good luck everyone.
Thank you! I needed this today! I have some health issues I am dealing with, but have to start a python project this week. We can do this! üí™
Keep at it. As I was learning, I found there were significant key moments in understanding where it was like a light going off. Going from hobby coder, student, to full time software dev, I still get routine moments where things just click. Once you can just sit down and start coding an idea without intense research, it becomes so enjoyable. I honestly love doing this for a living.
Dude. I was really questioning myself about why I chose coding as my major. Thanks for the inspiration. I'll save and ready this anytime I begin doubting myself.
Thank you - I've been struggling to even understand concepts from my class textbook and I've recently felt so stupid and worthless. I was a data analyst for years but as a power user of Excel. Going into the analytics path was the natural next move, but I think I'm just too dumb to make it in analytics proper. I'm okay enough to learn the data wrangling I need from pandas, but I really suck at the machine learning part. So I'm in a place where I'm okay enough to learn the basics but too dumb to get to a level where I can truly succeed at this. =(
Appreciate you. Ya'll are awesome and a huge support/motivation
What's hard about it? 

Deciphering the error messages?

Learning algorithms?

Implementing an algorithm?

Logic flow?

Indenting?

Data structures?

Just curious.
Damn. Really? People struggle this much with coding? I honestly find lots of other things so much harder than coding. I always thought coding is easy despite occasionally challenges and struggles, for me it‚Äôs in general very enjoyable and fun to code software. But I guess now I step out of my echo chamber and see there are people who aren‚Äôt naturally good at thinking like a programmer.
Coding is hard... for some people.
I haven't been much into programming soo just wanted to ask if It is normal to take 1- 2 hrs sometimes to solve a Hackerrank question?? Day 15-30 in Code takes too long for me and the Interview question one's needs atleast a 3-5 times read
it's not that hard at all with Python, since there is no compilation and you can run it every time you add a line of code to see the immediate results.

just go one baby step at a time, make ample use of Google and sites like [Geeksforgeeks.org](https://Geeksforgeeks.org) for code examples and documentation, and it is not much harder than learning BASIC on an old Commodore 64 or whatever...

yeah, Python does throw some wrenches into the mix, such as not having regular arrays or regular for-loop notation, and weird required "global" and "self" declarations, a very unorthodox class/OOP system, etc.... but overall, you should be able to have something running in 5 minutes, and just keep adding to it.  no problem.

&#x200B;

\++L
If you ain‚Äôt struggling to some degree you‚Äôre finished!! Always find new ways to stretch yourself and push the limits.
python is interesting and relatively easier to read. it very close to natural language. welcome come to the community.
I am myself struggling with python but I don't get why or how can I be struggling, especially when I have trouble with something I understand
My problem is that I can't usually manage to drill in my mind what I've learned lately. I mean, I easily forget what I've learned. So, as long as it is just about logic and structure ( if, while, for etc) I can get to the solution soon or later, but I often mess up with syntax because I'm overhelmed by how many things Python can do. For example, I forget what function is for, is it a list, tuple or dictionary function.

Then it comes OPP, which make things for me  even worse, adding a level of difficulty and stuff for me to remember. I thought that I had far less diffulty at learning the C language (which I have forgotton now since I haven't been using it for ages). Maybe it just that I'm getting older..
[deleted]
I‚Äôm still pretty bad at programming python, but it‚Äôs fun. It‚Äôs not a burden compared to other activities and instead is a fun learning experience. I may get mad when syntax errors, and module errors happen, but I do it until I fix it and then the whole thing is worth it to see my code have a practical use.
Yes it can be frustrating.  But I'm going to be a contrarian here.  To me, (coding for 35 years professionally and continuing as a hobby in retirement) if it is indeed that hard for you, I think that you probably should give it up.  The best coders revel in it.  When I took my community college classes in programming, I thought they were fun.  But as I progressed through the sequence, people dropped out after each course.  They were intelligent people, but their minds just didn't work like ours.

I don't want to sound completely negative.  You can probably force yourself to learn if you try hard enough.  And probably get a job and make a decent living.  But it will just be a job, and you will live for the weekends like most people do.  So you might want to find something that you enjoy intrinsically and pursue that for a living.
it doesn't get better you are always learning
Thank you so much for your encouraging words. I‚Äôm currently 27 & trying to make a switch in coding.. I started once before and gave up, but I needed to hear this because I‚Äôm starting it again.
Man the first language I learned was C and ngl it took me 2 years to be fully good at it on my own.
Some people don't even expend the effort to read the documentation. How do you expect them to not just give up at the slightest issue?
Mine is not the mental of learning the programming but the devices (Desktop,laptop and MacBook)that I will use to do the coding üò¢üò¢I‚Äôm finding it difficult here to get those devices.üíïI really love coding always but I don‚Äôt have the machines that can help me so I always do mine in the book and later compare and see if I‚Äôm on the right pathüò¢üò¢üò¢I wish anyone of you here can help me to the computers and start practicing on my own computer üôèüèΩüôèüèΩüôèüèΩ
And to highlight it again, it‚Äôs ok to hate the entire process and just want it to work. I had trouble learning how to not get frustrated and how to consistently overcome seemingly insurmountable hurdles. However, at some point you just become used to it. 

Probably because I learned that the ‚Äúbreaking things down‚Äù process is literally either manually tracking your algorithms and code flow for bad code, or plugging compiler messages/your own questions into Google. (Same can be said for other life issues too ü§™). 

I do think that‚Äôs the best skill: to become someone who is not deterred by a problem that seems impossible anymore.
Beware, sometimes your significant other justs wants to vent.  The programmer inside of you will try to solve the problem.  Your significant other will get annoyed.  Fight ensues, stress levels increase.  The programmer's mind doesn't understand the reaction (why is he/she so annoyed...I'm trying to solve the problem).  The significant other is looking at the programmer like he/she is an asshole for not listening and just offering a hug.  Just beware.  It might help if for personal relationships you turn off the programmer's brain.  Easier said than done.   \*\*\*Rant off\*\*\*
This is the best response to a question I've seen.
well said.
thank you!
This is great advice. I‚Äôve saved this whole post just so I can revisit and remind myself from time to time.
You just describe how I think engineering works.
It is funny you gave that IKEA example because the instructor of the first year CS course that I've taken mentioned the same thing on our literally first lecture. He then gave us an in-class exercise to break down the steps of assembling an IKEA table. 
I didn't really get the point at the time but it does really make more sense as you learn more and more both about the design process of the program and the programming itself. Breaking down is the key.
Great response
This is how I was learning.
A motivational boost that I did know I needed. Thank you!
Totally agree. Learning the syntax is just the beginning
My wife may think I‚Äôm losing my marbles, but I‚Äôm gonna buy a rubber duck this weekend. Thank you for the advice!
[deleted]
Happy to see another tradesman. I'm an industrial maintenance technician and I just started learning Javascript and the curve is steep indeed. We'll get it, though.
[deleted]
That is really great, keep it up
I've been in the industry for about 13 years. I still feel dumb. :D keep up the good work!!
There is a black void to accept.  The more you learn about programming, the more you realize you don‚Äôt know.  Even if you get quite good in a few specialties.
No need for the brackets in your ty!
Edit: parentheses, rather
And I think that the better way to print that would be print("I started learning pythin a month ago so {}".format(ty))

Edit: If I'm wrong why downvoting ? Just correct me and I'll edit my comment wth.. Great mindset there guys, especially on subreddit about learning ! I said this because that's what my Python teacher told me but if you know better make yourself useful instead of downvoting like a useless sheep
Well done for sticking to it :)
You're welcome. Those light bulb moments are great moments of inspiration.
You got this whatsyourpurpose!
I have spent SO much time on just setting up Venv‚Äôs, linking to databases or local host networks. Your code can be perfect, but won‚Äôt work because some small detail in one of these. Programming is not just programming.
I have the same issues, but I think it's because I lack the basic theoretical knowledge of how these things work. I have a solid abstract understanding of pointers and OOP and so on, but I really only have a basic working understanding of Linux systems, compilers, environments, linkers and so on. So it's fine when it works, but I'm really stabbing in the dark and googling everything when anything goes wrong.
Thanks friend :).
You're are going to crush it brokenflea. Whatever 'it' is.
It's super ok to walk away and come back. Sometimes it's actually the best thing you can do.
I can't tell you how many times I've went to sleep with an unsolved problem and implemented a solution the next morning. Brains are strange
You get a car, you get a car, you get a car!
So true
It‚Äôs like *OOP, there it is* amirite?
I'm excited
Break the trip over the mountain into many small steps. Excellent advice thank you.
You're very welcome.
Love this write up. Thanks UpbeatCheetah.
Tonight's code study has been clicking.  I'm enjoying the journey as well as being excited for the destination.
I am toiling away debugging and needed a motivation boost. And thought if I need one, chances are a damn big group need some too.
Bhava kutla ahes?
That sounds fantastic. Well done you. How long did the transition take all up?
Awesome I hope it helps. You can also subscribe to my newsletter at www.thehappyorchardblog,com. I write about motivation, inspiration and being happy and healthy twice a week. It has helped others stick to hard things.
You're not too dumb. If you keep chipping away you will get there. Keep turning up. Good things will happen.
We all need a little bit of love every now and again :) .
Thanks dsabra :) .
Have you tried any of the free ‚Äúlearn coding apps‚Äù that include Python? A lot of the apps seem to be designed for smaller segments of learning and include multiple forms of instruction (text, example, fill in the blank, video) and reviews and quizzes. We‚Äôre all different, but I personally find using mixed-mediums of instruction help me retain stuff quicker (and feels more engaging than just listing to hours of video lectures, or reading walls of texts, with bo variance (variables?) to break them up.
This great sub-reddit has plenty of suggestions. I don't study through YouTube, so I can't give you recommendations there.. But I can recommend [sololearn](https://www.sololearn.com/home) and [AutomateTheBoringStuffWithPython](https://automatetheboringstuff.com/). I'm finding both these resources fantastic methods to get your hands dirty and start coding as soon as possible.
You got this. I'm 26 and just learning the basic syntax. We're allowed to struggle!
I'm a very, VERY new beginner at programming in python, but I think I was always meant to be here for this reason exactly. My bestie (we're both female) always wants to vent about relationship issues, and I want to be supportive, I really do! But to me, support is - ok, what's the problem, what steps can we take to fix it, did it work, how can we make changes and try again. Usually, she just wants me to nod and call her man a meanie. We had to develop a codeword for when she actually wants help/solutions, or when she just needs to vent.
I agree that
Make sure you get the cute ones with various helmets to choose from
I enjoy Rubik's cubes too much for that to not be too disruptive lol. My mind goes right to randomizing algorithms while scrambling, so trying to figure anything else out is less likely to be successful.

I've definitely done that during unnecessarily long phone conferences, though, lol.
I'm a pipieliner.  Seems my paycheck is tied to politics, and I don't appreciate it.  Gotta get out.
My learning lately has centered on SQL and Flask Restful.  I landed an unpaid internship and they assigned me those things because they‚Äôre going to need someone for their API‚Äôs.
Exactly. The more you learn, the more you realize there is to learn. Like, you can be a Python expert, and not even know 1/4 of it.
oh yea I just realized
yeah but that's more complicated to type that's why I just used f string
I also prefer the .format() option over f string. Same goes for variable reassignment. Absolutely hate the +=.
I would bet you're getting downvoted because you're saying your way is "better" vs "different". Both have reasonable usecases. I like fstrings for short strings with few substitutions, and .format() for longer ones with a lot of substitutions.

Also your edit is saying "don't be sheep" and "this is what someone told me" in the same sentence, which probably isn't helping.
In my case, 'it' would be the skulls of my enemies. Jk, it's learning to code better and more often.
Thanks for the laugh!
I was in marketing and did some graphic and some web design prior, so I had some knowledge from that and got more interested in the backend code. I spent maybe 2 years doing Udemy courses daily, picking the code apart when I was finished and changing it for each one, then working with the pieces to build my own thing.

After doing that a while, I did a 9 month object oriented software development course at a Polytechnic college, which was more of an after degree program. 

From there I went into my job and  still learning every day and don't regret this path at all.
I agree.
Which learn coding app do you use?
Thanks
This is me.
Wish you all the best going forward. SQL knowledge is a rare skill, and maybe I'm oversimplifying this, but if you learn how indexes and outer joins work, you'll be set for life.
you are well on your way if you already know about that advanced feature!  keep at it, bro!!
Then just tell me that it isn't necessarily better ? You know, just having a conversation with someone ? I don't see how downvoting is smart or helpful especially in a subreddit about LEARNING. Everyone can be wrong but I don't see how a downvote can make someone improve or know why they are wrong. It's not "someone", it's a professional python dev, not my school friend or my mom ffs, and yes downvoting ten times someone without one person actually telling me what was wrong with my comment is stupid and being a sheep, just a fact and people downvoting further just prove my point
Wow congratulations on the work you put in to get there. Good job :).
I liked Mimo for Python and a little swift. I‚Äôm not sure if Paul Hudson has an app for Python, but his free app for Swift is amazing (has basics with 60 second topic lectures), challenges, news, and multiple ways to test/practice coding (arrange the code blocks, predict the output, spot the error, free-coding challenges, etc.) and ties into the hackingWithSwift 100 days course. I‚Äôm not sure if/or who the equivalent person/resource would be for Python (since I mostly hopped over to iOS land now).
Now I'm curious.  Would you care to elaborate?  I'm looking for a way to stand all the way out.
thanks!
Thank you!
It's just that being able to work with database technologies is a rare skill and involves thinking in different ways than traditional programming languages normally allow for. You can write reports, compose low-level stored procedures and functions, administrate data warehouses, and so on, by starting with basic knowledge of how relational databases operate and working your way up to related technologies. And if you can do that in conjunction with regular programming skills, you'll find lots of opportunities for work across different industries. Most of my work over 20 years has involved SQL Server and MS Access in various degrees, with a little Oracle and MySQL thrown in, and I'm always up for learning useful technologies new and old. It's been an interesting career for me so far, and I'm mostly self-taught.
Do you think you could of got a job earlier than you did? IE: with less self-training?
Probably. I did a lot of website development side gigs on the way and when I originally went to University, it wasn't for anything related to coding. I could have just started in Computer Science or did a 2-year related course instead. I wasn't breaking my back by any means for those two years, it was more just leisurely making progress in a hobby. It wasn't until that point that my wife actually pushed me to go back to school and pursue it as a full time career.
Out of curiosity what is the file format of the form that you're filling out?
Congratulations! Welcome to the world of Python-enabled smart and efficient workers.
It's such an awesome feeling, isn't it? Congrats!
What's an example of the paperwork and the data you fill it with?
Now that you have a functional code the goal is improve it  :) if you do your work in the web, you may consider using Selenium for browser automation.
Nice, congrats!
Once I got a job writing Python code, I have automated so many aspects of my life with it. Any time I have to do a repetitive task I immediately open VSCode and try to figure out how to automate it. Its such a powerful feeling!

PS Don't tell anybody ;)
My job is automate stuff for my co-workers, it‚Äôs called rpa. Not really python related directly but I write some python script to make some stuff faster
Yesssssss. It's a good feeling.
please do not tell your boss this
As a future accountant, this is something I hope to achieve one day. Congrats. Seeing this makes me happy, not just only for you but to look forward to doing something like this as well one day.
Way to go! I have some manual reports I do weekly that take up 4+ hours worth of time so definitely looking to use Python to have similar results as you!
That is so cool! I feel your excitement - super happy for you. :-)
I'm proud of you! 

I have a similar win, I just created a  software that will set up batch renders for me. I know one exists already, but I really wanted to put a script in my portfolio, so I made it myself!
Awesome job! The feeling is so cool for sure.
Welcome to the club, fella. Automating boring stuff from work with Python its a way of life.
1000% productivity boost. Not bad!
So happy for you discovering the beauty of automation. Contrary to others advise I‚Äôd go to my boss and show them what I did. It will either get you promoted to a more meaningful job along the way, or give you the clearest sign you need to look for a better company. I personally encourage my team (even insist a bit:) to always think what they can automate and do more meaningful tasks instead.
Nice, Congratulations! 

It‚Äôs all fun from here on out!
Do you verify and ensure the forms are correct tho? Because I'd be constantly worried it's doing it wrong.
First I've heard of Pyautogui, I'm definitely going to try it out, thanks!
Hmm can Pyautogui work with excel files?
Dude this is fucking awesome props to you! Don‚Äôt tell anyone you automated it (except us random people on Reddit)
Congrats! Can you share when you have started learning Python?
Congratulations on a job well done!
> and supervise.

Good for you!  It's easy to overlook this part, or get overconfident.  Web (and other) forms are subject to change without notice.  Web forms can even morph on the fly, with earlier answers changing the availability (or range of valid values) in later fields.  Easy enough for humans to deal with, but programs have to be extended or adapted when that happens.

And if you're not looking every single time, you might not notice, when the program fails.

So keep supervising!  And congratulations!
Congrats! I know the feeling. I wrote my first script ever to automate pings. Last month. Took about 6 weeks. 

Python pings a list of 250 devices from a csv file and the result gets emailed to me with the fails sorted to the top :)
That‚Äôs awesome! I can‚Äôt wait to be proficient enough to do this.
This is such good inspiration!!!  Nice!
I just had a similar moment like yours. My boss asked me to undertake a gargantuan task of retrieving historical company information for a specific list of entities. The list of target entities was over 100k and the data that needed to be retrieved was stored in hundreds of smaller excel sheets spread over hundreds of individual folders. ALL of my colleagues were like......OMG you've been assigned the task everyone in here has been AVOIDING.   
  
One week later, the task is already complete. I was so happy the first time I pulled the correct information in the terminal. Then I made it loop over and let it run for a day. My boss was stunned, he thought I paid people to get it done.   
  
Love python XD
I did the same thing except my script reads a excel file then writes to a txt file. After the txt file is written, the script will send an email with the txt file as a attachment.
Fine to share it ? I probably have to deal with pdf form soon lol
>I know the first rule of automating your job is to not tell your co-workers that you automated your job.

It's really not. Don't be that person. Have some respect for yourself and think about your career.
Bro can you suggest the source form where you have learned it?
Congrats! I wrote a web scraper recently with Python that saves me a lot of time and I feel the same exact way
where did u learn python? is there a free program to use or did u download it on your PC and started to mess around with it ?
So my question would be this: who owns the code you wrote? So many companies have clauses that say anything you create while there at work is company property, including software as intellectual property. Did you write it on the clock or on your own time of the clock? Would that even matter?
Grats friend. I recently found a project to automate and my unfortunate issue is that pyautogui input seems blocked for some reason.. idk why or how. What a pain
Its basically just a web form.
.txt

Lol jk
C+ would be nice
Super awesome. I feel like I'm learning a new super power.
Its basically a web form that has to have date and time info filled in at several places to match the day the ticket was issued. Its totally just busy work.
Oh for sure. I've already identified some improvements I can make and some hurdles it'll run into. I hadn't considered selenium. That makes a lot of sense. Thanks for the advice!
How did you get into it? I feel like it takes me so long to learn the new (or forgotten) things needed to automate a task it isn't worth it to a 3rd party.

Edit: I was really enjoying Anders Jensen's videos on Power Automate Desktop, so because of him I at least know that RPA exists. I'm interested in if you intentionally entered the field or got tired of doing stuff repeatedly and started fixing it and got good at it.
Nope! I plan on making a few more in the near future too!
Thank you!
Thanks! Good job on your own work as well.
Funny you said this. I actually started learning python after my job handed me a pay-cut during covid and hasn't lifted it. So I'm looking for my way out of this company. I'd like to think my job would appreciate me doing this, but realistically they would either demand I do it by hand or demand I do it for less pay and do every one else's paperwork. I'm just going to use the free time this allows me to learn more and escape my current job all together.
Yes. That's a big reason I like pyautogui, I can watch it work and verify it's a good employee. Haha.
Sure. It can work with anything on your screen. But there are packages like pandas that are made specifically to work with spreadsheets and such.
Total is probably 60 days. But that was in bursts. I would practice for a few weeks and set it aside for a few weeks. Back and forth until I realized it could help me here. I really needed a project that had some utility to keep me interested. You can only build so many calculators before you get bored, and I needed to make something practical with what I had learned.
Thanks. I agree. That's kind of what I really love about pyautogui. I can watch it work so I know I coded it right. hahaha. I've been working on it this weekend and I think I've improved its reliability but I still won't trust it to run unsupervised.
NICE! I bet that saves an insane amount of time. Well done.
I would say I'm not that proficient at all. But I just dove in once I thought I could articulate what I needed the program to do. My script is still really rough around the edges but it was important to me that I started building something that would work for me. And I had to have a project that didn't have a tutorial to follow. Keep studying, and when you find a project you want to tackle, just dive in and see how far you get. good luck!
Wow! I do a weekly report copying and pasting data from a main excel to a ‚Äúweekly update file‚Äù‚Ä¶where did you start to program? Just a read function and search? I‚Äôm currently learning Python so a beginner as I‚Äôve been in sales for 10+ years
No sorry. It's pretty janky and it really only works for my one very specific need. But feel free to dm me if you want pointers on pyautogui. I learned a lot just working on my own project.
How would that harm his career?
[deleted]
Sorry you're getting downvoted. I agree with you - my ~coworkers~ peers were excited about some of the quality of life improvements...

If I could do it over, I'd implement the changes that help the company (the owners are great guys, but I don't work directly under them) and keep my mouth shut and my head down. 

If management doesn't automate or understand systems well or communicate well and early (or feels that you need to be put in your place), it can take things that would be quick and easy tweaks to make things run even better and turn it into being talked at about how it's not working and what works for one person doesn't work for everyone else.
To this point I've done the first 25 days of 100 days of python by  Angela Yu, and most of automate the boring stuff with python by Al Sweigart. Both on Udemy. And I fill in missing bits by doing my own research in documentation or YouTube or wherever.
I'm doing two courses on Udemy. I'm taking 100 days of code by Angela Yu, and Automate the boring stuff by Al Sweigart. Both are exceptionally good courses and you can get them for less than $20 each. Highly recommend both courses but maybe start with the 100 days of code class because it starts off with the basics. But if you want to start for free. go to youtube and search "automate the boring stuff with python". the first 15 lessons of that course are there for free. Good luck!
I did make this on the clock so I totally agree it belongs to the company but this will only ever be used for me, by me. If someone else wanted to make it work for their paperwork, they would need to modify it fairly heavily for their purpose. It's really rough around the edges and it's not one size fits all. I have to manually change the code some days to keep it running.
Cool! Congrats btw. Out of interest have you thought of using libraries like BeautifulSoup or Selenium for web form automation?
Yo, how do I automate entering a search term into outlook with pyautogui?  I know how to do it with the win32com mod but I want to see it execute.
so a pdf
Are you calling to an API to get the ticket json data or are you scraping the ticket page for the data?
Considering its a Web form. Selenium will be a piece of cake, you'll be able to replace all your sleep.timers with 1 x implicitly.wait call after initiating the driver.
My company had a automation initiative back in 2016 together with blue prism (a rpa platform vendor), then I knew the manager for automation team and basically asked if they needed more people in 2018 and was hired. 

So luck and network I guess but in Sweden and Europe it seem to be a push for rpa. I see lot of ads for it and we seem to hire new devs a couple times a year.
Thank you!
That‚Äôs the other option sure, as long as you find good use of the free time it worths.
Sorry if I‚Äôve missed the answer elsewhere in the thread, what courseware have you been using to learn Python?
I got into IT and wanted to get more out my career so I started self studying. Here is a link to my code for the script that I wrote. 
https://www.reddit.com/r/learnpython/comments/10a7g7b/pulling_keys_out_of_a_dictionary_after_checking/j43clgh/?utm_source=share&utm_medium=ios_app&utm_name=iossmf&context=3
Not harm. I meant think of future career. Keeping your accomplishments a secret doesn't exactly translate to career advancement.
If you're in a job with not a lot of opportunity to move up for whatever reason, there's a very good chance you'll either end up with more work, or fewer co-workers -- maybe not right away, but eventually they'll realise that 4 people aren't really needed, or maybe a management bonus is available for people who have lower labour costs, or whatever.
Even rough around the edges is good if it saves you time and energy. Let the code work for you!
I hadn't thought of those, mostly because I hadn't gotten to those lessons yet. Lol. But its really starting to look like the next version of this bot will be selenium or beautiful soup for sure!
Check out the documentation for it at the link below. You can have pyautogui snap a screenshot of your screen, locate a specific area, click and type. Check the documentation but I'd start at the screenshot portion here. https://pyautogui.readthedocs.io/en/latest/screenshot.html
I like to explore new places.
Not a PDF.

You know the contact page on most websites where you enter your contact info and a message then press "submit"?  That's an example of a web form.

A lot of offices use software with a  web-based interface - it's just hosted and accessed internally on the company's intranet rather than externally on the internet.
Using pyautogui to locate the first ticket in the main menu. Then opening it and using the data in the ticket to auto complete the ticket info and close it out. then start the process over on the next ticket in line.
I assume OP will be on cloud nine knowing one implicit wait nd lines equivalent to number of fields are the only line of code apart from invoking driver is needed to automate one page üòÅüòâ
100 days of code by Angela you and automate the boring stuff with python by al sweigart. Both on Udemy. And I fill in the blanks with Google.
yes thank you. I think project learning is the way to go. I'm gonna try it too, ill let you know how it goes. once again thankyou
Thank you for sharing. I will be sure to study the code and experiment how I can use it on my end as well. I appreciate it!
[deleted]
Yeah, but if you tell your boss that you've automated your job he might actually start considering getting rid of you, so I'd keep that a secret.
Alternatively, you could send the POSTs directly. 

Use Fiddler to check what's actually sent when the form is submitted, including any special headers (including browser user agent), then do that with your code.

Should be able to manage a form per 5 secs at least.
Use playwright. Google playwright codegen.
sidenote, you have to know html and some minor javascript to use those efficiently
Oh I see what your saying, gathering inputs and storing them basically. Oh thats easy asf.
I used to do that for my dedicated servers.
100‚ÑÖ nailed it. That's exactly what this is.
Did you do this on your work network?
I would still add a sleep line in between each ticket.  Make sure you're only doing X tickets per hour in line with what a human could do.  Don't raise suspicion that way
To put your statement another way: if you're not working for a place that values your achievements, you should find other work. Keeping it a secret is a great way to be stuck doing the same shit job forever.
I get what you're saying, that's just not how it works.

It's the difference between a job and a career. Maybe whatever specific job responsibilities you have right now can be made more efficient to the point where you don't need to spend any time doing it.

That doesn't mean you get fired from your job. It means you move up in your career.

The job changes. You do something more challenging. You learn new skills and become more valuable. And most importantly, you no longer work a job so boring that you could script it.
But management could see in the data entry timings how fast the forms are sent, enquire and make him quit his job or give him other responsabilities
This. Playwright codegen will do the coding part for you (+the necessary waits for page loadings!). All you will have to do is to fill the form once using the codegen tool
On a local pc on their network. No one is watched that hard so I doubt it'll be an issue. And its pretty custom made for my job so it really wouldn't benefit anyone else. Its a tool I made, for me, and my job.
[deleted]
I wouldn't mind scripting my job, as that would allow me to take on more projects while I'm working. Hell, I could be doing freelancer work while a computer program does my job for me, or starting up a small business in that time. 

For me a job is just a means to an end, which is surviving. The juicy part is starting up your own business and making bank off of that, but this is incredibly hard if you also have to spend 8 hours a day working on something you may not even care about.
This sounds more like OP works in a very non-technical field where manual labor is cheaper than hiring someone to automate a task. Like, why would you do an automated check on how fast a form is filled out when you can automate the whole proceds with 100 lines of python?
Be easy enough to add a random pause between each POST.

Then if its lunch time, don't do anything. 

And also stop sending, if there is a meeting.

Add a scheduling function, make it only work during office hours, hey presto.

Just leave it running in a container forever.

However, they may get suspicious if you quit or get laid off and your still inputting forms/.
Good point.

I guess it's not something I properly considered, as I don't get the whole 'Don't tell anyone when you automate a task' thing.

My responsibility has never been to do any automation, but my team knows I do it, and support me in doing so. Ultimately for me, I'm seen as a big contributor and if I need time, resources or knowledge my team will do everything in their power to provide it to me, since they know it will ultimately reduce our workload. 

Sadly, this is not the case for a lot of others, such as potentially OP, and many businesses would rather shoot themselves in the foot.
That's part of why I like the autogui. It can be made to work at a human pace. But eventually when the backlog is done I'll probably tinker with it a lot more.
I just would get cautious of using open source libraries. Not an expert in this field but just hear stories about malicious code being found in some.
Businesses are made up of people. And departments (which are run by people).

It's very possible for a business to value achievement. I work for one. It's also possible for a department to have a different subculture than the business.
Damn, that's bleak. Sorry you've had that experience.

But yeah, good call on not being like OP. There's a zero percent chance I'd be hiring anybody like that. I can't imagine having to work with people that are sandbagging like that.

It's true there's not a lot of "wow you wrote a script? Here's a new Tesla". It's more like you are building a professional reputation of doing things well as opposed to phoning it in. If you're working for a company that's just cranking out widgets maybe they don't care. That's not every job.
That's actually the kicker! I work for a fortune 100 tech firm as a computer and electronics technician. But the managers all came from construction backgrounds so they just kind of look at everyone like we're easily replaced.
Data entry timestamps, for sure they check productivity that way
"Best worker we ever had. Quit 6 months ago but still his work is always on time. We promoted him twice during this time."
Most businesses
Yeah, he should not share this automation without being paid !
[deleted]
I'm saying that there are good people and not so good. Unfortunately, you're almost always right. But there are still some good ones.
You rock, I've been using the book on your website. Thank you for making it!
I redeemed this last month, thank you very much.

To anyone thinking if it's a good learning tool - it absolutely is. I enjoyed it greatly, previously I found myself in 'tutorial hell' but I powered through this course and so much information just sunk in and stuck after so many tries.
Great for begginers.
The man.

The myth.

The legend.
u/AlSweigart I am curious why do you host your course on Udemy and not on your own website?
Could the exercises in this book be used in GitHub, in order to show potential employers your progress? Or would that be considered bad practice?
Thank you!
Using the library of the author pyautogui, I developed a macro recorder [atbswp](https://github.com/rmpr/atbswp) (Yes like the book) which makes it very easy to automate boring tasks, do check it out.
Well this is a super score for me. I got the think and act like a programmer with python for free and now this. I couldn't be more excited about where I'm headed with this.
Thanks a lot!! Take the silver.
Thank you! I haven't checked this course yet but on average how long does it take to get through? I'm working my way through *Python Crash Course* now but I'll be finished by next week.
Sweet! I had this course in my wishlist for a while. Thank you!
Thanks, Al! It's great you offer this for free. I am a dozen lessons in and am really enjoying it.
If anyone has ideas for how I can encourage people to actually complete this course, I'm all ears. These monthly free codes lower the barrier to entry, but it still takes time and effort and motivation to stick with it. There's /r/ProgrammingBuddies and [these motivation tips](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) but I'm wondering if there's something I can do as the course author.
Thank you! ‚ù§
God bless you!!
I used to be a fan of ATBS but then the spam was really bad.

Also, the tutorials are good for ideas rather than actual applications since those applications require nuances that are not covered on the website.

Anyway, I'm sad you resorted to spam, it has made me realize that ATBS isnt organically supported and just another generic tutorial website. Ive stopped recommending it.
far-flung worm growth tan sort attraction many offbeat terrific books

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*
Thank you!
Thank you so much
Thanks I just bought the book too
Thank you!!!!!
Thanks!
Thanks so much Al! I‚Äôve heard so many great things about your course, can‚Äôt wait to get started.
Thanks! This is exactly what I needed
Thank you Al, for making such an amazing course!
Thank you so much!!!
thank you!
Thanks! Appreciate all you do for us.
Damn I literally just paid for it
thanks slot!!
Thanks you for spreading knowledge for free may god blesss you
Wonderful!!  Thank you so much!  This is so timely as I am just starting with Python.
Many thanks, much appreciated
Thank you!
Am I doing something wrong? I follow the link and the course shows FREE, but after adding it and going to my cart the price changes to 14.99, and a different discount code LEARNNEWSKILLS is shown as being applied. If I then try and remove that code and enter in JUNE2021FREE it gives me an invalid error. Anyone have a similar issue?
But it's already on youtube?
Thank you for sharing!
Thanks for the details. It's great for beginners.
Thank you, Sir.
Thank you Al.
Thanks for the info! You rock.
Just finished the course after seeing this post last month, and I only have good things to say about it. Thank you Al. Hope the cats are doing well. Are we going to see a course for beyond the boring stuff or just generally more intermediate/advance techniques?
Thank you!
RemindMe! 1 day
!RemindMe 1 day
I've only heard great things about this course - and the book - and I think it's amazing that you give this course away for free. Not only that, you actively tell people that it will be free again at the start of next month if they miss the free period this time. Basically you do everything you can to NOT make money from a very popular course but rather ensure that people have the opportunity to join even if they're struggling money-wise.

This way, you are the personification of the best part of the programming world - people sharing, not monetising, because learning and software should be free.
Thanks a lot!
It's very generous of you to make this course free like this. Thank you. I'll be sure to check it as I work through Python Crash Course.
You sire, you are gentlemen.
I'm actually reading "Python Crash Course" and love it so far (I have a little base in coding : 1 class with visual code at school) and I was wondering if I should do this instead and come back to the book or finish the book and then do the automate the boring stuff on Udemy ?

Thanks !
Do we get Certificate of completion after the course? 
I really need one as a non cs background..
Thank you so much ‚ù§Ô∏è‚ù§Ô∏è
you‚Äôre great. Thanks!
Hi /u/AlSweigart, thank you for doing this. I admit to redeeming a while back but letting procrastination get the better of me, so these posts are a great reminder!

Question: are these monthly giveaways themselves automated in Python? ü§î
Thanks Al! I admire how much effort you put in to making your resources accesible, I've checked out your book before but I'm excited to be able to watch the later videos
THANKS!
I am trying to learn Python on ny own and this was just what I needed üò≠üôè
Thank you, much appreciated for beginners like me. Actually, I learn through a book, but this seems to be oriented practice more.
Thank you. Also thank you for the great website. Helped me a lot.
Thank you
Awesome! I'd been eyeballing that course before signing up for a different udemy course for python and now i have both!
Thanks for sharing this free shit, man. Just signed up and really looking forward to working through the course and learning some actual programming stuff.
Been working my way through this book and scratch 3 programming playground with my 4 year old. 

Thanks Al!
Thanks for this!
Just tried it right now and it worked fine. Says the code expires in 21 hours.
Hi Al, I just purchased the book, and missed the wave on this :( any chance I can still redeem it? thank you!!!!
RemindMe! 7 day
Does anyone have any insight on using the videos/course vs just reading and working through the book?
RemindMe! 1 day
The code has been updated and its available again for people who missed it last time.


https://www.udemy.com/course/automate/?couponCode=JUL2021FREE
Any news on when the course will be updated with 2nd edition content?
#Scott Sterling
The convenience: I didn't want to have to deal with writing the web app, hosting, billing, etc. Also, Udemy finds far more students to sign up than I could. I didn't want maintenance of my own e-learning site to be my full time job. And when I first created this course, I was just beginning so I had no idea if it would be big or not anyway.
hosting your own course is boring :P
IMO you can add it on GitHub. Make sure you mention the tutorial you used, along with link of tutorial with author name on the acknowledgments section in the ReadME file.
   
Later you can try to think of adding some functionalities or tweaks so you could apply yourself as well.
My guess is that it would not be worth much since its not an original project. Maybe if you took what you learnt and did an entirely new project?
What is your personal motivation to incite others to finish the course?

Thanks in advance
Are you receiving spam from the author or from udemy? This is first I've heard of it. Can you give a sample?
I like that it gives you the baseline and leaves it up to you to work through the nuances of your specific application. That's where the real learning happens imo!
Go through his book as well. You will get more knowledge from that.
Ack, sorry, the link went to the wrong code. THe link works now, or you can manually add JUN2021FREE.
Only the first 15 of the 50 course videos
I will be messaging you in 1 day on [**2021-06-05 04:51:11 UTC**](http://www.wolframalpha.com/input/?i=2021-06-05%2004:51:11%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/nrh5km/automate_the_boring_stuff_with_python_online/h0j4zl6/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fnrh5km%2Fautomate_the_boring_stuff_with_python_online%2Fh0j4zl6%2F%5D%0A%0ARemindMe%21%202021-06-05%2004%3A51%3A11%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20nrh5km)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Yes, Udemy provides them once you complete it.
Nope. I only get three discount codes a month, each can be one of four (rather limited) types. If the script goofs, it could select the one that gives 10 free sign ups over the next 30 days, instead of unlimited free sign ups over the next 3 days.

Though I do think I should probably set one up on a server somewhere anyway in case I get hit by a bus.
https://www.udemy.com/course/automate/?couponCode=JUL2021FREE

Right here mate
I will be messaging you in 7 days on [**2021-06-30 04:27:06 UTC**](http://www.wolframalpha.com/input/?i=2021-06-30%2004:27:06%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/nrh5km/automate_the_boring_stuff_with_python_online/h2qfwgk/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fnrh5km%2Fautomate_the_boring_stuff_with_python_online%2Fh2qfwgk%2F%5D%0A%0ARemindMe%21%202021-06-30%2004%3A27%3A06%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20nrh5km)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Thank you for your coupon. I am from a third world country and it means a lot to me to be able to study such great material for free
pretty much what I plan to do, been working through automate the boring stuff this week and putting the exercises into GitHub. Will most likely use them as a reference in the future to create some programs that will help me out at work.
It makes me feel like I'm not wasting my time making courses and stuff.
Author, don't worry you will start to see the spam.
Maybe. But you cant even make a working prototype with some of the chapters.
appreciate you, thanks much!!
Oh, my bad. Sorry
That's just great. I can't wait to finish my present C programming course and get started with this..
any new codes for making the course free? I think the old one expired
I appreciate your contribution, as many others do. I‚Äôve been using your ebook .html offline to self-teach and have enjoyed it immensely thus far. 

IMHO, if you can influence at least **one** new programmer with your material, then you have succeeded. Never know what advances and contributions could be made to this world as a result. 

Also: I think making the course free will certainly attract a nonzero number of people to sign up and complete it. It‚Äôs hard to go above and beyond that as far as incentives go. You‚Äôve already exhausted extensive sharing options such as the website, free videos on YouTube, and now the free coupon codes for a limited time. Impressed by your and other programmers‚Äô willingness and desire to share with others. It‚Äôs not intuitive in a fast paced world today where there are endless projects to undertake and endless hobbies to partake in personally and selfishly.
Uh, what? I don't send out spam emails to Udemy students. I have an email newsletter on my inventwithpython.com site, but I haven't even sent out any newsletter emails yet.

Can you double check that you signed up for the course at https://udemy.com/automate/ and not an impersonator? Can you post some of the spam messages if you still have them? (Or describe what they would say?) Also, was this through Udemy's DMs or to your personal email that you signed up with?
I signed my son up for the class in 2019, no spam yet.

/u/AlSweigart  is there an opt-out of emails or a way to unsubscribe that might help /u/programmerProbs  ?
I release them each month. They're usually named JUL2021FREE or AUG2021FREE, but you can always use the link https://inventwithpython.com/automateudemy to be redirected to the latest code.
He mentioned he will make new codes next month. Set a reminder to check in around the 3rd, however, IMHO it‚Äôs worth paying the $15 and supporting the creator.
Your reddit spam.
Seeing more and more of your posts. Keep up the good work.
Did you follow any book(s) whilst learning python?
I love this. I appreciate you sharing your thoughts. 

A problem I run into is that I just "finished" a project of my own design, but I don't know what I should be doing better. It works, cool. Yet, I don't know where I should have used a better structure or technique.

I also don't know where to go half the time to even steal code - SO seems to be the best game in town. So there is a huge gap in knowing where to find better coders, and often I google around and find things that are 10 years old. Nuts. There may not be an easy answer, but that's the "beginning" of programming that keeps hurting me now.
I am very thankful you shared this. I have been studying python for so long, but never did an actual job with it. This makes me feel like I can do this too.

Not being a people person, I am curious as to how to handle things like talking to clients and negotiating. Can you share by what strategy you found your client, and presented yourself? Help
>it can be very disheartening watching somebody cane out code in 10 minutes which takes you 3 hours. 

Once you've spent 3 hours writing it, you can turn around and write it in 10 minutes, too. :-)

Figure programming is made up of two things:

* Figuring out how to solve the problem
* Actually making code that does it.

Each time you spend 3h researching how to do something, that's 3h you won't need to spend the next time you want to do that same thing. And the more times you do the "solve the problem" part, the better you'll get at it.

&#x200B;

>Build your Github as soon as you can

Worth noting that you don't need github to use git. "git init" in any directory and you can check your code in locally. Even if you have no intention of sharing the code, you can still get a lot of benefit from using git locally in the form of being able to go back to previous iterations of your code. Gone are the "what did I do? this was working before" moments. And if it eventually turns into something you do want to share, it's easy to push that entire local repo to an online repo.

&#x200B;

>"Come up with your own ideas and then build them"

Way easier said than done, as you've discovered. I've never really thought about something like Upwork as a means of getting an "assignment" to work on. When I was a beginner, I would have been worried about signing up for something that I wouldn't be able to do. And that whatever result I produced would be awful. But I suppose if you're honest and charging a low enough amount, they will know what they are getting and everyone wins.
Which package did you end up using for your dynamic page web scrape?
This is so awesome to read!! I'm just learning Python as my first language and hope to transition into dev as a career move within a few years - this is very reassuring!
What do you use GitHub for?
[deleted]
>**Build your Github as soon as you can**

>This is something I learnt far too late.

You elaborate on all your other points except this one. Can you unpack it and explain why you feel this way? I have GitHub but almost never use it because w use an Atlassian service at work. But I do wonder whether I'm missing out on something with this arrangement...
honestly I have no real idea what git is and how to navigate the site.
Thomas Edison can tell you 1001 ways how NOT to make a light bulb! ;-) This is what inventors do... trial and error until it works. Congratulations on becoming an inventor because if you thought that developing software was not creating a new invention you are mistaken. The fact that what you just created can't be bought off-the-shelf proves that software development is bespoke and by definition a new invention. Heck, the US Patent Office will even allow you to patent your software if it's novel enough so it must be an invention and you, my friend, ARE an Inventor! Embrace it. 

Trial and error is what we do as software developers. I've been coding for 40 years (yes, I'm that old and I still have my original Apple \]\[+) and I still write snippets on Python code in the interpreter to see if they will work before I paste them into whatever I'm working on. That's how you do it. That's how every industry does it. Automobile designers don't create a drawing and hand it to the factory and a car pops out of the assembly line. They test and prototype and see what works and what doesn't. It's all part of inventing something new... like a software program. I actually hold the patent for a [Virtual sales person for electronic catalog](https://patents.google.com/patent/US6035283) which I patented back in 1997 at the dawn of the Internet. It was a series of trials and errors until I hit on something that worked.

Automobile designers also don't reinvent the wheel (literally) they include them in their design. That's no different than you taking code snippets from Google and incorporating them into your program. That's called "reuse" and every good programmers does it. The skill is in knowing *what* to reuse and *how* to adapt it to your situation and, it is a skill that is acquired over time. Don't be ashamed of it. Every inventor looks for parts that they can readily use in their new invention. Software development is no different.

Think about what we do as software developers. It's like alchemy! We open an editor and it's blank. Nothing there. Empty. Then we wiggle our fingers and suddenly there is running software that performs some useful task. We just created something... out of nothing! It is nothing short of magic. :-D

This is an outstanding and well written article that you should turn into a blog post somewhere like medium. It is too good to be buried in a thread. That's your next goal... to start blogging about your software adventures to help others with their inventive process... and it is a process that everyone has to discover what works for them. Not everything you build will be a new novel invention; some will be a variation on an old idea, but don't kid yourself, you are an inventor and when you start building novel software, don't forget to patent it. You are at the start of an incredible journey. Embrace it!
So in total would you say 8 months total to get here?

you are inspiring mate.
Do you have any specific tutorial videos that rocked your socks and you consider important to your learning?
Not to be that guy. But you should maybe have looked into RPA program for this job. I believe something like UiPath would have gotten the job done easier
>Build your Github as soon as you can

what does it do and how is it beneficial?
Tha is for the great post - I‚Äôm just starting so this is useful. and I also appreciate the use of the word whilst. :p
It‚Äôs nice to hear things like this! I‚Äôm learning Python now, and I was up 2 hours doing a simple project at the end of my chapter.

I finally relented and googled it and I felt like I‚Äôm ‚Äòcheating‚Äô, but it revealed some code which I couldn‚Äôt learn from the book, or wasn‚Äôt made very obvious.

You‚Äôre making other newbies feel better man. If anything, at least you‚Äôre doing that.
Thanks for your solid post, it‚Äôs pretty helpful especially for someone who is trying to break into the field.
Happy for you that it's working out well for you.  I am curious about one thing. 

You mentioned you are scraping dynamic web pages.  I tried doing this a while back on a government website for tracking covid data using Requests and BeautifulSoup and was unsuccessful.  I see you mention that you are using selenium to load and extract data from multiple pages.  This option never occurred to me (and the program was just something I tried on a whim, so I wasn't trying that hard), but it seems to me like a program using selenium would take a long time to do this many pages of information.  So how long does it take for your program to scrape and format the data?  And does selenium run headless or actually open a browser to perform the operations?
As a python beginner this was very helpful. I started on October 15th and am setting up my GitHub right now, thnx!
Hello, I‚Äôm a beginner. I didn‚Äôt quite understand the GitHub part. Do I just put all the decent code projects in my GitHub like an archive?
I have watched a couple of courses on web scraping and automation but when I try to scrape, nothing works. Also, everyone just told to use this and that to grab that text/element but never told that why are they using that specific way to get things done. Any tutorial that explains what to use in a specific situation in detail?
Weird question but I'm halfway through python 4 everyone course. For my first project I want to build an app/site that would automatically scrape 4chan and then display words in order of frequency in a word bubble type thing? That you could then break down by board, timescale and eventually I would like to do it by /general/ as well as they usually have keywords. Would be interesting to see the culture evolve and change over time. Is this doable in python and is this concept super fucking difficult? I can kinda sense what I would need to do with my limited knowledge; in the coursework we have made loops that did similar things without the visualizing for documents that we give it. Love your posts and very inspiring.
I am getting a PhD in electrochemistry and I hate it. I have totally lost confidence in anything career related but data Science and python is when I feel confident and nice.
Congrats Mike! You just inspired me to start applying for contracts on Upwork. If you could share any tips that would be greatly appreciated!
This post was so inspiring to see as a beginner. 
Did you ever use any paid resources?
Also could list a few of the resources that helped you along the way. Thanks
I love this
" **Googling stuff and copying code is normal** "

I'm not a developer but I remember 1 day talking to the developer in my old work and we both agreed that there must be hundreds of thousands maybe millions of companies buit on the back of  Stack Overflow .
Thanks, congratulations!

Everything you said is true. 

When did you start? 
In the end how much did you earn per hour?
Have some advice to land a first gig on Upwork?
"I have a background in chemistry and was enamoured with the idea of becoming a data scientist."

Are you me? Lol. I'm learning Python, but still at the print-hello-world phase. But I really love analysing data.
I‚Äôm learning via Dataquest right now.  I‚Äôve done a couple guided projects but there‚Äôs opportunity to extend them which I‚Äôd like to do.  Should I post them to GitHub now and work on making updates or wait till I‚Äôm finished extending those projects?
I think you just inspired me to write up a project I've got 50% done but am stuck on for PDF scraping the other half of data I need for the iOS app I'm bringing the data into.   I'll write something up and post what I've got working and what I could use suggestions on.   Thanks for sharing!
I'm also self taught and always feel like a fraud for having a ton of Stack Overflow tabs open when working on a project. So thank you for posting this.
So how did you handle the dynamically loading page? did you have to simulate mouse scroll?
Really inspiring to read that you are actually doing paid work in just 5th months.

I've been down this line for the past 10 months and really want to freelance. But it looks intimidating because of so much competition. Can you advise in this regard, like what's your strategy?
You accidently create an infinite loop

lmao
What are the modules and libraries and frameworks that are required for something like web scraping some website and collecting the data and putting it into a spreadsheet? and what are the modules and frameworks and libraries that are very useful in general?

also did you make a "general version" of your program? like it can scrape from any website get any data that you want and put it in a spreadsheet
Thank you.
Thanks OP! Your post inspired me to create an Upwork Profile :)
Not sure if someone will respond but I been trying to learn Python for a good while and I guess I am still in "tutorial hell." I know the basics of Python and just started learning OOP. 

**"Googling stuff and copying code is normal"**

I noticed that you mentioned this and I was wondering if you can elaborate on this? I keep on hearing this that it's okay to google and it's normal but my worry is that when I don't know how to solve something, I google it and it has all the answers right there for me. However, since the answer is right there, there's no need for me to add any code since it does the job I want it to do. Not sure if I explained this well but I guess this is my "problem" or mindset I have when it comes to googling.
Just wanted to say thanks. I too am from another profession n trying to shift into coding n earning from it. This was a good post for beginners i think :D
Although I would say this is in general great advice, it kind of depends on the area you want to focus on. I was in a similar situation and eventually managed to get a full-time job as a dev, and just after a week or two, (with 0 experience) I was thrown onto a real project, where I had to use React for the FE (never touched it before), Python for the BE (had some tutorial experience and few really small projects) and also API gateway (didn't know it even exists).

I was able to manage it all somehow, and I learned a lot. One real project > dozens of tutorials.

But, the thing that bothers me is that I 'hack' things too much. I don't have a feeling that I quite understand why am I using this solution and if I get stuck I just randomly try out different stuff until it works. 

After that, I decided to join CS50 from Harvard and that totally changed my perspective. 

The two most important building blocks of programming are data structures and algorithms, without that, you will never understand how everything works, which solution is efficient, and which not, for a certain situation. 

So, my advice is: learn the basics really well, especially data structures and some basic algorithms, then do one or two good tutorials and after that, focus on building your own stuff.

P.S As I said in the beginning, this might not be that important if you plan to do just frontend, or just web scraping, but even for those areas, it can be really helpful.
Lol in 5 months? Some people are brilliant. I wouldn't be able to do something remotely close
Inspiring! I've RE-started my Python learning few weeks ago. I was following book "Learning Python" which goes great detail into language particularities, but is also very dry read. I made myself go through first 300 pages without doing anything else. 2 weeks in  I noticed I'd started burning out and there was no fun in learning for me anymore. I've took a break for a week and now  I'll try to do project based learning as you did. Thanks!
The problem of misleading video courses and tutorials is being more and more obvious day by day. Don't want to say they are useless, but they are at least not interactive and not up to date. I think we should get more based on interactive education and practice to avoid so much annoying stuff that we might never need.  


Thanks for an interesting experience share! Good job!
Holy hell you hit every point especially with what I am going through.  I finished my bachelors is software engineering and have played around with code for years but never felt like a great programmer because I never did it in a professional setting nor have I made anything of my own.  I usually start and then get the deer in the headlights look.  I started realizing that planning everything is way more than coding.  I would try to make projects from scratch but with no real passion for making a "to-do list" it never got far.  Then I see people able to create and move through functions and make different loops that if I read makes sense but I could never create off the top of my head(or at least I dont think I can).  Impostrr syndrome hits so hard especially coming from tutorials.  

The greatest thing that you hit on is the race.  I find myself beating myself up if I'm not doing programming stuff every when I'm at my machine, but I need to realize it's on my time.  Planning our an hour a day can get me so far if I just stick it!!

I do want to complete some courses fully.  Hopefully 2021 will be my year.
I needed to this today. Thanks.
I needed to read this  thanks, tutorials are very frustrating because they don't teach you what you want to learn, it's baby steps and I refused to accept that, but eventually I did. The hardest part for me was trying to find something useful to do in python that I couldn't do it better or easier with excel or any other program, this thought process took months off my learning because I found it difficult to keep motivated. I finally found something that I wanted to do with python, my first API call to a website at work, because I do a lot of data analysis ( I love it) I make a lot of dashboards, I am sick of the multiple steps I take just to update my dashboards so I wanted to automate it with python and an api call to our e-commerce site was the first step. It took me literary almost half a year to get to this step (I just started writing the api), so much wasted time because of lack of focus but better start sometime or you'll be lamenting for months when you could have learned python. This was the hardest part, getting motivated and finding a project to do that interests me. Also believing in myself. It is so much fun when the damn thing works but extremely frustrating when it doesn't and your Google-fu fails you to find an answer. Sleeping on it, in my case is the best solution because the next day the solution magically presents itself.
Not an advertisement: I recently initialized a YouTube tutorial series after taking a semester of python and building a few advanced applications. My goal is to teach people how to learn, showcasing every moment of my research, my struggles, and my programming. Take the time I need so people don‚Äôt feel like they have to be experts and understand everything to get something right. This post made me think further on how I might accomplish communication towards the listener.
Can you expand on what you copy exactly? Like an entire code base, or just random solutions off of stack overflow?
For everyone looking for projects to build for learning look at JetBrains Academy (hyperskill). I love it, really
Wow! Thanks for this, knowing a bit about the road ahead is so useful.
Thank you for the comment and the award! Far too kind of you.
I did not.  I did all of my learning online because I'm stingy and don't like books.
I did. However, I did maybe 40 hours of tutorials (datacamp) to get a grasp, then I solidified most of the knowledge with books and google.

Projects are the best way to learn though.
You're welcome! I'm glad that these ramblings are helping people.

> A problem I run into is that I just "finished" a project of my own design, but I don't know what I should be doing better. It works, cool. Yet, I don't know where I should have used a better structure or technique.

I would say this is also another point that I picked up from somewhere, sinking more time into code which works isn't always necessary.  If it works and it's legible enough that somebody can understand what's going on, I think that's enough as a beginner.

I recently started adding doc strings to functions and commentary to my code as well as adding lengthier names to variables as a way of instead of improving my code from a language point of view but rather a collaboration point of view.

> There may not be an easy answer, but that's the "beginning" of programming that keeps hurting me now.

As another beginner, I know this feeling all too well hahaha.  We can do it though lets gooooo.
Don‚Äôt forget product! It‚Äôs easy to focus on refactoring code, but focus on solving pain points in your product first. You got it to a usable state, that‚Äôs called the minimum viable product (mvp). Think about the user next, even if it‚Äôs just you, are you still annoyed that such-and-such isn‚Äôt automated, or is there an extra ability that would solve an annoying manual step? 

For example, I built an indeed.com scraper that acts as a super-filter for removing jobs. Once that was done, I was qualified for 70% of descriptions I read vs 3% before my product. That saved me a ton of time and frustration. Next, I simply had too many opportunities to know which was best. I created a field so user can enter a relevant word and assign a point value (if SaaS is in the description, +5 points, if FinTech then another +3 points, etc.). 

Adding the matching words feature was not part of the original plan, but I had 2 choices- I could spend time refactoring my code, or I could add in a feature that adds tremendous value to solving my pain points. 

Granted, I still refactor my code, but never at a time when I could be solving high-priority problems or adding pain-solving features. I would also say that refactoring existing code feels harder than just writing better code next time. I wrote a program before learning about itertools, but I didn‚Äôt refactor my existing code because saving milliseconds for that project simply didn‚Äôt matter. My next projects used itertools and it was natural to code it in fresh- but sometimes I chose not to bother with it because the processing time it saves is just not worth the extra thought in many situations, especially on small projects. 

So just saying, completed projects don‚Äôt just benefit from refactoring, you also can use that time to step into a product mentality and think through the pain points you or your users are experiencing. Refactoring certainly becomes priority when a particular code block breaks a bunch of processes any time anything about it is changed- at a certain point you save more time by refactoring from the beginning.
I would add that just getting more experience doing projects, will give you a-ha moments where you think about something you previously did and a better way to solve it.   But it may be best NOT to go back and do that if you're still busy on new work.
> Not being a people person, I am curious as to how to handle things like talking to clients and negotiating. Can you share by what strategy you found your client, and presented yourself? Help

I'm glad you found the post helpful!

When it comes to talking to clients and negotiating, I have a little experience as a Chemist.  The most important thing is to be realistic - if something is hard, but will lead to other things, it can be worth taking for a slightly lower price.  If it's too much work, speak up and let them know.  Negotiation is a matter of asking what you think your time is worth.  Of course, people will try and lowball you but don't get disheartened or bullied into accepting less money.

With the client I had, they were really nice and cooperative, although didn't explain things very well.  What I did is re-explain what I think they want and if they say yes, they can't come back and say, 'this is not what I wanted'.  If not, I can ask for clarity.  Be polite, patient, and do all you can to remove any confusion.  Don't rush the communication and all will be okay.

I found the client via upwork, the process is all written out above with similar questions answered in the previous thread.
Hey, I'm the same as you. I've been freelancing for over 3 years now but not in tech (I mostly write). But basically the trick is to get into a new persona when dealing with clients. Think of yourself as a third party professional and just put a hat on.
Of you really want to improve this skill and have the time, get in sales, in a call center or in a car dealership for example. Go with an open mind, be willing to learn and don't give up. It's hard but not imposible, you just need to get over yourself, be confident and understand your client.
Selenium was the most reliable for me.
Thank and I'm glad you liked it!
GitHub is a code repository. It has many functionality including version controlling..
You're welcome and yes you definitely should! Spend time thinking of the most annoying thing you can do e.g. sending from a few throwaway accounts, all emails with the same subject, some with pesudo real messages, some with scary pictures so they don't know until they open it which is which.  Scammers should be made to feel stressed.

I'm a terrible person.
FWIW, The Learn Programming with Python Masterclass udemy course has been pretty good for learning syntax and basics.  I'm only like 70% done though.  https://www.udemy.com/course/python-the-complete-python-developer-course/    (I knew enough of other languages that it has been fairly easy to pickup though)   I'm learning python to automate updating a data set for an iOS app I'm working on though (Swift).  *shrug*
Sure, I'll elaborate down here and up at the top too.  

I say build a Github because a lot of people's goals are to become a software engineer or developer and a lot of people are also self taught although there's no really "good" way of showcasing your projects and what you've done on your resume/cv.  Github is what developers use as part of their pipelines and a lot of jobs expect you to be able to use, so if you have a Github showcasing your work it shows your portfolio and suggests you at least know what Github is.

If you start late, like I did, you'll have a bunch of concentrated commits into your repository which doesn't look very professional and isn't visually very encouraging.  A steady stream of projects over time shows that you've put a bunch of effort into either submitting projects or contributing towards other projects and helps boost the strength of your application.
This is a really nice reply(possibly a little too flattering), thank you!

As a Chemist, I'm extremely used to failure although failing coding is a lot less expensive than failing a lot of reactions.
Yeah, at the most.  And cheers for the nice words! I hope it pushes you to learn some python and get what you want out of it.
Nothing specific, I'm afraid.  I used to watch whole videos in an attempt to absorb stuff however more often than not I start blazing through videos in order to get to what I want to know.  

Here's some stuff I used recently:

[if, else, and else if explained in diagrams](https://www.programiz.com/python-programming/if-elif-else) - I didn't watch the video, the diagrams were plenty.

[Regex1010](https://regex101.com/) - A great way of checking if your Regex is good.

Kaggle has some good tutorials for data science.
I'm sure it would have.  Thank you for the tip! Will look into using it if I get anything similar.
Copy and pasted from another poster asking a similar question:

I say build a Github because a lot of people's goals are to become a software engineer or developer and a lot of people are also self taught although there's no really "good" way of showcasing your projects and what you've done on your resume/cv.  Github is what developers use as part of their pipelines and a lot of jobs expect you to be able to use, so if you have a Github showcasing your work it shows your portfolio and suggests you at least know what Github is.

If you start late, like I did, you'll have a bunch of concentrated commits into your repository which doesn't look very professional and isn't visually very encouraging.  A steady stream of projects over time shows that you've put a bunch of effort into either submitting projects or contributing towards other projects and helps boost the strength of your application.
You're welcome! Thank you for the kind words.
> You‚Äôre making other newbies feel better man. If anything, at least you‚Äôre doing that.

Thank you and yes, that's essentially the aim.  I found developing a mindset was particularly draining and wanted to let other people know that if that's how they're feeling, they're not alone and determination is what makes and breaks self taught programmers.
> it seems to me like a program using selenium would take a long time to do this many pages of information. So how long does it take for your program to scrape and format the data? And does selenium run headless or actually open a browser to perform the operations?

The program I wrote took just under 15 minutes to run.  Scraping takes the longest with around 2-3 minutes of waits and for the webdriver to open up the page and formatting the least which is pretty much instant as soon as it gets the file.

The one I used isn't running headerless at the mo because I wanted to open the browser and cross-check that the program is scraping the data correctly, it's navigating correctly etc etc and it's nice having a visual cue.

Ultimately it depends on the speed of your computer (I'm running an i7-2600), speed of your internet and how you're scraping certain stuff.  What made take mine the longest was scraping hyperlinks from the search page for all the stuff and then going through each hyperlink looking for more data.
It's a way of uploading your projects so everybody can see it and if it's something bigger than that people can contribute to it.  Similarly, you can contribute to other people's repositories.
One of the things that never gets mentioned about webscraping is that not all pages can be scraped the same way.  A lot of pages assume you're scraping a dynamic page or something that is straight forward to scrape, however, there is also a dynamic page which you can't scrape as easily.  I essentially found a lot of what I know out by accident or constantly searching until something shows up.  If you try and scrape a site and you're confident you have your path correct, then it's very likely to be a dynamic website and will require an approach different to the one you're doing.

If nothing works, I would try searching your errors and seeing if anybody can explain why something is wrong, or even posting on this subreddit with the code you've tried.  Everybody's really helpful and I've done it myself a number of times.
> Is this doable in python and is this concept super fucking difficult?

It is doable, yes although I'm still definitely a beginner and wouldn't advise on difficulty of projects.  I'll always say to try it.  Have a look into how to generate word clouds.

The most complicated bit would probably be scraping as gathering good data can be hard.
Hello and you're welcome! My advice for Upwork is find a project you think you can do, part build it, and then make a proposal with the part built project as proof if you're confident you can finish it.  If you don't get accepted, finish the project anyway and have it as part of your portfolio.  Not caring if you get paid and having a project to make is definitely the mindset to adopt.
Hello and I'm happy you enjoyed the post! Paid resources only for Udemy courses (Complete Python Developer 2020, Complete Machine Learning (has elements of the python course in it) and Automate the Boring Stuff).

I also did a course on Datacamp when it was a free week on SQL.
Hello and thank you!

I started around 5-6 months ago, not much more than that.  I earnt 25 an hour for that job.

For Upwork, it's a mixture of luck and being confident you can finish it.  Part building the project gives you an idea of how much work is involved and if you don't get hired, you should still finish it so you get something out of it.
Hello, I would say when you're happy with showing them you should upload them.  Even if it's crappy code, people can see how you've come along since you first started.  Personal opinion though, might not be correct.
Yes, you definitely should! Good luck on getting it done, I'm sure you can if you persevere.
There's more than one way in.  One way would have been that, so, displaying a lot of links, scrolling to the bottom, and then begin scraping.  For this project, I used the default value to make my life easier - it's easier for me to get the program to loop through 40 pages of default values than it is to try and get it to scrape 8 pages of information which requires scrolling, loading, and selecting a number in the input box.
Almost! It knows how many pages there is to scrape and has a counter in it which tells the loop to break once it scrapes the last page.
> What are the modules and libraries and frameworks that are required for something like web scraping some website and collecting the data and putting it into a spreadsheet? and what are the modules and frameworks and libraries that are very useful in general?

I used Selenium, BeautifulSoup, Pandas, and the python library csv to achieve all of that.

> also did you make a "general version" of your program? like it can scrape from any website get any data that you want and put it in a spreadsheet

Unfortunately, I'm not that good :( It only scrapes the website in question although if you know how to scrape one dynamic website, you can definitely scrape a lot of sites.
> I noticed that you mentioned this and I was wondering if you can elaborate on this?

Hello, and of course.  In short, there's no point trying to reinvent the wheel and if somebody has done perfectly fine code, there's nothing wrong with you taking it and repurposing it for your variables.  You had a problem and needed to solve it with code - you now have the answer.  

On top of that, a programmer isn't expected to remember absolutely everything off the top of their head and that's something that's always reiterated in courses.  Having a good approach is what's encouraged over memorising.

> my worry is that when I don't know how to solve something, I google it and it has all the answers right there for me. However, since the answer is right there, there's no need for me to add any code since it does the job I want it to do. 

As problems get more complex and unique, it's very rare you'll be able to take huge chunks of code from the internet and it's ready to go.  You will always have to change a little bit, or take one or two lines only to find another bit and change it.
Thank you although I would definitely not call myself brilliant hahaha

> I wouldn't be able to do something remotely close

You won't know until you try! Perseverance goes a long way.
>  I've took a break for a week and now I'll try to do project based learning as you did. Thanks!

This is what makes learning Python fun.  Hope you have fun building something!
> The problem of misleading video courses and tutorials is being more and more obvious day by day. Don't want to say they are useless, but they are at least not interactive and not up to date.

For sure.  I also honestly do think people expect too much from courses e.g. people beginning to learn Python often say, 'I want to become a data scientist.  Can I do it with a course alone?' with the answer often being no, leading to a lot of disappointment and demotivation early on.  I definitely agree in the sense that courses need to do their part though, focus less on sign ups and more on producing a quality, up to date course which is actively managed.

And, of course, thank you for the nice words!
Thank you for the message! Glad you found it helpful.
[deleted]
I honestly find books to be cumbersome to learn coding with.
Thank you for replying to me. Now I will step into the field with a little more insight. :)
That's a cool idea. I have to condition myself as a different persona when doing the thing. Like a dog salivating while it hears bell ring.
Nice!

I‚Äôm just starting with selenium and I‚Äôm super excited to get into it
 Just did something similar with a dynamic page that used AJAX, but I ended up just using requests and sending .post requests to get the info. I tried selenium first but I could not get it to work properly no matter how much code I copy and pasted. Always cool to see different approaches.
what about scrapy?
For more 'serious' scraping, you should try Scrapy. It can substitute BeautifulSoup, Request and Selenium, all together. :)
You do beg the question, do most spammers evolve from frustrated spamees?
I did this course. Agree it helped with the basics and syntax. Been building my own projects for a couple months now and feel I am learning WAY more now that I am actually building things rsther than following along.
mate, I am going to do what you did, because you basically wrote a story that is me, stuck in tutorial hell.
Excellent, thank you!
I am pro Python, however when I startet at this company that I am working for right now. UiPath is making life alot easier for RPA jobs. You can download a free edition and look into it. Try to make the same task. 

But great job anyways. Hopefully u will get a raise or something :)
How did you build your github?
ohhh i see!
TY!
Interesting, thanks for the response.
Nice. Thanks!
Just yesterday I spent 45 minutes trying to parse a JS page with bs4 and ended up leaving that site. Later came to know that content on page was loaded by JS. How do I differentiate/recognize if a page is loading content with JS? Note: the page I was trying to scrape was 90% html but the portion that I was trying to scrape was, loaded by JS. Is there any guide/tutorial you can link here?
thanks man, I like your perspective because you're where I hope to be in a couple of months. If you don't mind me asking are you self taught or did you take classes?
Sorry for the late reply. That‚Äôs a genius approach seeing that it is a win-win either way. Thanks for getting back to me. I‚Äôm going to try this out!
did you have a portfolio or anything in your profile?
I dunno how but I actually managed to post this on the wrong thread lol, there was a video with a guy talking about how tutorials are fake lmao
Part build the project first and if you're confident you can finish it, show what you've done as part of the proposal.

If they accept you, great.  If not, finish the project so you learn something.
They will make sure you can do it before giving it to you. If you are not suitable, they will reject you, you don't have to reject yourself beforehand
Haha yeah exactly! You have to detach yourself. I know that may sound weird but in the end it's all professional, clients should like the version of you they're looking for.
It's really satisfying once it hits it's stride!
I saw that although it was WAY too complicated for me so nice work on getting it done that way.  

For what it's worth, I used Selenium to open the browser and then scrape all  the elements I wanted, read it as text, format the strings, load the next page and do it all over again.
It's definitely my next step as I've got a big project coming up! Thanks for the advice!
> Is there any guide/tutorial you can link here?

Unfortunately none I can recommend although I'm sure there's a really clever way of telling if it is or not.  My approach is very crude - if it doesn't work in bs4, it's probably dynamic.
I'm no web scraping guru by any stretch but what I do if scraping is not outputting anything is check to see if it's loaded with JS using the [browser developer tools](https://media.prod.mdn.mozit.cloud/attachments/2016/05/05/13176/d1a3a53e92f794a8c44c9a392024e292/settings-show-icon.png) (F12). On Brave (and I think Firefox) the tickbox is near the bottom.

Turn it off, and if what you need disappears/changes, you've got your answer.
Hello and thank you for replying.  I am self taught.
This is good life advice as well lol
This makes me happy I'm married somehow. <g>
That's the approach I first took as I've kind of done it before. Although the page I was using required me to login first which created it's own issues. I just could not get selenium to work for some reason. It wouldn't load the next page, freeze, ect.   


I agree using requests was way more complicated. I had to learn a lot about request headers, using chrome's F12 network tab, ect.  Honestly It was a lot of trial and error without knowing exactly how it worked.  It was fun though, and I'll likely now forget it all as I have no other project I really want to work on lol.
You're welcome!
When I started learning it, I used this course: https://www.udemy.com/course/scrapy-tutorial-web-scraping-with-python/
Udemy often has discounts, so you can buy it for like $10. 
Good luck! :)
Alright.
if you don't mind answering what programs/sites did you use? There is so much out there choice paralysis is hard to overcome
Haha sometimes building these requests can be a pain in the ass. Different websites use different systems to authenticate their users, and it's not always clear what you're looking for. Something I realized really late with the request library is that it's better to keep it simple. Put as little data as possible in the header and let request handle the rest. I spent way too much time trying to understand what was going on with cookies only to realize that requests did everything magically for me.
A lot of google, to be honest.  The sites and information vary because some written tutorials are verbose, some are too vague.  Some video tutorials do not cover what I want, others cover it in 5 minutes.

If you're unsure what to use, it's likely that you'll want to physically try applying some of the solutions you've found on the internet to your own code and try to get it to work.  If it doesn't work after using similar approaches (e.g. same library, loop structure, logic) after several times, it's time to change your approach.

I found learning through failure and trying something else is a very efficient way of figuring out what does and doesn't suck.  It's mentally draining though.  On the plus side, you get a lot better at googling for specific stuff.  One thing I searched for the other day was "how to turn a local variable from a function into a global variable" and realised that I've found looking for solutions difficult because I've been far too vague this entire time.
thanks for taking the time to respond
For a moment, I thought "embroidering" and "hand-sewing" were supposed to be cute ways of saying you were writing a program!

Yes, it looks good, and correct.
That's such a cute idea! I'm sure he'll love it! Also, yes, that looks correct. Personally, if it were me, I would make it wrong on purpose and embroider a red zigzag underneath the error!
Maybe part of the Apollo code. Originally it was handwoven: https://www.fastcompany.com/90363966/the-guts-of-nasas-pioneering-apollo-computer-was-handwoven-like-a-quilt
It's perfect. I even ran the program.
Please post an update with your work!
This is so sweet, it briefly produced a blurring surplus of water in my eyes.
Cute.

A thought that comes to mind that is a bit simpler.

    int daughter_loves_dad = 1;
    while (daughter_loves_dad) {
        puts ("love you forever, dad!");
    }

Infinite loops are fun.
That may be the cutest, nerdiest gift idea I have ever seen. 

Your dad is going to love it!
tabs or spaces?
This is super cute, I'm sure he'll love it.
[deleted]
You did a great job, I bet he's gonna love it :)
Such a sweet gift. üëå
What a lovely thought
This is so wholesome! Can‚Äôt wait to see the end result.
I can't believe how similar our handwritings are!
That's so cool omg!
[deleted]
As the dad of a young daughter: I'm not crying, just got a bit of sand in my eye
I am guessing his age, but  he may also like something he grew up with. here is  a nice "pattern" for your next one:

10 PRINT CHR$(205.5+RND(1)); : GOTO 10

explanation for the younger readers: commodore 64
Love it! At the top or bottom, add a comment (a line that starts with a hashtag `# your comment here`
I just looked at the final version, and while I definitely approve, I have to say there's a small issue with the logic:

`is_geek("His daughter")` should obviously return `True` at this point. And I mean that in the best possible way.
On a related note, have you seen the [needlepoint from Futurama?](https://lordlibidan.com/wp-content/uploads/2019/10/Futurama-Screenshot-S01E03-of-Home-Sweet-Home-Cross-Stitch-768x576.jpg)
This made me tear up a bit. He will love it
For the next holiday, try to make a small text adventure and procedural graphics - an image or animation that is created using graphic primitives.

[https://www.amazon.com/Python-Kids-Playful-Introduction-Programming/dp/1593274076](https://www.amazon.com/Python-Kids-Playful-Introduction-Programming/dp/1593274076)

[https://www.amazon.com/Teach-Your-Kids-Code-Parent-Friendly-ebook/dp/B00WJ049XI](https://www.amazon.com/Teach-Your-Kids-Code-Parent-Friendly-ebook/dp/B00WJ049XI)
Take it easy on yourself and use single quotes there. :)
Remember... cringe is a feature not a bug.
you could use if __ name __ == "__ main __" before calling the functions--- without the spaces
You don't need the parentheses in is_geek.

Not python but: 'My dad' and 'His daughter' is from two different  views, I would switch it to something like 'My dad' and 'I', or '<name>' and 'His daughter'.
Use .format() instead of f strings for backwards compatibility...otherwise his gift won‚Äôt work in a python 2 environment.
Your dad's name is "My dad"? /s
Not here to offer help or ideas. Just commenting to say this is a really cute idea!
This is very inventive and sweet!

It also made me think of Quines and that it would be cool to write a [Quine](https://en.wikipedia.org/wiki/Quine_(computing)) that outputs a stitching pattern of itself.
Such a fantastic IT gift idea, I absolutely love this!
That is really cute ! Great job
As a dad to 3 young kids who loves python, I would love this as a gift, even if it was wrong, the thought and effort alone would mean the world to me! And it would be a project I would love to finish with them.

you should consider making a simple text based game for him, which would help you learn python, and he will cherish that game forever!
So wholesome, your dad will love the thought you put into this! Great gift idea
He's going to friggin love it. Nice job so far. A+ child
so cute.
Super cool idea! Your dad will love it!
Cries in Binary, what a sweet gift
I love you. We need more like you. Tell dad he raised a hell of a daughter.
Please do! I'd love to see the finished product. This is so adorable, I bet your dad will be overjoyed. I would be if my daughter did that, although I don't have one.
This is amazing and super cute. You are awesome.
Please share when you're done! I really want to see the end result!
Awesome and very cute

However **name** is not the best name for the variable. "My dad" and "his daughter" are not names.
I suggest **who** instead of **name**
This thread cracked me up... What a great gift!
Thank you for updating the syntax the Python 3!
This is a really cool idea
This has to be one of the cutest fucking things I've seen, holy crap...
Python2 4ever!
r/wholesome
So cute
can we call it pentax highlighting
What a cool little project dude!
You could also bring the if/else block in the person function down to one line like this:
    
    print(f'{name} {"is a geek" if is_geek(name) else "loves him"}.')

But be sure to use the single and double quotes consistently - one type to encapsulate the whole string and the other in the expression within the curly braces - Python doesn't care which way around you use them but it will throw an error if you mix them up.
...and you're using f strings!

This looks great! Seems like you could definitely pick up python... üòã
What's with all the sewing references?
This is very sweet and I love it :)
Will you be sharing a picture of the final product?
Yor dad will be terrified to see it is not on darkmode \s
very nice and sweet :-)
Hmm... needs more threads.

Edit: kidding I love it
I would love this, there is an additional feature that would be pretty tough in comparison but would just ... I'd be blown away.

You can do things like sew tiny leds into your design.  If it lit up each line as it 'executed' in a loop that would be just so damn awesome.  The code wouldn't be THAT hard...you'd be simply activating an array of pins in the appropriate order.  Python CAN be used for arduino projects.

But this is way cool enough.  I was just tossing that out there.  The python you'd need wouldn't be any harder, easier in fact, but stepping into the electronics could be a learning curve that can't be surmounted in time.  But if you have the time and want to learn it...you'd of course have skills you could use in other embroidery projects.

I have to also say that your idea is just AWESOME!  I would have never thought of it and I'm sure I'd cry like a baby.  I almost don't want to say anything for fear it will make you doubt your idea.  Don't...this is just something that would be that much more....for me.  This is the best damn thing I ever heard of.
I know I am late to the party, damn if this isn't the sweetest thing ever!
Thanks! I guess you could say I'm stitching together a program :)
Aside from the obvious Python2 syntax. \^\^
[deleted]
cute idea :)
Change his IDE on his birthday to treat all warnings as errors too
Lol that would drive me crazy
This is super interesting!
[deleted]
This was what I thought of when I saw OP's title 'hand-sew a simple program' too
I absolutely will!
Python Syntax:

    daughter_loves_dad = True
    while(daughter_loves_dad):
        print("love you forever, dad!")
Perhaps the only situation where an infinite loop is the desired outcome!! Take my upvote!
[Update.](http://imgur.com/gallery/PMDy8Wr) How's this one look?
[deleted]
F-strings are a lot better than outdated string spaced concatenation
Returning name == "My dad" actually returns a boolean value. You are returning true if it's true, or false if it evaluates as false! No need for the if statements!
Those of us who wrote code like that, when we were babies, are now grandparents.  Some of us for a number of years.  If you wrote it professionally, odds are you are a great-grandparent.

Time flies :p
that's the purpose of that function
it's not production code. it's just gift to her father
In typed languages like c/c++ and their descendants, which are her dad's primary languages, putting a string in single quotes throws a compiler error since those are used to denote the (single) char type. If he's used to that behavior, single quotes around strings might be subconsciously grating, even though singles are the most Pythonic way to do it.
So just:

`    return name == "My dad"` ?
You're so right. Thanks!
It's a sewing project. I'm hand-stitching this on fabric.
Yes, for sure.
I love it! Will your program be...

...

...

...

...

...

Multithreaded?
If she doesn't add

    import threading

to the top of this, an opportunity has been missed.
And it's all too common for an app's website to say something like, "Hand-crafted with ‚ù§Ô∏è in Portland, Oregon."
I would do a list of different names/nick names he goes by, so when they enter a nick name his it will still be recognized

Edit: is he also a python program.er or what languages does he program in?
[Update.](http://imgur.com/gallery/PMDy8Wr) Does this fit Python 3 syntax? Do the colors look appropriate to you?
Why shouldn't an embroidering be a little old-fashioned! (They sure don't mind it in real programs at my job!)
I know, I'm so evil!
How come you picked Python for this? Is he mainly a Python programmer?
Yeah it is a little know technology. I am a educated historian with a speciality in American history, technology and economics, so when I saw OP request, I just couldn't help myself. Hope you will be having a goodnight and send some love to the space industry.
I'd just change one thing...you don't need the parentheses in the return statement of is_geek.

```
def is_geek(name):
    return name == "My dad"
  
def person(name):
    if is_geek(name):
        print(name + " is a geek")
    else:
        print(name + " loves him")
   
person("My dad")
person("His daughter")
```

This prints
```
My dad is a geek
His daughter loves him
```

And if you want some color inspiration, this is what that code looks like in my editor: https://imgur.com/a/hpLEl4Y
You should use f-strings in the print statements
[deleted]
[deleted]
run the code. get the joke. :)
Oh. If her dad is not a python programmer, why is the code in python?
Yeah!
Underrated comment üòÇ
He should have added import threading
Well done
You're terrible and I hate you. ^(I'm just kidding. ILU and this joke.)
Wont a error be thrown if there is no code that uses this or am I misremembering
Oh, yes, /u/hydroscopick do this! That's hilarious!
Of course it's Portland
That checks out with me. As a side note, what a thoughtful and sweet gift for your dad!
Since you're using Python3 syntax, you could use f-strings instead of "+"!
Or something that is correct but the Prettier would systematically try to rearrange for you.
I think he does more C (C+? C++), but I learned a tiny bit of Python a few years ago so I went with Python.
Thank you so much!
This!
How fancy! Thanks for the tip.

Okay. Here's my last update ([link](http://imgur.com/gallery/RgpfUjJ)). Does this look alright? No cringe?
my mama is a beautiful latinx womxn, but YoMommaJokeBot's muuuum is not  


^I ^am ^a ^bot ^that ^fucks ^YoMommaJokeBot's ^mum. ^Downvote ^will ^not ^remove. ^Upvote ^to ^fuck ^this ^bot.
Because she wants to hand sew for hobby, not do it fulltime
Thanks!
Nah, no error, just redundant code.
Only in a linter
I mean, look at the project. It's going to use threading.
Go will refuse to compile with extra libs/unused imports, but python doesn't care
Thank you! He's a great dad. Thanks for helping me (hopefully) impress him. :)
Is there a difference in how they've done it? I'm only familiar with c++ so their syntax seems about right for concatenating a string
I can show you it in C++ if you feel like really going for it?
You're welcome, nice idea!
Cute, I'd love this personally
Definitely stick with the f strings!
LOL good point.
Oh gotcha.
See I thought so, I swear, ~~atom, or~~ maybe IDLE would pop up stating something about it being imported library without actually using it.
True, true.

edit; holy shit, she is actually embroidering syntax... okay I need sleep, but I couldn't sleep and have been up all night.
This I do remember, when I dabbled in Go for a little bit.
If I had a daughter, and she made me a gift like this...I'd be in tears for months.
Yeah. He will be impressed. :)
The end result will be the same, f-strings are more readable and have some other benefits though.
[deleted]
Aw, thanks. I actually already started stitching but that's really kind of you to offer. :)
I don't use either but if you have a linter, you'll get a warning.  Sublime will do that if you have the appropriate linter on for sure.  But at run time no shits are given.  The vast majority of things pylint or flake8 will complain about will never result in an error in prod...at least not directly.  Of course that doesn't mean that their assessment isn't valid, but it just is t world ending
Agreed. I already teared up and I don't know either of these people.
Probably time to tweak those meds, then, pops.
I believe f strings are one of the fastest ways to concatenate a string in python
Here it is, if you're interested

[https://pastebin.com/y3nqnnqN](https://pastebin.com/y3nqnnqN)

Ask your dad to explain why you can't use `printf` instead of `std::cout`! Also ask him to explain all the things I should not have done!

EDIT: What's with the downvotes? I was trying to be nice.
Sounds like you're the one who needs medication, not me.
Better to keep it in Python, because the compiler that ships with throw pillows is really flakey.  ;)
You're being nice in my book. I solicited help online and you offered it, so thanks. :)
What about throw pillows?
:)
Public void sleepover() throws Pillows {}
thanks!
This is too advanced for me yet... But it seems useful so I'll save it!
Awesome content! Saving this. Thanks a lot u/impshum!
    In [12]: def run_again():
        ...:     if 'y' in input('Run again (y/N): ').lower():
        ...:         run_again()
        ...:
        ...: run_again()
    Run again (y/N): no way!
    Run again (y/N): no thank you!
    Run again (y/N): probably not
    Run again (y/N): why are you running?
    Run again (y/N):

Seems a bit faulty to me. Also, making this a recursive function is a bad idea.

    In [13]: def run_again(prompt='Run again? (y/N): ', error='Invalid input'):
        ...:     while True:
        ...:         choice = input(prompt).lower()
        ...:         if choice not in ('y', 'yes', 'n', 'no'):
        ...:             print(f'{error} Try again')
        ...:             continue
        ...:         return choice == 'y' or choice == 'yes'
        ...:
    
    In [14]: run_again()
    Run again? (y/N): no way!
    Invalid input Try again
    Run again? (y/N): no thank you!
    Invalid input Try again
    Run again? (y/N): probably not
    Invalid input Try again
    Run again? (y/N): why are you running?
    Invalid input Try again
    Run again? (y/N): y
    Out[14]: True

So you can use it like this:

    In [15]: print('I ran the thing')
        ...: while run_again():
        ...:     print('Okay, running again.')
        ...: print('okay, bye')
    I ran the thing
    Run again? (y/N): what?
    Invalid input Try again
    Run again? (y/N): y
    Okay, running again.
    Run again? (y/N): y
    Okay, running again.
    Run again? (y/N): yes
    Okay, running again.
    Run again? (y/N): yessir
    Invalid input Try again
    Run again? (y/N): yes
    Okay, running again.
    Run again? (y/N): nope
    Invalid input Try again
    Run again? (y/N): naw
    Invalid input Try again
    Run again? (y/N): n
    okay, bye
Nice
    def notify(title, text):
        os.system("""
            osascript -e 'display notification "{}" with title "{}"'
            """.format(text, title))
    
    notify('title', 'content')

I'd change this to use the newer replacement for os.system...

    import shlex
    import subprocess
    
    def notify(title, text):
        command = shlex.split(f"""osascript -e 'display notification "{text}" with title "{title}"'""")
        subprocess.run(command)

More info about [subprocess](https://docs.python.org/3.8/library/subprocess.html?highlight=shell) and [shlex](https://docs.python.org/3/library/shlex.html)
In re the dictionary merge one-liner? [PEP 584](https://www.python.org/dev/peps/pep-0584/) is implemented in Python 3.9, so `ABdic = Adic | Bdic`. Not to say it's wrong, just that it must be addressing a common need.
Found a typo: create_thumbnal > create_thumbnail
Alrighty, let me save this under "never using, but nice to have".
Thank you! Anyone have more helpful things with python?
[deleted]
Whats a lonk?
Did you make this?! What a beautiful site, I must steal the source.
I like the shortcut to merge dict. Have been struggling with that.
[deleted]
Thanks man.
This is amazing! Thank you!
Sweet! Thank you!
bookedmarked
Can everyone open the link? Or is it flooded with requests that it crashed and I can‚Äôt open it. Thanks mate!
This is really useful :)
Noobie question: where can you execute it? On the ide?
Nice! Thanks for this. :)
Thanks
Pretty cool! Now do you just have these all saved in a file and copy paste in and out what you need? Or do you have your own package that you out in the python packages directory. I ask because I do the latter and it has served me well for as long as can remember but I know a lot of people don't like doing that.
Awesome... Saving them...
Remind me! Tomorrow
Saved
You could package it as a utils module and share it in pypi so we can all just pip install it
Just went through ‚ÄúWhile loops‚Äù article and its precise. Like the Logo, Mate!
your `notify` one that uses osascript allows for applescript injection, whether you use `os.system` or even `subprocess`.

If someone passes in a title like `foo"\nset volume output muted TRUE\nquit app "Chrome`, it can run arbitrary applescript. If using `os.system`, you can literally just do command injection and run arbitrary shell commands.
Awesome! Thanks for making this!
Yeah.. I'm definitely a beginner that still doesn't understand most of this.. sigh. Either way, thanks I'll learn more about this
Most of these were pretty useless for me but it was a good idea
This is great -- I feel like this is a useful way to learn, wish there were more functions!
Super helpful, I'm just getting into some of these things and I really appreciate a starting point for stuff like Beautiful soup and "Get file between string" etc. 

Thanks!
Very cool, thanks!
This is excellent. Thanks you!
Thank you!
Thanks for this
This post was up voted past 69 and 420... ( Somebody already said thanks and I upvotes that so I didn't think it was nessicary to say again)
[removed]
Cool. x
Good stuff. Thanks for the input to help others.
If you want to get fancy, you could also write run_again as a decorator. Disclaimer: I've only thought about this for a minute. Maybe it's terrible.

    
    def run_again(func):
      @functools.wraps(func)
      def with_repetition(*args, **kwargs):
        output = func(*args, **kwargs)
        if input("want to do this again?").lower in ("y", "yes", "yeppers"):
          return with_repetition(*args, **kwargs)
        else:
          return output
      return with_repetition

All in all, probably not *that* elegant to write, but when using it it might look kinda cute:

    @run_again
    def roll_dice(n):
      print(f"You rolled a {random.randint(1, n)}!")
What‚Äôs the benefit of doing it this way?
It's not so much a new replacement as a different way to run another process.

subprocess will use [fork_exec](https://github.com/python/cpython/blob/master/Modules/_posixsubprocess.c) in here, which I believe makes the [fork](http://man7.org/linux/man-pages/man2/fork.2.html) system call, and then runs some sort of execv system call.

The os.system just makes the Standard C function `system` call. Popen, using the execv family of calls, gives you a lot more control.

It's a similar deal in standard C. You could use the function `system()` which just takes a string, or you could use some sort of execv call and pass in a very specific list of arguments, custom environment variables, etc.

Also not sure `shlex.split` alone is great for this specific thing. Since osascript is running an arbitrary script, I believe you might even be able to pass in malicious input with a custom title that terminates the `"` and still allow for injection, even if only osascript is running. Normally `os.system` is vulnerable because you could do command injection and the shell would run another program... in this case, you might be able to do bad things with osascript itself, and do more than just display a notification.

Edit:

yep, tested it. You could pass in:

`notify('foo', 'bar"\nset volume output muted TRUE\ndisplay notification "foo2" with title "bar2')`

Displays two notifications and mutes my macbook. You literally have to do your own input sanitization if you're launching osascript, whether you use `subprocess` or `os.system`. Since that second title still goes in as a single argument, `shlex.split` and using the `subprocess` calls don't matter, you might not have shell injection but you have applescript injection.
It may be more modern but it's more code and more imports?

&#x200B;

\[edit - sorry, I see your response below\]
Cool thanks.
Thank you! What I didn't quite understand from the link: is the newly created ABdic an entirely new dictionary or does it just mean "items of Adic OR Bdic"?
Thanks. Sometimes I type too fast and the vars just stay on the paste.
Yarp.
Just me playing with words.
Sauce: http://picocms.org/

I've done some wiggles to mine though.
Happy cake day!
Getting a lot of traffic yes. Should be working though.
Terminal/IDE/whatever.
Sometimes I use a utils.py and import it, but most of the time just a copy/paste job.
Good stuff. ```lovely_soup()``` is still one of my favourites that I use a lot.
Keep learning. It will make sense sooner than you think.
Someday...and that day may never come, I will understand decorators.
>     os.system("""
>         osascript -e 'display notification "{}" with title "{}"'
>         """.format(text, title))
> 
> 

What happens if `title` is `" && rm -rf /*`? Think about it...

Command injection is one issue. `os.system` won't protect against that. Due to the way subprocess.Popen works, you can pass in a very specific list of arguments. `&& something` won't work, because it's not running as a shell command, rather executing a child process using the execv sorts of calls.

If you've seen C before, you might have seen:

`void main(int argc, char *argv[]) {`

That argv is an array of arguments that it runs with. When you use something like Popen and a list of arguments, it goes directly in there. That means adding `&& rm -rf /*` won't run the `rm` program... it'll pass the arguments `&&` and `rm` and `-rf` and `/*` to the actual program you were trying to run, which it likely won't be able to do anything with, and just break.

`os.system` uses the C system function which will pass that string to the shell, which WILL parse that as trying to run the first program, then `rm`.

Popen also gives you a lot more control. You can pipe input into stdin, get stdout and stderr and pipe that to something else, you can get a process instance and send it signals, like kill it, you can pass in custom environment variables, you can wait on it to finish. `os.system` just runs it and doesn't give you any control over it after that.

Edit: in this specific case, since it's running osascript which itself has a scripting language that you're running with that `display notification` command, you actually are still vulnerable to command injection here no matter what you use. You have to sanitize the input or people can do bad things, [example here](https://www.reddit.com/r/learnpython/comments/gfaq9s/handy_python_functions_for_all/fpupaxk/)
Benefit of subprocess? Or the benefit of python? Subprocess is listed by the python docs as the replacement for os.system, so there's that. Why python for this? No idea. Honestly, just writing this one in bash would be simpler and faster.
From the Python documentation: 

> Using the subprocess Module
>
> The recommended approach to invoking subprocesses is to use the run() function for all use cases it can handle. For more advanced use cases, the underlying Popen interface can be used directly.

But to the point of input sanitization, you're definitely correct. This particular script probably shouldn't be used. Or it should only be used if it is locked down to root or a specific user.
PEPs aren't easy reading, are they? But if you go down to this heading,

https://www.python.org/dev/peps/pep-0584/#specification

It says

> Dict union will return a new dict consisting of the left operand merged with the right operand, each of which must be a dict (or an instance of a dict subclass). If a key appears in both operands, the last-seen value (i.e. that from the right-hand operand) wins:

and gives examples.
Thank you, you beautiful beast!
Thanks! :)
I'll have to check that out! 

And just curious, but what is your role with python. I and I think a lot of people here have trouble getting a sense of when to utilize python and then when to say, "my job is Python."
A decorator is a function that takes in a function and returns a function. Because functions are first-class citizens in python, we can assign them to variables, pass them to functions as arguments, return them with functions, and so on.

    def my_decorator(func): #takes in a function...
      def the_eventual_output(*args, **kwargs): #defining the function to return
        #something or other probably involving calling func
      return the_eventual_output

That's the basic recipe. Using it like

    @my_decorator
    def my_function(bla, blabla):
      #blabla

Is syntactic sugar for 

    def my_function(bla, blabla):
      #blabla
    my_function = my_decorator(my_function)
Good to know! I‚Äôll keep in mind the best practice of avoiding os.system.

Arguably, you could just skip the python and run the shell command on a Mac term though... you are your only notification user at the moment, but if this gets deployed or something then maybe security concerns come in
I know I‚Äôm late to the party, but the reason why you have the command line args in C now makes TOTAL sense. Thanks!!
Thanks again, looks like I need to practice my reading comprehension ;)
You're most welcome.
I'm a web developer. I use it for many things. I'm not claiming to be a pro python dev or anything. I got hooked the first day I tried python and just kept at it, built some stuff and had loads of fun. I'm still doing so.
Thank you for the explanation. I kind off understand the concept but it's hard to wrap my head around it and use them in practice. I've watched Corey Schafer's video on Decorators as well as Closures (highly recommended channel) but I'm still too novice in Python to implement them into my "code".
Oh yeah, totally. Something like this it will rarely matter if ever, but heh this is a webpage sharing "useful functions", one to display notifications on a mac... you never know what someone is going to do with it. Just best to assume that someone somehow some way will eventually use it in a way that takes arbitrary user input.

Maybe someone makes a website, then they have it log user agents of people that hit the site, then someone writes a log file parser in python, pulls down the remote logs and runs it locally, and after it runs, shows a notification with the most common user agent, something seemingly benign but totally user controlled...

I usually do my best to avoid pushing code with any sort of command injection no matter how I expect it to be used, at least just as a best practice, and because other people might read my code and think that's a proper way to do things. All it really takes is one newbie to read this code and think "oh I can use os.system to do that one thing", and it potentially causes a security concern somewhere else.
Great, thanks!
I know what you mean. In fact, I wrote this snippet as a way to refresh the concept for me. Re-running something as many times as the user wants is exactly the kind of modification that should ring decorator alarm bells - we don't care WHAT you want to repeat, so it's more of a modifier to something else, which made me think of decorators.
The code is NOV2019FREE or you can use this link: https://www.udemy.com/course/automate/?couponCode=NOV2019FREE

To head off any questions:

* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.
* This Udemy course covers the same content as the book, which you can read for free online at https://inventwithpython.com
* The 2nd edition of Automate the Boring Stuff with Python will be posted on the website in mid-November. It gets released on the 12th, and I'll need a couple days to format it to HTML and make it look nice.
* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.
* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.
* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)
* I used to do free codes once or twice a year. The last time I did, I had an amazing 80,000 people sign up (so a dozen of them might have actually finished the course, if people are as good as I am about finishing the online courses I sign up for). Udemy's new policies mean I can't do this anymore. I find this to be a less than ideal situation. So I'm rolling out new codes each month. NOV2019FREE is the free code, and NOV2019 is the cheap code. I'll come out with new ones at the start of each month. (And yes, I'll probably write a script to automate this.)
What difficulty level is this course? I'm just finishing up a first intro course and would love to expand, but don't wanna steal a spot for something over my head.
Thanks for the link!
Thank you for sharing! I loved the book but will go through the course to refresh!
Thx ‚ù§Ô∏è
Thank you very much !!Really helpful.
Hey cool. I am loving this subreddit!
I recommend this to everyone
I signed up when he gave away free code last time. Was a great move taking lower level python classes at my college and this lets me slowly learn the info on my own when it goes over my head in class. Has been an excellent resource.
Ive got the Udemy course. Had it for some time now.

If you havent, DEFINITELY take advantage of this.
Al is the hero we need.
Damn I just paid for this
Thank you so much! Really appreciate it!
Thanks for the post!!!
Mad props. Signed up for the course and preordered the book. Thank you!!
Nice
thank you! ‚ù§Ô∏è
Thanks very much for this, Al!  Much appreciated.
Thank you very much, Al! I'll be buying the 2nd edition of the book as soon as it comes out.
Thanks for that!  I'm working on it now.
This guy is a legend. Thankyou so much I can't appreciate you enough.
Thank you, you the real MVP bro
The pain you feel when you bought this 2 days ago :'D
Yes thank you.
Thanks for the heads up!
Thanks for this!
Thanks man very nice!

Fuck to late -.-
I paid fifty quid for this less than a week ago... I should get into short selling. Thanks.
Me who lives in a third world country that downloaded the book illegally:
What it's free now?
Yayyyyyyyyyy
Thank you Al, this is brilliant!
**Don't mind me** turning this link into a more private one with nitter

https://nitter.net/AlSweigart/status/1191436575659311105
u/-Tikino
Thanks for the heads-up, just grabbed this.
RemindMe! 2 days
!remindme 12 hours
I ain't even mad I paid for it a month ago. You're a good dude Al
Thank you so much! Excited to dive into it.
Hey Al - really appreciate this course!

I bought it a few months back and finally started working through it recently, about ~40% through now.  I'd taken a few programming courses +10 years ago and it's not only a great refresher on programming but it's teaching me python, which is brand new to me, at the right level/speed that I need.
Thank you so much for this! Beginning my software engineering degree next year and the cost of quality resources to learn new languages adds up fast, so this is a total godsend. You're a legend!
80,000:12 that's not a bad margin. üòÖ
thanks for doing this. I've had so many coworkers who have used this to get started and its great.
Can‚Äôt wait to try it!
Thank you so much! :)
Thank you, your course has helped me so much.
Thanks, Al!
Thanks Al! Really appreciate it
Don‚Äôt you just love it when companies like Udemy make these changes, claiming that they are better for the instructor and better for the student, but it‚Äôs rare to find an instructor or student who actually wants the changes? They should just be honest and say, ‚ÄúIt‚Äôs better for our bottom line‚Äù. At least we could begrudgingly respect their honesty. Disclosure: I have courses on Udemy (soon to be removed from sale).

Thanks for making your work free; it‚Äôs much appreciated, and I know much effort goes into it. (I‚Äôm also a published author).
Thank you!
You‚Äôre a legend. You‚Äôve helped me so much and I‚Äôve bought the book! Everyone give this guy some money if you can.
Hey man, I really appreciate you doing this. A man does good work and gets paid? The world is just. A man does his work and gives it for free? The world will be a better place forever.
This is great, thanks!
Just wanted to say you're the man.
Thank you so much for all the work you've done for us ‚ô• 

You're really awesome person with a kind soul
Looking forward to seeing the second edition!
Thank you!! :)
Thank you. So much.
I love you dude! But I still keep missing when you're live on Twitch streams lol
I bought this back in June, does it talk about using API's? Even not I am assuming I'll get enough knowledge I'll be able to learn it on my own. Thanks Al!
Thanks very much :D
Thank you so much, I just signed up!  I pre-ordered the 2nd edition on Amazon and will start reading that and once I finish Python Crash Course.  I am even more excited to get the book now that I will have the course to go along with it.  Thank you again.
wow thank you kind sir
Hey dude, just wanted to congratulate with you for the good work. I love your book!
You are a good man Mr.Sweigart. Keep being awesome!
This course is where I got started with Python!  I recommend it to everyone!!
thanks mate
>what's new in the second edition

Good call on using Mu for your 2nd edition.

&#x200B;

Thanks a lot for this!
Thanks !
Shoot I just missed this! How will I know when you offer this again?
Thank you very much appreciate it :)
Hello, can you please provide a free code for December if that's okay with you. I just came across this post and feel bad that I missed it. 

Thank you
This course is for complete beginners and assumes no previous programming experience. It's also not even necessarily for people who want to become software engineers. I jokingly call it "programming for office workers", since it teaches how to write practical little programs to automate stuff for anyone who uses a computer as part of their job/hobby.
I just read the FAQ here [https://www.reddit.com/r/learnprogramming/comments/drmk30/automate\_the\_boring\_stuff\_with\_python\_udemy/](https://www.reddit.com/r/learnprogramming/comments/drmk30/automate_the_boring_stuff_with_python_udemy/) and it says:

"Make free codes that are only good for 3 days for an unlimited number of  people (NOV2019FREE lasts until November 7, 2019 11:05 AM PST)"

So I think this code is for an unlimited number of people so you won't be stealing a spot
It's not possible to take someone's spot. There are unlimited spots.
Worth every dollar!
I got the idea Al might offer again, def follow him on Twitter & reddit!
I mean you're helping to support Al. I purchased 2 of the books after getting a few chapters in with the free online versions simply to pay it forward on a service that helped me learn. Dont think of it as you lost out and instead thinking of it that you're paying Al for his work.
I hope you didn‚Äôt pay ¬£50 for the Udemy course! If you visit Udemy using a incognito mode in your browser, you will always see the ‚Äònew student‚Äô discount, and will pay that price even when you sign-in to pay via an existing account (assuming that the instructor allow discounts, which most do).

Also, are you aware that there is a 30 day money-back guarantee on all Udemy courses, so you could get a refund and still get the course with a coupon? Some people may think this is less than honest, but as a Udemy instructor and author, I am happy for students to do this with my courses, so I am not being a hypocrite. There‚Äôs nothing worse than a disgruntled customer; I‚Äôd rather have a happy customer and less money.
I will be messaging you in 2 days on [**2019-12-02 11:48:33 UTC**](http://www.wolframalpha.com/input/?i=2019-12-02%2011:48:33%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/drnc0z/automate_the_boring_stuff_free_on_udemy/f950xrn/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fdrnc0z%2Fautomate_the_boring_stuff_free_on_udemy%2Ff950xrn%2F%5D%0A%0ARemindMe%21%202019-12-02%2011%3A48%3A33%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20drnc0z)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
I will be messaging you on [**2019-11-05 16:43:55 UTC**](http://www.wolframalpha.com/input/?i=2019-11-05%2016:43:55%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/drnc0z/automate_the_boring_stuff_free_on_udemy/f6l4vgh/)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fdrnc0z%2Fautomate_the_boring_stuff_free_on_udemy%2Ff6l4vgh%2F%5D%0A%0ARemindMe%21%202019-11-05%2016%3A43%3A55%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20drnc0z)

There is currently another bot called u/kzreminderbot that is duplicating the functionality of this bot. Since it replies to the same RemindMe! trigger phrase, you may receive a second message from it with the same reminder. If this is annoying to you, please click [this link](https://np.reddit.com/message/compose/?to=kzreminderbot&subject=Feedback%21%20KZ%20Reminder%20Bot) to send feedback to that bot author and ask him to use a different trigger.

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/c5l9ie/remindmebot_info_v20/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Paid a few months ago for udemy and book and I'm still not mad. Al is fucking awesome.
I CANT BELIEVE I PAID $7 WHEN OTHERS ARE GETTING THIS FOR FREE!

Nah it's cool. If you can snag this course for free it's totally worth it. I'm never going to be a developer but it helps with small projects around the office.
It does have content related to APIs. I can recall going through some Mail and SMS APIs.
Start of next month. The code will be DEC2019FREE. The first 15 of the 50 videos are free on YouTube though, so you can start right now: https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW
DEC2019FREE. I just made a post about it in r/learnprogramming :)
Yeah it was still a lifesaver in my python course. This course is the most difficult cs class I've ever taken. His work wasn't everything I needed to learn, but it was a great start
Fantastic, thank you. I'll be chugging along through this soon.
This is so cool of you to do, thank you. I'll definitely be taking advantage of the December code.

I currently have the first edition of your book on hold at the library, is the udemy course the same content as what I'll find in the book? Do you think it'd be worth going through the book and the course?
Thank you!
 RemindME! December 1, 2019 ‚Äú DEC2019FREE ‚Äù
>DEC2019FREE

 RemindMe! December 1, 2019  "DEC2019FREE"
Code is not working anymore or did I miss it? :(
Thanks a ton. Have registered
The book has slightly more content than the course. Mostly, I created the course for people who learn better through video. You'll probably want to work through both.
Sounds good, I'll do that. Thanks again!
[deleted]
It's also my favorite editor... but for Golang. It's good for Python too... but you really need the right extensions. Pycharm for me is still the best Python editor. I had tried really hard to get Code to be as good (embedding my terminal in my usual place, file tree setup with Git commit highlighting etc).

The big issue is recognizing my own imports; that is the part where Code seriously lacks.... VS Code Python extensions often highlight import errors despite perfectly valid imports on \_\_init\_\_.py and throughout the code base (my own imports/modules).

As far as performance and overall appearance goes, VS Code blows Pycharm away.
"Bracket Pair Colorizer",  "indent-rainbow" and "Trailing Spaces" look like they are just what I never knew I needed. Thanks!
I used Visual Studio Code. It's very nice. But I needed something a little more portable. So I use Google Colab. It's more easy to use and it's browser base. You can share your code more easily, so others can help
[deleted]
Is Visual Studio Code free?
Have you tried pycharm? I use both programs but vastly prefer pycharm for python.
python and pylint extensions are all I find I need.
Anybody uses full Visual Studio with Python?
Pycharm is absolutely great, but Vs Code is free and you get to do some configuring of your IDE. From the perspective of a DevOps-leaning noob - thats a thrill.


Also, Atom was really fabulous, until it started freezing when I was developing Django apps.
before I know vim I thoght that too.
Goddamn. Every time I see a post like this I stare at Notepad++ and debate whether I should try and switch after like, a decade. It's so nice to have a single, super-fast program for all my note-taking and programming though.
Vs code was good but It consumed more memory space after each update. I quit it. I moved to Sublime Text and Vim. You need to install kite plugin to visualize the syntax and helps in viewing the docs of the modules too. Sublime Text is faster than vs code
I like the ‚Äòpitaya smoothie‚Äô theme
When I was learning Python I started with Atom, after a while I switched to VSC and I never left it. I still use it for scripting, fast prototyping and small project. But when it comes to larger professional project, Pycharm is my choice. The debugger is just perfect and intuitive, it allows you to track variables value right inside the code (it actually prints the variable state beside the variable in your code) and this is a great feature also when you are learning new tools. Moreover Its integration with anaconda, git and Jenkins couldn‚Äôt work any better
Kite https://www.kite.com/ is pretty cool for autocomplete. Supports a lot of popular IDEs

VS Code Icons is probably better than Material Theme
vim is better
Just FYI, if you like VS Code, but aren't as fond of Microsoft telemetry and tracking, check out [VSCodium](https://vscodium.com/), which is built from VS Code's source code.
Check out Kite, it's a python and JavaScript code assistant. https://kite.com/
I think this is great, but where in the world is kite? I personally love using it.
pycharm free license with school FTW
Pycharm Vs VS code.
Prettier is pretty great, and for theme, check out Plastic.
I couldn't agree more VSCode is amazing!
One Monokai Theme is amazing. 

+1 for Bracket Pair Colorizer.
yeah visual studio code works like a charm for python. But same is not for C++. Setting it up for C++ is so hard, and waste of time. But for python, working on visual studio code is so great. Those colorful words and on big projects you could easily navigate through your code.
It‚Äôs my favorite for pretty much any language.
Thanks!
Tabnine
I love VS code but for big projects it can becomes a bit slow .So I started using neovim for large projects but I still miss the features of vs code in nvim like integrated terminal and theme shades of purple(I love this theme).
Sounds good! but since you said you're still learning, I want to mention a small notice that might be helpful for you.. in our first Java programming course in college we were told to use jGrasp.. A legacy environment with almost no features of other cool IDE's.. I think this was because they wanted for us to work on an environment where we depend on ourselves 100% in writing syntax with no help of the IDE like autocomplete and finding errors and auto brackets and so on.. I really don't know if their theory is correct or not but it makes sense to me although I really hated jGrasp..
Monokai Pro is such a good theme imo. Best for readability and looks.
I like PyCharm
Love it! You can customize everything and becomes a true ‚Äúworkspace‚Äù. Automatic To-do list, spotify controls, colors etc etc

Only thing I struggle with are tests?!? Sometimes it just makes my whole windows frozen? Or i need to click a testcase multiple time to run. Or it even doesn‚Äôt detect any testcases at all (or at least a part of it, which becomes very annoying when you think you have everything but NOPE, there is more!) this changes with every restart and i‚Äôm not touching or moving them in between.. 

Anyone has a similar experience?
Horizon is a great theme, with Python and otherwise
ooh hat seems very useful, thanks for posting
Python preview is mind-blowingly helpful, thanks
Agreed, I really enjoy Python VSCode too, 2 things I really don't enjoy about it:

\- Never found a way to make it detect that some function arguments are not being used in the function

\- Never found a way to detect unused variables in some specific context (e.g. if you sort a list but never use it afterward, detect that the sorting was useless)

I've been told that PyCharm would do that by default so if anyone knows how to fix that on VSCode I'd love it
Python Autopep-8 and Better Comment which those both are sooooo helpful.
Minify. Auto minify your JS and CSS files on save.
Initially I was coding using PyCharm and needed another code editor to view python files, before this I only used VSCode to code in C# and the occasional Javascript, so I was a bit familiar with it. But after using Python I really like actually took the time to rice VSCode and started using it as a main editor. Microsoft really brings out the best of Python and VSCode together. I noticed that it was just waaay better than PyCharm while being lightweight and not needing that stupid indexing that Pycharm. Once you start using VSCode with Python, you   realize just how much its ahead than PyCharm. 

Imho, Python is meant to be coded in conjunction with VSCode.
Do you know any extesions to work in jupyter notebooks?
I've been trying to use VSC for data sci related work but have found the integrated with Jupyter notebooks to be hit and miss (loads sometimes, much longer rendering of images, slower execution times).

I'd love to be able to use it as an IDE because of its Flutter / dart integration but as of yet, it's still a no-go for me. 

Although if anyone knows any performance tweaks, I'd be happy to try them out and report back.
Power-mode
Any comparisons to pycharm? I'm really in the fence after using pycharm for a long time
Remindme! 5 hours
Can anyone suggest the same things for my work which involves only around python django html css..
Add Git tree to the list...
What about pycharm
true chads use Vim
I found that you need to edit setting to get proper syntax highlighting. Can you share your setting edit?
VSCODE discord RPC extension. THE BEST, unless you don't want other people to know what you're editing.
i woke up today and chose to say i love visual studio code  , when every other  thing fails  , vs code the only thing that executes things for me ,  
Pycharm fails all the time to execute simple python venv things and bug my app  
Intelij fails to work with spring , it's mind blowing how nothing is compatible with everything   
it's crazy the level of difference between vs code and any other thing  
design is so intuitive and smooth i wana just thank whoever made it . i love you !
How do I install these and what do they do
Damn I needed this so much!
I'm taking web development in college and these just made my life easier!
[deleted]
nice
Just installed the spell checker. How do I fix spelling mistakes? It doesn't seem to allow autocompletion.

Edit: google for now. :)
Gitlens is wonderful +1 for that.
i tried setting up VS Code w/ WSL - i can't get it to work properly with Python 3.... how'd you do it and/or can you point me to a guide?

Thanks!
I second pycharm, I'm a huge sucker for jetbrains products solely for their code completion.
Pycharn all the way. Switched to jetbrains IDEs a while ago and now I can't even think of working without Pycharm or CLion
Yeah, can't agree more. I love VSCode and have used it extensively in the past for JS + React + Front-end/back-end stuff but it just isn't anywhere remotely close to Pycharm in features or functionality and I've tried really hard to match the main things I care about, but with no luck. 

The UX is fantastic for what they support, but there is so much they still don't. And VS Intellisense is pretty garbage compared to Pycharm's code completion. The latter also is amazing at type inference, even figuring type info from docstrings, which is so empowering and awesome. Haven't been able to get that working in Vscode.
Agreed. I use vscode for all my simple stuff with python but I'll fire up intellij anytime I need to look at module source or am having an issue with the imports. It just works better
Have you tried the flake8 or pyright extensions for the import issues?
Same with BPC, though enabling Trailing Spaces breaks BPC for me for some reason.
So obvious after the fact.
That's what I'm using. I especially like the separation between code and text.

You get any widgets working?
You can 'install' vscode on a USB stick if you need portability and still want to use vscode.
I don't like the built-in trailing white space deletion because it doesn't highlight it during coding.

I still have not learn about git and github yet but I will install gitlens now for future.

Thanks for your recommendation.
Free as a beer, but not libre.
Yes
I have not. Will probably give it a try some time soon as I'm almost wrapped up with my crash course with Python.
python is too heavy weight for me and the UI really bothers me, plus the load times are horrendous. But it‚Äôs definitely the best IDE
That's not what you said two years ago
He is a man of focus, commitment and shear fucking will.
Once you go 'VS Code', you can't go back.
Please switch, I still use N++ for notes and not code things, but VSCode is so much better for coding.
If it works for you, why change it. Especially after 10 yrs.

I'm still a beginner really but I am moving from Thonny to Spyder. One of my first classes recommended Notepad++ and I will pop into that for the coding/note taking still to this day. I love the speed and simplicity too.
I was with you until you mentioned Kite. In my experience Kite is great mostly when using standard library or a reputed library,  and it uses a lot of RAM to run it's machine learning model they say(Many times more than VScode). So at last it equals to using vscode. 

I use Sublime text and I know how powerful it is and so if you want to use that full power without using much RAM, I suggest installing Anaconda plugin (Not the Anaconda Python package). It offers all the capabilities of a simple IDE.
I've heard many great things about vim as well. I'm on ubuntu but I have no clue on how to use vim and still use nano. :)
I think Visual Studio Intellicode from msft covered this feature from kite.
That's great. I never used pycharm but heard great things about it. Does the free license support other languages outside of Python for web development?
I was using Monokai before trying the Material Theme. I really like Monokai too but I just don't like my comments to be so opaque with the rest of the codes. I'm currently using Material Theme Dark Contrast and I really like it. The comments are more blended in with the background more and just the important codes are clearly visible. Can you adjust the opacity of Monokai comments?
I love it as well. üòÄ
Enable flake8 linting from default python extension and both your points will be highlighted.
What does better comment do?
And can you explain why is it better than pycharm?
I'm sure there has to be at least a few extensions. I don't have any experience with jupyter  notebook so I can't help you much. Sorry
Check nbextensions. I‚Äôm just starting with Jupyter, so far the spellchecker is my favourite. There are also some nice themes. Search Google for tips and tricks, there are some nice ones.
You can use notebooks in vscode
Greetings traveller from the future! Rather than just letting this one hang, the solution that worked for me was found [https://github.com/microsoft/vscode-python/issues/8171](https://github.com/microsoft/vscode-python/issues/8171)

BUT! If you can't be bothered reading the thread: Add "python.dataScience.runStartupCommands" : "%config IPCompleter.use\_jedi = False" (with quotations) to your settings.json file.
There is a 3 hour delay fetching comments.

I will be messaging you in 1 hour on [**2020-06-07 11:53:44 UTC**](http://www.wolframalpha.com/input/?i=2020-06-07%2011:53:44%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/gxycd2/i_love_visual_studio_code_so_much_especially_for/ft8wc59/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fgxycd2%2Fi_love_visual_studio_code_so_much_especially_for%2Fft8wc59%2F%5D%0A%0ARemindMe%21%202020-06-07%2011%3A53%3A44%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20gxycd2)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
I have not tried it yet. I heard great things about pycharm. I probably will try pycharm in the near future.

With that said, if we look at the extensions market (think of it as the app store), I think vscode is quite popular with many more extensions built by developers worldwide vs pycharm. That metric may or may not matter to you and me depends on which day of the week when asked. :)
I just installed the theme (currently using Dracula theme), then I press CTRL+Shift+P and type in *Preferences: Color Theme*, then select Dracula and the syntax highlighting should happen according to the color theme set by Dracula.
[https://i.imgur.com/olACVX1.png](https://i.imgur.com/olACVX1.png)
Thank you for your suggestions and will Edit the post.

Regarding VSCodium, I'm one of those guys that don't mind the tracking and telemetry. I actually fully support tracking and telemetry even if it slows down the system a bit (not likely). It helps the dev(s)/teams to further improve their app and its maintainability. It's a respect and trust that I hope they don't do anything malicious with our data (hopefully).
You can press Ctrl+. Do bring up the quick fix menu :)
[deleted]
Does WSL has support for a desktop manager like Gnome or KDE? If it doesn't then I don't think you can run VS Code w/ WSL.
So if you use WSL I think you need the WSL remote developer plugin. Search to see if you see it, unless it's built in by now. I am using the nightly built so might be on that.

So you would run VSCode and then click start a remote WSL session and then that will drop you into WSL in your Ubuntu home directory and interpreter running there. 

If your Ubuntu works then Python not working is another issue... Maybe Python not installed properly.
Yeah I love their products too but the very last version of Pycharm has a serious problem with randomly freezing  when running the internative python console.
Agreed, although I can understand the issues regarding speed especially on lower specced machines. I never once experienced any error from Pycharm when using our powerful office machines but it's so damn slow to even initialize on my fairly old laptop. 

Does VSCode support remote development though?
> file tree setup with Git commit highlighting 

Gitlens + git graph + the regular VCS sidebar is pretty comprehensive. Gitlens in particular - inline blame, mouse over it for full info on the commit, with links to remotes. File and line history in your sidebar, with navigable commit info.

What's missing?
Sorry to hear that. Works great for me when both enabled. I'm on Ubuntu btw.
I currently haven't tired any yet. For what I need to do, I haven't needed any
True, but my job blocks it. Colab can be accessed from anywhere
[deleted]
[deleted]
(x) doubt



>Visual Studio Code¬†is a free¬†source-code¬†editor made by Microsoft for Windows, Linux and macOS. ... The¬†source code¬†is free and¬†open-source, released under the permissive MIT License.
I'm sorry, what? Lol
u/youvechanged

Username checks out
I am using kite since 6 months and It is not consuming my memory like VS Code. Many Guys prefer Vs code because they have PC's with huge RAM and good processor.

I also used Anaconda Plugin for my sublime text but it wasn't great like Kite. I had to face some unknown errors. It used to highlight some marks in my indentation and I removed it. And it was also not highlighting some codes of my modules. So yeah for me Kite is the best option. Not everyone has same taste. Enjoy your Anaconda Plugin , I will enjoy my kite. May be I would change my opinion later about Kite. But as of now It is fine for me
If you ever get half an hour to spare: Open Vim (or NeoVim or just Vi) and enter `:Tutor` (the capital T is important)  
you will get an interactive mini-tutorial to test a lot of it's functions
I find kite to just be like intellisense, but "more",
Yup its the entire Jetbrains suite
Lemme double check cause I think that's what I have and it doesn't :(
Basically highlighting for comments. Works for other languages too. Like an asterisk next to whatever symbol you‚Äôre using for a comment, it highlights it in a green color.
Its just better, has way more features. For example, VSCode has a good docker management addon and recently got a MongoDB addon as well. It has a more extensive community and last time I checked VSCode is open source.

I am not even sure if PyCharm is even open source lol.
I do not understand sorry
And then some people say Git doesn't need to be on your CV...
No need for any of that whatever that is.

You just use the remote developer plugin ( or built in can't remember).
To be fair to Pycharm, it is doing a **lot** more than vscode when it opens a new project which is why Pycharm's code intelligence / autocomplete is phenomenal and orders of magnitude superior to vscode's intellisense. Pycharm will index the entire project along with dependencies. It even does type inference based on docstrings. It is amazingly flexible at figuring out the type of something in your code and providing you meaningful auto-complete options. That comes at a cost, especially on startup.

Vscode on the other hand does practically none of that, and it shows when comparing the quality of auto-complete suggestions or even its ability to reason about imports, etc.

As for remote development, I'd go as far as to say that VSCode's approach is the gold standard when it comes to remote development. It is simply phenomenal and provides an outstanding UX. Basically, they've architected vscode such that you can connect to a remote server (could be a docker container, or another machine, etc) and it installs a vscode + python server/engine on the backend and files are accessed via SSH but appear as if on your local machine. All the code parsing + intelligence is happening on the server machine and the VSCode client just acts as a userinterface connecting you to the backend vscode server. The experience is outstanding and far superior to Pycharm's super clunky SFTP based approach of uploading files to the remote server as you make local edits.
I think you may have replied to me by accident instead of the parent post? Personally, I have no issues with the Git integration in Vscode. That is one thing it does really well imo and I will sometimes use it only as a Git client to review diffs and merge conflicts. The vscode interface for git stuff is far superior to that of Pycharm. It's just all the other things that Pycharm does so much better than vscode when it comes to Python stuff that makes it impossible to switch to vscode for full-time python dev work for me.
Does Bracket Pair Colorizer also colour code commas to match the set of parenthesis they belong to?
Same but I am looking at getting some progress bars working for larger datasets, when I'm ready.
Ah yeah collab is indeed nice in that regard.
Yes I will tackle git and github. Thanks for your help. :)
My recommendation for learning python starts with git and virtualenv before you even really look at python itself. Actually, my recommendation for _any_ language starts with git. It's the single most important thing any programmer should learn (in terms of tooling, at least).
Just tried the Material theme and icon. Totally blew my mind. Oh man, this can get addicting.
[deleted]
"Free" has two meanings, and a "free software" can be "don't have to pay to use" or "you can do anything with the source code".

> ‚ÄúFree software‚Äù means software that respects users' freedom and community. Roughly, it means that¬†**the users have the freedom to run, copy, distribute, study, change and improve the software**. Thus, ‚Äúfree software‚Äù is a matter of liberty, not price. To understand the concept, you should think of ‚Äúfree‚Äù as in ‚Äúfree speech,‚Äù not as in ‚Äúfree beer‚Äù. We sometimes call it ‚Äúlibre software,‚Äù borrowing the French or Spanish word for ‚Äúfree‚Äù as in freedom, to show we do not mean the software is gratis.

> https://www.gnu.org/philosophy/free-sw.en.html
It's true that Anaconda is not as powerful as Kite and it's not meant to be like that. But as of the Kite using more RAM that's just me and many from the community, the company has been having issues but hey you like it you use, no worries. I just wanted to share my opinion :).
Cool, will try.
Thanks for your recommendation. I'll give it a try and compare.
Very nice.
Looks for me like https://i.imgur.com/qDnVpj9.jpg
Neat
Pycharm and all jetbrains products are open source.infact,android studio is built upon source code of jetbrains intellij idea
also,here is the code :  [https://github.com/JetBrains/intellij-community/tree/master/python](https://github.com/JetBrains/intellij-community/tree/master/python)
you can have all of these in pycharm with plugins. how does VSCode autocomplete  compare to Pycharm?
Sorry for not being clear. You would click on extension tab and search for the name of the extension you want to install.

These extensions will help you during coding because it will help bring out the contrast/highlight, fix errors, documentation, etc.
[deleted]
Oh I see and you are right per the link below as vscode would run native on Windows 10 instead of on linux:

[https://code.visualstudio.com/docs/remote/wsl](https://code.visualstudio.com/docs/remote/wsl)

I was thinking vscode need the support of a desktop manager for GUI interaction inside Ubuntu like how I'm using it on Ubuntu natively but won't be able to use Vscode if I install Ubuntu without a desktop manager similar to a headless server with no GUI.
Especially with type annotations, it's so useful. I also love the different color for folders/files with uncommitted changes. 

I didn't know that Pycharm implemented its remote dev differently than that of basically just showing you the results from the server (SSH), it just seemed natural to approach it like that. Now that you've mentioned it, Pycharm's settings repository sync seems to be similar to their upload file scheme. I can imagine that the glorified version control approach is indeed clunky. I still want to try it, sadly it's for the professional version.
The only reason I use VSCODE is to be able to other files. I use a slow laptop, and not having to install two applications to code is great. If you code in different languages, VS code is one of the best.
As far as I can tell, it's not.
The Odin Project has an excellent tutorial on getting set up with Git
What's a good resource to learn about git?
Perfect! Is always good to remind that OpenSource =/= FreeSoftware.
Damn, thanks for the enlightenment!
VSCodium tho
Oh sorry that's not what I meant, my problem is that there: https://imgur.com/lNimpoj  I do not get an error even though c isnt used in the function. Also, the line a += 1 is useless because a isnt used afterwards. That's the 2 things I'd like to have flagged.
Hey dude, you are free to try it out yourself, I was a long time PyCharm user and VSCode just met my needs better. IntelliJ makes some great software, but at the moment I don't have a need for their software.  If you are haappy using PyCharm and related IntelliJ projects than stick with it.

For example, just because I started using VSCode doesn't mean I stopped using Emacs, there are some functions that are implemented that cannot be easily cloned by other IDEs. For example, Emacs still has super good org mode support that VSCode does not have.

Same goes for VIM, there are certain things that VIM can do more comfortably than Emacs and vice versa.

At the end of the day, all of these are just tools. I would start using Eclipse again, if they got their shit together as well. Heck, eclipse was my first python ide :)

Heck, Sublime Text is also a must install for me because it also has some things that other editors can't do super well. Notepad++ is also amazing as well.
Thank you!
I didn't learn it at school buy I was coding for my post grad thesis and just used the shit out of gitlab totally by myself. It was very valuable, got a job now and immediately you get dropped into a massive code base where your commits and PRs is everything, it is your tools if you were a handyman. Coding would be the knowledge. But your tool really is git. And now some projects are on gitlab and some bitbucket and some GitHub so enough to always learn.

Still not really confident with rebase and more advanced stuff actually...
Yea. It's cool. VSCode runs in Windows and then installs a remote session of vs in WSL or Docker and you connect to there. On one click.
Yeah, Pycharm is architected for all the indexing, etc. occurring on the client machine, not the remote, so they need to SFTP and copy over **all** the files for your project to your local disk so they can index everything and so everything behaves as it would for a local project. When you make changes, it uploads them to the remote via SFTP. I believe it does still let you connect/run on the remote venv/python install but it is generally a lot more clunky because the remote location for your project is usually in some weird temp/pycharm dir. Apparently they are working on rearchitecting so they can have a similar UX as Vscode, but this is a huge effort as they have to fundamentally change the architecture of their product. But they do recognize that they need a better solution for remote development as vscode is currently eating their lunch in that space, and it is an ever more important space with the rise of container-based development.
Thank you, will give it a try.
The Odin Project
What are you talking about, its code is open source using MIT license. It is fitting both meanings of "free"

Only if you download binary directly from the MS site it is different, but basically every linux distro compiles it itself. Its chromium/chrome model.

This is the result when useless redditors like /u/StealthNinjaKitteh just link to wall of text that is  first google results anyway..  like why even bother commenting.
Very nice.

>it is an ever more important space with the rise of container-based development.

Well put. It's crucial even for simple work from home arrangements. Thanks for the insight.
[deleted]
There's no need to be harsh. Let's just focus on the technical discussion.

[VSCode is, indeed, licensed under MIT, which is free as in speech.](https://github.com/microsoft/vscode/blob/master/LICENSE.txt)

But Visual Studio license is Microsoft Software License Terms, which says:

> 5. SCOPE OF LICENSE. This license applies to the Visual Studio Code product. Source code for Visual Studio Code is available at https://github.com/Microsoft/vscode under the MIT license agreement. The software is licensed, not sold. This agreement only gives you some rights to use the software. Microsoft reserves all other rights. Unless applicable law gives you more rights despite this limitation, you may use the software only as expressly permitted in this agreement. In doing so, you must comply with any technical limitations in the software that only allow you to use it in certain ways. You may not
    * reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software except and solely to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;
    * remove, minimize, block or modify any notices of Microsoft or its suppliers in the software;
    * use the software in any way that is against the law;
    * share, publish, rent or lease the software, or provide the software as a stand-alone offering for others to use.
> 
>    link: https://code.visualstudio.com/License/

Publishing a bin without it's source under a free license isn't Free FreeSoftware.

I understand that it's a very grey area, so to be clear: [gnu.org has an article about the difference between OpenSource and FreeSoftware](https://www.gnu.org/philosophy/open-source-misses-the-point.en.html). It explicitly exemplify:

> Second, when a program's source code carries a weak license, one without copyleft, its executables can carry additional nonfree conditions. Microsoft does this with Visual Studio, for example.
    If these executables fully correspond to the released sources, they qualify as open source but not as free software. However, in that case users can compile the source code to make and distribute free executables.

I hope this clarifies everything.
Which stroke me as strange and useless and actually a thing that causes still issues and uncertainty in the discussion here

* You read it? You could simple state facts in single sentence and save all them people some time...
* You did not read it? So you what? Just link randomly first results when googling? To several people?
Very inspiring post!

 Is there anything that would save you more time and hardwork had you known that something earlier?
Out of curiosity, do you happen to have a college degree as well?
Any advice on OOP? I've found that I hit similar burnouts/tutorial hell each time I get back to it
I hit those walls when I first started too. Don‚Äôt let it discourage you. Programming is really hard and one day everything will just make sense... until you hit the next wall üòÇ
I love reading success stories like this one.Good job man you earned it!
[removed]
I'm in the position now where I'm not sure if my portfolio is impressive enough or not for a junior position... I *feel* like I've made some pretty cool projects but I couldn't possibly know what the people reviewing it think about it. Especially when 99% of them never get back to me. So clearly I'm doing something wrong.
What ERP platform are you working on?  I just started my first dev job this week developing on an ERP with Python and reading this has really helped me after a week full of frustrations and self-doubt.
Great post and well done! I feel like I'm on a vaguely similar path. One thing I've noticed is that I will often get stuck or side tracked on one sub task in a project and spend way more time on it than necessary (I recently spent like a day looking into the difference between SSL and TLS) there's definitely the argument that this is all useful knowledge but are there any tips you or anyone else here has about staying vaguely efficient when encountering blockers/new concepts?
[deleted]
Honestly, this has been my favorite post to read here thus far. I'm just so happy to hear stories of passion and struggle to make it like this and the wonderful tips of just code and don't get stuck in tutorial hell. This is the way. I don't know you, but I'm proud of you and I love this sub and community for this. Thank you.
Props to you my guy I‚Äôm in my (yikes) mid 20s now and keep thinking how far along I‚Äôd be if I stuck with it when I first started about a year and a half ago. But COVID hit and school and work and stress killed my motivation. But on the grind and can‚Äôt wait to see what‚Äôs in store the next year
Congratulations to you, you really are patient, May god give you more success...
Thanks for writing! Gods speed!
Great post. I wish I could see this more often. Have fun in your new adventure!
Thank you for enlightening most of us. :)
Thanks for this, and congratulations. I hope I can find a job soon too. I'm preparing my portfolio, so I can show all that I've done and know.
Can you please be my mentor? üòÖ
I know it is too much to ask but just
How do you figure out what project you want to start your struggling to create an idea?
You‚Äôre ‚Äúfalling into tutorial hell‚Äù is why Computer Science programs exist. They give you a project and you have to complete it without cheating. It forces you to apply knowledge you gain from reading etc.
Amazing and very detailed post!!

But I have a few questions:  
1. What is SAP? I did a quick google search but wasn't able to understand much.  
2. Does your job focus on Python or Javascript? If so, did the other language help you in some areas?

(and btw, feel free to skip over some of the questions if you are not comfortable answering...)
Very inspiring. Hand off!
Claps!!!!
Hey man, kudos and thanks for sharing your experience! Given that you've been working for a while in another position, didn't you get a huge salary gap when switching to a junior dev position ? Or dif you keep the same salary level ?
[deleted]
A very Motivating Post!

I would be really grateful if you could answer me..
I am currently a High School Student and learned the basics of Python and have kept making projects alongside. I have become familiar with OOP and nowadays learning about Algorithms and Data Structures and looking to understand Github.

So can you kindly guide me by telling me what I should be learning now and afterwards (sort of a mini path for me to continue onwards)?

Would be really grateful!
Hi There,  


Beautiful post.

&#x200B;

I am a 24/M and I just started learning Python about a month back as an introductory course through my university.

I'm learning the basics, but I literally have no programming knowledge apart from what I have just started learning.  
And I find Python so damn hard, especially the looping because I just can't figure out tutorial problems till i see a solution on the web or through the university's proprietary discussion board. Its like my brain is just struggling to come up with solutions to these tutorial problems.

But when I do see other students post solutions to the problems, they make it seem so simple, and I'm always left scratching my head as to why I couldn't get it in the first place.

Well I guess I just need to practice more and your post has inpired me to not give up.

Thank You.
Very inspiring !! Thank you for sharing your story
Really nice but how much you're making aonth with this job?
I've had this tab open for months and am only just now getting around to reading it lol. But I'm glad I did.

As a self-taught programmer myself, this part particularly resonated with me:

> I'm now just over 6 weeks in role, and I feel absolutely in over my head. Every day I hit wall after wall of problems I have no idea how to solve, and feel like I'm constantly fighting our framework of choice. But I love it. I'm finally doing it every day, and someone is actually paying me to do so. I can hardly believe it. 

Your story reads just like mine, with only a few differences:

- I'm a machine learning engineer, not a software developer.

- I've been in the role for about 10 months now, not 6 weeks.

- It took me about 1.5-2 years, not 7, to go from absolutely nothing to where I am now.

Like you, all the skills I use at work (coding, math, stats, analysis) are 100% self-taught - I never took a relevant class in school, never studied comp sci, nothing like that - and as a result my job is just a constant firehose of things that are completely beyond me. But that is the nature of the work and the path we have chosen, so despite the endless challenges, I too love it and am thankful every day for where I am.

Very happy we've both found our passion and that we both got there by good old-fashioned hard work. Turns out dreams really do come true :) Cheers!
I‚Äôm late to this after seeing you comment on another post but damn this is a good read!
[deleted]
What advice are you looking for? Oop is an entire paradigm, with many things to learn. If you're looking to truely understand Oop, in my humble opinion I would try these steps:

0. Google any and all of the words you don't know that I'm about to say.

1. Learn the basics of Java. Java doesn't have to be the language, , but if you're serious about Oop it can help because it's strongly attached to that paradigm

2. Start learning design techniques and patterns. (Techniques first) things like composition, inherentence, and then prehaps polymorphism


3. Start building MVC structure apps (model, view, controller) this is really the building blocks to basic project layout and understanding how to create something useful.

4. Find an API framework like spring boot (java), django (python), express (javascript) and start learning it. Basically an API is the MC (model, controller) part of MVC, and then you just use the web to create the V (view)
I‚Äôm stuck here too and I‚Äôd appreciate any help as well
[deleted]
There will always be the next wall. Maybe in terms of algorithms, maybe math. Maybe just the crappy documentation. Maybe unexpected behaviour. Maybe different hardware implementations for handling floats. You never know until you know.
[deleted]
[deleted]
[deleted]
I feel like it is part of the journey, achieving goals take time. Just make sure that the concepts you learn benefit your goal(s) so that you won't go to much off track.  However, one thing you will notice is that your knowledge base will increase which will make it easier for you to learn and understand new concepts.
[deleted]
Be gentle with yourself. Programming is exhausting. You learn every day.
[deleted]
[deleted]
[deleted]
I'm glad you enjoyed it :)
Soo basically you're recommending a more practical approach rather than theoretical. I like that! I've noticed tutorials only burn me out and get me depressed at my inability to understand them. Saying that is really helpful!

Another question. What made your journey much much easier/efficient?
That‚Äôs basically what I‚Äôve done throughout my childhood however my skills were lacking when I was younger and I lacked focus, now I‚Äôve been focussing a lot on web development and doing projects with what I learn. I‚Äôm hoping by the time I graduate university(starting this fall), that I will have learned enough and developed enough for a good job worthy portfolio and then it‚Äôs just going through the process of learning to solve code interview problems and land a job as a junior dev(preferably in frontend web dev)
I am in the same boat and struggling to understand some of those things. How would you explain for someone who doesn't have any coding experience, maybe an analogy, etc?

Congrats on everything, keep growing, making, learning and inspiring.
Thanks. Yeah I'm not new to this by any means so I'm well past the beating myself up about it phase. I'm just at the point where I can't figure out what it is I'm doing wrong and I can't do alot about it either. I got my bachelors in comp sci two years ago and have been working a shitty, soul-sucking, dead-end job ever since. I think my biggest issue is where I live and I had *hoped* if there ever was a silver lining to COVID that remote work would have exploded but even most of those jobs require more experience than I have, which is none, or for you to live near enough to go for in-person meetings every now and then, which I don't.

So I really don't know what to do... But it's mostly my fault. I've spent too much time fretting about my portfolio and not enough time applying. I haven't even sent out an application in well over a month. I guess I just got burned out. But thanks for the encouragement. I love to see other's success stories and hope I get to post one soon.
I‚Äôm doing Odoo too!  Nice.  I‚Äôm coming from Java so I don‚Äôt have any previous experience with Django or Flask.  Between the two, which do you think would help me understand Odoo better?  I‚Äôve got an Odoo book on the way from Amazon but I‚Äôd love your insight.
Yeah I've got notes scrambled everywhere haha I should definitely consolidate them a bit better. Thanks!
For sure. I think it probably just boils down to time management. Easy to say, hard to do!
When did we ask for your cringe story
I see, thanks for the feedback. I work in finance in a golden handcuffs position and i'm fearful about making the transition because of this exact reason.  
I know Python, VBA and they're helping me daily in my position automating tasks.  
I'm now trying to get really proficient in WebDev because i really like how creative it is and how it can be combined with my Python background (using it as backend). I know this might not get me a better salary than the one i have now but at least it'll help me make prettier solutions (cute web apps instead of command line scripts or Excel ugly dashboards), and we don't know what the future hides...  
Anyways, thanks again dude. And big kudos for the transition.
Thank You for the kind words.

Won't give up and will keep at it with the scripts!!
> I think it's one of a few out there that care about what you're able to do rather than where you got your education.

Exactly, this is the crux of at all. The fact that you can always prove what you‚Äôre capable of (and can‚Äôt fake what you‚Äôre incapable of) decreases the advantage of having the right degree, or more to the point, decreases the disadvantage of the wrong degree. It removes the absolute requirement to have made the correct decisions in your 20‚Äôs in order to succeed later in life. In a line, it means neither your college major nor your first job necessarily define your future.

As long as you pick up the skills - which can (theoretically at least) be done at any stage of life - you can follow whichever path you want. It‚Äôs very democratizing and gives agency back to the worker.

Anyway, we‚Äôll said, hear hear!
[deleted]
[deleted]
That actually makes a ton of sense. So, if I wanted to store information about the devices I manage I could have class 'device' that has properties such as below, right? 


Type = server or network

OS = IOS, Linux, windows etc.


IP = x.x.x.x


How would I declare it in say python?


Server1 = device()


Server1.IP = x.x.x.x

Sercer1.OS = "Windows Server 2019"


Print(server1.IP)


Correct?

Edit: also was hoping to understand the _INIT_ possibly better in layman terms
Thanks!  I‚Äôm gonna get started on some Django this weekend then :-)
Congratulations!

It‚Äôs easy and great writing a script here and there to automate some irksome or onerous task. It‚Äôs much, much more difficult to create an ecosystem of scripts that reuse functions and integrate together smoothly. It‚Äôs extremely difficult for a single person to develop an entire system. Be conscious of what you are trying to create. 

Always think about how to reuse that quick little script that you wrote. 

Doc strings are your friends. 

When creating a report, always print the name of the generating script with a date and time stamp in a banner so you immediately know how to get the report next month/quarter.

Print each function and put it in a three ring binder so it‚Äôs easy to flip through and refresh yourself what the expected input and output are. 

If you are not using Git or some other version control system, you are building your own software version of the Titanic.  Been there, done that.. 

Good luck!
I did this EXACT thing 2 years ago. I‚Äôve now created more than 50 standalone internal applications my my company. If you have any questions feel free to reach out. Also have an accounting degree and started as an accountant.
Just found out there is an in-company job offering for python. Have been wondering if I should apply whole morning, but your post might as well nudge me over the line and give it a shot.
That‚Äôs how it goes! Once you start actually taking action, things happen (and I mean REAL action ‚Äî going through the motions with an online course does not necessarily count)

And it happens faster than you expect, sometimes! But also slower at others. And then much faster again. And then slower. And so on.

It‚Äôs all very irregular/erratic, and it can be disheartening, but if you *continually* (day after day) choose to learn more you‚Äôll probably wind up in a good place
Congrats! So were you self taught after being in accounting?
Living the dream! Get ready to start the real learning!
Congratulations, how long have you been studying/doing python? I am just starting out.
I would love some advice as I'm also in the financial field. My work heavily uses our ERP, PDF and Excel, I have been the only employee using Python (on excel) and SQL actively, but i am unable to use Python on the ERP/PDF. Is there something I should learn or look into to actually automate my work just so that I can look for a more Python/Finance job?
Congrats Python-boi! :)
What a fantastic thing to read first thing in the morning. Huge congratulations, you earned this!
Congratulations, I hope you enjoy it!
congrats
Fine work! You put in the effort and now you get the reward. Just remember to pay it back to the community now that you can answer the questions.
Living the dream
I'm glad  for you ... keep rocking
Congratulations!
I think this is very encouraging to those of us trying to transition more into using tools such as Python.  I have worked as a junior accountant and hold a management analyst role at the present time but in my current role I don‚Äôt use Python, R or such items.  Majority is excel and a very small power bi bit ( mostly for my own use) thanks for reminding me to work with Python on my own and create something tangible for when an opportunity comes along.
As an accountant who wants to code, this gives me hope!
Nice !!, can you tell us what kind of processes did you automate in the  accountant area, I would like to have some ideas for my account area . Congrats in your New job
Congrats! I‚Äôve been an in-house accountant for about a decade now. Majority of my work consists  of manipulating excel for consolidations. 

Started ATBS a few weeks ago hoping to automate some of my work.
Congratulations, especially on finding someone who appreciates the work you do!
Congratulations OP!

Could you elaborate a bit more on what your Python Scripts actually do in your company?

I love the idea of automation on my workplace but I can‚Äòt wrap my hand around that full concept of automation yet. 

Thanks in advance!
[deleted]
[deleted]
Congratulations! I started out my dev career in a similar way. I started automating boring/tedious tasks because I'm efficiently lazy and long story short got a dev gig. To echo what some other people have mentioned, you're going to get to a point where you have a crap ton of little scripts that are hard to maintain (speaking from experience). My advice is to organize your code and understand OOP, abstraction is going to help a lot. If you write code to be generic instead of one off you will reduce a lot of headaches down the road. 

Also familiarize yourself with an architecture pattern like test driven design or domain driven design when you feel comfortable. I wish I had from the start.
First of all congrats! I always love to see someone make a career change without having to go back to school like I did. My question is what kind of work do you see yourself using Python for going forward?

I'm going to be starting in an analytics role at a bank next summer, however I was hired more for my experience with finance. I'm just wondering where some of the value adding opportunities are outside of automation? I've gotten to a point where I would say I am Python literate, and now I'm kind of wondering what the next step in my learning process should be.
What did you use to learn Python? I am trying to pick up SQL or Python and don't know where to start
Congratulations! Should‚Äôve be proud of your achievements
Amazing! This inspires me even more to continue on my python learning path
I remember when I got my first IT job moving from accounting work also.  It was amazing feeling and it sucks to have to keep doing what you don't want to do when you so clearly know what you do want to do.  

Congrats and welcome to the journey.
Congratulations! Just curious: what are your algorithmic/code-centric approaches to setting up invoices/bills/vendors? I too was in finance/accounting for 3 years where I deployed python scripts. I eventually hit a ceiling where I was like, "damn, I'm gonna need AI feature extraction to meaningfully automate adding these bills to my system." Would love to hear your strategy to entering invoices "into the system"!
Congratulations!
Congratulations üéâ I'm glad your hard work paid off
Congratulations dude! And also, I was the 69th upvote!!!
I gotta say, it always starts with automating the boring stuff
What did you do to get good at python?
Hello, I am in a similar position I do taxes and despise them. My interest in accounting is on the managerial side and decision making. I have already taken multiple courses but am lacking anything to apply it to. As I do taxes each client is different and I have asked about trying to automate some of our bookkeeping client's returns but have never been given an answer. Do you have any suggestions short of getting a new job?
HAH I love that you suggested some modern purely-digital best practices and THEN also suggested he print everything and put it in a three ring binder :p

(I am not being sarcastic, it‚Äôs fun! And I know you may very well be right, maybe that IS better for learning)
Are there any good git tutorials or books that walk you through its usage for coding?
[deleted]
This is great advice, thank you!
Will definitely be reaching out, thank you.
What have you found to be most impactful for accounting/finance in your experience? I have streamlined much of the AP process by encouraging all vendors to send emails with .pdf files that I parse and validate before feeding the data to our accounting system to pay. I work for the controlling team and this was the first major area I was able to find crossover in day to day accounting and python/programming.
Hi this is something I am interested in doing as I absolutely hate doing taxes. Do you have any advice? My interest in accounting is mainly on the managerial side and more so analyses that can be used to make business decisions. I have been learning python but with no applications to apply it to I have not had much practice
Definitely apply. What‚Äôs the harm?
Go for it, you're already in the building (figuratively speaking, thanks to COVID)! Find out which manager has the opening and talk to them directly. You'll know exactly what they want and if you can easily slide into the role given your current skill.
Just watched a full online course
Can‚Äôt wait
I started about 7 months ago. Started with a ‚Äúpython for finance‚Äù course, but figured out i just like the coding and not the finance lol. So i switched to this course ( https://www.udemy.com/course/python-the-complete-python-developer-course/ ) Had some life stuff get in the way including moving twice as well. So It can probably be done quicker
What ERP are you trying to integrate with?
What is the goal for the PDFs? ReportLab or PyPDF2 could be things to look into depending on what you need to do.
Lol‚Äôd at this. Thank you
I‚Äôm looking forward to helping everyone. This community is amazing I‚Äôm happy to be a part of it
I literally just started looking at my day and thought ‚Äúwhat is repetitive and binary?‚Äù. Not rocket science, but finding where to apply It is half the battle. Good luck üòÅ
It‚Äôs incredibly helpful. I think companies that will benefit the most and/or value a python developer the most are companies transitioning from startup to small/medium. They need to scale and they‚Äôre agile so they will actually use the programs you write if they help. Good luck üëç
The company is in the startup -> small/medium company transition, so they have some scaling issues. We‚Äôre in the process of switching vendors over to a monthly consolidated CSV to pay their invoices monthly. Once they provide the CSV it‚Äôs cake to use python (specifically pandas and numpy) to reformat and upload them to our software. After I build a program to handle all of our CSVs, the next step is handling the PDFs. Just need to learn the modules first.
Look up PythonicAccountant channel on YouTube. He‚Äôs got a few accounting related examples to show.
ATBS?
It‚Äôs a great feeling
Thanks! My scripts automate a portion of the AP process. I asked vendors that were sending 25 or more invoices a month to provide a CSV monthly of all the invoices (and line items on those invoices). From there python can do what It does best, ETL. I just wrote scripts to reformat and output the CSV and upload It into our software. A job that takes about an hour, done in 3 seconds.
I know a little data analytics but very far from pro. I have friends doing data analytics boot camps and they just rip pandas and numpy like it‚Äôs nothing lol
Know your worth, get out of there if you haven‚Äôt already.
Thank you! I realize this is a concern. Not to pay myself on the back but I‚Äôve already built the code to be pretty robust. The one area with frequently changing input (when new locations open up, a new GL code is created), is pulled from a spreadsheet that our business development team updates as locations open. Also all my scripts are put into one big code and selected via a while loop and prompt the user with pyautogui. Let me know what you think of this going forward or if you have any recommendations.
Well if you‚Äôre going to be analyzing data, python is perfect for that. Start small, are you analyzing the same data set monthly? Use python, see if you can analyze quicker or draw patterns from past data sets. Start small and build, that‚Äôs what I did. 

Also, I don‚Äôt want to come off like ‚Äúthe guy who has It all figured out‚Äù. I learned python and then just started asking myself where I can use It at work, one project I started failed It was last my skill level. So I backed up and focused on automating out CSV uploads. I didn‚Äôt do anything crazy, just applied the lessons. Good luck üëç
I learned python from this course: https://www.udemy.com/course/python-the-complete-python-developer-course/

SQL, as I understand It, is easy to learn and can be learned quicker. I would go python first, then SQL. But I‚Äôm actually starting SQL soon üòÅ
I‚Äôve hated my career my whole life, i finally don‚Äôt. I‚Äôm ecstatic üòÅ
I had nights when I didn‚Äôt wanna do It, even went a week without coding. Some sections are just a bit boring. Keep pushing, it‚Äôs all worth It. No better feeling than finishing a project and seeing It get used.
It‚Äôs a euphoric feeling to finally be out of that. Thank you üòä
Thank you. Someone asked something similar, scroll up you should find It. If It doesn‚Äôt answer your question DM me I‚Äôd be happy to help üòÅ
Nice
‚ÄúSo it‚Äôs just automating the boring stuff?‚Äù

‚ÄúAlways has been‚Äù
I took this course, I highly highly recommend It:

https://www.udemy.com/course/python-the-complete-python-developer-course/

I also spent a good amount of time reading about the pandas and numpy modules.
Don‚Äôt ask to automate, just do It. It proves the concept before you show them. If they don‚Äôt react positively, leave. Look for a small to medium company they‚Äôre agile and need scaling solutions.
Yeah, my life is full of such irony. I can write code electronically but for some obscure reason I need to print it in order to understand it or debug it unless I‚Äôm using ‚Äúpoke and hope‚Äù debugging
There are lots of good videos of the mechanics of git on YouTube. 

I‚Äôve not found a good video on grokking git, if you know what I mean. 

I‚Äôve found that grokking git oonly comes with experience and experience comes from screwing something up and then figuring out how to use git to save your ass.
[this one is pretty good ](https://youtu.be/SWYqp7iY_Tc)
I recall really liking Atlassian's documentation. I haven't read it in a while, so it may have changed (or I may have been wrong), but it is geared at actually using git to develop software rather than knowing everything about git.

In particular I liked the sections on branching and workflows when I read them.

https://www.atlassian.com/git
I just found this the other day, may be useful:

 https://git-scm.com/book/en/v2

I understand the basics and the principles, but it is the practise I lack - when to commit when working on a solo project, how the processes work within a team etc.
Yeah, this... LOL!
That‚Äôs crazy. What tools did you use to learn while working?
Yeah I AP was one I did as well, regulatory reporting was a big one for my industry, we have entire departments that all year long would work to create these regulatory reports that I just made them apps to generate. I automated accruals that were able to consider a lot more info than the accountants could, although of course still gets looked over. We have a pretty complex revenue model which would be reconciled by a team of accountants every month, I automated that. Tons of IO between our systems. I created a small database explorer that allows departments to directly access tables in the database and build their own custom reports and queries with all the logic they want (this wouldn‚Äôt be necessary if we had a proper i information system). I basically turned the accounting department into a small data entry team and compressed all of the info so that it can be looked over by a quarter of the staff. Budgets, all automated. I created a shit ton of reports (again prolly wouldn‚Äôt be necessary with a proper IS). 

Probably forgetting stuff but that‚Äôs most of the big stuff. I‚Äôve now pivoted a bit and moved to creating larger applications. But I‚Äôm also trying to get away from accounting, I have a SAAS company that has been growing quite a bit and after hiring engineers I‚Äôve come to realize that I don‚Äôt really want to be a SE, but rather just want a good enough understanding of software to properly run my company. And now I also have a skill most business owners dont, the accounting.

Hope this helps, feel free to ask other stuff

Probably more I‚Äôm forgetting, aut
How do you beat Read PDF files using Python? I have something similar I'd like to do.
What type of stuff are you trying to get into? More data science stuff? Automation? User applications? There‚Äôs kind of a lot so I can probably be more specific with some ideas for projects for you if you can tell me which direction.

I will say that‚Äôs it is much harder without real projects. I‚Äôve tried to make up fake projects for a portfolio and flopped hard. My hella out dated office gives me so many problems to work on.
I did apply. The stressful thing is that i dont know if my home project skills are enough for a dedicated dev team on a company level. But yeah, not a single harm in trying. Its in the same company too so im not losing like if I was leaving and applying somewhere else.
What course?
which course did you use?
Thank you, I am using this one at the moment ( [https://www.udemy.com/course/complete-python-developer-zero-to-mastery/](https://www.udemy.com/course/complete-python-developer-zero-to-mastery/) ) and I like it  so far.
We use IBM's S2K and Microsoft Dynamics NAV. Most of my work can easily be done with python if I can just grab data and transfer to excel
I need to grab data. Some PDFs have the same data format like table but some are slightly more complicated. But overall I would say they are tables.
I just found this YouTube channel on my own and have been scrolling through messaging people that are accountants about this channel lmao. It‚Äôs great!
[deleted]
You asked the vendors to change their behavior and they did??? That is legendary. At my last job I got a stern warning not to utter a WORD to the vendors. And many vendors didn't have accounting personnel so I especially was forbidden from interfacing with any "creative" vendors (producers, hair/makeup artists, stylists, etc.). I would probably have gotten fired if I asked them to change a scrap of their administrative processes, but then again there are some serious culture problems at the record labels in LA where I worked lol.
Going to look at udemy courses for sql as well?
Thats awesome mate. Ive been there! I hated my DEGREE üìú but this year found my passion too, all the best!
>‚Äúpoke and hope‚Äù
I'm dyslexic and had a similar issue with printing.  A second monitor with a larger font or sometimes copying into Word help me.  

My debugging technique is little and often, unless someone else's work, then it involves mass deleting (well commenting) to find the issue.
Same
Udemy has a 3hour course that was free with a code a few times. 3 hours is pretty much all you need for git
I think you asked the wrong guy
I similarly facilitated a means for other departments, mainly Sales, could access some of the core application databases for my business. Microsoft Power BI worked well enough for a business already on Office 365 with defensible cost. Scheduled database replication to cloud storage with wide accessibility through Microsoft services.

I believe we may agree that high-level, industry specific finance is something that is part of effective management among strong departments. Soo...

Only other request is for links to any helpful software, open-source or not, that has aided your work. Whatever you think has strong use outside of your specific implementation. 

Good luck with your endevours and appreciate your openness.
I recommend a library called invoice2data, infomation can be found on GitHub. It builds on other python .pdf libraries that I initially found and tried to custom create a solution from. The readme on GitHub references those if you do not find the design of invoice2data helpful for your use. But, finding invoice2data certainly me helped create something much faster and reliable without much work beyond learning the core features of the library.

The key is to get vendor buy-in, at least in my business. For some companies it can be a struggle to get them to send .pdf files even though most accounting systems they use can easily generate them. I have had more than one discussion as well about sending a .pdf with text and not just a .pdf containing an image that is a scan of a physical printed copy of the invoice. In theory, invoice2data has Optical Character Recognition (OCR) capabilities, but I wanted to avoid some of the flaws of that technology in favor of working with extracted text directly from the file.

Edit:

To add, I think there a better methods of sharing data between businesses than individual invoice transfer through email using .pdf files. However, as I said before, the ease of generating individual documents and the familiarity of other companies with this process made this a strong option. Trying to convince a vendor to send aggregated data or different file formats seemed more difficult than asking them to slightly update a process they likely already had in place.
Hmm if I had to put my finger on it I would say a mix of automating reports and data science. It's hard because I don't have much direction in life. I would enjoy being able to say automate budgeting. Analyzing fin statements or potential acquisitions. I'd say a lot of this would fall into a financial analyst at a small to midsize company. 

&#x200B;

At my current job I have been pushing to get approval to try and automate the tax return process for some of our bookkeeping clients that tend to be simple. I have an idea in my head on how to do it etc. but would need to work it out exactly. For example tying assets out etc. Because its all a bunch of rules that can be coded and AJEs can be created automatically. However, I have yet to get approval and the potential is about the only thing keeping me working right now
It's up to them to determine if your skills are enough, try not to worry about that. And if they want to have an interview with you, let alone hire you, be confident that you meet (at least) the minimum requirements!
Remember, you have something that external candidates don‚Äôt have. Domain as well as institutional knowledge. You already know how the company works, likely understand the meaning behind what you‚Äôre doing, and already fit in the culture.
Even "professional" jobs have tiers... At my company, there's basically four tiers for a role...

Level 1, It's basically assumed you can follow directions, and not drool on yourself...

Level 4, you're basically expected to be able to grasp/build/maintain applications that affect the entire company, and lead a team of developers in tiers 1-3...
https://www.udemy.com/course/python-the-complete-python-developer-course/
remindme! 4 days
I see all the comments asking for the course I will send by the end of the day.
Here It is: https://www.udemy.com/course/python-the-complete-python-developer-course/
Remindme! 8 hours ‚ÄúCourse used‚Äù
Remindme! 2 days
This is always the challenge. I‚Äôve primarily worked with SAP and used GUI scripting to download csv files.

Have you looked into connecting MS Dynamics pages via Excel‚Äôs Power Query OData data source option?
Okay. I think PyPDF2 would be better suited as it‚Äôs more for working with PDFs that already exist. ReportLab is more for creating new PDFs. Both can be installed via pip and have decent documentation.
Ahh yes, I‚Äôve never seen that abbreviation lol. That‚Äôs a great course, but if you really want a solid base of python I recommend this as well: https://www.udemy.com/course/python-the-complete-python-developer-course/
Wow that‚Äôs strange. I work on the east coast it‚Äôs completely different lol. Most software that is used now can easily output a CSV files with customer data for any date range. Usually they know what I‚Äôm talking about and oblige, sometimes I have to explain that there will be little to no mistakes with this process...then they finally come around üòÅ
Most likely yes
Honestly poke and hope (print statements as far as the eye can see) is my favorite method to debug. Just throw a print statement at the end of anything that does work and let's me see the result. Personally don't like using debuggers too much clutter.
Yeah, I‚Äôm not so much neuro-typical myself, including a touch of dyslexia too. I‚Äôve got a 32 inch monitor and I use larger font because I‚Äôm an old fart with worsening eyesight but notice I can do more onscreen now.  I never related the dyslexia problem to font size, so thanks for that illumination.

Cutting and pasting helps me somewhat but what really works is writing stuff out by hand. Once I do that it really stays with me a long time.  All my tech books are filled with hand written questions in the margins where the answer follows in the text. It‚Äôs my modification of the Cornell Method of studying. My peers think I‚Äôm insane when they look at my books but they also think I‚Äôm smart. I‚Äôm not overly smart but I do study intensely.

Thanks for you valuable suggestions. I hope it helps others too!
That‚Äôs crazy. What tools did you use to learn while working?
Absolutely I do agree and that sounds like you provided a lot of value to your company.

Some cool things you might find useful..
-	datatables.net (excel in the browser with JS)
-	eel (similar to electron, but much more light weight, useful for small projects, can string together JS and python very easily)
-	I use pyqt for windows GUI and then JavaScript for everything that requires more functionality than a very simple GUI
-	SQLite can be very helpful for small self contained apps
-	xlwings can be helpful to integrate python with excel although I dislike doing this
-	I‚Äôd recommend creating a standard logging practice for your apps that will benefit you when things go south
-	fast api is really awesome for making quick APIs, generates docs for you to easily test all of your endpoints, saves a ton of time

That‚Äôs all that comes to mind.. if you have any resources I‚Äôd love to hear too, always open to using new tools.
Just now seeing this comment. Very helpful for a project I‚Äôm working on. Thanks!
Hmm so would it be possible for you to attempt to do something lesser but similar on your own time? Like could you reproduce fake data somehow? I feel like that sounds like a really good project. That‚Äôs how I got started, I automated:
-	JE creation to be imported
-	budgets, old budget system was a disaster
-	reconciliations, we did monthly revenue reconciliations, I automated all of the calculations and generated end user reports

Otherwise if that‚Äôs not an option, I would recommend you try to come up with some data analysis thesis, and then prove yourself right or wrong using things like..
-	web scraping
-	doing all of the calculations, spending time making them more efficient
-	creating end user reports and summaries
-	creating a GUI

The stuff you need does snowball quickly, at first I only learned VBA because I was realllly good at excel. So I could basically combine my excel knowledge with programming to produce good work. But now I use python for backend, JavaScript, html, css for frontend.

So basically the GUI is made to run in the browser (I use electron because then I don‚Äôt have to write code that runs on 90 browsers), then when the user enters their settings or whatever, clicks button, it sends request to python server which then does the heavy lifting, then returns back to them end user reports in html/JS/css.

You could also maybe try to heavily rely on excel at first? It makes things like a GUI kinda easy because you can use cells as inputs, and then access the values with VBA. If you want to skip that step, I‚Äôd recommend using something like pysimplegui or if you want to jump right in, use pyqt for the GUI. 

I‚Äôd try to do some work on your own if you can before you push them too hard, because if they wanted a programmer, they could hire a programmer, so you have to prove you‚Äôre kinda able to do both. 

Sorry this was just kinda a rant, I‚Äôm not trying to scare you away, feel free to ask more specific questions
Thanks. I guess I still feel the ever present imposter syndrome. we'll see what happens in the coming weeks. Thanks.
[removed]
Remindme! 8 hours ‚ÄúCourse used‚Äù
Remind me! 4 hours
Well shoot, may as well find out.
I will be messaging you in 8 hours on [**2020-12-02 19:26:30 UTC**](http://www.wolframalpha.com/input/?i=2020-12-02%2019:26:30%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/k51frp/got_my_first_offer_as_a_python_developer/gecxa2h/?context=3)

[**13 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fk51frp%2Fgot_my_first_offer_as_a_python_developer%2Fgecxa2h%2F%5D%0A%0ARemindMe%21%202020-12-02%2019%3A26%3A30%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20k51frp)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Yes, but I'm not really given access to it yet
This helped me lol thank you
I have tried using pypdf2 but it have always returned an empty string
Thanks for the rec! I‚Äôm still taking it slow since the concepts are a little foreign to me. Will definitely look into this.
What debuggers have you used?

I don‚Äôt think I could get anything done without pycharm‚Äôs debugger, it‚Äôs such a smooth experience
Like could you reproduce fake data somehow? I

I have thought about this but the amount of time I would need is insane to create fake multi-month financials for a fictitious client. I was thinking of doing this though and maybe posting a course on UDemy once I get it all figured out.

&#x200B;

>That‚Äôs how I got started, I automated:

Yeah, this basically sounds where my interests currently stand and what I think I can learn to do.

&#x200B;

>try to come up with some data analysis thesis

So projects not necessarily related to accounting?

&#x200B;

I haven't learned VBA as I was hoping to do as much as I can using openpyxl and do my work in python then generate a report in excel that can be printed to a pdf. at least for the budgets

&#x200B;

>because if they wanted a programmer, they could hire a programmer,

I am not sure my firm is even at this stage yet. In addition, it would need to be someone that understands both accounting and programming. But from our strategic plan, it looks like it's where we are going in maybe 5 years. So I am trying to start with low hanging fruit of our bookkeeping clients. If they all have a uniform chart of accounts, they currently do not, much of the process can be automated. Common entries are for non-deductible expenses and tax depreciation. Then all we do is import into a different software to generate the return. assuming our accounts are set up right, they often are not, most of the return is complete and only a few minor changes may be made.

&#x200B;

this process is basically: import trial balance -> if new accounts stop and generate a report. If none-> confirm RE ties to last year ->perform most common AJEs -> import to tax software
Good luck, and keep us posted!
https://www.udemy.com/course/python-the-complete-python-developer-course/
I will be messaging you in 8 hours on [**2020-12-03 03:44:24 UTC**](http://www.wolframalpha.com/input/?i=2020-12-03%2003:44:24%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/k51frp/got_my_first_offer_as_a_python_developer/geemwhp/?context=3)

[**4 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fk51frp%2Fgot_my_first_offer_as_a_python_developer%2Fgeemwhp%2F%5D%0A%0ARemindMe%21%202020-12-03%2003%3A44%3A24%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20k51frp)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
https://www.udemy.com/course/python-the-complete-python-developer-course/
I‚Äôve not used it, but tabula-py could be another library to look at. It looks to be used to convert PDF tables to pandas dataframes or CSV.
Not trying to force anything on you, but this covers the absolute basics. I‚Äôve gone through ATBS briefly and It seems to quick to cover the basics for a beginner. I would really consider that course
Ah yeah, pycharm actually, however I work as a data engineer, so a lot of the code i write is short and sweet. So don't need all the info. However I probably should learn the pycharm debugger because I'll be setting a flask dashboard webapp for some stuff
>	I have thought about this but the amount of time I would need is insane to create fake multi-month financials for a fictitious client. I was thinking of doing this though and maybe posting a course on UDemy once I get it all figured out.

You know public companies financials are.. well public. Why not use theirs as a starting point. 

>	So projects not necessarily related to accounting?

It‚Äôs all so similar. Accounting data, health data, manufacturing data, stock data.. it‚Äôs all quite similar, maybe use as an opportunity to combine some of your other interests? 

>	I haven‚Äôt learned VBA as I was hoping to do as much as I can using openpyxl and do my work in python then generate a report in excel that can be printed to a pdf. at least for the budgets

Yeah fuck vba lol it‚Äôs so bad. But openpyxl is also pretty garbage, you‚Äôll grow to hate excel quickly, there‚Äôs no need for it really once you learn html, css, JS. I use openpyxl often tho. No need for PDF if you learn to use html, css, JS. Html files >>>>> pdf files. One issue you‚Äôll run into if you want to use openpyxl is that it can‚Äôt interact with excel as well as vba. So if excel is always gonna be integral to your processes, vba might be nice.

>	I am not sure my firm is even at this stage yet. In addition, it would need to be someone that understands both accounting and programming. But from our strategic plan, it looks like it‚Äôs where we are going in maybe 5 years. So I am trying to start with low hanging fruit of our bookkeeping clients. If they all have a uniform chart of accounts, they currently do not, much of the process can be automated. Common entries are for non-deductible expenses and tax depreciation. Then all we do is import into a different software to generate the return. assuming our accounts are set up right, they often are not, most of the return is complete and only a few minor changes may be made.

Hell yeah, that sounds like an opportunity to me!
Oo yes you should :) that‚Äôs my daily use case, and it makes web development SO much easier
>You know public companies financials are.. well public. Why not use theirs as a starting point.

the issue is they are summary financials so I cannot do things like analyzing COGS or budgeting out a year with various levels of demand. U of Arkansas has some databases with corporate info I am trying to get access to. 

&#x200B;

>It‚Äôs all so similar. Accounting data, health data, manufacturing data, stock data.. it‚Äôs all quite similar, maybe use as an opportunity to combine some of your other interests?

Other interests would probably be more product-related so like defining a customer for a product evaluating a market fit etc. I looked on Kaggle but had issues getting datasets I guess everyone keeps them locked up

&#x200B;

>But openpyxl is also pretty garbage, you‚Äôll grow to hate excel quickly,

I will keep that in mind.

&#x200B;

And super stupid but screw it kind of question would you have any small projects I could help with as an intern or something? I know it's a long shot but it never hurts to ask. My Python skills are ok at best I have taken an automation course, a data analysis course, and made a few small projects that I am proud of like a weather bot and a complex number guessing game with increasing levels of difficulty
Any tips for a newb or good documentation/tutorials you recommend?
I don‚Äôt really. I wish I had some time for personal projects cuz I‚Äôd definitely be down to try to start something with you, but i not only have my full time job, but also do consulting for startups and own my own SAAS company. We don‚Äôt do anything with python or else I‚Äôd try to find something for you to help with.. 

I‚Äôll keep this in mind tho, maybe we can work on a small project together, I think this would also help me learn more too.. I rarely get to work with accounting people that can code. 

Maybe if you have any ideas for a small project let me know too, I‚Äôd be willing to take on a small project potentially if I didn‚Äôt have to do all the work.. 

!remindme 1 week
The jetbrains official docs are good! But the easiest thing you can do is honestly to just use it.

Make a scratch file with a bunch of random code/functions, set a breakpoint(s), execute it in debug mode, and then learn what each button in the debugger panel does. You can see the name of each by hovering

It looks overwhelming, but it‚Äôs really not that bad. Once you try it out you‚Äôll get the hang of it fast. Probably a couple hours at most
I will be messaging you in 7 days on [**2020-12-30 01:58:52 UTC**](http://www.wolframalpha.com/input/?i=2020-12-30%2001:58:52%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/k51frp/got_my_first_offer_as_a_python_developer/ggr7agu/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fk51frp%2Fgot_my_first_offer_as_a_python_developer%2Fggr7agu%2F%5D%0A%0ARemindMe%21%202020-12-30%2001%3A58%3A52%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20k51frp)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Ok I will try and think of some. My busy season starts in about 4 weeks. I think my first step is I am going to create some mock financial statements to use for analysis and building a dashboard. And thank you!
aren't you the author of automating the boring stuff?
If you'd like to help me out, please consider reading the book and [writing an Amazon review](https://inventwithpython.com/pythongently/).

[Buying the book isn't necessary. The book is free to read online.](https://inventwithpython.com/pythongently/)
[deleted]
Yo /u/AlSweigart on [the introduction page](https://inventwithpython.com/pythongently/introduction/) when you click the link that says "Next - #1 Hello, World!" it takes you to the third exercise instead of the first one.
Imma go perfect my python skills, then come back to this post to award it after I've made me some money

RemindMe! 2 years
I love the simple look of the site.  Easy on the eyes and easy on mobile.  Please don't ever change.
Why are you so kind and non-profit? I‚Äôve enjoyed the physical version of ABSWP and I certainly will support buying the ebook/physical release. Thanks for all the hints and tips! I really enjoy your material
Amazing. Can someone (I‚Äôm counting on comment swarm intelligence) point me to something similar for data analysis? I‚Äôd really like to learn and be good at it but even installing the modules is discouraging and I get so frustrated with the steep learning curves that many resources have once you get part the beginner stuff.
Yaaaaaaazzzzzz!
Thanks Al!
Why does it say black lives matter at the top of the post on mobile?
Heads up: For me the one button leading to the print version in amazon is broken.

Also thank you very much for doing this for us ‚ù§Ô∏è
hit me up if anyone wants to speedrun through the exercises
[deleted]
Thank you, Al!
i just bought a few copies.  they will make nice supplemental resources for some of my students (right next to Automate the Boring Stuff and other No Starch Press titles)
Al, thank you so much for everything you do. I‚Äôm a midlife career changer, and came to programming very late. You have made learning a new skill so accessible and enjoyable. I‚Äôm so grateful!!!
The thumbnail to the this post is so outdated lol
Love your work! Thank you for being you!
Just bought it, thank you so much Al!
Thank you sir!
Thank you. You are a wonderful educator.
Going to buy one as well! You're a life saver! The Leetcode stuff goes a bit too above my head as a Intro to CS 1 student, so something like this is really appreciated :)
This is so cool of you man, you have done so much for the community, so can't wait for another automate book.
Thank you.
This looks perfect for me, just purchased it!
You are amazing sir!
Sempai! You're back! I thought you but a legend!
Thank you!
Nice to see your books again! I was a little confused when you had a cipher hacking book and then renamed it though
Thank you so much for this
Amazing, thank you so much.

&#x200B;

Your books have been a great resource
Thank you for these. You truly one of the best resources for learning python. Much appreciated :]
Absolute chad.
Confused and discouraged is like my constant state. ;)  I will give this a look!
Thanks Al! You are a gentleman and a scholar!
I wanna see them aggressively explained! Yell at me Al!
Thank you, sir! I did some similar ones in class, but since we only have some months left and we are not going to cover everything, I was worried by how I could practice once they're over.
You‚Äôre the best
Ya!
He is :)
[deleted]
Is the paperback on Amazon for $6.99 legit, as well?  I like ebooks, but I feel a paperback might be better for me while learning. If it supports you, I‚Äôll purchase the paperback now.  Thank you for everything you do!
Great work Al! I really enjoyed Automate the Boring Stuff too!
Do you have a non-Amazon way to get the book? Or maybe a way to donate the cost directly to you?
Thank you!!
Thanks! I priced it as a 99 cent ebook mostly so that it would rank up there with the other 99 cent Python ebooks.
at 99cents anyone who finds the content useful should.
Fixed. Thanks for pointing it out!
Can you award two year old posts?

Eh, I'm sure Al will have other posts to award by then.
I will be messaging you in 2 years on [**2024-10-14 02:27:01 UTC**](http://www.wolframalpha.com/input/?i=2024-10-14%2002:27:01%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/y38qqx/new_free_book_from_al_sweigart_python_programming/is8n3hf/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fy38qqx%2Fnew_free_book_from_al_sweigart_python_programming%2Fis8n3hf%2F%5D%0A%0ARemindMe%21%202024-10-14%2002%3A27%3A01%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20y38qqx)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Yeah. The front page of inventwithpython.com is 226 kb. (I should try to make it better though.) I really hate how hardware keeps improving, but we keep adding crap that people don't need and computers are subjectively slower than they were in the 90s.

I just stick with Bootstrap as a lightweight way of making reactive web design. I use Pelican for my static blog generator (I've long since realized I don't need a comment system on my blog posts.)

A couple months ago I made the switch of all my png and jpg images to webp. It's actually a great and well-supported image format, and the file sizes are about 33% or 50% smaller.
can't think of something similar but for data analysis with Python I recommend Udemy.

I started with [this course](https://www.udemy.com/share/101WOg3@vkrf8_k85yfBKC6J7uviuLYLlB7KSCUuj7oySLVsZQ3ySrpceqV9GtmrliImcD36/). Lots of exercises to do in there.

Also what modules are giving you a hard time?
Have you looked at "Python for Data Analysis"?

The latest edition is free to read online:

https://wesmckinney.com/book/
I'd point you in the direction of a really comprehensive and free text book called introduction to statistical learning. It has exercises in r but you can also find them converted to python with some Google searching :)
Have you worked through the courses on [Kaggle](https://www.kaggle.com) yet?
For some reason Reddit picked that as the thumbnail image, even though it appears at the very bottom of the webpage. I don't have a social media image set for the home page, but I'll set it to a programming-related one.
Fixed. Thanks for the heads up.
Not a dumb question at all! I forgot to upload the pdf to the site. It's there now. [Here's the link to the PDF directly.](https://inventwithpython.com/PythonProgrammingExercisesGentlyExplained.pdf)
You can use this program to read Kindle books:

[https://fbreader.org/en](https://fbreader.org/en)

&#x200B;

Or read Kindle books in the Cloud: https://read.amazon.com/kindle-library
That's an image from the footer of the website but for some reason gets selected automatically by Reddit. I should look into how to change that. My web design skills are leftover from the jquery days.
I'm sorry, but this service is only available to my premium account members.
you sir are a hero for a lot of us!
wow! he is a hero for a lot of people.
The online version is completely free, what more do you want?...
Yes. I mainly put the paperback version up there for people who wanted a print book. But my main aim was to make a 99 cent ebook. I need to update the website to have a link to that one.
There's a donate link and a PDF link at https://inventwithpython.com/pythongently/

But really, the best way to help me would be to read the book and write a review.
You are amazing!  Thank you for all that you do for the Python community!  I loved Automate the Boring Stuff!
Np thx for everything you do! :)
I found that Ubuntu runs faster than Windows 10 on my old machines. I used Visual Studio Code for my Python work, Thank you for writing the book, I bought the 99 cent Kindle version and will read and then review it.
The site is pretty nice generally but i would really appreciate a dark mode button since it can be a bit bright I don‚Äôt know how hard it would be to add but it would be very nice
Basically anything  that is more complicated than a simple fit challenges me. I failed a subject in university where we kept having to do pandas and those flower things (forgot the name) and everything and it just drove me nuts. My problem is finding the right Ressource because I can do the really basic stuff but I miss a step all I find now is super complicated stuff. I wish some medium complicated resources that guide a bit more. Usually the ones that look like it cost a shit ton of money
Thank you!
You're welcome!
Thanks and ugh, I just saw that and figured it was there and I was too stupid to see it so I deleted my original question about buying a PDF.
Thanks!
He posts on reddit often :)
Awesome, thanks - buying now! I also noticed your Minecraft book, so I‚Äôll be getting that one soon for my son‚Äôs birthday - he‚Äôs going to flip üòÉ
[deleted]
That's a good idea. I think browsers do have some sort of built-in "prefers dark mode" feature that I can make the pages use.
Yes, Dark mode is a necessity for me nowadays
Flower things? The iris dataset?

To be honest the course I listed above is 30+ hours long and goes into machine learning after a huge deep dive into pandas.

I think you'll find what you're looking for in this course.
Also check "effective pandas" by Matt Harrison. He wrote a book but also has lectures on YT which teaches how to write good pandas code. It might help.
A real legend 'round these parts.
Yes. One thing to note is that the open source ComputerCraft mod hasn't really been maintained for the latest versions of Minecraft. The book is still good, but you'll have to install the CC Tweaked fork of the mod instead. Instructions are on [the book's website](https://turtleappstore.com/book/) along with links to videos on [installing Forge and the CC Tweaked mod](https://www.youtube.com/watch?v=6-hyqrwBEq0).
I found this Wifi adapter works with Ubuntu without needing a driver compiled with the kernel headers. [https://smile.amazon.com/dp/B00ZWPPD0K](https://smile.amazon.com/dp/B00ZWPPD0K) 

That is if you need Wifi and the built-in Wifi adapter has no Linux drivers.
Another thing is upon going to invent with python clicking the image of python programming gently explained links to #automation rather then #pythongently
Yes Iris data set. Thank you
Heard, thanks for the heads up, much appreciated.
I got it a few years ago while googling some python docs. The animation to split the search screen open to expose the invite was pretty cool. Do they still do that?
Gets mysterious coding challenge from Google.

Takes picture of monitor with phone.
Hope they don't bring up your search history in the interview
Probably some brilliant google programmer getting people to solve his code for free.  Just kidding looks cool and congrats I hope!
Final Test question: Enter your credit card details **backwards**?
I‚Äôm not going to lie. If that happened to me I don‚Äôt think I would have clicked it. Not knowing about it, and it showing up after a bunch of google searches, it sounds like a good way to install malware. 

Cool it‚Äôs legit though. I‚Äôm to do some google searching now. ;)
Ngl, I was expecting to get rickrolled.
Dope! It‚Äôs legit. Google sends out invitations based on your search history. If you get an interview they are seriously considering you.
Previous articles said u could get an interview after finishing level 3. My friend at Google says he doesn't think it's an avenue for hiring anymore
what are the challenges like? I got it a few months back but i havent had time to start it yet. Will it be more challenging having a math background instead of a cs one?
They used to hire using this. But now they have stopped. The FooBar can be triggered manually now. So it's not a secret challenge anymore. You can still do it for your practice though.
I got it a couple of months ago, I did the first ...2? And then just thought it was nothing new and wasn't really learning anything. ( I was looking for coding challenges at the time to learn from )


Do they actually ask you for an interview if you get far enough..?
This is the site in case people who got it before want to try and get back in: https://foobar.withgoogle.com/

It's cool, but not all that secret.
This sounds so weird... But fun. Very Google like. Well done, coding for that long sounds intense!
Well getting the foobar challenge ain't a hiring platform anymore. Last time they hired someone from foobar challenge was maybe in 2017 afaik. Now it's just a fun challenge program for python and java programmers. Though they kept a hireme command, but that's useless at this time. Also it's super easy to get past level 3, since your code doesn't need any optimizations.

Sorry if you got disappointed because of my comment
Me: searches for my programming doubts in incognito.
Congratulations. If you pass the challenge, you get an interview, and depending on your experience, they assign you to a developer position.
The next day the mf was dead -beatlejuice
what did you google??
Congrats, my man! And good luck! Sadly I botched my chance on the first tasks :(
Site is called foobar.withgoogle.com
I am more concerned about Google's complete disregard of privacy and sending such challenges is basically acknowledging the fact that they are analyzing our search data. 

Kudos to OP for getting considered in one of the top companies of the world.
Good thing that none of the challenges is to take a screenshot. üòã Just kidding, good luck in the job interview.
Got it before, but I wasn't ready for it at the time. That and they seem kinda evil nowadays
Good luck my dude.
Yep ... also got one of those while working on some python application.
Get it!
Oh man when I got I thought it‚Äôs some kind of click bait
I had that happen during the first semester I was learning Python...  it was during a class, and I had a very busy schedule so I couldn't even think of pursuing it.  

I wasn't doing anything special at the time and had assumed it was random, but this is the only other time I've heard about it so who knows?  I absolutely love coding challenges and it sounds like I would've loved it.  Keep us posted, and good luck mate.  = )
What type of questions did they ask?
How do you get one of these challenges? Do you have to register somewhere, or google sends these based on your search history?
Would you post updates on this? I‚Äôd really love to hear how this turns out!
Oh mind I should switch back to google from bing
Can we get the invite on a firefox browser?
I got this challenge first when I was 15. Got it again earlier this year.
Search on YouTube. Indians abused this so much that this has become so common. Not to mention they stopped hiring from these challenges. This can be easily triggered.
If anyone wants to try this for themselves just google "Arraylist Java" in like 10 different tabs. Triggered it for me!
It is easy to get this invitation these days. You can google the terms to search for like "ArrayList Java" and open in multiple tabs keep refreshing and you will get it. Similarly there is python term to search for currently i don't remember that i searched and got the link
Here's the link from 2015 

https://thehustle.co/the-secret-google-interview-that-landed-me-a-job/
That's so awesome.
Google fool bar ah yes where u get tricked by them saying its a bar to hire devs
My buddy from college  (we were seniors at Texas State) got the same challenges on google. They ended up giving him an interview and hiring him for a six figures job in Manhattan.
I completed level 5 and now whenever I drink the force ghost of Robert Kahn comes and hangs out with me.
I've gotten this a couple of times.  Both times I was super busy and in the middle of having to figure something out, so I couldn't participate.  It's not like I know Python that well (hence why I was googling) but alas there it is.  I work with someone who fancies himself a future 'coder' and he's jealous as all get out, for some reason.
Hate to break it to you but google doesn‚Äôt really look at the people that do foobar anymore unless you complete level 5 and even then u only have like a 50% chance that you‚Äôll even get an interview
Sad day in hiring when you can‚Äôt even apply anymore, FAANG just decides from your browsing history. 

Why even fucking try anymore?
I got it one time about 3 years ago, but I declined because I was just starting to learn.

Now that I‚Äôm more experienced, I rarely search google for coding related stuff and therefore I have less chances of getting the invitation.
This is kind of creepy.  So they've been watching you browse the web and based on those observations they decided you might be a good fit?  Isn't that weird for anyone else?
Would you say you are an expert level programmer?
Learn, but don‚Äôt work for evil companies like google, facebook, and amazon. Start your own business. Thanks for all downvotes. You are the proof that we are sheep in the world of google and facebook. Watch Social Dilemma.
Yep, that's exactly I entered the page.
Did it result in a job with Google?
Yeah this was the real test and OP failed
OP: Try [Snipping Tool](https://support.microsoft.com/en-us/help/13776/windows-10-use-snipping-tool-to-capture-screenshots). It's a default part of windows for making screenshots.
With flash on to boot
With flash no less
RIP Furry porn fetish if found lol.
Too low level. High level would be to send a legit looking contract, where it asks for your details.
I got an email with an invitation to the challenge once and thought I was being phished. Accidentally opened the link on my iphone and it was a one-time use link :/
I got one some months ago but I closed it... As space\_wiener said I was very skeptical as well.
I got one years ago while taking a python programming class. I just googled thousands of python questions I did not know and randomly received the challenge, I still didn‚Äôt know what I was doing and gave up because it was too difficult for my then 1 month of programming experience.
Isn't this kind of an invasive hiring technique??
To be honest, up to third level there was not much programming needed to be done, max 30-40 lines of code. It's mostly about optimization and finding the right algorithm to do the job, mostly with math.

These challenges are much like ones from CodeWars, so take a look at them.
I have a math background and completed the whole thing. It's similar to HackerRank or CodeChef challenges, but slightly harder IMO. You can definitely do them if you have moderate coding experience.
How to trigger it manually
If you complete it someone from google analyzes it and they potentially reach out to you
Not true. I know someone who was hired at the end of last year from this.
I know someone who was hired in 2018 from it.
Don't worry, Google is still tracking you in Incognito.
Me using DuckDuckGo.
Got it a few years ago after googling "dependency injection"
In my case, it was something super trivial. I don't remember what exactly it was, but I was trying to find a duplicate SO question for a total beginner question. Think something along the lines of "python convert string to lower case". So yeah, I found that pretty funny.
I got it a couple weeks ago by just looking for the itertools docs lmao
[deleted]
When did that happen?
What? foobar has been out for YEARS and is hardly the only way to get hired. I must be getting baited
I find that I am searching at least as much, but more complicated things
Always assumed everyone at all levels researches stuff or is it cus wat u usually do has something to do with repetitive tasks?
[deleted]
Lol not everyone can just start their own business.
Just be careful.  Things that sound too good to be true usually are.  The domain is withgoogle not google.com.  Can anyone confirm it‚Äôs legit?
can I have your referral?
He's CEO now.
No, I wasn't good enough. I got stuck at some point and couldn't complete the level in the time frame given. It's been a number of years and I've gotten a lot better since then, maybe they'll let me try again :).
Win+shift+S for the new snipping tool
OR!

what if the interviewer is like:  
yoo wuttup its ma man greg!

yo homie so I wanted to talk w you about your skills...  


and then the interviewer shows op a "costume" and shuts the lights off..
Yeah, "Furry porn fetish", haha who watch things that depraved, *right?*
Wi Tu Lo. Se√±or Deets.
Oh man. That would suck.
According to some posts here they may no longer recruit this way.
Can anyone do them even starters who don't know much about coding and can learn on the way?
Did it result in an interview or anything like that?
There are youtube videos on it. Infact there is a website which opens it for you.
From what I have seen, open lots of tabs and search a python or java term in all of them. And the Foobar will pop up in one of the tabs. "List comprehension" is very famous term which people use for this purpose.
Username checks out
what on earth. that really is the opposite of what i was expecting. i always find myself googling really obscure technical things and in the back of my mind hoping that it accidentally triggers the code challenge. but in 8 years it never has lol
That's why I use duckduckgo. At the least, they claim that they protect our privacy.
Spring semester of 2018
I do a lot of pandas now for work, so I wrote a jupyter notebook with almost every possible scenario that I could run across. If the scenario is not there, I go directly to the pandas documentation, or the Python for Data Analysis book by Wes McKinney (pandas creator).

When it comes to general Python stuff or API related tasks, I just go to the actual documentation instead of googling "how to do x in y."
how do you know that?
"Hello world"
%50 business tax in my country, like I'll ever open a business.
Agree. Still better than working for these companies. I am doing all machine learning and data science that I want, but for a company that I know values people‚Äôs privacy. Watch ‚Äúthe social dilemma‚Äù on Netflix.
withgoogle.com is pointed to google's NS servers. It resolves to an IP address owned by Google's ASN (AS15169). The SSL cert on foobar.withgoogle.com is valid and lists Google LLC as the org, signed by GTS CA 101 (Google Trust Services).

It's about as definitively them as you can get on the internet.
this is google foobar- it is legitimate.
It's legit this is foobar challenge, i gave it a few months ago
bruh
They‚Äôll just hire an H1B for half the salary you would‚Äôve got.
Yeah it's been really handy but you can't, like, highlight or add an annotation on the screenshot like we can do with snipping tool. You'd have to paste it in paint to do it and then paste. Quick when you don't have to highlight anything
On Linux, use `PrintScreen`.
So Greg, we see from your (ok, "our", haha) gmail archive that you've been emailing with a Dr friend about a strange groin itch. How's that going?  When we checked your Google Photos archive, we were able to spot some redness in those "self check" photos you took.  But honestly from your GPS logs we're a little disappointed that you haven't travelled to your Drs office lately. Can you please explain your thinking here?
I worked in the hotel industry nothing surprises me anymore.
Even if they don‚Äôt, I bet it‚Äôd still be good exposure and experience.
Idk, I got something like that a few months ago.
Very unlikely, but possible. Some of them have a time limit to submit the answer. This pops up when google's algorithm has enough confidence that you are an experienced coder. It can be approached by beginners, but not easily.
Yup. After completing level 3 a recruiter sent me an email asking for my resume.
Thank you
Try searching \`headless chrome\` or \`arraylist java\`  
I found it searching 'python lambda\` tho
Heh I was just telling someone today about the natural progression from ‚Äúhow to do x with y‚Äù into using the official docs. If I‚Äôm learning something new there is usually some kind of ‚ÄúGetting started...‚Äù official doc and I usually start there if so.
Ah yeah let me just start my own business--picked it fresh of the business tree today
I've seen it, I just think it's foolish to tell someone not to take a job offer based on your morality
Very nice then.  Congrats to the OP.
Just because a domain points to a server doesn't mean it's legit. The Cert is more convincing, however.
Nope. H1Bs get paid a lot sometimes more.. DOL prevailing wage lower limit applies there and on top of that negotiation skills..
lmao. Look at the H1Bs they've hired THIS YEAR. They pay them a [ton](https://h1bdata.info/index.php?em=Google+Llc&job=&city=&year=2020).  
   
Median *base* salary for H1B SWE they've hired this year is $149k. That wouldn't include the yearly bonus, hiring bonus, and stock. Total comp for them is 300k+ just like any other experienced SWE.
Just click on the popup that appears after snipping. That opens a simple editor.
Shift + Windows + w
Look I to greenshot. It's free and open-source. It has the perfect amount for features for quickly taking, editing, and sharing screenshots. I use it for work all the time.
Works on windows too. Just paste into paint or wherever the image is needed.
Oh poor Greg, whats he gotten himself into now!
you're telling me you're wildest possible creative thoughts have been exceeded in a hotel?

damn man, can I check-in for a night?
This is super fascinating, I didn't know they did this. It also makes sense why I had never seen it, I'm a novice coder at best. :)
Thanks for the cool reply
This still blows my mind that its that easy. Google must not love me. I work with low level stuff for the most part so some of my google searches can get extremely  technical yet, again, in 8 years of searching ive never managed to get chosen. F
I completely agree with this, although I have found Google usually does a great job at leading me directly to the documentation. Googling "how to do x with y" usually leads me straight there.
[deleted]
Absolutely, which is why I didn't just say the domain name. It resolves to IP space that Google has reserved with IANA and is presenting a cert signed by Google's CA, which is in turn signed by GlobalSign (4th largest CA).

For it to not be Google, IANA and GlobalSign both would have had to F up, which is highly unlikely.
FML üò±üò± thanks mate
Windows+Shift+S is sooo much better.
I'm saying not everyone is in a position to turn down a job. You don't have to sell your soul to a workplace and you definitely don't have to work somewhere you don't want to. But turning down professional experience if you have none is retarded
I agree. I'm just pointing the first fact out since a lot of people don't realize how easy it is to point a domain name to an IP address, and that alone should not be used as any verification of legitimacy.
>But turning down professional experience if you have none is retarded

But then how will he take the moral high ground if he does?
The "Aha! moment" is very real and very important in learning any science (especially something mathematics based like programming). Feels great eh?
Any tips on how you went about it cause I‚Äôm stuck and it just makes me want to give up :/ I always feel like I‚Äôm close to that point but then I lose it
The thing about oop that a lot of beginner's don't realize is that it actually allows you to be a bit lazier and not have to pass variables around all over the place as you can reference them with self :) Once you figure out subclassing you can be even lazier hahaha
[deleted]
Congratulations. I hope it feels rewarding :)
Care to walk through what you did OP?   
I'm having a hell of a time getting anything to stick with regards to programming. .
I‚Äôm learning too. What I do is I pretend I‚Äôm like a professor explaining the subject to someone else.
Like that saying goes if you can‚Äôt explain it then you don‚Äôt really understand it
Good work. A couple of tips about your example. Class names should use the CapWords convention and there's no need to have the pair of parentheses after (unless you're inheriting from another class) so your class declaration should just be `class Cat:`. The parentheses when you instantiate an instance of the class are either empty to create an instance without passing any attributes or they pass those attributes to the `__init__` method of the class.

Also by putting `breed` as a class attribute you're applying it to all cats - doing it like that, you can only have one breed of cat among all of your cat instances, instead of a unique breed for each one if you put it as an instance attribute instead. This is obviously just an example you've put together so it could be nothing but I thought it was worth pointing out.
Good on you, my man!!!  Now tell me your secret.  I come from a 20+ year procedural programming background and my brain so far refuses to think in objects.  I'm going to try your approach to see if that is able to hammer it all home.
Damn dude!! Super happy for yah and super jelly. I'm usually real good at taking in notes and learning new materials in my college classes. I have never failed a class in my entire life and then comes this CS class and fail it twice. Nice to know that you finally got that moment, I am making an effort to learn it on my own during this whole quarantine bs. (:
Its like learning to ride a bicycle. You just keep at it, fall over a few times, then one day it just...clicks! Then as you progress you learn the why and how and delve down a rabbit hole of more optimization and more threads and more cpu and more power, and before you know it its been 4 days without sleep, you haven't eaten, but your script to download naughty images from nsfw subreddits is complete.
Congratulations!

That milestone was one of my happiest as well.
Good job! One correction:

> hashable - An object is hashable if it is immutable

Consider that the following snippet works without issues:

    class Foo:
        pass
    
    foo_instance = Foo()
    some_dict = {foo_instance: 1}
    print(some_dict[foo_instance])  # prints 1
    foo_instance.bar = "foo instance is now modified"
    print(some_dict[foo_instance])  # prints 1

You will note that foo_instance got modified - and that unless specified otherwise, objects are mutable.

An object is hashable if it implements \_\_hash\_\_.
Congrats on your epiphany, it's a great feeling!

Completely unrelated tip: instead of concatenating strings like `'I am ' + age + ' years old'`, you can use f-strings: `f'I am {age} years old'`. It looks a bit cleaner and honestly it's such an underrated feature in Python.
First of all - Good job, this is not easy to learn not to mention put down in words that explain it to someone who doesn't have sw background and you did it great.

Class - Object-Instance: In pythoin is extremely confusing because a class in python is an object.  But it still functions as a class in classig OOP.

Self - Is a reference to an instance from an instance method in a class. It can point to an attribute the instance is expected to have or call a different instance method.Instance methods can only be called with a defined instance of the class, and when calling instance methods with the instance, the self is pointing to the specific calling methods.For example:if there is a Cat class with an \_\_init\_\_(bed) that defines a self.bed from the bed param . an instance method sit\_on\_bed(self) would utilize self.bed, thus when an instance of cat with a specific bed instance calls cat.sit\_on\_bed() - The cat will be seated on the bed instance assigned for it  and not on any other bed belonging to other cat or human instance.

`class Cat(...)`  
`def __init__(bed...):`  
`self.bed = bed...`

`...`

`def sit_on_bed(self):`  
`self.move(self.bed.position)`  
`self.sit()`

`...`

`bad_3 = Bed(...)`  
`cat_3 = Cat(bed=bed_3...)`  
`cat.sit_on_bed() # Cat goes to sit on it's designated bed`

Of course cats don't really work like that but that's the beauty of writing your own cats.
Regarding **self**:

TLDR:

**self** is just a reserved parameter position in functions connected to a specific class which tells that function on which object to perform some actions (if there are any).

Explanation:

Forget what you know about classes and methods and think about them in simpler terms - the way creators of Python probably thought about them and how they work under the hood. They probably first wrote how general objects work and, after that, how functions work.

Then they probably thought - oh let's create classes, but how do we do it without changing something that works well already (objects, functions)?

Classes are just fancy objects that can create other objects which we call instances. They are mostly syntactic sugar (kind of) which makes it easier for you, the programmer, to write code in quicker and easier way.

Methods are simple functions - but how do you make simple functions work like methods? Well, in order to continue that syntactic sugar flowing, they made it easy to be called by creating a simple link with the class, so you can just use dot notation to call up a method like `class_instance.method(params)`. But - since they are still simple functions, those functions still need object as parameters on which they can perform some actions. And how did creators solve that? Well they just said: "Each time you call a function/method, you have to pass an object which you want that function to work on, so let's put it on a first place of parameters passed."

**self** is just an agreed name which could've been anything else, the idea is that **you are passing an object to be used and in case you are using dot notation (**`class_instance.method(...params)`**),  that specific class instance will be automatically passed as the argument.**

You can return that object in the method/function you invoked and that will allow you to chain other functions on that same object/instance, which simplifies code further.

&#x200B;

On the other hand, if it makes sense for you to do so, you can pass any object as an argument to a class method by calling it as `Class.method(other_object, ...params)` and that object will take place of **self** parameter.

&#x200B;

Maybe somewhat weird example on this last part:

    class MathFormula:
    
        def __init__(self, initial_value):
            self.result = initial_value
    
        def add(self, num):
            self.result += num
            return self   
            # returns the whole instance/object to enable method chaining
    
        def substract(self, num):
            self.result -= num
            return self   
            # returns the whole instance/object to enable method chaining
    
    
    simple_calc = MathFormula(5).add(2).substract(1)
    
    print(simple_calc.result)
    # 6
    
    # no need to specify which object to use - self parameter 
    # takes this specific instance
    simple_calc.add(5)
    
    print(simple_calc.result)
    # 11
    
    print(simple_calc)
    # prints out memory location of class instance / object
    
    # chain methods and access only instance property, an integer
    final = simple_calc.add(9).substract(5).result
    print(final)
    # 15
    
    
    # Let's say we make another class with "result" property
    class Number:
    
        def __init__(self, initial_value):
            self.result = initial_value
    
    
    # initialization
    different_calc = Number(10)
    
    print(different_calc)
    # prints out memory location of class instance / object
    
    print(different_calc.result)
    # 10
    
    # invoke another classes's method and pass an instance/object
    # to be used as a "self" parameter
    
    MathFormula.add(different_calc, 5)
    MathFormula.substract(different_calc, 3)
    print(different_calc.result)
    # 12
    
    MathFormula.substract(different_calc, 7).add(9)
    
    # Throws an error
    # Chaining methods doesn't work since "return self" of
    # MathFormula.substract() method returns
    # different_calc object, which is an instance of class Number
    # and therefor doesn't have add() method

Edit: formatting

Last edit:   
I am just a noob. If someone wiser and more informed knows better, please let me know so we can make corrections here and not spread misinformation. :)
Could we get a picture of your notes? It could help if you don't mind
You'll know for sure if you dream in classes tonight.
Nicely done! Qt is quite a beast in its own right. I know experienced python developers who struggle with it.  üëåüèªüëåüèª
You've been learning a few weeks and you can do all that? Damn, nice work!
Yes yes yes :)
is this a personal project? if yes, why an FTP client?
With pretty visualizations and code examples, that would be a perfect anki flashcards deck.
Anyway, we can download this?
This should give hope to everyone who is struggling. For me it also felt like a constant struggle trying to understand the basis. The funny thing is that I got my "aha moment" right after I put down my work for a week. When I picked it up again, everything started to make sense.
Edit: warning, the stuff I wrote here might be completely the opposite, especially based on the reply I got.  It's possible that self is actually LESS restricted than non-self.  I was under the impression that self meant more privacy, but it might mean more openness to sharing. 

To answer your question about self - I am new with objects (well, I used them for one class - no pun intended - like 10 years ago and then never used them again until I relearned them last week), but the impression I have is that self variables are like local variables, and normal variables are global. 


So you know how if I did 

while True:

....I=10

....print(I)

....break

print(I)

the second print would break the program because I only exists inside of the while loop (since that's where I created it?)

I believe when you do a self, it makes that variable only inside of the object that is created from the class.  

I want to say that if you do this:

class aClass(self):

....def __init__(self):
....self.a = 10
....b = 20



That if you try to do a print of b outside of the object, it should work.  Again, I could be wrong, but I also know that for sure you can't do print(a) outside of an object made out of the aClass.

So at least the way I see it, self.variable is a local variable (or a private if you use other languages) and a non self is probably a global/public.
Unless I am unaware of something it's 'method resolution order' not 'multiple'.
Thanks for this
Yeah and learning the terms will become even more helpful in the future when it comes to learning more and being able to articulate a google search or ask another programer for assistance.

Ex. how do I iterate through and stop to return only once I have reached a threshold but continue afterwards??  Vs. How to yield in a generator?
Nice job!!
Self is used to refer to the current instance of an object that is being operated on within an instance method
good work, keep fighting !
Congratulations!  


Try the same approach when designing your next application. Create a bag of well defined names for things and actions (nouns and verbs). Do this from a user's perspective. Use the names everywhere: in your code, documentation, when explaining what the app does. This will make understanding the business (even if it's a todo app) and putting it into code that actually produces value so much easier.
This is a post I made several years ago that may help you understand "self"

https://www.reddit.com/r/learnpython/comments/4jszi4/explanation_of_init_and_self/d39g2xg/
You had asked for some comments, here are my $0.02! Feel free to ask more or disagree. I've broken it up into a thread (and removed stuff I didn't comment on) because my original was larger than the max size:

ery nice write-up, you've obviously learned a lot. I'm going to make some comments inline. Mostly not because you're incorrect, but to add some more info.

&#x200B;

* *byte code -  representation of the python program in the interpreter*
* *complex numbers - extension of the familiar number system which all numbers are expressed as real and imaginary*

I think you're mostly correct here. There is a whole lot more to complex numbers (Complex analysis is an entire branch of mathematics). I personally prefer to think of the real numbers as a subset of the complex numbers (those where the imaginary part is 0) because then it's obvious that things which are true about complex numbers are also true about the real numbers. This is outside what you need to know for python, I just think complex numbers are really cool :)

* *decorator - A function that modifies another function. Return value is a callable object*

This is one that most new python programmers (unless you came from another language with this concept) really struggle. I think you've got the write idea. I've deleted what I wrote at first because it got into the weeds and doesn't help learn python. Just know that the most common use case is to create a reusable pattern that will happen whenever a function gets called. I'll often use decorators to modify every function in a webapp that I want to make sure a user has authenticated before calling.

e.g:

`@authenticated`

`def return_user_info():`

`...`

* *dictionary - A python datatype composed of keys + values. Can be a variety of data types*

This is mostly correct. The keys can only be hashable types (tuples, not lists for example).

&#x200B;

* *duck typing - object properties determine what it is.*

if it walks like an integer and talks like an integer it's probably an integer :)
That lists of definitions and the examples actually helped me understand OOP and classes a lot better. Thanks!
Qtside saved my python journed with the qthread and multithreaded code.
[deleted]
Yay!
No you don't.... but none of really do :P  Glad you're happy with you're progress man.  Keep it up!
I feel you man. I remember having an aha moment back in high school in AP calc on a midterm and I‚Äôve been chasing that high ever since
Eureka moments release an insane amount of dopamine, it's addictive. I could get high almost daily while learning to code.
I cry when that happens
It's like someone opened your head and poured straight light into it.
I got into coding about 2 days ago, and I've been watching tutorials and following along, just copying what they do and noting the terms and how they work. I did a very simple process to cube a number, except I had to delete/replace the number on my own each time I wanted to change it.   


I decided thought "that's cool, but I wish I could make it easier." So after a bit of messing around with stuff, I figured out how to take input and turn it into an integer without consulting Google, and the moment was beautiful. Until then, I thought coding was cool but not very exciting. Now I'm in love with it and can't wait to learn the more complex stuff!!  
(I don't have anyone else to share my excitement with, sorry for the wall of text!)
I prefer epiphany to orgasm any day.
I could write code no problem, but I couldn't explain what I was writing. I went and rewrote the vocab because thats where I was struggling. What part are you stuck at? Maybe I can help.
Have you watched Uncle Bob's videos on youtube? Or read Head First Design Patterns? I'd recommend both of those resources for understanding OOP.
Best thing to do is not give up. Keep writing code. Keep watching youtube videos. Keep googling how to do such and such. You‚Äôre human, just like the rest of us. We all struggled just like you, all had thoughts of wanting to give up. But I‚Äôm better than I was yesterday. And I‚Äôm definitely better than I was 2 years ago. But I wouldn‚Äôt be if I hadn‚Äôt started or gave up. So basically, it sounds like you‚Äôre doing everything exactly as you should. Don‚Äôt stop!
I‚Äôm that beginner you‚Äôre referring to.

I can only hope and pray things can start clicking for me and I can start understanding classes, self, and __init__ üò≠
This has been me with OOP as well. Barely understood a thing with Codecademy‚Äôs Classes chapter but the Python Crash Course book had a great example with cars and updating odometers. That‚Äôs when all the stuff with __init__, self, methods and proper dot notation for OOP clicked.
I did that for the majority of my cs bachelor back in 90s. All tests was on paper. And if you forget any ; you lose 0,5 points. Painful years... üòÇ
I hear and I forget 

I see and I remember 

I do and I understand
That would make sense, it‚Äôs like taking notes it‚Äôs better to write it vs recording/typing
Find a tiny project you can work on, and play around with it. Something that you might relate to.

For example, whenever I do my bookkeeping, I always have to copy a long list of data from a website, then put it in a spreadsheet and clean it up. This doesn't take too long, but it's adds up for every month and every website. 

So I tried to make a program that parses text from the clipboard into a list, deletes empty lines, then puts the shorter list back into the clipboard... If you've done a few chapters of Al Sweigart's book, this is fairly straightforward (with a bit of help from Google). My program works, and for now I've copied the program and made a few tweaks so it works with different sources (e.g. Amazon orders list, Paypal orders list, bank account statements...). 

You can always make your programs fancier/more efficient, but focus on getting them to work first.
Added some notes
Im basically a beginner asf so I‚Äôve been reading and watching YouTube tutorials and I can see I‚Äôve progressed since when I first started, I understand some writing and techniques to use but let‚Äôs say if I want to piece it together I‚Äôm lost.
That‚Äôs why I do my best to help others out as much as I can. I‚Äôve only studied a little Python, and I‚Äôm currently doing CS50, so my help is limited, but I find it very satisfying when I can make a concept accessible for someone who‚Äôs struggling.
I figured that was the case with breed. The point of putting it there was so you could see where a class attribute goes inside of your code.
I added some notes. These sounds and look correct. Please let me know if anything needs to be changed
I've been doing procedural about as long (I started in TI83+ calculator basic about 18 years ago lol) and only last week started objects because someone said my code sucks and that it's better in objects.  


Sure enough, it worked pretty well.  Do you know how to use structs in C?  Or dictionaries in python?  If so, you essentially have been using objects secretly. Admittedly I'm still not converted and still prefer to use procedural, but it's probably because I need more practice - I may become a believer if I program more in it. 


 But yeah, if you're bored enough, look at my repository in github.com/MOABdali

Specifically my stockwars game.  It goes from procedural to classes within like a two day period - I literally watched videos about objects for a few hours (mainly Corey Schafer's video) and then spent like 8 hours modifying my code in small chunks ("alright, this can go with my stocks object... This one with the player object, and this one belongs with player..... Actually, let's make that one be its own map class... Yeah, that works") and voila, cut my code by about 600 lines. Classes in my opinion are harder to understand and read when reading code (just like I think it's easier to read 


print 1

print 2

print 3

print 4


than 

for (I in range (5)):
...print I


But I guess technically the second one is nicer looking and is less of a hassle when scrolling around code that has dozens of these types of statements.  This is also true of classes (and functions) - harder to read, but much smaller I guess.
Thanks for this. I'll go ahead and made the corrections!
Yeah i knew you could use f strings but at the time of writing this, i was too lazy to lookup the exact code. For future projects I'm going to try to work more with f strings
Holy shit.

It sounds like self isn't doesn't have a single definition but can do multiple different things depending on where you put it.

Self: 
- Prefixing on a variable allows any method in the class to access the variable 
- any instace(object) created from the class can access the variable
- When being used in a class.method(...) structure, when calling self it is "talking" to the object it is referencing. EX:
dog = class.method(self). In this case would self be "talking" about the dog object?

Or would the dog object be "talking" to the class.method? 
Ex: dog = breed.age?

Omg... i think i understand now why people say that in python everything is an object.

Objects - data with attributes, values and methods
Classes -These are objects because they can contain attributes, values, and methods
Methods- These are objects because they can contain attributes, values, and methods
Functions - These are objects because they can contain attributes, values and methods
Variables - These can also be objects.

Jesus fucking christ.... I'm high at work guys.

Now i understand why learning the vocabulary can be considered more important than coding. It ties everything togather.
Added some notes and code
No notes probably my downfall lol
I did do programming in college, so I was familiar with the concepts. I just want to make sure the definitions and code are accurate.
I just wanted some projects on my github that I could show to potential employers that I know how to code. A list of projects can be found here

https://github.com/karan/Projects/blob/master/README.md
I'm not 100% sure on this one.
I think non self variables are only accessible within the method scope, and self is available to all the functions inside the class. The reason I think this is in the example below you cannot get the object attribute 'car_info' from 'ford' because green is not defined. It is available in the __init__ method but cannot be 'seen' anywhere else, and therefore cannot be used.

class car():
    
    def __init__(self, car_type):
        self.car_type = car_type
        color = 'green'



    def car_info(self):
         print(f'The car type is {self.car_info} and the color. is {color}')

ford = car('truck')

ford.car_info()
You right. That's a typo. Fixed
&#x200B;

* *first  class object - Object that can be created dynamically, stored in a  variable, passed to a function, returned as a result (ex: variables,  lists)*

FYI, in python most things are first class objects.

* *greedy  regular expressions - Regular expressions that match the longest string  possible, \* + ? Counterparts are \*? +? ?? these are non-greedy  (shortest string)*

This one will bite you in the butt frequently. When I'm debugging regexes this is often a culprit.

&#x200B;

* *hash - number used to relate objects for storage in a hash table.*

True in that everything stored by a computer comes down to 1s and 0s, often we represent hashes as strings (e.g. in dictionaries).

* *hash table - An object that maps keys to values*

This is true. However, hashes are a fascinating often overlooked topic in computer science. Many a PHd has written their thesis on efficient hashing in different circumstances. Again, not important to understanding python but very cool :)

* *hashable - An object is hashable if it implements hash.*

IIRC In python anything immutable is considered hashable.

&#x200B;

* *list - A series of values that can be changed*

It's important to remember that lists are ordered, unlike sets in python.

&#x200B;

* *tuple - similar to a list. However this is a sequence of values that cannot be changed*
* *nested scope - Where a function inside a function, can refer to values in the outer function.*
I read two books. The first half of Python Crash Course, and the Second half of Automate the boring stuff. Programming really comes together for me when I start making projects and not just following some examples.
I agree with what OP said, I'd recommend getting started with some projects as soon as possible. Just tinker something together, doesn't matter if it's hacky. If you don't know anything, look it up. You may write some shitty code, but you can always improve on it later. In my experience this is the best way to keep things interesting and stay motivated.
> No you don't.... but none of [us] really do :P

Weirdly. This is close to the truth. 

Generally, just barely grasping the very basics of OOP (encapsulation, inheritance, abstraction, etc.) means you're only just at the beginning of understand all that OOP can do for you.

But of course, the truth isn't friendly or supportive enough, so the down votes come out in force. ¬Ø\\\_(„ÉÑ)_/¬Ø

Also, as a random aside, did anyone else read OP's title in Coach Steve's voice in their head? :D
Have you tried chasing it to cocaine yet?
I felt like that when I realized that the difference quotient wasn't guessed/calculated by some super genius... They literally just did "a location to the right minus a location on the left, all divided by the distance between them".  I didn't realize this until calculus 2 lol.  I also saw how the quadratic equation was created and how the Pythagorean theorem was invented. Til then I assumed it was a eureka thing where someone was just staring at numbers and was like "wait a second, I just realized that a^2 + b^2 = c^2!  And it's worked for these 50 datapoints I tested it on, so I think it's official. I should tell everyone." Lel
I still remember my 'AHA!' moment when pointers clicked, while learning from a book called "C++ in 24 hours" or similar. 24 hours my ass, plus errors in code samples which didn't help. Felt great though, this was a true "aw shit, now we're getting real dude, hold my beer, nothing is gonna stop me" moment.
So true ... i cant let go of pytube after getting one days ago
I do, too! I've had that moment reading biology papers but programming can really get you rolling on those big wins.
I also shed tears.. But from my penis
I did that once when I made a ball bounce from screen to screen using the Arcade library. üò≠
Like one minute I can understand what I‚Äôm writing but then when it comes to me actually trying to piece things together I get myself confused idk it‚Äôs weird lol I‚Äôve taken 2 days off because I‚Äôm just so discouraged
I haven‚Äôt but I‚Äôll definitely look into it, thanks!!! :)
Corey Schafer's video on classes :  [https://www.youtube.com/watch?v=ZDa-Z5JzLYM](https://www.youtube.com/watch?v=ZDa-Z5JzLYM) 

This video is helped me really well to understand the idea of classes and the \_\_init\_\_ method

self was something that gave me an "aha" a while ago.... so basically if you have seen examples of oop people use "self" for mostly two things - 1) to create these variables inside classes and 2) as arguments to functions defined in a class (all functions in a class have atleast one argument that is "self")

&#x200B;

Now classes are blueprints of objects. That means that from a single class you can create an object any number of times and these objects have properties (attributes) and behaves according to the methods (functions) defined in the class. The process of creating objects from a class is called instantiation and a particular object is an instance of that class. Now objects are "things" that changes according to its methods. For example, if  you consider a door as an object, then it has an attribute ie door\_state which can be open or closed. It has a method that acts on the door and changes its door state ie making it open or closed. lets call that function door\_move(). Now how is the door object and its method door\_move() related. the method door\_move() acts on the object door ie takes the object "door" as an input, does something to it, in this case change the attribute door\_state from closed to open, and outputs the object but with the necessary change. But remember we were writing just the class door and we havent created any door objects from it yet. So we need our door\_move() function to always act on any instance of our class door so that it can act on that particular door instance. So "self" refers to the particular object created from a class while it is being instantiated and after ie so that all instances of that class will have their own door\_move() method that acts on their respective objects. 

&#x200B;

    class door:
        self.door_state = "closed"
        def door_move(self):
            if self.door_state == "closed":
                self.door_state = "open"
            else:
                self.door_state = "closed"
    
    door_1 = door()
    

\_\_init\_\_ methods are functions that are called ie acts on their objects everytime an object is being created. Now in the above code the method dooe\_move() does nothing unless called like this

    door_1.door_move()

and that's why \_\_init\_\_ method just as its name suggests suitable for initializing object attributes. Say your are creating 1000 objects. Each object is a person working in your company. So you will have different attributes such as first name, last name, salary etc.

And if you were to do things without the init method then you have to manually change all these attributes in each object once you create them.

&#x200B;

    class Employees:
        self.fname = None
        self.lname = None
        self.salary = None
    
    Employee_1 = Employee()
    Employee_2 = Employee()
    .....
        

And then once you have created all these employees who are instances of your Employee class, you will have to manually change their fname, lname and so on

    Employee_1.fname = "Richard"
    Employee_1.lname = "James"
    Employee_1.salary = "$10,000"

and you have to do that for all the employers and for each of their attributes

Instead with init method you can do it much easily as

    def Employee:
        def __init__(self, fname, lname, salary)
            self.fname = fname
            self.lname = lname
            self.salary = salary

and once you have done that you just need to pass these values fname, lname etc as arguments while you are creating individual Employee objects like this :

&#x200B;

    Employee_1 = Employee("Richard","James","$10,000")

in self.fname = fname in fact you can change fname to anything only in LHS because in the left side fname is an attrubute of an object whereas on RHS it is the string value of that attribute (which you can call pretty much anything). But if you change it on RHS you will have to make the same change in the argument of the \_\_init\_\_ method. 

&#x200B;

Hope it helps !
It clicked for me after I wrote a 2-player chess game. Chess pieces share common properties (location on board, is a black or white piece). Pieces also share common behavior (can take a piece or be taken). However, the way they move is different per piece...So then you can start to think about the classes and how they're defined.
Added some notes
Keep calm and listen to Trent Reznor/Atticus Ross while you learn:
https://www.youtube.com/watch?v=BLj7S1QShdk&list=LLlFfpNQVvTzYuGgaXq_Bg0A&index=9
I hate stuff like that so much. 

"Oh. You forgot if it's for(I=0;I++;I<=10) or (I=0;I<10;I++)?  Well you obviously don't know C at all whatsoever so I'm taking off 7 points.  That'll teach ya not to slack off!!!  Oh, I see you correctly programmed djiksta's algorithm using a while loop on the very next question, but you obviously don't understand C at all."

Like if I have access to a compiler, I can check to see the correct way to do a for loop in 2 seconds.  It's a stupid question to put as a test of knowledge.  Especially when the languages are so drastically different- 

The C version is up there, the python version is like (for (range (11)))

I am a little ambivalent (is that the word?) toward like trivia such as "what will be returned in the following question?

a=b=1
return a==b=c(!a*(printf("false")*len("false")))


Like.... Technically it's stupid because no one would actually do that in real life, and if they did, I could just run it in a compiler.  But on the other hand, I guess it's important to know what the truth of a printf statement is (I believe it returns the length of a strength?  Or at least a 1 if successful.  I forget.  One of the two).  

Likewise, I didn't know that C considers anything but 0 to be true.  Before a test a question where I got it wrong, I used to think that anything that's zero or less is false.
Same for me. In my first year as a maths student, one of the manditory classes was a programming course which was taught by a guy who was a big fan of Edsgar Dijkstra. Not only were all tests and assignments done on paper using some formal programming language, we also had to prove that our programs were correct (in that the output was actually what it should be and that it ran with optimal time complexity).
It hasnt changed. Im still doing it like that, the only reason we had exams online now is due to covid.
[deleted]
Thanks for helping others. I‚Äôm glad theirs people willing to help others learn
Python has a module called `abc` (stands for Abstract Base Classes) which will help you create "blueprints" for child classes.  

You could do is have `breed` set as an `abstractmethod` and then create child classes that inherit from `Cat`.  The result is that you would be saying that any class that inherit from `Cat` is required to implement `breed`(overloading the inherited method) or a neat exception will be thrown.  That way you can ensure that all children are properly formed.
Will do and thank you!!!
Okay, let's not go too far ahead with mind shattering. :D

**Self** actually has only one definition - it's an object that is being passed/used/invoked. But, even that is a wrong view of **self** \- it's no a magic object or a magic keyword.

It's an just a name for an object. Now, the important thing to figure out is **WHICH** object that is.

    class Car():
        brand = "Ford"
    
        def __init__(self, car_color):
            self.color = car_color
    
        def change_color(self, new_color):
            self.color = new_color
    
        def change_brand(self, new_brand):
            self.brand = new_brand
    
    new_car = Car("red")

1. When you make new instance of a class (eg. `new_car = Car("blue")` ), this is what happens:
2. A new object gets created in the memory, that object is a child/instance of class `Car()`, it's not assigned to the variable yet, it's just created in the memory
3. All global properties and methods made in the class are assigned to this newly created object ( `type = "Ford", __init__(), change_color(), change_type()` ). If class has global/class properties, like `brand = "Ford"` in the above example, this property is assigned to the newly created object.  
This means that all methods and class properties will be callable through dot notation *object*.`change_color()` or *object*`.brand` later on. **(we are not finished yet)**
4. This is where all connections between the *CLASS* object which pumps out new objects and the *NEWLY CREATED OBJECT* **stop.** There is no more ties there, *CLASS* object assigned everything it had to this new object and it's on its own - all further access to methods and properties is **directly** from those assigned to this new object. Keep this in mind.
5. After that all properties and methods are assigned to this newly created object which is still just sitting in the memory, it's `__init__` method is invoked, the same one that was assigned to it, and **that very same object gets to be passed as an argument (self) to this method - object is simply passing itself as an argument to its own method/function - that's why that argument is always named as** ***self.***
6. After all of that, this newly created object is returned and can be assigned to a variable. I am not sure if this step is the last one, but it doesn't make much difference when it occurs since it doesn't affect anything regarding object using itself as a parameter.

So, in the end, you get a new object which is assigned to a variable, eg. :

    new_car = Car("red")

If you want to invoke a method on this object, say `change_brand()` method, that object will check if it has such method assigned to it and if it does, it will:

\- call it up- pass itself as a parameter first **(self)**\- pass other parameters that were supplied

    def change_brand(self, new_brand):
            self.brand = new_brand

If you are referring to global class properties in any of the methods, like `brand = "Ford"`, you have to understand that methods don't have any reference to the Class object you used in order to create a new object - they basically don't have access to anything. Global class properties were assigned to the newly created object during its creation, while *CLASS was pumping it out*, and as we said *- after that all the connections stop.* Therefor, after object itself is passed to the method as a **self** argument, you can access global class properties only by using dot notation on that reference: `self.brand = new_brand` \- it's like typing `new_car.brand = new_brand` (replace `new_car` with whichever variable you assigned this object to). This is because you are only operating on this newly created object, class has nothing to do with it, and everything that class had is assigned to this object, and the only way to access it and it's properties in the method is to pass object itself to that method and then use dot notation inside. <- weird sentence but I think you get it

Sooo, to sum it up, **self** means nothing by itself, it's just a word replacement for an object you are passing to a function. If that function is assigned to that object (method), that object will pass itself to it first, and then other parameters.

Now, since you understand that newly created object is a separate thing from class objects (which are just factories), you might understand too why it's possible to invoke methods by using class objects on its own - like in my previous post. Since they are not invoked by a newly created object (instance), it doesn't get passed automatically so you have to pass it on your own as the first argument (this is where **self** as a keyword doesn't make any sense). It can be any object, as long as it makes sense. I am not sure this practical, to be honest, but it helps to illustrate a bit how all this stuff works.

I think I've covered all I know on this topic - hope it helps you.

&#x200B;

As above, if I wrote something that's incorrect, please let me know.

Edit: formatting.
You don't really need them for programming.  I still don't know how to open a file in C, but I just Google it real fast. 


For example, my guess:


myfile = fopen("file.txt","r")


Now we Google it...

ptr = fopen("fileopen","mode");


So I guess I got lucky on that one. 


But ok, let's do a malloc.  I always forget that one. 


int* myIntArray;

myIntArray = (int*)malloc(50*len(int))



int *p1 = malloc(4*sizeof(int));

Aha, there we go. I goofed up on the correct way to get the length in C.  No notes needed.  Just a quick Google. 


Now when I first started, I used to take notes for code like "how to iterate a two d array".  And would always have to refer to my notes when printing one out.  The problem is my notes were not helping me think logically.  Now I do it from scratch.  It's been like 2 years since I iterated a 2d array, but check this out (you'll have to take my word for it that I'm not cheating):


(Assume my 2d array has data already and that I was given the length and width to save time)


for(r=0,r<rows,r++)

{
c=0; //(just in case lol)
for (c= 0, c<columns,c++)
{
printf("%d ",myArray[r][c]);
}
printf("\n");
c=0;// (I'm really paranoid lol)
}


There's a small chance I may have an error in there, but point is that by not looking at notes, I was forced to think about the logic and can always visualize how to iterate the array. If I do have a mistake in there, I can easily fix it by seeing what's wrong and figuring out how to fix it (for example, out of bounds means I either swapped rows and columns (or am using r when I should be using c) or used <= when I should have used just a <, or I forgot to reset a variable (considering I have three resets for c, that shouldn't happen haha).  Or if I get an infinite loop, I forgot to put in a ++ somewhere or used an incorrect comparison (e.g. for (c=0;c<columns;r++) )
Ah, I'll have to read into this some more when I wake up.  Thanks for the code.  To me, just intuitively, I feel like cartype should be hidden from car info, but I feel that it should be able to see green since I feel that self is supposed to limit access.  But it's very likely that the opposite is true and that I've been looking at it the completely wrong way haha.
Exactly.

`color` is part of the `__init__` method and it's not modifying anything on the object/instance that is being created. It's not even an usable part of Class object since it's just scoped inside `__init__` method.

If color was defined as part of `class Car()` definition, it would've been accessible in each instance of that class, like this:

    class Car():
        # place to define class variables which are accessible 
        # by all instances
        color = 'green'
        
        def __init__(self, car_type):     
            self.car_type = car_type
    
        def car_info(self):
            print(f'The car type is {self.car_type} and the color is {color}')
    
    ford = Car('truck')
    ford.car_info()
    
    # works as you expected in your example
*TIME FOR THE SUPER IMPORTANT ONES:*

* ***Functions*** *- A reusable block of code written to preform a single related action. A block of code written to do one thing.*

functions in python are first level objects. Not generally used, but cool! You can do really weird things with this:

`def foo():`

`return "bar"`

[`foo.bar`](https://foo.bar) `= lambda: "called bar"`

`print(`[`foo.bar`](https://foo.bar)`())`

Why would you do this.. I'm not really sure, but you can!

&#x200B;

* ***Classes -*** *Define the general behavior objects can have. A template for creating user defined objects.*
   * ***Instantiation*** *- Making of an object from a class*
   * ***Instance*** *- Creation of an object from a class.*

You can have many instances of a single class definition.

&#x200B;

* ***Object*** *- Any data with attributes + values, and defined behavior (methods)*
   * *From my research An* ***Instance*** *and an* ***Object*** *can  be referred to as the same thing, these words can be used  interchangeably. If someone has a clearer explanation, please feel free  to comment.*

This is a bit ambiguous and different developers will disagree, but I agree with you they're interchangeable. An object is a thing, a class is a template telling you what attributes a thing can have and what it can do. If someone says "object definition" they probably mean class.

&#x200B;

* ***Class attributes*** *- Variables owned by a class and shared by all instances of a class.*
* ***Instance attributes*** *- Attributes that are owned by once specific instance of a class and not shared between instances*

The values are not shared, but the fact that the attribute exists might be if it's part of the original definition.
Aha!
Cocaine is too ohyeah for me than aha
Best thing to do is just talk to yourself about what is going on. I am a tutor so I will always ask any student who comes to me with a problem with, "what is your code doing." You'd think this is a basic question, but unsurprisingly I do not think I have had a single person adequately explain it to me. If people actually fully understood their code without just copy/pasting from stack overflow they probably would be in a better spot (I'm not saying you do this just something I have noticed).
I'm working with PyQt and I feel the same way. I try to do what I can and break it down into smaller problems and tackle them one at a time.
I barely found that guy like three days ago.  He's been super helpful.  

There's also a cool dude that posts here sometimes but I forgot his name (plus I dunno if he wants me posting his username), but he's got Mike in his username.  Both have been an immense help. 


(As well as a bunch of other people that have looked at my code and whatnot, thanks to all of you, it means a lot)
That's pretty helpful. Thank you!
[deleted]
my dude! this comment made me pull it up while i was programming and have had it on repeat since! Thank you!
I feel that typing is better.  Since you're getting memory.  I can't write out how to do the crap on top of a c file, but I can type out

.#include <stdio.h>

.#include <stdlib.h>

.#include <time.h>

#include <memory.h>

.#inckude<string.h>

void main()

{
...printf("testing\n");

}



just fine because of the typing.
I think understand what self is. 'self' is nothing special, it is a word used to reference the object the class is assigned to. when you create instance variables with __init__ or other methods. self is passed to connect the methods to the object.
* ***Methods***  *- Functions that "live" inside of a class. The functions work the same  as normal functions. They are just called methods to differentiate them  from functions that don't "live" inside of a class.*

They operate on an instance of a class. That's where self comes in (see below :)). It wouldn't be any more useful than a regular function if an instance couldn't reference it's own attributes inside a method. self is the first parameter of any method (not a function) and gives a name to the instance calling the method:

&#x200B;

e.g:

`class Bird(object):`

`def __init__(self, color):`

`self.color = color`

`def what_color_am_i(self):`

`print("I am {}".format(self.color))`

`robin = Bird("red")`

`robin.what_color_am_i()`

If you couldn't reference color for your instance inside what\_color\_am\_i you would be out of luck. self just give a name to the calling instance.

* ***\_\_init\_\_***  *- is a method (function that lives inside of a class) that runs when an  instance is created. It is used to create instance variables.*

In most languages this is called a constructor. It gets called immediately when you create an instance of an object and it also defines the parameters required (and optional) for creating an object.

* ***self***  *- I find this one a bit difficult to understand. self when used with  creating instance methods, and when referring to variables on another  instance. This one is confusing for me and I can't explain it well. From  what I understand prefixing variables with self, allows every method in  the class to access the variable, and any instance(object) created from  the class can access the variable.*

This is confusing to everyone when they first start learing object oriente programming. See above, but it's basically a way of giving a name to the instance which is calling the method with the self parameter. Hopefully the example above explains why that is important.
I feel ya. A real macho man randy savage ohhhh yeahhhhhh
Definitely. The power of simply putting ideas into words cannot be overstated. Even if it ‚Äúfeels‚Äù like you get something, verbalizing your understanding - even (especially?) if you‚Äôre just by yourself - and honestly evaluating how well you did will reveal any lingering weaknesses. When they say ‚Äúthe best way to learn is to teach‚Äù, this is really the mechanism behind that aphorism.
There are some truly good people out there but i guess not often in plain sight. Good luck !
You are welcome :)
It indeed was an eye opener !
Yep, your on to it. :)
* *Classes -> Blueprint, Instances -> Things that can be made*
* ***super()*** *- Helps python make connections between parent and child classes.*
   * *Classes can inherit from other classes*

True, it's very tricky to know when to use super. It's one of those things that when you need it you will go "OOOHHHH that's why!"

You went deep here! Well done. I removed some stuff I didn't comment on because the post was too long :)
Hell yeah brother
One last thing. Savor the AHA moment, but you \*WILL\* run into times where you're convinced you'll never get something. It's called the imposter syndrome.  I've been programming python for over a decade (and programming for 3x that) and I still feel it all the time! You will get it, you can learn it. Don't fall prey to IS!!!
I'd like to add another:

8) A solver for any logic puzzle you enjoy.
+1 for blackjack. It definitely helped me understand quite a lot.

Would also like to add that looking into how to build a gacha/lootbox simulator helped expose that I didn't understand a lot more than I thought.
Should we, as beginners, be watching YouTube tutorials on how to do these or is there another way we should do this?
[removed]
I learned a lot by building a tic tac toe/ connect 4 game in a different sized grids - from 3x3 up to 9x9 (all set by the customer)
Please could you explain #6 The Mad Libs Generator?
9. Calculator (four operational)

Their easy to understand and write, I do this with every language I try to learn
for `3)`, you should probably use the `secrets` module to actually make a strong password
And all these projects can be combined with Tkinter for a more graphical rich experience.
Is it okay to add these projects to a portfolio or only more complex ones?
Saved! Thanks a lot
I'm actually looking for the best source to follow to build a text based adventure game as my first beginner python project! Anyone has any suggestion? Thanks!
As a beginner, I'm wondering how complicated/or if its possible to add a GUI to the card game, so the user will can see the image of the cards they have
Definitely saving this! Thanks friend!
*reserved
[deleted]
What about making a bot for twitter, discord, etc. is that appropriate for a beginner?
Thank you so much for this. I find it so hard to learn about things without a project to go for and just didn't know what I could do at my level (other then a calculator and a bubble sort and I've done both of those)  
  


This is very helpful, really appreciate it.
I made a login system last Monday, it was a great way to get a feel for reading and writing files. Now I'm a week in to a blackjack game, and just about to start the gameflow logic after finishing the betting class this morning. Great suggestions, thanks!
Adding a sort of 1a/4a, I was playing online bingo with my family yesterday, and we were limited to three rounds before it shut off. I whipped up a bingo caller pretty quickly and would recommend that as a reasonably quick beginner project, as well.

1-15 correspond to "B," 16-30 correspond to "I," etc., and you just need to make sure your numbers don't repeat.

For skill level context, I'd say I'm still a Python beginner but have gotten into some light web scraping and Excel work, so I'm a little past true beginner-dom.
I would add a web scraping project into the mix. It will give you a good idea of text parsing, http request, file handling and possibly database if you want to use one.
Great list!
I would add Minesweeper: you can even make this with very basic Python knowledge (loops, conditionals, strings and lists are enough)
Thanks! I was just trying to post this as a question, but reddit wouldn‚Äôt let me... You answered it for me though!
Guys, if you go to do #5, please use [this video from ComputerPhile](https://youtu.be/8ZtInClXe1Q) to make it a bit more secure.
My first 2 programs were numerology calculators. I still have 2 more to finish the main numerology numbers but I need to learn to write tests before I write more programs. There are some great ideas on this list!
For the login system which I did recently, maybe use tkinter as it helps with creating a GUI with the login/register system database!
Practicepython it Is good website which includes almost all the projects mentioned here as small exxercises
Thank you
[removed]
I've seen a number of comments of people asking whether they should watch youtube or follow tutorials/references.   


I think it's best you first try to use your basic understanding of strings, tuples, dicts, lists, and functions to do all the above with zero youtube tutorials. I think its best if everyone learns how to start a project, sit back and think how you would want this done, plan it out, and start writing it piece by piece. If you get stuck, maybe think how you can manipulate all of the properties above, to get around the problem. I don't think cleanliness should be an issue (i.e. it doesn't matter if the code is ugly), what matters is you can get it to work, that you are able to use the knowledge you have acquired of the basics, to start up and write a project on your own. Then, you can post it here for feedback (i.e. how can I do this better). Or then start to look up how other people do it to see what portions you can improve your own code on
Minesweeper is a good beginner project, especially when learning GUIs.
Tried the password generator, failed misrerably
I'd add a couple:

1099) A program to predict rain, storm, tornado, sunshine, snow, calm weather based on about 40 inputs from the previous day on your local NWS/NOAA website.

1100) A program to calc calories to eat daily in order to lose X LBS weight per week based of current weight Cw and calories needed per day to sustain current weight Csus and Calories needed to sustain your Goal weight Cgoal. That would work for male and female and for any age or weight using the simple formula.
FEF123) Another could be to code a Pretend Poll for a political office. You have 2 candidates and ask 1,200 people, poll participants are equally shared from the party of each candidate. Give margins of error. Then compare method to methods used in real-life polls today and see if this makes you feel more or less confidant in the polls we see quoted nearly everyday.

Pseudo Modeling
Boom, just finished the hangman
You have to be very careful with the password generator, you shouldn't use them in any site if you use the random module, is better to use a cryto intended module for that porpuse so you can't get hack as easily.
They all sounds awfully boring. Do something that involves your hobbies for example.
Sure, that's definitely a good project idea too
Rubik's cube be like

Jesus I started working on that a few months ago and now I'm trying to work out the maths of bloody 6 interlocking 9 wide sets to get them ALL in the correct order because you know making a computer do CFOP is for losers (jk I'm kidding I know what I'm trying to do is insanely hard)

Yh so that's a WIP that's going to be there for a while
Did you do the blackjack on your own? Or you watched a YouTube video and followed along, understanding the concepts? Or is there any documentation which shows step by step instructions?
don't be afraid to consult youtube videos, but try to program as much as you can on your own, without following any full tutorials. escape tutorial hell as fast as you can.
I‚Äôve done a bunch of tutorials, but not enough projects.  I‚Äôm doing similar projects to these now 

Just jump in and do it on your own. Get help if you‚Äôre stuck, but really work at it first. 

I find it helpful to write up my logic first on paper, and work in chunks.
Get your user input working, then some game logic, then validate user input, allow user to exit game, those sorts of things
Check out the learning resources in the "community info" of this sub-reddit.
How would a password guesser work? Does it continously add on an extra chacracter, cycling through the ascii, and testing it?
Yeah it helps learning the random function
how to make this?


i made a password generator and vault but this sounds interesting too
I also just did a tictactoe but only 3x3 board. I hard coded by comparing the spots within the board horizontally vertically and diagonally. Did you use a loop to iterate through the board to check? I cant imagine doing it my way haha
It's okay, I just found this explanation :

https://en.wikipedia.org/wiki/Mad_Libs
That's a good idea too. I thought of including a calculator project, but I think it will be much better once you learn a GUI module for Python like Tkinter, PyQt5, or Kivy
Very interesting. Didn't knew that module existed. I will look into that module. Thanks for letting everyone know!
I agree. This can also be true for pygame, specifically for game projects
This is what I‚Äôm wondering as well. Everyone says you need a portfolio before applying to jobs but I never understand what the scope and complexity of these projects should be for a junior developer position.
Happy to help!
This ended up being much longer than I thought but I hope it helps someone:

I may have started with [this source](http://inventwithpython.com/invent4thed/chapter5.html) but I personally didn't have much fun with the lesson because it felt like I was just copying and pasting their code then reading what/why they did that. I'm more of a learn/break it as your go. As another fellow beginner, you can start with at least print, input, while/if/for loops. Then for a longer and/or more complex game, branch out into functions, lists, f-strings and the random module (more ideas after examples below).

Here's some examples to give you a rough idea for a basic game:

For `input`, you could use it for:

    adventurer = input('Hello, what is your adventurer's name? ')
    # Now your adventurer has a name that the game can refer to like:
    
    print(adventurer + ', watch out for that horse!')

`while` for health (if you plan to have monsters). I used `while` but `if/elif/else` works too:

    health = 50  # or whatever number you want starting health to be
    
    while health > 0:
        # code for the rest of the game here.
    print('Game Over.')

Choices with `if/else`:

    choice = input('Would you like to take the left path? Y or N. ')
        if choice.lower() == 'y'
        # .lower() allows 'y' or 'Y' to be accepted
            # Write what happens if adventurer go left here.
        else:  # could also be written: elif choice.lower() == 'n'
            # Write what happens if adventurer doesn't go left.

The `random` module for:

    import random
    
    attack = random.randint(1, 5)
    # Your attack will deal a random damage between 1-5 each time
    # To make the game harder, write a seperate but slightly higher attack damage for enemies

I actually started one but haven't completed it yet (mix of laziness and lack of storyline). I recommend starting simple or you'll end up like me, sitting on the file. Here's what I kind of have in my imcompleted game:

* dictionary (for player's inventory as enemies drop loot.)
* pickle module (saves the game progress, or at least their inventory and stats upon exit)
* time module (so there's a delay in loading text all at once depending on situation, see the link above for an example in use)

There's a lot of different ways to write a text-based adventure game, this is just one way to do it. I'm sure there's a bunch of other modules out there you can keep adding to your game but imo you don't really need anything more than the built-in python stuff and the `random` module if you're just making something simple.
You‚Äôll probably have to refactor some of it. I wrote a working version of blackjack (including all special cases like insurance, split pairs etc) to run in the command line. I had to rewrite the main functions into a class and have started to work the GUI code around that. I‚Äôm essentially done with normal rounds working properly and am just now starting to implement special cases. It takes time, but the only way to learn is time. 

I found I don‚Äôt really like doing GUI stuff. It reminds me of early HTML (but that could also be because I chose to use tkinter). 

Just start watching videos on what you want to use.
Once you learn modules like Pygame or Tkinter, it's not very hard to do it. I highly recommend you to check out those libraries and try some projects
Happy to Help! Hope you have great fun doing these projects!
Either way works. You can either learn about classes and then create a card game, or you can learn about classes when you are building the project. An important thing to note is that you don't need classes to build a card game, but it would definitely help
I think it depends. Some of those bots involve APIs and other intermediate concepts that might not be suitable for beginners to try. It could be an interesting project though
I played around with a Discord bot that could reply to eg. !dosomething or delete messages. It was relatively hard to actually understand all the code (taken from a tutorial video) but I just got used to it after a while. I eventually gave up on it since the bot has to run on your pc the whole time if you want to use it on a server. It's fun though, and Discord guides you quite well through the setup part of the bot.
Glad to help! I hope you have fun building these projects!
Happy to hear that you are actively building projects during your journey learning Python. Hope these ideas give some inspiration to you!
That's a good suggestion. However, you need to learn web scraping modules like Beautiful soup before doing those projects. You don't need any modules to build this.
Thanks for the appreciation! I would definitely think Minesweeper is a good idea although you might need knowledge of Pygame or other modules to do it.
I am surprised at why Reddit didn't let you do it. I hope I have answered your question
It's a great video. Thanks for linking it to this post's comments
Happy to Help!
I'm not really experienced myself but ui-wise you should probably look into tkinter. If you want more of an empty canvas to draw on you should use Pygame but that probably comes with the downside of hard-to-make pressable buttons etc.
tldr; look into the tkinter module.
Yes, I completely agree with that
Yes, I agree
That will be a good learning experience. Try to find out your errors and check out many tutorials on the topics if you still can't fix it
Those are definitely interesting ideas!
Very timely :) It would definitely be an interesting project!
Right. They may be less safe than the browser generated safe passwords. But, it's still a project worth trying
So you could either go the learning group theory route or just do Heisse programmatically.
No video, but I researched and referenced a lot. Hardest part for me was calculating the score properly especially given that Ace can be 11 or 1 or 10 (in case of blackjack on draw). I think I was referencing the code in a java tutorial somewhere for that. 

Slight disclaimer: I actually did it in GDScript (Godot), but the core concepts are the same and GDScript is pretty similar to Python.
I agree. Many tutorial YouTubers suggest to not get stuck in 'tutorial hell'. That is, don't only watch tutorials from the beginning of your programming experience as doing projects is important to test your ideas. Do those projects as much as you can on your own and only look into tutorials when you get stuck and can't find a way out
Which libraries will I have to be fluent in to do these projects?
Thank you I'll try this today
Those are nice suggestions! Thanks for suggesting these tips to others
Sorry but how do I get to community info?
Brute force one would do that. I wrote one with itertools.combinations_with_replacements and string.printable. Once it goes over 6 characters it‚Äôll pretty much take an eternity to break, and that‚Äôs not even considering security checks (number of attempts, wait to retry, etc).
I wanted to make it hard for me - therefore I checked only the row, column and/or diagonal for the last placed mark. For 3x3 I checked to see if the len(set()) is = to 1 - that means only one mark - therefore win condition. 

For the 9x9 it was almost the same - checking all 8 directions (combined in 4 opposite pairs) and counting the same consequent marks - if the result was 4 or more - win.
I‚Äôm just now starting to build my portfolio and a friend of mine showed me his, he included every project from school and side projects. On github (which you should be learning to use as early as possible) you have the ability to Star certain projects to point people looking through your github to pay attention to.
Hey man thank you very much for writing your inputs! So far i used print, input, if else, and also just managed to print ascii art! I am very noob at programming in general even though i understand how programming works. So now I'm improvising a text based adventure game and learning stuff as i go. So far i'm having a lot of fun writing the story and writing  all the "if" scenarios and consequences! I will be looking for resources on learning python whenever i stumble across something thats out of my knowledge which is pretty much everything but still... Like other said i'm actually trying to use my brain instead of copying a code from someone else!
Already enjoyed a solid hour struggling with classes and inheritance between different documents so I've enjoyed that a lot.
Apparently my karma is too low because I just made a new account ü§∑üèª‚Äç‚ôÇÔ∏è
Either Tkinter or Pygame. Pygame is a module dedicated to creating 2D games. However, it does come at the downside of not having built-in features. Tkinter works best on that. I would recommend checking both of them out
What is heisse?
Glad to see Godot mentioned
You don't need to be fluent in any! If you want to add graphics and interfaces to these projects, I would recommend pygame (for games) or Tkinter (for GUI's). Other than that, you can just do them on the command line if you want to (That's what I did in the beginning)
Go to menu of this sub and click on wiki. Boom and you are there.
Oh so you only guess up to 6 characters as practice? Also yeah actual password will be harder to guess with all the security measures haha
[A method used for solving in fewest move competitions.](https://www.speedsolving.com/wiki/index.php/Heise_method)
How do you know if someone uses Godot?

Don't worry, they'll tell you.
Thanks!
If it can guess 3-4 characters then it should work for any length characters. The reason for using combinations\_with\_replacements for the brute force method is that you can decide, in the beginning, up to how many characters you want to guess. Then the method recursively iterates through all possible combinations starting from 1 character (It will go through a\~Z and 0\~9 if we are making combinations with only alphanumeric characters. Then \[a\~z or 0\~9\]+\[a\~Z or 0\~9\] and so on.). Once it iterates through the number of designated characters it will stop. I think you can also make it go on for infinity.
Oh the cubing method lol I thought it was some kind of simplified set solving algorithm or something yh I know what that method is that s a really good idea actually
No one uses heise for FMC competitions nowadays by the way
Haha, fair.
Not saying people actually use it, just that it's pretty easy to implement as an algorithm.
Dude! Congratulations! This was a great read and i felt happy for you.

Good job on not giving up, and you learned some impressive stuff in an impressively short time.

Good Luck to you in your future endeavors, and come back here occasionally to help more newbs achieve what you did.
Everyone of these stories are so inspirational to me. 

I hope to learn and make use of python before I'm 40.
[deleted]
This was a very good read. 

At 35, I just started going back to school since graduating Highschool at 18. I decided computer science is the place to start since technology isn‚Äôt going away. 

I‚Äôm in my second term and the combo of python and learning Git is making me want to quit. After reading this I see a glimmer of hope at the end of the tunnel.
Congratulations man.
This story is very very similar to me. All they way until you said database admin, wasn't expecting that. However, I wish you all the best of luck and you'll no doubt be on you way to a very bright future. It's not much but have some silver to show my appreciation.
Bob Ross and MS Paint, haven‚Äôt heard those in a long time.
Congratulations! Saved the post for inspiration. Sometimes I slack off and do nothing for a few weeks before I find the courage to start again.
>I poured time into Python, spending 6-7 hours a day programming and the rest thinking up projects 

Exactly how I got where I am. Writing code, reading about writing code, then writing more code.
Oh Man, I'm so happy for you, congratulations! I recently fell in love with programming as well and your story really inspires me to move forward!
Updinks for being an awesome human being.
Keep at it. You‚Äôve got a great career in front of you.  Keep expanding your knowledge. 

I‚Äôd recommend cloud and devops.  If you learn how to operate in the cloud and define Infrastructure as Code you will be in a great spot. Python and DB skills are a great foundation. 

I‚Äôd also take a look at Data Analysis and Machine Learning. Both can have lots of Python involved and both areas are growing like crazy from a career development perspective. Tons of demand so developing skills and experience during college will prepare you to land an amazing job out of the gate. 

Take it from a 20+ year tech vet.  Never stop learning or building new skills.  Always try to ride the crest of the tech wave.
I'm also in HS currently and have just started Python in my freshman year. I'm also interested in cybersecurity. Any advice?
[deleted]
I still don't understand for loops.... FeelsBadMan.
Very inspiring to read as someone that is about to enter study I'm the field. Thanks for the post man* congrats and good luck to your future :)
Hey dude! Congratulations man! I am struggling with python, so thanks for the motivation. 

Any good resources for cyber security ?? I find it really interesting.
Congratulations! You worked for it and may you climb to greater heights!
This post is incredibly inspiring. I've been programming since Jan 1st, 2020. I hope to be decent at python by 2021. Thank you, and congrats. Many more achievements are coming your way!!
hopefully I'll be posting something like this next year!.. congrats dude
Awesome, Congrats!
üôèüéâüòÉüòÇ  as  JJ‚Äôs poppiesl
**So inspirational.. sending some warm love from Nigeria**
Nice post, so Inspirational.

I am currently at ex43 of LPTHW and am enjoying it. It's been 30 days since I started learning.
Man. What is it about 3 days of struggle that makes ANYTHING possible? Very inspirational! Thanks for sharing.
.
how can I play your dungeon crawler game? On a Mac, if that matters.
Awesome read!! It turned out great but it wasn't nice of your teacher to discourage you to make art like that though
The instant it turns toxic, please resign the instant you have something lined up. If it turns toxic and you don't have anything lined up, get an active job search immediately. There's plenty of material gain in homeless shelters, I've been there. Don't return.
While some people find this inspiring, I find it embarrassing.

The US is so desperate for IT help that they're turning to teenagers with zero higher-education. Worse still, you're somehow being given "government benefits" probably because wherever you work receives government subsidies because they're equally desperate for IT help.

I sure as hell hope you aren't managing any databases with sensitive information on them.

My god this country is falling apart.
Dba isn‚Äôt exactly the same career as programmer.
I started coding at 33 and now I'm 35 making good money doing it in a senior engineer position. It's never too late.
I turn 40 in September (where did all the time go?) And started the Grow with Google Crash course on Python (Coursera) on the first of this month. 

I'm currently in week three and I'm finding it challenging, but I can't stop, won't stop!

Also started the free introduction to Python programming course on Udacity and will purchase Automate the boring stuff course on Udemy for further assistance. 

This Reddit thread has pleased me so much and I intend to one day share my triumphs.
I‚Äôm not much further past you in python and C# and classes confused the shit out of me for a week or two.  After a bit it clicked and now I‚Äôm confused as shit about something else that, although frustrating, I know it will click soon.

Keep at it!
Same here. I'm couple years younger üòä being a new dad doesn't help to concentrate either, but I'm doing fairly well so far.. In 2.1 range, but there are 18 yaars who came there being miles.
Git is terrible when starting it, but once you are over the initial steep learning curve it becomes a love story.
you just have to understand the flow (Git + python) once you have an idea of how SDLC works for those 2 application then you can just focus on the python development learning.
"This was my freedom. I'd go home and paint. And there I could create any kind of world I wanted. It was clean. The water wasn't polluted. Everyone was happy." - Bob Ross
I do the same. Though not as much as before. I used to learn a technology and then go a week or two without doing anything cuz the next step was...well, scary. I did couple of projects in React and Im doing alright, not too bad, but Im kinda intimidated by Redux, it seems like a whole new world of mess.
Do hack the boxes, set up VMs. Hands on practice is key
I will be messaging you in 1 year on [**2021-01-26 04:21:07 UTC**](http://www.wolframalpha.com/input/?i=2021-01-26%2004:21:07%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/etwubn/from_struggling_with_for_loops_to_a_government/ffk0ykr/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fetwubn%2Ffrom_struggling_with_for_loops_to_a_government%2Fffk0ykr%2F%5D%0A%0ARemindMe%21%202021-01-26%2004%3A21%3A07%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20etwubn)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
I explained the basics [here](https://www.reddit.com/r/learnpython/comments/et51ej/stuck_on_python_crash_course_46/?utm_source=share&utm_medium=ios_app&utm_name=iossmf), maybe it could help you.
Install python on your mac and run the .py version found here: https://github.com/Mili-NT/Dungeon-Of-The-Silver-Key
> The US is so desperate for IT help that they're turning to teenagers with zero higher-education

In my and many other people's books, all else being equal, candidates who don't have some paper with a fancily engraved stamp but have shown demonstrable programming skills like the OP has (judging by his code), beats people with higher educational credentials but with no meaningful project to show for, every damn time.

Not to mention, the kid is STILL IN high school, and he is in fact going to college soon. And you know what the best thing about being that young is? He will get even better FAST! All else equal, young people are SMARTER. So if anything, the government arguably made a savvy hiring/economic move by investing in him early and relatively cheap.

TL;DR: you a hater
I took it as DBA used lightly, or perhaps the databases being used aren't entirely sensitive. There's a lot more to DBA'ing than just writing queries and creating indexes, so I'd imagine it more of a job title with that name, but not necessarily the responsibilities. 

Which is cool either way, good for him for getting a job. But.. yea he probably isn't a real DBA, obviously.
Am I reading this right?
No but depending on the field, there can be a lot of crossover between. They "may as well be" in any place that isn't large enough to have a dedicated dba / even dba team.
Thank you for this. 

I turn 32 this year and I'm yet to write anything meaningful beyond print ('hello world!')

Thing is, I've been good with computers from a young age when my family first got our own home computer over 20 years ago. 

I'm ready to push to the next step but working full time and caring for my 2 year old son takes up nearly all my time. 

This is why I'm aiming to learn and make use of python before I'm 40. 

I've already bought a few online courses on udemy so I'm confident once I've watched them and done some basic projects (automation and spreadsheets) I'll have the skills to apply them professionally.
how are you senior after only two years? Is it python? Which segment? Thanks
Automate the boring stuff with Python course usually is on sale or sometimes free on udemy. And the author is active both on reddit and twitter. 

Keep an eye out.
It‚Äôs for sure making me want to punt my laptop to space.
My struggle now is that I don't even know the basics for htb, any good resources?
Thanks will look into it. I can write simple one i in range(), but i in other variable makes me mad. Always try to use while loop if I can even though its bulky.
Clearly the kid has a knack in security, dba deviates from that a bit more. In five years could he be a kickass dba or security admin is the worry
I was fortunate to not have children and be able to basically be unemployed for 6 months while I learned but I still believe you can do it. 

The courses are great to start, but make sure you find little things in your life you can program solutions for, this is where the real learning is done imo. 

Even with your responsibilities I think 40 is a very very achievable goal.
[deleted]
Our core app is built on Java/Angular but I work almost solely in python doing database cleanup and endpoint automation. I do some bug fixes to the core app for various teams but mostly just standalone python scripts.

I'm senior because I have a knack for coding and I worked very hard to learn everything. I would listen to podcasts and YouTube in my free time and anytime I hear a word I don't know I go learn it.

Unless you are working with very low level things most of developing today is easy, it's just knowing what everything means /does.
I remember the feeling. I started using it while developing for a global project. People gave me commands in the chat that I copied and pasted having no idea what I was doing üòÇ

What helped me understand what was going on was creating a repo on github with just a resume, cloning it to my machine and then fooling around with making changes on my machine, pushing back. Then directly on github and pulling it down. Making some local and remote branches and merging them and syncing. Cloning to another computer or folder and syncing between the three of them etc. Cloning on github and working with multiple remotes. Making changes everywhere at once and fixing the merge conflicts. 

Once you got that down with a readme or just a few simple files you're far more equipped to handle git in the wild. It's actually great fun if you ever had to deal with people doing version control by sending zipped folder - far less trouble in the long run
Try doing basic CTFs like bandit at overthewire.org

It helps to pick one area of security to learn at a time. Like if you‚Äôre most interesting in web security, do that. NetSec, binary exploitation, etc.
How's it going?
[deleted]
So relatable. I couldn't even complete the basics in sololearn because the time between practice was so long I'd forget everything.
What‚Äôs the hot tip for those of us trying to smash our automate the boring stuff, but find they only have an hour or two a week to get it done and struggle to then retain all the previous material
[deleted]
Also, I highly recommend Tech with Tim. Something about the way he teaches really works for me. I have been trying to learn programming my whole life and always give up. Every year or two I try again and fail. But with Tim‚Äôs help I am finally getting there. So a big thank you to him too.
[removed]
Cheers
[deleted]
I needed this.  Thanks!
Just what I needed
Yup hanging in there. Passed the stretch of projects but now in the hell of interview prep :(
My issue and why I stopped months ago is I felt like I couldn‚Äôt develop the base knowledge in order to even start a project. I know this has been asked a million times but I watched a 4 hour youtube video and I felt like i didn‚Äôt know where to go from there.
Already did sorry
Thank you. I needed this.
Remember, though.....Tabs over Spaces.
Thank you! üëç
Codewars! Very addictive and a great way to learn - never give up and skip a problem because the feeling you get when you finally solve it is amazing. Also after you solve it you get to see ultra impressive solutions others have posted, which you can analyse and improve the way you code.
Thank you for this I actually need this man am on the verge of just dropping my class!
Yeah definitely joining the rest in this encouragement, learning python/ pandas to up my analytics game (and next is to add SQL to) and it‚Äôs been a struggle.

Between working 40 hours a week plus being a father of 4, I feel like I‚Äôm stretching myself sometimes to even get an hour of my Udemy courses in every other day. I haven‚Äôt even touched it this last week as I felt more burnt out, but really probably just have to be more intentional and effective with my time
Thanks for the motivation!
I needed to read this. I started learning python and then made a break of 2 weeks (sill on that break) because I started learning aws. I am trying to switch jobs and I will need both aws and python to get jobs
If you have no ideas for a project, but want to work on something and learn new things, you can join [Hacktoberfest](https://hacktoberfest.digitalocean.com/) and contribute to a variety of open-source projects.
x1000 couldn't agree more with OP. Sometimes it's taken me 2-3 hours reading people's questions on stack overflow to understand why my "date" column won't convert to datetime and when I realize that I needed to add "utc=True" something the datacamp courses or others never taught me, it's the best feeling over. 

For motivation, and I do lose it because it's tough here in Japan in terms of requirements to switch to a job you don't have company experience with let alone they don't believe in job switching like my country America, I use YouTube programmers to lift me up and continue grinding. Watching some data scientists on YouTube giving advice on how to improve yourself can help you to pick yourself and keep chugging a long.
Yup projects are the best , it really pushes you to learn . People get stuck in tutorials and get a false sense of coding from it .
I really took off with learning python with the jetbrains academy course. Interesting approach to learning. No videos which I find time consuming. Instead short segments of learning on a well mapped course. It's huge. To proceed you have to answer practice questions and do code projects. Word of warning though.. their django section stinks. Go to django website and they have an awesome tutorial. Jetbrains is not free but they often offer so many months for free.
Awesome, I haven't been on stack overflow yet. I'll be working on programming shortly, I'll post a question when I get to it
Thanks so much for this!
This is absolutely true. I started with C++ and I was going through a course and got everything smoothly EXCEPT pointers. Fuck pointers. They‚Äôre stupid. I‚Äôm sure they have a purpose and I still don‚Äôt understand what. But I felt as though I knew enough to start a big personal project, and I just started. It evolved from something super simple to something more and more complex as I went. Adding different features and capabilities with each time I opened my laptop. Still not done with it and a long ways to go, I learned more just digging in and googling than I was going through the course.
Thanks man, currently going through a course and the current lesson is over "regex".
Is this THE Jon Crosse my roommate from UK
But what if you‚Äôre struggling to even grasp the basics much less apply them into an assignment due around the corner?
I'm sure about to right now. I cannot get this code right. It runs, just not giving me the right thing.. can someone help?

&#x200B;

\-------------

    verse = "if you can keep your head when all about you are losing theirs and blaming it on you if you can trust yourself when all men doubt you but make allowance for their doubting too   if you can wait and not be tired by waiting or being lied about  don‚Äôt deal in lies or being hated  don‚Äôt give way to hating and yet don‚Äôt look too good  nor talk too wise"
    print(verse, '\n')
    
    # split verse into list of words
    verse_list = verse.split()
    print(verse_list, '\n')
    
    # convert list to a data structure that stores unique elements
    verse_set = set(verse_list)
    print(verse_set, '\n')
    
    # print the number of unique words
    num_unique = len(verse_list)
    print(num_unique, '\n')

How can i find the length of the set correctly?
I don't know about you guys, but for me it is like this: I learned python good enough to be able to create my things how I want it. Then I start looking around and see other ppl code and start figuring out how much of a mess my code is. No proper patterns, no decorators, no test cases, not following PEPs, etc.

I feel it is an endless road and sometimes it's hard to follow. It seems that to get at that professional level its impossible. Once I manage to learn and use the above mentioned things, I will start struggling on architecture, performance tuning, etc.
Keep walking... Johnny Walker (black label)
Sometimes what works best for me is time away from programming. Come back with a mind that has digested all the info I have fed it instead of a "stuffed" brain.
The beauty of coding is that you don't necessarily need a computer all the time. Working out a logical solution for a problem only needs an inquisitive mind. You can think out all the steps involved and put them into practice later. No time lost.
Yea I needed this a lot!! I just had an exam 1 days ago for cs like a mid term test and the last question was a whole problem set of coding and I don‚Äôt know shit :(... partially blaming my professor for going to quick into the ‚Äúpython introduction‚Äù but found this YouTuber called Corey Schafer and so far watched 3 vids and I actually know what I‚Äôm doing xd
I'm literally sat infront of my computer doing some coursework that involved python (I have started 3 weeks ago) and this has helped motivation! Thanks.
I'm a first year student learning python, our lecturer has challenged us with a bunch of problems we need to solve with just the basic operators +, /, *, -, %, **, //. I'm totally new to python and I'm struggling with the second half of the tasks, I know the problems aren't really that complicated but I'm finding it difficult to create ways to solve the problems.
Are there any resources out there that would help me?
I love this post... But i find that my goals are either so simple they don't satisfy much when met, or so sky high i can't wrap my head around how to chunk them down to achievable bits.
Thank you. I appreciate it.
I really needed to read this. I have felt like an absolute idiot struggling to make sense of objects and beautiful soup. Have had passing thoughts of just quitting the last few days.. This helped.
@vextrax I'll do that, I'll keep that in mind, thanks
I‚Äôm very new to programming but web design really piqued my interest cause I found it fun. Now I‚Äôm taking comp sci and learning python which is a little different from html ngl. I felt like I made such a drastic jump cause I have such a hard time translating code in a way that I can understand. Life was good until loops came into the mix. I even pulled two all nighters for my midterm and I‚Äôm pretty sure I failed it. Not sure if this path was meant for me but I hear a little voice inside of me telling me that to keep going and another one telling me to switch my major however, I don‚Äôt want to give up on myself like this. I can‚Äôt really imagine myself doing anything else. Besides, One midterm shouldn‚Äôt bring me down if I enjoy writing programs in python that I want to program. Then as if God was telling me not to give up this notification pops up and quite frankly this made my day. I honestly thought I was the only one struggling with coding but I see every programmer has their ups and downs. So thank you!
I'm currently struggling with trying to learn APIs.  I REALLY want to make a google API that does some sorting function, but the gmail API documentation might as well be in Japanese!!!!!!!! I can't make heads or tails of it :(
Quit
Read the book and of course complete the examples as you go. 

Whenever you learn a new thing, try it in on your own, separate from the book‚Äôs example,before continuing on. 

A day later, try out what you learned again. 

For example:
if you‚Äôre reading about for loops, do the example in the book.

Create your own for loop. Try looking at the documentation to see what else you can do with the loop. 

Come back tomorrow and create your own for loop.
Idk about you, but I cut it out of my video game time lol
You find more time, I‚Äôm currently working two jobs but make more time to program. 

I listen to pod casts Udemy classes and other recourses in headphones when I can commuting, mindless tasks etc. 

I put time restricters on my entertainment options like reddit.

You can always make more time.

On the other hand burn out is real you need a day once in a while to refresh your mind relax.

Edit: don‚Äôt feel stupid reading the same sentence over and over again while looking up big words you don‚Äôt understand, I do this just about every day I study.
Try to review for 5 minutes a day, just to remind yourself of what you learned.
My way is you read book and tried exercises when you learn concept go make practice from google websites maybe you can read more documentation about for instance loops subject and make practice on other documentations , i will give you good resource for tutorial in python 3 look
RealPython.com
And search like:" loops tutorial in python 3 for beginners" in Youtube
and watch some video and listen to instructor when you writing his source code if he is fast stop video and write code than if you dont understand a section look again until you got it, you tried too many times but you dont get it just pass.
Prolly you will get to concept .
so 
# more effort brings success on something.

and i wasnt understand to dictionaries from ATBS 
# dont stick with one resource.
Those who say they only have an hour or two a week are usually lying to themselves. Toughen up and make time, grind harder
Hour or two? Really?
Find more pockets of 20-30 mins thru the week to review and get in learning time. I guarantee there are things you can give up to gain 20-30 minutes here and there thru the week
Damn I‚Äôm sticking by this. This just spoke and touched my soul.
Pog
Um wat?
Daddy, chill.
What the fuck?
Loggers
While I agree, dont ruin the mood dammit! XD
Good luck!
Just say to studied your interview when the interview day comes i will make it and im sure , it effects to bring success meaning confident you know. Dont be scare from wrong answers or something.
That will pass not permanent thing,kinda like bad situation effects.
Bro just watch videos like one by one and dig every concept until you get it and feeling comfortable with concept and read official documentation and other resources until understand what is that thing in this concept and what does do ? 
# dont go another concept before feeling comfortable about first concept.
Than when you feel ready , try to make some beginner programs with basics of language after when you finished basics go learn some modules like Tkinter , Numpy , Matplotplib , Pandas , Scikit , TensorFlow.
(GUI(Graphical User Interface) , DATA SCƒ∞ENCE , MACHƒ∞NE LEARNƒ∞NG) and more
Did you code along with the video? I've never learned programming on youtube, but I assume it's kind of like a lecture? Or does it have exercises? Anyway, coding needs to be learned by doing. Just watching a video for 4 hours and then get to coding won't work.
Hey man some things aren't for everyone, and that's perfectly okay. If you ever come back, it's always a super helpful and welcoming community around here
Don't. Tabs are the work of the devil.
Which class?
Remember that progress doesn't have to be linear! I feel like time management can always be optimized in some way, but some times we just need a break haha.
You'll learn it in no time :)
That's interesting. I've heard that the labor laws in japan aren't very good, what's your opinion on them?
Exactly, and you never get a chance to actually test what you know
Yeah pointers and addresses are why I never continued with c/c++
Don't give up! Regex looks super confusing the first time you see it. If you have any questions feel free to reach out and I'll be happy to point you towards some resources or answer some questions!
While I can't offer you an egg in these trying times, might I suggest https://regex101.com/ for testing and playing? It wasn't around when I first learned regex. This site will help you by color coding matches.
I found regex to be super fun and interesting personally. Python integrates it pretty well into their language
What course is that? A course containing regex is a great course in my book. Wanna see the rest of it.
Master regex. I'm sick of working with people who don't know it and apparently don't try to know it. It's so freaking easy and super useful
Not me, although I hope you two find each other lmao
Best way imo is to break it down concept by concept. Test what you think you understand to make sure you're right, and when you're confused, ask on this subreddit or stack overflow
>\# print the number of unique words  
num\_unique = len(verse\_list)

You're actually setting it to the length of the list when it should be the length of the set. That is if you want to `num_unique` to store the number of unique words, set it to `len(verse_set)`
I think you may be wondering why the length of `verse_list` is 71 while `verse_set` is 51. The difference comes from the fact that sets remove duplicate items, which occur quite a bit in your `verse` variable. You might want to read the python doc for it [here](https://docs.python.org/2/library/sets.html). 

Also, Kipling's poems are cool :)
Absolutely. I do this at work constantly, as well as in the shower haha
Finding the right YouTuber can be a game changer, good luck in your class!
Absolutely, this sub will always be here to help answer your questions!
If you have individual questions you can always ask them here or on stack overflow. If you post on stack overflow you'll want to double check if your question has already been asked too
[check this post out](https://www.reddit.com/r/learnprogramming/comments/hluvkr/extensive_web_scraping_tutorial_in_python_ruby/?utm_medium=android_app&utm_source=share)
Feel free to ask your questions in this sub or even in my dms. You're not alone, a lot of people struggle at first. The learning curve for programming can be pretty daunting, but once you make it through it'll be a lot easier. It seems like you're putting in the effort, now just make sure you're using all of your resources! Stack overflow will forever and always be your friend too(maybe not as much for conceptual stuff though)
I was going to learn this for a recent project. Once I get around to it, I'll show you how I did it. You might want to try maybe making a Twitter bot first or something, it's a little more simple
Any advice on what books are best for begginers, I'm a first year and I am in need of assistance üòÖ
As you should. In todays world distraction comes in many shapes and form and focus is a hard discipline to master.
I did too haha. I just always feel guilty for time spent on video games. I feel rewarded by Python but then feel lame for spending time out of work working on something career related. I hate my brain.
This has been my struggle. Roflmao
That's been me for the past few weeks. 
Video games were my escape, but I wasn't learning shit. Now, I do maybe 2 hours a night when the kids are asleep
Video games are cool but honestly programming feels way more satisfying.
They made their boy pussy go poggers
What in the goddamn hell are you talking about
Exactly this. I used to go to w3schools and try to use each section in my own program until I understood it, and it worked very well
The 1+ hour videos have never worked for me. Short videos that go in depth on certain concepts have proven to be pretty helpful for me. Fireship.io is a great example in his 100 second videos
yeah so basically you code with video at the same time and documents are better but videos are is kinda lecture.

I agreed , you cant feel comfortable with one video in any basic things except I/O

and basic math operations .
Yeah no, tabs are bae. Spaces can eat a dick.
Heretic! Shun the Unbeliever! Shun! Shun!
Python man intro my professor is not the best its his first time teaching and he is blasting through the material but am getting help and i have a midterm on Monday 12 so will see how that goes
I'll keep it short just so I don't hijack your thread and ramble too much off topic. The labor laws definitely aren't. My other half on some days will work from 9:30am to 1am and I'll feel like crap because my Japanese isn't on par with a native to go and fight for her and others in the same position. Japanese people here just have the mentality of that nothing can be done about it, it's "life"; shoganai („Åó„Çá„ÅÜ„Åå„Å™„ÅÑ). No way in hell any of us in America would tolerate it.
The thing I‚Äôm struggling with the most with python is how simple and ‚Äústreamlined‚Äù it is. I‚Äôm not understanding list comprehension and for loop still are giving me the beans but I‚Äôm slowly getting it. Something I so easily can do with c++ like loop something and output specific indexes of a list is a little more complicated and requires a little more brain power in python.

Edit: also why tf can‚Äôt I pass an argument to a function by reference. I know you can use the global keyword but I‚Äôve been told NOT to use those cause they‚Äôre a pain in the ass to debug
Awesome, thank you!
Thanks! Been playing around with the website, starting to make a little bit of sense!
Andrei Neagoie on Udemy. Really enjoying the course and his approach. The regex section is short, about 30 minutes but he goes over the basics and some exercises. He also provides a couple outside sources that's been really helpful in learning and going in depth with regex.
We use it for data compliance in my job. It is helpful for identifying personal info like social security numbers, especially when they're popping up places where they shouldn't be. Plenty of people just said we couldn't do it before we showed them how easy it is with regex.

If only they hadn't given up on it so early.
It was worth a shot lol
Frankly speaking, I‚Äôm already putting one foot out of the door at this moment. Various ones have come forth to try and help me understand the topics bit by bit but it just doesn‚Äôt seem to resonate in me. Honestly, after trying this I feel like for programming it‚Äôs either you get it or you don‚Äôt. There‚Äôs no in between.
Thank you!
you are incredible! thank you so much for the warm welcome.
Twitter bot got it.  Any other project ideas?  I mesaed around with the NASA API which was interesting.  I suspected as much that gmail API is too advanced and I need to train more
I like Automate the Boring Stuff with Python. Free online, and it gets you working on real projects like you will at home.
make sure you have the slides if possible for each class saved or whatever. if you have to write it down then do it. I know I wish I had especially since I am a 3rd year and still have no idea what I am doing and feel like I am actually a first year learning how to code. I'm out here trying to catch up and it's not a fun game
My advice is set your goals in smaller and more achievable increments. You'll get that rush of dopamine a little more frequently. And also, looking at the clock and saying "I want to have this done by this time" has proven very effective for me doing stuff my brain tells me is a chore lol
Pretty much. There was a point when I was learning where I‚Äôd get to the weekend after working so many 12 hours shifts and then just sit at home and code for 12+ hours. Definitely don‚Äôt play as much video games as I‚Äôd like but I‚Äôm ok with it if it helps me get where I want to be
thanks
Ohhhhh that cleared it up, thank you.
Yeah grammer sucks and it looks silly
The man is high.
Yeah thats it.
same
It is just like the false believers to resort to condemnation. Begone Demons!
Good luck! Feel free to post your questions on this sub
Yeah I use shoganai all the time, it kinda sucks when people use it to justify stuff like that :/. Well I hope they're working towards better laws
It should be the same but simpler in python, if you give me an example I can tell you what it'd translate to in python
You might just need to take a break from it for a bit and then come back and start fresh. Almost every beginner concept you learn in programming all can tie into each other if you want them to. My recommendation is to write your own program and use each concept you've learned at least once in it, until you feel confident about them
Are you talking about the Udemy course? It should be very similar to the book ([which is available for free on the site](https://automatetheboringstuff.com/)). So you can just use that for written reference.
The trick is that figuring out how to make those bitesized challenges is a huge challenge.
O I do I post like a mf hell even found a tutor here!!üòé
Like if I have two vectors, and I want to compare the values at a specific index I could do for (size_t i =0; i < unspecifiedList.size(); i++){
   If (unspecifiedList.at(i) == otherList.at(I)){
        Do something 
   }
}

Where python it‚Äôs a bit smaller and less characters I was to do something like

For x in list1:
  If list1[x] == list2[x]:
      Do something

But depending on the contents of the list I‚Äôd get an error along the lines of ‚Äúindices can‚Äôt be strings‚Äù or an out of range error because the value of x during the for loop is out of the range of the list being referenced. I suppose it‚Äôs just a thing I have to work on spending so much time on C++ and then trying to learn a new language.
You could do 
For i in range(0,Len(list1)):
   If list1[i] == list2[i] :
          Do something
Oohhh that‚Äôs a good one. I‚Äôve been doing for idx, i in enumerate(list1):
And then just referencing idx instead of i and that gives me the index I didn‚Äôt think to use the range function. Now doesn‚Äôt range not include the high? So you‚Äôd have to do (0, (len(list1) + 1))?

Edit: I just realized it wouldn‚Äôt because the index starts at 0 and goes to the length-1.
Yeah, Len() isn't inclusive of the upper bound :)
No stronger motivator for a programmer to work hard than laziness! Way to go.
There really isn't anything comparable to having a personal or work project that is itself useful and rewarding to solve. It's true in general for programming languages, learning them as an end goal is pretty exhausting and unfulfilling.

While you probably won't actually rewrite it once it is working fine, you'll think about a few different ways you could have done it better, and because it is actually interesting and relevant it sinks in and you will write better code next time.
From another comment:

> changing the format of some of the data, dropping unneeded columns, adding more columns with static data based on other entries, then using formulas to pull data that I need to report on.

Design tip: break these up into separate steps. Use the command line, and write real simple scripts to this pattern,

    $ python3 fix_formats.py original.cvs reformat.cvs
    $ python3 drop_columns.py reformat.cvs droppedcols.cvs

etc., where each script takes an input .cvs file name and an output file name.

The point of this is to greatly simplify the programming task. Each script does just one thing, and you have its output file to inspect to make sure it did it right (or how it did it wrong). When it's all working you can use a shell script to run them all one after the other -- or at that point you can write a master python script to call the others. When that's working you can think about writing an interactive program using TKinter, which is a completely different job, but will be easy if you can depend on the previous parts being tested and working right.
the problem I have is finding a project interesting. Also if I do search for a project on google, I'll get the code for the project. I don't want that. I want to build it myself.
+1 on this experience.¬†¬†My boss asked me to periodically read data from some measuring equipment, do a little math, and write the results to a log file.¬†¬†I took this as an opportunity to learn Python.¬†¬†Besides basic commands, I now know how to read USB data and write to files.¬†¬†The reverse should be easy if I have to do it.  Now, I want to buy a Raspberry Pi and program it in Python at home.

PS: By far, the biggest puzzle was figuring out the serial protocol used by the inexpensive Asian-made test equipment. I went through 9 protocol formats with no success, but finally found the winner with protocol #10.
Not only for coding. Learning (in general) is much easier when you have a clear goal that needs new knowledge.
Yeah... Having an end project, and even more if it helps on your job, def speed things up.
Please keep this secret tight lipped. The last thing we need is the bosses who think a task will take 2 weeks finding out it can be done in 2 hours.
Best thing these skills stay with you forever. Grats on the new role and new skill! Keep learning and growing
Just bid for some real time projects from freelancing sites. Make money with learning at same time. It gives ultimate motivation
In my opinion, working with the language to solve real problems is the only way to really grok it.

Might I suggest you spend some time (if you haven't already) with [https://docs.pytest.org/en/7.1.x/](https://docs.pytest.org/en/7.1.x/) to learn unit testing. It will help you write test cases for your code and helps you to verify that your code is doing what **you expect** it to do.
[deleted]
[deleted]
One of the things that caused me to take so long to ever even learn rudimentary (any language) was the lack of an end goal.  I started dabbling in the late 90's, early 2000's, over and over and it never really stuck until late 2010's because I finally had a real goal (work related also) that made me stick with it.
[deleted]
Just completed my own automated script that runs through a folder of excel files to clean up data and structure it in a way for use. I too was looking for ways to incorporate python into my workflow and I‚Äôm really proud to have made something that actually works, and best of all, makes my job easier!
I'm writing a video game in my spare time and I have learned sooooo much c#. I never imagined
I think this is so true. I think it can be tough to come up with a good project.

Some projects make money, but they are usually super tough.

Some are great for learning, but might not accomplish much.

Some are for a passion, like an open source project, but might not explicitly improve your life.

Then, on a rare occasion, an idea pops into your head to actually improve your life. The code writes itself.
Agreed. This is why so many people used [Advent of Code](https://adventofcode.com/) as a good opportunity to learn a new language.
This speaks to me.  Earlier this year, I tried to teach myself Python just to add it to my resume.  But I had such a hard time sticking to it.  I watch an hour of a YouTube tutorial and didn‚Äôt start it again.  Now, I have a real chance at landing a role as a cloud engineer, so I started picking it up again.  I‚Äôm actually enjoying learning more about it.  I started a 6 hour course on YouTube a day ago, and I‚Äôm almost done.  It helped me add 3 more projects to my GitHub.  Sometimes that‚Äôs what it takes to get you to start.  Now I have the motivation to just keep grinding.
Using python to clean excel data is really only useful if you are getting the same files in the same format over and over again right? Python shouldn‚Äôt really be leveraged for one off cases?
This is some wholesome stuff.  Nice to see someone develop.
I have always learned a new coding language after having a client paying me for a projet on this new language. Indeed, it makes all the learning curve much easier otherwise u keep running in circles
what's your current role? I'm looking for a data role like that that I could also automate via learning python lol
Completely agree I would get bored after like 5 mins doing lessons. Needed to import excel files into a sql database that had data down and across so much easier when I had an actual goal.
What libraries are you using to manipulate the data through excel? Just curious.

edit: this was answered below. .csv files and pandas
Goals change everything! Very cool! Thanks!
What does cleaning data mean?
Absolute facts. The biggest tip my friend ever gave me was that you learn by building stuff you wanna make.
Yeah, probably the most popular way to learn programming is to get a big project, break it down into little pieces, and learn what you need to get the job done. It'll help you apply your thinking, get practice with old concepts you know, and learn new ones. Eventually they'll build up, and you can filter out some of the useless stuff you'll never use, until you actually do need to use them. It's pretty sad that some people take learning computer science as just memorizing syntax and whatnot.
I know basic python, i work on completely different tool, I am looking to find some use cases at work to use python.

Can you please help me on finding them, like some common patterns and common tasks which can be automated.

I don't have any manual update excel tasks at work.
>When I say an end goal I don‚Äôt mean an end goal of ‚Äúlearn python‚Äù.  


I decided to learn python because at a job I had, I was starting to use more and more excel for reports and short analysis. I was even at the excel sub, but every now and then there were always threads about what to learn next and a lot of people were recommending to learn python rather than VBA. That's how I heard about python so for me I always had a goal to automate stuff at work.

That's why I always recommend for people working in an office environment to learn with ATBS and for those not working yet or not using a lot of data manipulation to use PCC to learn.
Ooooh I have to work with excel too and was thinking about using python. Any recommendations on resources or what to learn?
Right now I'm in opposite position from you. I got a goal. But don't have enough knowledge on how to get there.

Currently learning Kivy and have so many app ideas in my head. But heavily struggle on how to work it out. And the more I read, the more I confused :(  

I still don't understand how class work, what is super. How do I use dunder etc. And it's been frustrating especially most free tutorial out there doesn't help/doesn't offer all scenario. And I simply don't have time to commit to them as I got a physical labor full-time job.
I started to learn python because of one specific project, took about half year to get program going. Still a lot of things to add and bugs to fix.

Leveled my OOP skills (I started it as procedural first but rewrite some parts as OOP now)

It ended even better than I was initially thinking. I didn't think I'd learn how to do some things. But there some things I still have no idea how to code.

And I needed to watch 0 youtube tutorials to make it (reading docs, and asking question in discord, more useful)
That excel to programmer pipe line is real.
Yep. This is why project development is the best way to learn. Doesn't take a genius to get it done, just a desire and motivation.
> Codes not done yet

Sweet summer child, thinking there is such a thing
I want to learn python only because I want to work with it or in the same area in the future, I don't have any goals yet, I tried to create one but there's nothing I need to automate
Slightly unrelated but if you're working for someone else (like a large company) make sure you do the code in your own time. Otherwise they have the right to seize it. 

Secondly if it really does save you 30 hours a week DO NOT TELL A SOUL. They will give you more work and no reward. Or worse, they'll give you a $10 Walmart gift card. 

Anyway, sounds amazing! Keep it up!
In you're excitement you've probably told the boss already, but on the off chance you haven't: consider keeping quiet and enjoy having an easy job.
That's how I learned Python. At my first co-op, we were running a lot of simulations, and the tool output data in a custom file format. There were python scripts that turn those into CSVs. I had to send a weekly report to my boss. After the first week, I got tired of it. I expanded the python scripts into an Object-Oriented suite; it formats the data the way it was, and created an additional CSV for reports; I even have it send an email. So, every week for that report all I had to do was run that script. And done.
I‚Äôm learning python for the fun of it. Sounds like this can actually help me. If you don‚Äôt mind could you send me a ‚Äúproblem‚Äù like this and I‚Äôll see if I can solve it and maybe learn something along the way :)
I found myself wanting more control and integration with my Discord and game servers. So I set out to write a Bot, this was the driving force for me to switch from JS to Python üòÅ
You are absolutely correct . Having an end goal really important
Haha, it‚Äôs not even so much laziness(maybe it is), but there is 0 reason we need someone to spend 75% of their day cleaning data when it can be done automatically in minutes.
And, people say laziness is not a virtue.  Congrats from someone that doesn't enjoy doing routine mundane activities that can be automated and perhaps eliminates the dullness factor?
This is so true. I wrote myself a really shit live music discovery tool for my dissertation, and I have completely rewritten it twice as I've improved over the last five years.  

Performance testing/review, caching, API usage and http requests? Even just learning how Docker works was quite a cool step. The number of things I've learned just to build a damn music app is obscene. I love it.
I've been working on a personal project and have learned so much. I felt so much joy when I finally figured out my issue I spent 3 hours working on
This is huge, thank you. It‚Äôs really the first thing I‚Äôve written that bigger than hello world.
Rather than a bunch of scripts, why not [subcommands](https://click.palletsprojects.com/en/8.1.x/quickstart/#nesting-commands)?
This is my problem exactly, having an end goal project put in place by work is what is making me actually work towards the goal
Oof that's quite a task reverse engineering is no easy feat congrats! For that kind of stuff a good oscilloscope is invaluable.
It‚Äôs what I‚Äôve really needed, I‚Äôve been meaning to really dig in on python for like 4 years and I finally have a solid use case
Na, soon as I‚Äôm confident in it I‚Äôm going to leverage it for more money for EOY
Are there any sites you can recommend?
That's interesting. Those sites have always seemed scammy to me. 

"Design my full stack enterprise grade software" : Asking price: $200
I‚Äôve thought about that but with a newborn my only time to learn is at work right now
Any genuine freelancing sites you'd recommend for Python data analysis/ manipulation work? Do they pay well and what's the competition like? I'm also learning Python for side hustle before I go on to take web development
I‚Äôll have to check it out
I was slamming my head against the wall for Pyqt about a year ago when I got my first job. And then it just 'clicked' a few months later.

Keep going.
I was contemplating turning my data cleaning into a tkinter gui so others could pull data too
Hahaha I was going to use flask and then switched to tkinter didn‚Äôt think it was that bad.
I used to try to use tkinter for a lot of things to try to get better at it. I found out about kivy. I find it easier to use
I‚Äôm hoping to learn enough to turn it into a job that is more code based than what I‚Äôm currently doing
This is exactly what I‚Äôm hoping to do, automate my reports to open up alot of time for improvement whether it be personal or work, whatever. Just need to free up time in my day
I tried tht a few times, I don‚Äôt game like I used to so it‚Äôs not a motivating project like it used to be
In my case I have weekly reports that run that always generate in the same format
Just started as a vulnerability management analyst, coming over from IT Ops
Right, me too!
All of it is pandas importing a csv
there is also openpyxl if you want to style the worksheet like a normal excel file
Maybe the terminology wasn‚Äôt correct but essentially I‚Äôm importing a csv, changing the format of some of the data, dropping unneeded columns, adding more columns with static data based on other entries, then using formulas to pull data that I need to report on.

It usually takes about an hour to manually do it, if I do it right, then it will take that down to a minute. I need to do these spreadsheets almost daily and once a month I need to do 8 of them in one day
>like some common patterns and common tasks which can be automated.

Well you said here what are you doing in your job that is repetitive and can be automated?

The only way people will help you is if you give more details on what you do on a daily basis.

I would say that you can automate downloads, web scrape competition websites, automate emails for reports or things like the top news from couple of websites in your industry, etc.
Thts the only thing I‚Äôm using it for now. So sorry not going to be much help yet.
Pandas is all I‚Äôm using. And basic syntax/logic
All of my python knowledge is just the basic level stuff. For myself I was given a task that is long and tedious, so I want to automate it. My goal isn‚Äôt ‚Äúbuild big app‚Äù cause like you, I wouldn‚Äôt know where to start. It‚Äôs about setting smaller more achievable goals like in my case, how do I dynamically add data to a csv, then use that data to get the end metrics I need.
Baybe this link will help you to learn about [super() and inheritance](https://realpython.com/python-super/), but before reading this maybe you can to check another article for class from Real python. 

I really think the OOP chapter in python crash course was quite good, and I hear the videos from Corey Schaffer are also good too. Perhaps aside from only learning them you can benefit from more practice, like I am not interested in pygame but I might do the game project in PCC just so I practice more OOP.
I find Google a lot more useful than YouTube. Basically Google the issue and then read how to do it and understand what syntax and why.
I‚Äôm hoping that it can lead me to a true development role in a year
I know it never will be
This was my problem for years
No, she knows I‚Äôm planning on automating some stuff but not to what extent
Can you direct me to some references I can visit and see how to do this or to what extent this can be cleaned?
IMO there's a fine line between laziness and efficiency.

The big difference is that efficiency is doing the stuff you want/need to do with the least effort possible, and laziness is putting in any less effort than that.
That‚Äôs what computers were invented for in the first place!
Now dont tell anyone what you're doing and you're set for life ;)
I hope your ingenuity and innovation is recognised and rewarded at work.
API is the next step in this project because I can pull the data right from the source to make it even more automated.
That and try to get into the habit of writing unittests
It's not really worth it. Your boss is never going to give you a raise in the same scale that you deserve, they're going to give you a small raise and way more work and you'll still be way underpaid based on your new knowledge/ability.

Keep it under wraps, keep learning, find a better paying job.  Once you have an offer in hand, work that offer against them and get a big boi raise.
You may be not wrong. But look for some geniune requirements. Either use it for learning or bid for their project if you comfortable. I picked python web scraping area for my learning with money making purposes
Try upwork.com
[deleted]
[deleted]
[deleted]
Definitely. I'm glad you found a project that motivated you. I just wanted to share that I found one that motivated me.
Studying accounting, so this is helpful. Thanks dude for the detailed reply.
Using pandas with a csv. Essentially I have a csv with a lot of data, half is useless, the other half is needed to be clean up and some calculations ran, so if I can can add all that into a script and output a new csv it can cut down on my time.
Na, cause I make decent money but I want to improve to make more. Can‚Äôt do that if scripts do all my work
Saving me time so yea
Fantastic - Small, incremental improvements are the best way to learn. Also, the new stuff you write will build upon an already-functioning minimum product, which is sorta how agile project delivery works. Good luck with the API stuff!
I mean my ‚Äúnew role‚Äù was a 20k promotion at my current company, so I can at least get decent raises at this company. But yea when I‚Äôm ready to move, I will be doing that.
tbf, making sure your backend works before building the GUI is the best practice for this sort of thing - you can just abandon whatever you were using for frontend and start over.

but yea, I've abandoned entire packages and libraries due to poor documentation. try peeking in the source code, it might have comments.
Maybe rethink the implementation and try something like [Kivy](https://kivy.org/doc/stable/gettingstarted/intro.html)
Definitely both
Hahaha yea I didn‚Äôt understand the difference between tk and ttk
Glad you found it! I‚Äôd be willing to beta test if you ever needed it
I see. I'm a beginner here and trying to frame it as per my understanding

You create a function and ask pandas to do what you want with the dataset right? And just call it everytime you get a new CSV?
I hear you, and I've been you. Telling my boss got me 20k too. 

Not telling my boss and waiting got me 45k the next time.
[deleted]
Probably never finish, you know how game side projects are lol!
Essentially that‚Äôs it. I need to extract and use some of the data to add more rows to the data frame, then use those new rows to extract more data. So essentially I‚Äôm adding data based on current data, then using that new data, extracting metrics that need to be reported on.
There‚Äôs nothing wrong with 20k soon and 25k later(moving jobs)
tk and ttk are very similar, but ttk has slightly different objects.  Easy way to see it is create a super basic gui with some buttons and other objects and do one using ttk and the other using tk.  All I found was they were just mostly visually different.  I think there were some objects added in ttk that weren't in tk... but I can't remember.
I guess I should rephrase that as i still don‚Äôt know the difference
Wow! Awesome!
What does your employer think about it, if they know?
What's your method for reporting right now? I'm good for doing those same steps on data that only me and I will look at, but I have no idea what I'd do if I had to "report my results" to a boss. 
Best option for me right now is to make summary tables and *.png of charts inserted into word
Nope, not at all.

But you'll get more work. Your job will become writing those scripts for every department. You'll have incompetent people misuse your tool and want to know why it broke. People will forget how to do it the old way and you'll be responsible for "why it didn't get done" instead of "thanks so much for this tool!" Your boss will think "oh, that project is similar to this project, he can copy/paste the code and tweak one thing and we'll have this done in an afternoon" when it's nowhere near that simple, and now you're maintaining 8 different code bases for 10 different departments and you're pulling your hair out.

That... or keep your mouth shut, apply for jobs, wait for the right opportunity and play videogames/golf/work out most of the day until the time is right.
My boss encourages it because we badly need automation in our reporting
He wouldn‚Äôt dare tell his boss. All that will happen is that they keep the code he‚Äôs written and automate his job so he can move onto more difficult tasks without compensation.
Essientially I have to cleanup a spreadsheet and then extract some information from it. Then put that in a new spreadsheet and send it to our tableau team to make some pretty graphics.
Look into docxtpl. I use it for writing automated reports to word files from a template. https://docxtpl.readthedocs.io/en/latest/
Have lived this at multiple companies. Heed these words OP.
Have you considered using power query?
Nicely done! That's a real productivity boost. She'll be able to focus on other things more now.
‚Äúmy spawn is a bona-fide hacker‚Äù - OP‚Äôs Mom
That's amazing! Congrats, it's a great feeling, isn't it?

I have been a programmer for many, many years.  Back in the day, I was a Lotus Notes developer, and the company I worked for decided they didn't want to pay for the licenses any more.  They wanted to go another direction.  So, I did some research and decided that PHP would be a good choice.

One problem: I didn't know PHP.  

Now, at this point I had developed in many languages, and have had to learn on my feet.  I even had to learn tcl to do a project for PlanetFeedback.com.  That was a treat (ahem).  

So... I started learning PHP.  I jumped onto a PHP forum (this was before reddit), and absorbed everything I could, while going through tutorials. Pretty soon, I was helping others with their problems.  We also did fun challenges, like "write the song 99 Bottles of Beer on the Wall in as few lines as possible."

6 months after I began, I was approached by Wiley Publishing, and became a co-author of a PHP book!

My advice: Don't think of it as learning, like school, where you have to study and worry about your lack of knowledge.  Look at it like a fun hobby, and don't just look for help here in the sub, but help others whenever you can.  As you have already figured out, it's *very* rewarding :)

Great job, keep it up!

Edit: Wanted to add, I'm a python noob myself.  As in, I decided to jump in yesterday.  I am a developer for the county I live in, and I may have some need to do python projects in the future.  So... here I go again.  I'm excited for the future!  Look for my book in a year or so LMAO
Honestly, I've known how to code for almost 4 years and haven't had the opportunity to help the people I love with it. I've build ML models, pipelines, etc. for work but this beats all of them. Congrats, insanely jealous.
She must be very proud of you.
Well done. And done so quickly too - mine would have added many extra features and be ready by next June. üòÅ

For those not Python inclined, check out

- imagemagik

- jpegcrops
I've had two scripts that made me happy, myself, but I am yet to do something that matters to others. :D First one might even irritate others, as it was a "Scammer Spammer" to spam fake accounts, fake social security numbers and fake passwords to phishing websites. 

But congrats, mate, when you know a thing or two about computers, there are so many ways of improving thing everyone else thinks is inevitable, i guess! Good job!
Well done! Have you developed anything so scrape e-commerce sites before?
That‚Äôs awesome. I love it when we can tangibly help people that don‚Äôt even know what we do. 

I did something similar for my wife who is a teacher. According to her contract, she is to be paid for all hours worked but they were stiffing her and all the other teachers for recess duty and lunch duty (15min a pop). When a grievance was filed, they said ‚Äúyou can manually submit your timesheets for the hours worked‚Äù. Any sheet that was incorrect would not payout. And there was a deadline of 2 days on top of regular teaching responsibilities. 

They gave them a blank pdf that only covered 5 days of a pay period but wanted to account for that too so every 2 sheets had the same pay period. It also had to account for grading period too so you couldn‚Äôt just print off a bunch of sheets with the majority of info filled in already. 

I had her put together a spreadsheet with her times per day(didn‚Äôt have duty every day because of holidays, assemblies, and closings) and made a script to took the template pdf and filled it in accordingly. 

Saved a few hours of printing these out and filling in the sheets accurately. And more importantly, she got the money that was owed her... ~$800.


P.S. I have another story about a 2-3rd? grade student who was given a dumb assignment by her math teacher. ‚ÄúWrite all the numbers from 1-1000‚Äù. That‚Äôs it. There is no lesson in that; it‚Äôs just tedious busy work.

Anyway, her mom is a mathematician and pythonista so she had her make a loop program to write all the numbers and print it out to paper. I suggested she should have put a ‚Äútypo‚Äù in it to challenge the teacher to actually grade it if she was going to make the kids do that punishment of an assignment.
Awesome!
Not a bad approach, I have a colleague that needs something similar. A script that runs on folder and the output shows up somewhere else. My brain went directly to learning to build a GUI. Having the script had default folders to process is way simpler!
Good job. By the way, what did you use to do the desktop icon file? Was it just a python .py file or did you create an exe file?
Do you care to share the code you used?   I‚Äôd be interested in learning from it.
Congrats!
This is beautiful. Thanks.
Very nice of you! I‚Äôm sure she is proud as punch too!
Whoa, you are awesome!
Wow well done, inspiring.
This is what programming is all about helping people with time-consuming jobs so they can actually use their time. Well done!
I'm really happy for you and your mom, it feels great to make something that help other people, glad you got that feeling, and good for her you're a python magician üòä
*I gotta build an automatic thingy to turn on mobile data on my mother's phone whenever she needs.*
This is so cute and pure
Good job u/LittleEaster ! What kind of site does she run and what were the images of? 

Please say cat pajamas and or formal office wear?
Um in your webscraping phase you moved files around in your folders?
How did u able to produce all these.. I from where did u learn all these
Im a beginner and few tips from u might help to me to think and produce some useful things like u did for ur mom
I‚Äôm looking forward to this day. Congrats!
Awesome job!!! I'm sure helping your mom felt great.

What'd you use to make the executable/desktop icon? Pyinstaller? Thats the one thing keeping me from pawning my automated reports off on people at work
You should feel good about it.
Cool. Please elab on the whole icon thingy?
I just did the most useless python project over the past couple weeks.  Wanted to do this for 14 years. Feels amazing. Do it up man.  You can use python in Minecraft java BTW.
This is so wholesome. Congrats for your hard work OP!
This is so amazing! Nothing like the feeling of saving others hours of time with Python. Reminds me of the book Automate the Boring Stuff. Exactly what you did for your mom!
Bravo Zulu!
What is Cloud 9? 
Sounds impressive!
Good job man! Keep goingüëç
This is amazing!
This is what Automate the Boring Stuff with Python is trying to preach.

Now, you can convince your Mum to hire you =D
Yeah it's quite funny how some things can be extremely tedious, but if you know even a little bit of programming, you can make something that saves you so much time!! I have no idea how I would resize things with python, I have Microsoft powertoys and I saw something with resizing lots of images and I was like, who would ever need that... Now I know who! 

Good job putting you skills to actual use, that truly gives a nice motivation.
I love this sub and the people who are on this sub.
I have a feeling you're not telling us the whole story. A happy mom would for sure use all that saved time to cook something delicious for rewarding the geek.
That is amazing, may good keep you both happy.üíô
For sure! She is so happy about it lol
The Command Prompt stuff was just unbelievable to her. ‚ÄúYou‚Äôre not even using the mouse!?‚Äù
"Can you write something that will download free movies?"
Thanks!! Your story is really cool as well. Let us know when the python book is ready lol
5 lines of code is what it took me for 99 bottles of bear on the wall song.

[https://pastebin.com/Ycib33S7](https://pastebin.com/Ycib33S7)  


(Edit: I wasn't able to get the code to look right here so I added a pastebin)
TCL ‚ù§Ô∏è!
Yea, It feels like such a rare, random occurrence that I could ACTUALLY help out with something like this. Maybe if we poke and prod a bit we can find other things to try and help out with. I just feel kind of awkward asking people about all of the manual computer stuff they do lol
Hahah love the scammer spammer idea. And thanks mate, if only I could use my ‚Äúmagic‚Äù figure out the dang windows 10 audio drivers for this AMD Ryzen 5 my life would be complete LOL
[deleted]
Yes! I‚Äôve scraped ecom sites to alert me via text when the price of something drops below X value. Twilio is such a cool module!!
That‚Äôs awesome!! How did you write to a PDF file? Is there a specific module for that? Seems like such a cool thing to be able to do, I‚Äôm sure your wife loved that one. 

And the Math homework..... ugh
It is a module called ‚Äúpyinstaller‚Äù. I watched one YouTube video for like 3 minutes. Super easy.
LOL it‚Äôs women‚Äôs fashion. So pictures of clothing and handbags and stuff
No, those were two separate things. I guess I should have made that clearer. English is hard
Yes, pyinstaller! Works a treat
I made a desktop icon that she can double click to run the script. First you actually have to write a python program as usual, then you can create a desktop icon with the pyinstaller module. Works really well and was quite easy! This way you dint have to go to the command prompt or terminal to run your program, you can just double click the desktop icon!
Next add a prompt so she can point it at any folder!
This is so inspiring. Make sure to remember this any time you need motivation. I know I will. I'm going to help my dad now!
You really want to wow her?

[Go to this site](https://hackertyper.net/) and just start typing really fast (doesn't matter what you type).  

Lots of fun... looks like something they'd use on TV

Edit: If you press F11, it will be full screen
Terminal powaaaaaa
runs an endless ping 

"he's a wizard"
    for bottles in reversed(range(99)):
        print(f"{bottles} bottles of beer on the wall\n{bottles} bottles of beer!\nIf one of those bottles\nShould happen to fall")`

This is what I reached while bored at work. Also format by putting 4 spaces at the beginning of each code line I guess.
What if there is one bottle left?  "1 bottles of beer on the wall" isn't correct grammar ;)

and it's beer, not bear LOL
It was a long time ago, and I don't remember much about it any more... but I have to say, it was interesting.
This is really great! I would also suggest that you make a really simple gui with it. So she could specify the folder of the images and then specify the output or if she doesn't just make your own, and then let her click a bar. Maybe add a loading bar. That would look nice :) 

Good job helping someone you care about with something that you enjoy! I also had the honor to build an app for my mother's job as well. It does really feel satisfying knowing that her 2 hours of work can be done in 2 minutes with Python.

Good luck on your next projects!
Well no, not at all, but... Like I mentioned it is one of my first scripts (and I'm still just learning! :D ), that wan't just following a tutorial, so I'm pretty sure I messed it up at some point, and I'm not 100 on what is actually working ATM. Feel free to play around and make it your own: [https://github.com/mikkelrask/python-scammer-spammer/blob/master/scammer.py](https://github.com/mikkelrask/python-scammer-spammer/blob/master/scammer.py) 

ALSO credit to [Engineering Man on youtube](https://www.youtube.com/watch?v=UtNYzv8gLbs) for the original idea! In this video he sent fake mails and randomised passwords, but most phishing emails I got myself, was trying to phish my SSN and password for Danish Goverment standardised logins, so I wanted to be able to pick and choose what I wanted to spam.   


I also added a whois lookup to do the responsible thing, and get the abuse email from the registrar. :)
Would you mind sharing an example of that? I'm still a python novice, but have been messing with Twilio for some time and would love to combine the two!
Used PyPDF and reportlab for the pdf creation. Since the original was literally just a scanned document, I couldn‚Äôt target cells to update. So I created a blank pdf canvas then placed the items in the proper xy orientation on the canvas. Then just merge the two PDFs and send to printer (win32api and win32print).

The math hw was a better learning experience because she learned how to code something. On a Raspberry Pi no less.
Was that a stand-alone app or do you need to have python installed
That's cool. ‚úåÔ∏èThanks
That is too funny.
HAH that‚Äôs amazing! I‚Äôm gonna have that on my screen while she‚Äôs walking by and see if she says anything
Got it working in one line, all I had to do was place the second line after the colon. It's not very readable though

    for i in range(99,-1,-1): print(i,"bottles of beer on the wall,",i,"bottles of beer.Take one down and pass it around,",i-1,"bottles of beer on the wall.")
I'm a python novice, and that engineer man wrote that code so quick. It's pretty awesome.
I think it packages the interpreter and modules required into the exe, but I haven‚Äôt used it before so don‚Äôt hold me to that.
Make sure you press F11 so it's full screen :)
Wow bro way to go.

At this age its definitely a good start.

Just keep this momentum going and develop even further more ;)
Good work OP. I'm in my 30s and as much as I'd love to learn python properly, I lack the time, motivation and the brain cells. Make the most of the time you have and you'll go far with this.
Damn at 14 it was my first year having internet üòÇ
Dude that's awesome. I always wanted to build something like this. How much time time did it take to build this? And the obligatory What courses did you take to teach yourself  programming to be able to create this?
And now i feel that my learning is pointless. 
Good job, keep it up!
Nice work honestly! I guess you're the reason they have managers asking for junior devs with 10 years of experience right out of school lol
If I started learning Python at the Age of 14 years, I would be a monster by now. good luck to you kid, you have a bright future ahead of you.
Now make one where it downloads the YouTube video and converts to mp3. :)
You seem pretty talented. Good Job. When I see stuff like this I wish I also started earlierüòÇ. Started with about 16 i think.
Started programming when i was 14 but i dropped it when 15, biggest mistake i‚Äôve ever made.
Looks like u have a good future in coding. Good job
That's impressive! Great job
That's good. And when did you start learning to program.?
[deleted]
[deleted]
Doesn't sound like a phone app but a regular application?
Nice work Man ü•≥ü•≥

Is this an executable or do we have to run using python
Guys if you liked my project and if you want to improve something please contribute to my repo. And  don't forget to star my repo.
[deleted]
Great job, keep up the good work
Great work! This is crazy impressive! I hope you keep learning and keep creating!!
How did you learn pyhton?
Congrats man
[removed]
That's amazing my man! At that rate you won't need higher education to get yourself a good job in the field if that's what you hope to do in the future. Save the tuition fees and reap the rewards of the hard work you've put in early in life. Keep it up
That's the way to go. Did you have fun?
I so good
Keep at it!
#AMAZING!!!
Very impressive.  I'm nearly 3x your age (and have been learning Python for 5 years) and I still can't program like this.
Great want a cookie? /s

Congratulations dude! That‚Äôs way more drive than I showed at 14 lol
Well done mate.  Im 50 and been pythoning (lol) for a bit now.  This is very impressive.
Dang congrats man!
Damn, kid! Well done!!!!!

I gotta get my 43 year old butt some Python learning!
I just started learning python at 23. This is inspiring and cool!
Good job!
Excellent work at your age. Keep it up.
Whoaaaa that's epik dude, i feel like I'm not doing enough lol I'm 17 i know python but at a very basic level the only library im able to use is flask, yeah ik i also know html css and js, and I'm learning java cause android sounds really cool, but I'm pretty much a noob in all of em uhg you've got talent, use that wisely
Kid, that's amazing. Al.ready got me beat here at 27, keep it up!
Wow!! Wish I could do these when I was your age. More grease to your elbow
Good job, young man!
same age as u and everything else except for the fact that I create bots (discord, slack, etc...), nice job
Very impressive. At your age, all that was in my head was video games and entertainment. How is it like for you?
Good job! I‚Äôm just now starting to learn Python, I‚Äôm excited for the future :)
Wow at your age I wasn't really thinking about coding.
In fact, I kind of regret not getting started when I was your age. Would you mind telling me how you got started and what I should do? I am just barely getting started in python üòû. I want to master a good part of python while I am still in high school.
Lol I'm 14yrs old too. I also know py
Only just saw this, but wow this is impressive, great work! Been in the field for a bit over a year now at 20, keep up the fantastic effort at 14. 

My suggestions to improve would be to:

A. Try to make your code more efficient and speed test functionality. The smallest changes can make a world of difference when it comes to speed of a program.

And B. Look at websites such as Spotify, Apple (although overdone), and other sites such as even Java (I think, while it has a simple design, it looks nice), to restyle your program a bit!

Know there's always room for improvement, but keep on building! Remember that finishing a project is 100x better than having an idea for one
I have a small suggestion, if you can add a loading spinner or anything that indicates loading while the lyrics are being fetched that'd be awesome.
Thanks a lot
Thanks a lot.
This hit me spiritually
Don‚Äòt limit yourself by saying you lack the brain cells. It only makes it harder to learn. 
If you‚Äòre into books, I highly recommend "A Mind For Numbers" by Barbara Oakley to learn how to learn, "Mindset" by Dr Carol S. Dweck to understand, that there is no reason to limit yourself and "Why we sleep" by Matthew Walker to learn, how healthy sleep can improve our cognitive functions and enhance your learning experience.
same
Ha yes back in 1998 on Windows 3.1 with a dial up modem!
Same here hahaha
Obligatory [dail up handshake](https://youtu.be/vvr9AMWEU-c)
You don't need internet to program tho lol
Thanks a lot ;) it took around 4 months to complete this.

I learned basic python in June 2020 . And I learned pyqt5 by seeing YouTube tutorials

and searching QT docs. And some stackoverflow , ultimately by googling.

And now I know pretty much advanced PyQt, but still I need to learn very much.
Thanks a lot
Thanks.
Thanks a lot :)
There is a python module named spotdl which downloads songs from spotify.

Actually it searches the song or playlist you specifies with the spotify url in command and downloads it with youtubedl.

just search spotdl python in google and you will get the results.
there is a module called pytube if I'm not wrong. I've tried doing this before and it's pretty simple and easy
Thanks a lot :) ü§£
Idk how old you are but it might not be too late to go back and learn it again.
üòÅüòÅ
Thanks a lot
Thanks:)
Thanks :) I stared learning python in June 2020
Thanks üòÅ
Thanks \^\_\^
yes it is a desktop app
If you want to use exe than you can use or just download the source code and run it with python. Thanks
yes I am. I was born on nov. 2006
Thanks
Thanks
Thanks
Thanks . Well you know me. I am using arduino
Thanks
Yes a loooooooooooooooooooooooooooooooooot.
thanks
thanks
Thanks
thanks a lot
thanks
Thanks a  lot
Thanks a lot
thanks a lot
Thanks a lot
Thanks a lot
Thanks a lot , sure I will use my talent wisely.
Thanks a lot
Thanks a lot
Thanks
Thanks a lot bro :)
Thanks a lot . I like playing games but I don't play much. I very much like reading novels and watching movies.
Thanks :)
Thanks a lot :).

I learned the python basics from a teacher. And all this Pyqt and much advanced stuff from youtube. These are some Youtube channels you can check-,parwiz forogh, Free code camp , Tech With Tim ,Fireship.io, Codemy , edureka and if know hindi you can check this channel Code with Harry.

  
And if know want book then 'Python Crash Course' and 'Automate boring stuff with python' are good books.
Thanks a lot :) , Sure i will improve my code and website.
Sure i will add
when i read the first line i was damn sure it was a fellow Indian XD
on multiple levels
To be honest, like many others, my biggest issue is a lack of time.
ü§£
Disagree, can't imagine programming without stackoverflow lol
Ye literally takes two lines
Downloading from YouTube is easy with pytube. I‚Äôve done that as well. But does pytube make mp3s?
No Problem. Keep it up
I‚Äôm 18 now and i‚Äôve started again a month ago with python, surprisingly i still had lot of knowledge in my fingers after not touching python for 3 years
I actually have a question, how did you learn python. I'm currently learning the basics of python and also a teen. How did you learn?
Very productive within a short time.
Ok thank-you üòä
[removed]
Awesome! Then you'll go a long way! ü§òü§ò
Truly amazing. You will definitely go places, keep it up
yup
I managed it before stack overflow existed.
People were programming since the 60's tf is this sub on about? Is this some meme? What about all the video games and software that was build all around the world before 1990?
You could always read a book lmao.
Actually youtubedl python also downloads mp3 from videos. And spotdl downloads mp3 only. I by mistake wrote videos above but its mp3 . I edited the comment.
needs another module which I forgot
Bro I'm 30 and just started learning python
Just learn more and you will be an expert and i also need to learn more.
I'm 18 too and trust me, we aren't old lol
I learned the python basics from a teacher. And all this Pyqt and much advanced stuff from youtube. These are some Youtube channels you can check-,parwiz forogh, Free code camp , Tech With Tim ,Fireship.io, Codemy , edureka  and if know hindi you can check this channel Code with Harry.
I am trying to learn linux on kali linux  wsl2 and some javascript and css and nodejs
Actually you do need internet to download pycharm and other stuff
Thank you! I'll check them out
But actually its my tenth class so I do not get much time
Nah dude, you can always grab it from a floppy disk. /s
And if you want to make a console based advanced app you can check prompt toolkit its an amazing module. You will find basics  in documentation but not much . For more advanced check their github page and see the examples folder.
Lol
Thanks for the help! I'ma go check those out. Hell maybe even one day I'll make a program
I suck.

I went to grab this at the freebie price, and after logging in got this message:  


>You purchased this course on Nov. 27, 2017

  
Well shit I paid for it. Might as well actually do it. :)

... same for all of the books that I've bought over the years... *sigh*
Oh wait! You‚Äôre the guy who wrote it! I got it, but I‚Äôm kind of confused what you mean when you say I can get it for free, but sign up for $17.
Not only is it free, I can return it within 30 days if I don‚Äôt like it!
Love the book! Helped me a lot as a librarian to wrangle bibliographic and circulation data. I'll be ordering the second edition for the collection.
Thanks, Al!
Thanks a lot for the code. Signed up for it.
Thanks a lot!

I'll try to give back as much as I can to the community myself!

**Very kind of you.**
How is this different from the website?
Awesome! Thanks for the link
Thanks Al
thank you so much, Al
I love you
The way you explain stuff is so easy to understand , thanks for this awesome course , I finally started to like coding
I was just about to sign up in excitement, and realized...i finished the course last year lol!

Im a BIG fan of the book and Course!
Hell yeah I love free! Especially for something like (*googles ATBS*) this! Awesome, thank you!
Thank you!
Just got in. Thank you so much!!!
thank you! I got the ATBS 2nd ed book last week so this is AWESOME!
Just signed up a couple of weeks ago, no regrets, totally worth it. Thank you for your work.
Much appreciated.
wow.. thank you. I wrote some s**ty regex code for my uni class, a real mess. I came across your book yesterday and finally someone showed me what good code looks like, and I got it! I cleaned up my code, the book is really great for me as a beginner. Thank you, I know this course is going to be great!
Hey, do you know when your next free code is going to be? Thanks!
Works for me, great
Thank you, I signed up!
Got it. Thank You and helped few of my frenz who are starting to learn python as well.
Wow thank you so much, I really appreciate it!

Best wishes to you :)
Thank you!
Thank you kind stranger
Damn, thank you Soo much I really love the book and really boosted me into python
Awesome..
Thanks man!! Signed Up
Thankyouu Santa!!
I've never been able to learn from video courses, but your book is great and made me very enthusiastic about Python. I've been recommending the book to all of my friends so I'll recommend the course too. Thank you!

Another thing. I'm not sure this is the right place, but since I'm already here... In the Input Validation chapter in ATBS2, specifically in the Multiplication Quiz Project, you start using "%s" and this, as far as I can tell, had not been introduced yet. This made me very confused and I felt like I had missed something big. It was easy enough to learn about it from Google, but it would be nice to have a heads up or something.

Anyway, the book is awesome!
Thank you so much for this
<3 u bb
Thank you so much
It'll help a lot
Thank you so much!
It's great that it's free, but it's a shame there aren't any quizzes or anything.
Thank you very much for the link. Appreciate it.
Thanks Al.  Been thinking of working through a course on this for a while now.
Thanks!
I dont even feel bad I paid for it.
You're awesome, man. Thanks.
Awhile back I gifted an additional copy of the video course to my son, who's coming up on his last year in a simulation and game development program at our local community college, when he mentioned he'd like to get some practical experience with python (they focus on C# and C++ in the curriculum). Still after him to follow through. I found both the book (which I also bought) and video course enormously helpful in breaking past the usual theoretical approach of most python beginner classes. I come from a sysadmin background where we mostly did shell and perl programming. Al's was the first approach that really motivated me to make python my go-to language.
Thanks
Thank you my good sir!!!
Thanks for sharing! I went ahead and grabbed it! From what I've seen so far it seems to do a pretty decent job of covering the basics in a concise manner.
Very awesome of you! I took a couple courses already and can't wait to get started :)
Sweigart 2020!
So, I see this course and book posted a lot, but have never taken a look. Is it still worth as an intermediate-advanced python programmer?
why a course? the book is pretty self explanatory already
Thank you! I've been wanting to get this course for about a month but didn't have the money. You just earned a silver.
Thanks!
Thank you!
Just picked it up, thank you! Looking forward to doing this course
Thank you so much. Just what I needed right now
Thanks OP, now let me hurry up and procrastinate
Thank you!
Awesome thank you for this! I hit a wall half way through the book so a course will be really helpful!  


Thanks!
Thank you for the code!! I always wanted to learn automation and Python but the courses are too expensive for me yet.
Thank you!!!! I actually didnt have this one lol
Thank you!!!
Thank you, Al! Great work. I have two questions:

Will there be an updated video course version coming soon to match the second edition of the book?

If you (mistakenly) bought the book via Amazon, is there any way to still get your hands on the pdf+epub? I didn‚Äôt know about this beforehand. :/
Fuck I missed it :(
Man I keep missing out on them. I missed the November one and now the December one too
Just got the udemy access for free [here](https://www.freewebcart.com/automate-the-boring-stuff-with-python/)

For those who missed the previous coupons üëç
> DEC2019 

Ha beat you...mine says 2015...damn procrastination
Hahaha, me to:(
Add myself to the list lol

> You purchased this course on June 12, 2019
Anyone beat this date?

You purchased this course on Sept. 23, 2015
June 11, 2019 for me haha
Yup same here haha
November 04, 2019. Damn I bought it exactly 1 month ago (cannot remember free or not).
Wow, Nov. 28th, 2017 and I didn't get around to it either
June 14 xd, you ain't alone.
this hits very close to home lol.
were you trying to learn python or trying to automate something?
Gotta remember to enter DEC2019FREE!
are you referring to the second code? after the free period (only 3 days), course would be $14 with DEC2019 coupon code (rest of the month) instead of $50
Learn the subject then return it. Unethical life pro tip lol
It‚Äôs him teaching what the book teaches
same :(
Sept. 22, 2015 for me it seems...
Yeah. The second code. So, do I get the whole course for free as long as I get it within 3 days, and then afterwards, I can use the code to get it for a discount?
What if the subject is "How to be ethical"?
https://www.reddit.com/r/learnprogramming/comments/eepid0/free_code_for_automate_the_boring_stuff_with/?utm_source=share&utm_medium=ios_app&utm_name=iossmf

It‚Äôs available now for 2 more days
Now I‚Äôll try not to miss the January one
Klink shakes his fist... "Hogaaaaaann!!!"
yeah, that's how the author is using the discount codes allowed by Udemy

even if you get the free one, you still get all the features, for ex: you'll get updates when the author eventually uploads the changes for version 2 of the book
Use the promo code above now
Okay. So, since I got it for free, I will always have it for free, but if I didn‚Äôt get it for free, I would be able to use the code to get it at a discount. That makes sense. Thanks.
Thank you so much for this! It's extremely helpful. I'd love one with pandas added ;)
Thank You So Much :)
Thank you!
Thank you so much man! You are a true legend! Thank you so much for making this free and yet still putting so much work into it!
I found a typo. "mall sprograms"  Page two, bottom middle collumn.
Thanks!
Thank you for sharing this
Damn, Thank you, nice work
As a newbie, this is immensely helpful, thanks!
Very Nice - Thanks
Thank you man
Thank you so much
I just picked these up a couple hours ago. They've already helped me simplify my current project's code and gave me an idea of how to approach a debugging problem. Well worth the donation, man.
Thanks so much for this your book is great and I will use these cheat sheets when I teach Python in a few weeks in my new gig. When people *don't* recommend your book I don't think they realize the mistake they are making. :)
I‚Äôve used python for a few years and still found this very helpful! Thank you! üôèüèª
thank it will be very helpful for my python journey
This post and your subsequent diligence in these comments replying to everyone is super appreciated, thank you!
Thanks!
This is very helpful. Thank you very much
Appreciate it. Thanks!
Thank you for this :) <3
Thanks OP. I‚Äôm a beginner and your helping out a lot. I‚Äôd give an award because this is exactly what I‚Äôve been looking for but I don‚Äôt have funds. Sorry bro.
It's been a while since I wrote anything on python, this'll help to get back at it, thanks!!!
this will be very useful indeed! thanks!
it's easter but my saviour has arrived. thank you so much!
The \*Best Python Cheat Sheet: [https://kieranholland.com/best-python-cheat-sheet/](https://kieranholland.com/best-python-cheat-sheet/)
.
Thank you so much, I really appreciate it! :)
Thank you so much!!! I also have a few more sources to complement yours which I will definitely download!!

* [Data Cheat Sheets Database](https://datagious.com/data-science-cheat-sheets/)
* [GitHub Python Crash Course Cheat Sheets](https://ehmatthes.github.io/pcc_2e/cheat_sheets/cheat_sheets/)
* This one might be also helpful.[Infographic Python Cheat Sheet](https://websitesetup.org/python-cheat-sheet/)
You're quite welcome, and I'm glad to hear they're useful.

I won't be adding another sheet too soon, but one of the reasons for updating to a proper graphic design format is so I can continue adding new sheets over time, and update them on a more regular basis.

Fun story: I like Indesign because it has scripting capabilities. I wanted to create one long document with all the cheat sheets, and then write a script that dumps out the whole document in color, then dumps each individual sheet, then does the same thing again with the b&w styles applied. That way I can update once, and easily regenerate all of the sheets in both styles.

But like many desktop apps with proprietary scripting capabilities, the language is...not entirely fun to work with. Indesign uses a language called ExtendScript, which is based on JavaScript from the mid 2000s. It hasn't been updated in a very long time. I found myself wanting to write code like `if current_style in styles_to_change`, but found that the language doesn't really have that kind of test. So I came up with a convoluted approach that examines the string name of the current style against the string names of the styles I want to change, and then followed a strict naming convention for the styles I was developing in Indesign. It was like doing an overly ambitious pattern-matching exercise using only strings and arrays. I was very happy to return to Python when this work was finished. :)
I have two whole cheat sheets just for pandas, respond to this comment so I can send them to you when I go on my computer

EDIT:

[This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)

[This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
Ye great. +1 for Pandas
Thanks, I will take care of that shortly.
That's great to hear! Do you mind if I asked what kind of simplification you made, and how your thinking about the debugging problem changed?
Responding!!
same! :)
Can you please send me too?
Response sent! üòä
Responding to this comment
Here pls
Responding!
yes please.

 edit: I got links from other responses thanks!
Shoutout to this dude
You saint, I‚Äôve been struggling learning pandas and this has already cleared up some of my questions
Can you send it to me too?
Sure thing.

Your example of naming a variable with input() on the same line of code simplified a whole series of user inputs in my program that I'm building. Before, I'd just coded it as:

print('Which one is your email providers: Gmail, Yahoo, Outlook?')
emailServer = input()

The same question above email providers actually relates to the bug I've been working on since Friday. My user input fails to go through my list of if statements to match the email provider :

if emailServer == 'Gmail':
     emailProvider = 'smtp.gmail.com'

I'm thinking that putting those email providers in a dictionary like your cheat sheet shows may solve the problem. I just haven't been able to apply that theory yet.
[This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)

[This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
[This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)

[This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
[This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)

[This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
[This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)

[This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
[This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)

[This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
I have responded to a few others with the links, so you can check! Don't get me wrong I'm just not on my computer.
Thanks for sharing, those are really interesting takeaways.
Thanks :)
You're the man...
Thank you so much
Many thanks! üëç
Maybe you can post the code, it will be useful for someone.
Going through this course in udemy :) excited to apply what ive learned
[deleted]
I am the beginner you mentioned, scared and struggling on learning Python by my own, reading this r/learnprogramming, r/learnpython on a daily basis, hoping to someday understand most of the threads going on. Its been a month and I don't know where my direction is? Still there trying to master functions, list, tuples and all, still afraid of inheritance and OOP, all the courage I have is to go to w3schools and practice all the new syntax. I have completed the python for dummies book until it got to AI and neural networks stuff. Most of the specified code  during these topics, didn't run and I found no solution on stackoverflow or google that I can understand and apply. That's where my mind started going bonkers. I don't have any outlet for this kind of stuff building up in my head. Neither do I have any place like you where I can actually apply what I learn. But let's be honest here, I haven't learn enough to apply on anything.

I would really appreciate a suggestion on what to do next.

My goal is to get into Data Science/Data Analysis. That's the reason I started learning python a month ago. Prior to that, I had no known knowledge on programming. I know I need to learn SQL next, but I can't make myself ready until I feel I confident in programing. I am open for anything free, but courses like udacity and coursera are like way out of my budget.
This is so awesome! I also took that class to learn python and it really helped to have my own project in mind while taking the course.
#CONGRATULATIONS!!!
I too would like to learn Python but I just don't have a clue where to start/what to write (as in what program to write)
Well done you! Don't forget to save all your projects. Soon enough you'll realise how far you've come.
Awesome work man well done, if you're feeling brave try re-writing the app using Pathlib, happy to do a screen share with you and help you out.
Great job -- now bite off something a bit more complex, gut through it, and I promise you after all the frustration, you'll feel great and have learned a lot, and probably have created something that will save time every week going forward.  Invest 4 hours now, save days later.
You can use openpyxl to automate the input process as well!!
that's awesome, keep it up!
Not going to lie I downloaded Python at work and I‚Äôm scared to open it.
If you are using Python in work I recommend going to Udemy and picking up  Boris Paskhaver Pandas course.

[https://www.udemy.com/course/data-analysis-with-pandas/](https://www.udemy.com/course/data-analysis-with-pandas/)
That's awesome. I find it much easier to be motivated when you can apply it to work or home for a practical reason. 

First project I did was to organise some family home video files. Maybe 50 lines at most. 

And it's been a number of things since, each getting a bit cleaner and easier to understand (for instance I just learned f strings). But having a real life goal is key for sure. I find it hard to be motivated to do pointless logic puzzles, even if they are good practice.
Even though this is much easier to do in just explorer (select all, copy path, paste into excel). I‚Äôll bet you anything that someone at some point was doing this manually. You‚Äôre gaining confidence in your ability to automate repetitive tasks. You will be a utility wizard to your boss in no time.
If your colleagues can't reverse engineer an uncommented python program then Lord help  your company's future
While I also have tried this course I found it to be a bit wierd (I don't know) however I found the full courses of Free Code Academy much better so when you are looking for extra learning material I can very much suggest checking out their YouTube cgannel
How did u use the pip installs it doesn‚Äôt work for me it says that they are outdated
Nicely done! First victory really tastes good, doesn't it?
There's no going back now, this is just the beginning
I feel like I have read this post earlier
You could do this with excel in power query in like 3 seconds btw
you can also do this by highlighting all the files, ‚Äúcopy path‚Äù then paste into excel. Seems to simple to work...
‚ÄúZhu Li do the thing!‚Äù
I‚Äôm kinda enjoying python crash course more
having the same feelings; after doing a python youtube course for one month, I managed to made a calculator this weekend, it was a guided project, but I put my own design with the tkinter, import my own icon and put another mathematic functions, I am feeling proud of seeing the utility of python.
Hey buddy I'm new to python , it's be great if you could tell me how you applied for the course .
***THIS  IS  WHAT  I  CALL  ‚ÄúEXCELLENT‚Äù***
Thanks for sharing and congrats!  Did you use the atbs book, the online course or both?
This is inspiring for me. I've been (VERY passively) trying to learn python for over a month now but I never seem to find the time and I'm struggling to see the potential unless I really dedicate months to learning it. I'm glad to see that if I can buckle down and just get to it, I could learn a few useful tricks in such a short amount of time!
That feeling of emergent power... intoxicating, isn't it?
It was something to the effect of:

    import os
    for folder, subfolder, filenames in os.walk([directory]):
        for filename in filenames:
            print(filename+'\n')

(And yes, I have now gone through the chapter of copying and pasting that directly into other applications, but at the time I did that with ctrl+c and ctrl+v)

EDIT: code copied properly this time.
Haha, didn't know that! To be fair my work IT environment is incredibly tightly locked down and I can't access the command prompt, but good to know!
Came here to mention this, and I'm just a hobbyist.
In my experience, you often start out like that and then after a year you have a batch file full of features. 

As a beginner it is perfect to start with simple things to progress into more advanced things. Perhaps after a while they need to check stuff inside the files and based on the content and/or filenames they should be moved to different directories and they perhaps want a pretty looking logfile that truncates itself so it does not become huge.

Then they have learned quite a few useful features, step by step.

Batch files are not that much of an advantage anyway. Sure, using dir is faster than running a script in python but i doubt this operation is in that much of a hurry anyway. 10 seconds vs 2 seconds might not matter that much in that situation.
> Neither do I have any place like you where I can actually apply what I learn. But let's be honest here, I haven't learn enough to apply on anything. 

These two sentences here are the problem! I found it really hard to learn when I was just trying to learn syntax, and never felt I knew enough to do anything. What helped me was to try to think of a task that I could do to practice using the syntax, for example I wrote a script that pulled my steam library and worked out cost per hour played (I have made some poor purchasing decisions but that's another story). Did this take longer than doing it manually? Absolutely. Did it involve lots of Googling to try to work out how regexes work? Sure did. Did I need to do this for work? Goodness me no.

I think what I'd recommend, and I'm not an expert on this so feel free to ignore, is:

1. Take a break - you sound fed up and as if you are treating this as a chore. It shouldn't be, it should be fun. It's ok to have a day off and come back when you want to learn.
2. Think of anything you could automate - want to check the weather in your local area? Check Apple's share price? Play rock, paper, scissors against your computer? All of these are things that I almost guarantee you have the knowledge to do, you just need a lot of Googling and...
3. Break things into small pieces - you can't write the whole programme in one sitting, so break it down into smaller bits. In effect you might have a tiny bit of code to copy some text, another bit to paste it, another bit to add a set phrase to the end of the text, etc. Breaking the code down makes it much more approachable and feel more achievable, and you will have learnt enough to do these small things, even if you don't feel you've learnt enough for the whole project.
Everyone and their mother wants to do Data Science , most roles require an MS or PHD because back then it was the stuff what PHD researchers done, also companies not even know what the hell they are doing with the title so some of the data science is just SQL reporting or some basic Data Analysis role vica versa with Data Analysis.

 What was your motivation in that specialization ?

You definitely need SQL , Python. 

If you are like me and everybody just bores you with "just apply it to a real world problem" I would first look at packages to use from.

These are the official packages would definitely read through and try to use them .

[https://docs.anaconda.com/anaconda/packages/py3.8\_win-64/](https://docs.anaconda.com/anaconda/packages/py3.8_win-64/)

Anaconda is a data science environment for Python and R and countless other and it comes with the basic 250 python packages preinstalled.

It also has a better package management system than pip , because pip is fucking ridiculous IMO.

[https://www.python.org/about/gettingstarted/](https://www.python.org/about/gettingstarted/)

This is good website to start with python. 

[https://www.udacity.com/course/intro-to-data-science--ud359](https://www.udacity.com/course/intro-to-data-science--ud359)

This is a free course.
I've started learning python year and a half ago, with no prior knowledge of programming or even computers, it was a bumpy ride, but now I can do simple scripts for most of my personal projects, and even sell my skills for some beer money. I read "Automate the boring stuff", made a dozen of personal projects with even more bugs and used codewars, which really helps to push yourself if you have no ideas or direction on whwt to do "at the moment".
This is the wrong mentality. You should be thinking of little scripts and then try to make them. Example I made one that generated synthetic data for a project . I also made one that backs up roguelike game save files so you don't suffer permadeath in a game. The user can select a save file and load the game. It then launched the game directly from the script .

Think of things to make and just make them.
Do you have any data to work with at work? If not, some projects that you can work on at home are things like: 

Budget.  Can you find a way to pull all of your transaction data, put it into a data frame, and then do some analysis on it like categorizing, visualizing, etc? I don‚Äôt know how to do databases but I have a lot of work data from old ass apps with no APIs (I‚Äôm in healthcare), so I use pandas and an excel sheet like a poor mans database 

Basically it looks like:

Export shitty unclean data from my work medical records 

Clean up the data (replacing weird symbols, spaces, getting all the date time in the same format, etc) 

Convert excel sheet into a pandas data frame

Do data analysis.  And then saving back to an excel spreadsheet using xlsxwriter 

I‚Äôm certain that this is a terrible way to do what I‚Äôm trying to do, but it works! So, whatevs lol.  I asked my friend who is more advanced in data science than me when should I start learning databases instead of my excel spreadsheet database, and he said, ‚Äúmeh, if it works for you keep doing it. When it stops working then you‚Äôll know it‚Äôs time to change‚Äù

I suspect that my method will stop working when the rows in the data frame get into the millions?

Anyway, another idea if you don‚Äôt want to do budget is to do fantasy football analysis.  There are some good websites that have APIs, so you can learn how to make those in addition to the data science tools like pandas, etc.  

TL;DR learning is much easier when you have a specific project in mind

P.s.  I took a traditional online community college course for Python and Corey Schafers YouTube series is in the exact order of my schools modules for object oriented programming in Python 

So if you want a traditional track you can literally just go through this videos in orders and you‚Äôve got it!
A month is a little early to learn this stuff.  At a month in I think you should be learning how to do for while loops, maybe getting introduced to dictionaries.
You should look up some tutorials on setting up python with visual studio code on youtube/web. It's a much better for starting out than the barebones python install
thanks 

what did you like about this course?
I actually didn't know you could copy path in Explorer. But I'm glad I didn't know because otherwise I'd have done that and not forced myself to use python and like you say I feel better for doing it the short term hard way!
Sorry, I'm not sure what you mean. Os is installed in python 3+ by default, but I've never had issues installing other libraries
It‚Äòs a book,  you can look it up, its easy to find.
The online course mostly but the book for reference when actually writing things. I think the course is great for showing you the art of the possible, then the book is a good reference when actually figuring out how to apply it.
If you want to take this further you can automate the creation of a csv or excell sheet including having all the dats added to it instead of print to the screen

Edit: to be clear I think any amount of programming is awesome. Always continue to think about what‚Äôs next as well.
You could also just use os.listdir("pathname") which created a list from the files in a directory.

contents = os.listdir("path")
for file in contents:
      print(file)
awesome!!

however there are indentation errors (both 'for' lines are to far indented) and you probably didn't use '/n' but '\\n'

but nevertheless good work. I remember the point when i used python the first time for something useful. It was so awesome, even though it would probably would have taken less time to do that by hand. But now i have it in my toolbox just in case i need to do that a second time.
[deleted]
Yes you could have had Python generate the excel file but you're doing the right thing by thinking about how long it takes to write the code in the first place.

Thinking purely about productivity and putting learning aside return on interest is key. It's a one off task so you would have spent more time developing the code to write to the spreadsheet than you would have spent on copy pasting it manually.

You should also consider making the code you have written re-usable for the future. Make it a function and parameterise the function name so you can re-use that bit of code in the future. Then next time you get asked to do something like this you're already half way there.
does anyone know if there is a book covering the os module in detail?
If you install vscode with the MS python language extensioni  you might be able to use terminal inside of it.
Wow, had no clue the terminal could be blocked. Just wondering, can you create .cmd or .bat files and execute them?
You can probably create a batch file and run it. Ive done it on a tightly locked pc with no direct access to command prompt.
That's a funny script idea. I'm afraid to see my cost per play.
Exactly how to get past that frustration hump! Ask yourself ‚ÄúHow could I do that with Python?‚Äù Even if if the task in mind has no apparent automation value to you right now, you will begin to see other opportunities. Last night, I learned how to extract text from an image and nearly cried tears of joy. Now, I‚Äôve decided to go a slightly different route with my project, so I won‚Äôt be using text extraction, but I have this very powerful ‚ÄúYeah, I can do that‚Äù feeling.
When you say break, you mean from python or from the the things I am doing on daily basis. I feel if my break involves a break from python I fear myself of not picking it up again. My mind is a vile creature, that I fear the most.
Please share the steam script that sounds fun.
Will do, I sent a few links to my work email so I can watch them during lunch while I eat my PB&J!
Covered loads of areas and it was delivered good. I have some online courses and they literaly make me fall asleep, this course is broke into small but interesting chunks.
However, this approach isn't recursive, which os.walk is.
Haha, yes, the indentation is all wrong because I copied it plain text then put into a code block and used tab because lazy.

I did also use \\n... 

SIGH, just for you I'll update it properly ;-)
So my understanding is that os.walk returns three values, literally the folder, any subfolders and any filenames.

So the function will literally "walk" through your Project File and identify any subfolders and files which it then returns. Like any variable, you can name them whatever you want but I wanted to name them in a way I'd easily remember (in case I ever turn this into a bigger program).

[This](https://automatetheboringstuff.com/chapter9/) chapter from Automate the Boring Stuff (as ever huge credit to Al Sweigart) explains it really well.
Exactly. Sure it takes longer to learn and code it than doing the 70+ names.  
Or at least close. But next time and every time after that youll be done in a few seconds. Thats good work right there. Awesome.
when you say script, you mean a program right?
Can you elaborate a little on this jargon? I read this word a lot and every time i read it, i feel it must be involving of a lot of things I haven't yet learnt.
I mean python. Obviously I'm an Internet stranger so take anything I say with a pinch of salt, but if you aren't enjoying learning python and think after a break you might not want to pick it up again at all is data science definitely the right thing to have as a goal? There are lots of incredibly cool things to learn and do in the world, some of them involve programming and python but a ton of them don't, there's something out there that everyone loves to do :-)
The debugger is your friend :) . Please pay a lot of attention to those sections, you can see exactly what is going on with your program as far as its state (local variables, global variables, etc) instead of printing everything out. Printing things out though is sometimes the only way. Experiment with both.
yea, I have come across courses that make you want to sleep or quit because the teacher just isn't either engaging or talks to technical and doesn't simplify
Correct. This will not work if he also needs to list items in subdirectories
Thank you :) I woudn't be able to sleep tonight
Btw I think you can just drop the \n unless you wanted to have an empty line between each filename. Because each print statement ends in a newline by default. Also you can change this behavior by using the `end` keyword like this:

`print('something', end=',')`
Yup, scripts are a fancy way of saying programs.  It's usually implied that it does most of its work automatically and without a GUI (gui = screen that you can click on things)
A script is a program that is usually interpreted rather than compiled. It's typically smaller in scope (1 file). And is used to execute or work with other applications
Cost per hour I meant . It is what it sounds like. He wrote a script that determined the ratio of hours played for a specific game vs it's price to determine if he wasted money or not.
Yeah, spot on. I have done courses where I have actual felt like falling asleep, these courses make it hard to learn.
I actually don't know the difference, I always assumed the script was the thing you wrote to do the stuff, and then once it was packaged up with a gui and usable it was a program? So all programs contain scripts, but not all scripts make up a program.
Thanks mate.
Perhaps my interpretation is wrong (I coulda sworn the programs I wrote in C counted as automated scripts, but maybe not) -


> Basically, all scripting languages are programming languages. The theoretical difference between the two is that scripting languages do not require the compilation step and are rather interpreted. For example, normally, a C program needs to be compiled before running whereas normally, a scripting language like JavaScript or PHP need not be compiled.
Most are interpreted but not all. Read my comment above.
Oh, so C programs when complied they are compiled as a whole program, but Python programs are interpreted line by line. That's why any error in the most recent line of code can be easily spotted in python before running the code because it is interpreted real time before even running the program. But in case of C all the errors come along when compiling the code.

Correct me If i am wrong.
Hi Al, 

This sounds great - do you plan on keeping it up as a VOD on Twitch for those of us who can't watch live due to timezone conflicts?

Cheers!
Hi Al, I am going trough your book right now! Is there a chance you will add solutions to the code challenges you have in your book? I am curious to see how you did it and if I can improve my code to be more efficient.
Dude, your guide helped me get hooked on Python, now I'm building flask sites thanks to you. Just wanted to say thankyou! :D
Al, I'm sure you get this often.. but after quitting two times to 'learn how to code' and in my third go starting with Automate the Boring Stuff, it has been the single best resource that built my confidence in such a natural way that I've never stopped since. I also recommend it every chance I get, so thank you very much!! Best of success to you!
What is the name of the Youtube channel you will post it to?
[deleted]
Dope, I just picked up ATBSWP again (for the third time) trying to make it past the basics (chapter 7ish or so) third time is the charm!
I just want to use this chance to tell you that I got a nice job thanks to your course, so thank you!
This makes me think of a good flask app - click the mentioned meeting time and then have the app return it in local time.
I assumed Al was an older guy. Can't believe it-- looks about the same age as !
Al,
Thanks for making these books in a readable fashion. I am halfway through "Invent Your Own Computer Games With Python". I will keep it going with the next set of books once I finish this one.

I am looking forward to teaching my kids this one day. Thank you.
Just wanted to say your book single-handedly got me to learn how to code.
What about some popular common libraries, like requests, flask, beautiful soup, matplotlib?
I'll be there. Python has been such a pleasant language to learn after 2 years mucking about in bash. Everything works better than I expect. And now I see the community is also so awesome.

Thank you. Particularly interested in the finding out what it means to avoid flow control.
We love you Al!
Thanks Al! I'll be there
Just finished the 15 videos (up to page 9X) on YouTube yesterday!
remind me! 15 hours
Definitely something good to learn. Thanks Al.
Thanks for this! Awesome is You!
Thanks for doing this Al üòé

I'm enjoying your Udemy course and I'm looking forward to checking this out too.
My ü¶∏‚Äç‚ôÇÔ∏è
remindme! 16 hours
Pretty cool, I'll try to watch it live if I can, and if not, I'll watch the recording. Even with a few years experience with python, I always enjoy watching someone else do something like this. :)
RemindMe! 10 Hours
I'm excited to see what I can learn from you!. I personally haven't gotten to the projects in that book yet as I've been trying to synthesize Python Crash course with a stupid pearson book from our python class, but from what I've read of your book, you're definitely the man for python!
It's gonna be 4 am in my time zone but I'll try to get up ‚ò∫Ô∏è thank you!
!remindme 5 hours
This is going to be a fun few hours. Thank you for making these Al!
Thanks for putting this on Al. As a beginner (that started with automate the boring stuff) this was very helpful. I learned a lot that I‚Äôll incorporate into some of my things tomorrow. 

Please do more if you have time!
Hey Al,

I just want to tell you that your book is amazing! Like others in this thread, I have tried to get started in programming/coding several times in different languages but never got past the basics. Your book has been the best motivator, resource and help and I finally feel like I can actually write useful code even though I'm only at chapter 13.

You're awesome!
There seems to be a bug with the functionality of the code. The odds of getting "BAM" increases with each "click", however the odds should stay the same (1 in 6 chance) every time.
I love your book and your writing style. Thanks for helping me get started with Python!
This sounds pretty cool. Split stream across any other platforms also? Would be cool to see over on DLive, Periscope, other app-forward platforms.
Please remind me.. :)
remindme! 24 hours
remindme! 24 hours
Yes, it'll be up for I think a week on Twitch, but I'll also upload it to YouTube: https://www.youtube.com/user/Albert10110
See if [this](https://github.com/BrambleXu/Automate-the-Boring-Stuff-with-Python-Solutions) helps
me too  :)
:D
https://www.youtube.com/user/Albert10110
me too
Let me know if you need some help. Im a beginner too, but I'm looking for a coding buddy.
this is great to hear, what are you doing in your new role?
:D
I'm actually a 300 year old vampire who was turned at age 17, which is why I always look 17. Of course, back then, life was hard for 17-year-olds...
same for me
:D
Nah, mostly because I may or may not know those modules, and would thus have to spend time on the stream learning them. That doesn't really make for good viewing. Like, I know requests and bs, but with flask and matplotlib I'd have to google stuff every other minute.
:D
:D
The odds should go up. There's always 1 bullet and the amount of "not bullets" goes down after each round. So the odds are: 

Round 1: 1/6 (1 chamber with bullet, 5 without)

Round 2: 1/5 (1 chamber with bullet, 4 without)

Round 3: 1/4 (1 chamber with bullet, 3 without)

Round 4: 1/3 (1 chamber with bullet, 2 without)

Round 5: 1/2 (1 chamber with bullet, 1 without)

Round 6 : 1/1 (1 chamber with bullet, 0 without)
:D
I will be messaging you on [**2019-04-18 00:51:57 UTC**](http://www.wolframalpha.com/input/?i=2019-04-18 00:51:57 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/learnpython/comments/bdzedl/automate_the_boring_stuff_author_refactoring/el2dl4n/)

[**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[https://www.reddit.com/r/learnpython/comments/bdzedl/automate_the_boring_stuff_author_refactoring/el2dl4n/]%0A%0ARemindMe!  24 hours) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete Comment&message=Delete! el2dp6u)

_____

|[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=List Of Reminders&message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/)
|-|-|-|-|-|-|
You are a wonderful person for doing so.
But I want to watch it with twitch chat üòÑ can you keep it for more than a week?
[deleted]
>this

Thank you for the link! It is interesting to see how different the approach by others is compared to mine.
ooh, sweet. Thank you!
I'm in a team that inspects industries. My role is of inspector, but I manage the cartography and manage the databases we get from other organizations, and python really helps on that. Python has helped me with some tasks on that. I could successfully geocode a file with about 6000 factories, which would have been impossible by hand, and I am currently learning the gis side of python, which is pretty exciting.
>  but with flask and matplotlib I'd have to google stuff every other minute.

Demonstrating what real programming is like? :D

As an aside, seeing a "real programmer" actually googling and implementing how things work from documentation is actually a *positive* image for learners that we probably need way more of. The opposite - where their teacher just automatically knows everything and spits out cool library code off the top of their head - likely gets portrayed way too much in the name of teachers looking cool, while discouraging students wondering how they're supposed to attain that magic.
But that doesn‚Äôt make sense. A revolver doesn‚Äôt ‚Äúlose‚Äù a chamber every time it‚Äôs fired.
I have a plugin that puts the chat text into the video as an overlay, so you'll be able to see it in the video.
In effect, It does though. One of the outcomes is removed each round.  If there are 6 chambers, and you have 5 empties in a row, there is a 100% chance that the next chamber will have the bullet in it. 

If you were to spin the cylinder after each shot, the odds would remain 1/6 each time as there would always be 6 possible outcomes with 1 bullet.
Congratulations!
Hey OP, just curious what position you applied to?
Congratulations, OP! Do you think you can tell me a small guide on how did you end up learning python?
Congratulations!! Brought smile on my face!! Cheers!!
Awesome job! I can't wait until I can have the Python wisdom too.
ü•Ç
congratulations brother
Appropriate victory music (not a rickroll I promise): https://m.youtube.com/watch?v=m_chXgaSfYk
I almost completed my coding class with python. It was intimidating at first but now I am getting through but I was in tutorial hell for a while to grasp the concept
Congrats. As someone who‚Äôs learning coding and looking for a similar job, how long would you estimate you‚Äôve spent learning Python?
>The Pseudocode they gave me was essentially Python Code!! 

I don't see this as often anymore, but when Python first hit the scene in the 1990s, it was extremely popular to describe Python as "executable pseudocode".
Congrats!
look into getting your CFA charter
Congratulations and good luck with the new job !
Congratulations mate!
Congratulations! Can I ask what your educational background is? Are you just self-taught python?
That sounds like a really easy programming test...what kind of company is this?

&#x200B;

t. desperate person
Great Job , keep grinding Boss. Become a full stack developer.
This is motivating, congrats!!
Congratulations! It‚Äôs what I needed to hear today
Congrats! I haven't really had to apply for roles yet where anything like this would be tested but I'm glad even some basic coding can help you get through them. That's reassuring for me to know.
Congrats!
Congratulations! I‚Äôm holding out hope for my breakthrough to go somewhat like yours. Been dabbling in python, excel, access, sql and even a little R to look for something similar. Thank you for sharing and dropping the job title , it gives me something to be on the lookout for.
amazing! congrats
Congrats bro! Good luck on your new job! I started learning Python last month and one day i'll get a job as a coder too :)
Congrats mister
bababooey to you, sir
Congratulations!
That's awesome! 
When you get into into database triggers and SQL functions it starts to become a bit more like Python.
congrats


I suck at coding exams since I rely on Google too much, I once got an Sql take home as part of an interview and immediately got hit with a hard question (how to add across columns), flunked so hard. screw them, now I'm in  a much better company
Hey, do you feel you need a degree in Finance, or related finance qualifications to apply for an analyst job? I'm coming up to graduation now after a finance degree, and was wondering what Python could do for my  job prospects in the financial sector as opposed to working towards a chartered qualification in management accounting.

Thanks.
Congrats ! I would love to do the same job as you , but i am scared of future. Maybe in 7 years !
Congratulations
Hey OP, can you please share some of the questions you got asked ?
Congratulatons on the job and much success in your future endeavors. You only get better at learning a language with plenty of practice. This site is a good free resource to learn/brush up SQL   
[https://www.w3resource.com/sql-exercises/](https://www.w3resource.com/sql-exercises/)
Massive congrats man.
>I found a job

-

>It's all thanks to roaming this subreddit for years 

Sigh.
Thank you sir!
The name of the position is: "Fixed Income Analyst" I believe.
Sure thing friend!

I started learning with "Learning Python The Hardway" a friend taught me with that book

Then I started taking online courses, The first being Jose Portilla's Python Course. I got it at a discount but it was a very good course and Jose teaches the basics very well.

Then I subscribed to this subreddit and a lot of the posts suggest reading "Automate the Boring stuff with Python" Which is a very good book to learn the basics as well.

But at the time I had more or less decent grasp of the basics of Python already so I skipped to the later chapters that involved automation of common tasks in the work place (particularly, the chapter about excel)

Afterwards I found this course: [https://www.edx.org/course/introduction-to-computer-science-and-programming-7](https://www.edx.org/course/introduction-to-computer-science-and-programming-7)

The course is a bit technical but it helps you to think programmatically, its also free!

edit: I forgot to mention that the EDX course was highly suggested by people on this subreddit as well. I didn't actually find it, so much as this subreddit recommended it to me as well. So thank you again for that!

Edit: Keep in mind that the way I learned won't be the same for everyone else nor is it the most efficient way to learn Python. so lurk around this subreddit and ask questions on the weekly thread. you may find someone has found a way to learn Python that works better for you, Happy Learning!

Hope this helps!
Cheers as well! and Thank you!
[https://www.edx.org/course/introduction-to-computer-science-and-programming-7](https://www.edx.org/course/introduction-to-computer-science-and-programming-7)

start with this brother, Good luck!
Cheers sir!!
Thank you Brother!
Thank for this sir!
I started learning Python about 3 years ago, But I only started getting really serious about it a year ago. I'd code for at least an hour each night. it's tough at the start but discipline really makes a difference.
This!!
Thank you sir!!
Will do sir! Thank you!!
Thank you sir!!
Thank you Mate !!
Thank you sir!!

I was a business graduate, no coding background at all but I learned Python on the side.
its a finance company hahaha

they are looking for jacks of all trade all the time 

don't lose hope!
Sounds like they wanted someone who has finance expertise and can code
Thank you boss!
Thank you sir!
Thank you sir!
Thank you sir! glad it helps you reassures you as well
Thank you sir!
Thank you sir! Good luck to you as well and I hope you find one too!
Thank you sir!!
Youll get it for sure just keep praciticing and lurking!
THank you mister!!
bababooey to you as well sir!
Thank you sir!!
Noted sir! thank you!!
Thank you sir! and Samee

but thats fine sir your likely in a better place now
I've noticed that a lot of recruiters and job postings say that having Python experience is a big plus in the jobs I've applied for in finance so it would really help you a lot in finding you a job

as for analyst jobs I don't think you need very high qualifications for them (but they are a big plus) Iirc analyst positions are normally the entry level positions for Finance.

Good luck tho!
thank you sir!

dont worry you'll make it too!!
thank you sir!
sure thing.

for the part in SQL they gave me tables and a few questions: 

for example: "return all employee Id's and names where the attendance date is NULL value"

and you would have to write SQL code for how to accomplish that.

for the financial part they asked me to give out what securities I was familiar with and to define them.
[deleted]
hello can i ask if such a role demands a lot of financial knowledge? also, what is the application of Python here? very curious! congratulations too, a keen fan of coding and finance myself :-)
Wow man. I am learning python to break in Fixed income sector. 2022 will be the year i will apply, until then i will keep learning. I am so happy for you. All the best for the role and enjoy.
Jose Portilla is a very good instructor.
Saving this. Thanks a lot :)
That's great, singing up now. Thanks!
Thanks for the response!
People like you are exactly what the industry is looking for. 
Might I ask what country and state did you apply the job for?
so far it's a much better place than the one I was interviewing for. I don't touch Sql but in doing that there things with python and data studio. I'm more focused on strategy
I dont think i have bad grades , young , 0 money nothing so..
>financial part they asked me to give out what securities I was familiar with and to define them

did they allow you to use google ?
Did you have to write code on paper or type it out?  
They let you use the internet during the exam right? 
I‚Äôm just worried man, do I have to like memorise the codes and all? 
I suck at memorising
I actually applied directly to the companies website. You could probably go look in glassdoor for jobs at first and if you find something just apply directly in their website instead of applying through glassdoor
It does require a lot of financial knowledge actually

Thankfully a lot of that knowledge is free on the internet: [https://www.cfainstitute.org/en/programs/investment-foundations/curriculum/download](https://www.cfainstitute.org/en/programs/investment-foundations/curriculum/download)

as for why the application of Python here, I'm not too sure either. I heard one of my interviewers mention automation, that could be in relation to that?
they just sent me the test questions on a word file. so yes I suppose they didnt really stop me from using google

but in the interview afterwards they questioned me on my knowledge of the the securities. So I suppose googling  wouldnt be enough
they had me type my answers on a word file and they werent monitoring me either so they didn't exactly stop me from using the internet.

I'll admit that I had notes on the side while I was answering the exam so I suppose its fine
Excel and python. A tale as old as time. Or sql with python. Either way python can interact with both and can do automation and data visualizations. Going even further then machine learning is not outside the realm of possibility.
thank you OP and all the best in the job!!
AMA post in /r/python, post there, not here. =)

* /r/Python/comments/otbvoj/hello_world_im_al_sweigart_author_of_automate_the/
I think Python, over all, is a great language for beginners but do you have any other ideas about where a rank neophyte should start out since you wrote this book?
What do you think an intermediate user of python should know to make the jump to advance skills?
Loved your book!
I am more or less new to this has well and I have not gone with one of his books but with another, I think most very basic books give more or less the same directive but depending on learning style each one will fit you better, so look around and see what people say, but I have heard very good stuff about his books and hoping to move onto his after my current one
This helps in how you overcome imposter syndrome.
Now you need to get good enough at StackOverflow so that you can mark questions as duplicates ^/s
usually if you can answer questions on stack  youre pretty good at it, props to you
Amen
nothing is more satisfying than to ask a question nobody can answer.
Nothing is more liberating than writing clean code that works and is useful üëçüèª
Sources to learn?
Nice! Did you get the green check mark though?
And nothing is more humbling than searching stack overflow for an answer and finding a perfectly good answer you wrote two years before, but had forgotten. Sooooooopid.
Karma is real. The more you give/help the better you feel and the better you are at helping (the more you know). I actually learn as much by answering questions as I do by asking them. I have to do a lot of research to be able to give any decent SO answer.
There actually is one thing. . .Learning python well enough to be able to answer questions on Stack Overflow while T-posing.
I agree, I showed someone how to make an if statement on stack overflow once. Once I knew that I've reached that skill level I felt extremely liberated.
Nigerian scammer bot says: It's all about the Bass (and Python)
I really struggle with this at work. I'm not new to coding but new to Python (been writing a few scripts!) but now I'm the script lady.

Unrelated to Python, but I completely missed an HTTP header that would have easily solved a problem we were having. Luckily I have good managers that insisted that it was okay that I didn't know of it yet. But it was really hard not to feel down on myself for making a mistake.
Or like me you put in time crafting the best answer you can then get downvoted and commented to oblivion because it did not satisfactorily impress some pundits. 

At this point I only put up questions on SO. Seriously fatigued by the aggressive feedback that community has to offer when your answer could be marginally improved.
It definitely helps, but in my experience, the moment you stop occasionally feeling like a fraud is when you stop learning.
What‚Äôs that?
This only reinforces my imposter syndrome, making me even more scared, thinking "What if all the stuff I said is stupid? What if these poeple are only humoring me? What if I don't actually get the thing, but the way I said it implied something that's both different from ehat I think it is and is correct?" :(
Does blogging have the same effect?
üòÇüòÇüòÇ
Start with Python for Everybody. It‚Äôs a free course with free textbook.  Covers all of the bases to get started in an incredibly structured manner. Includes video lessons and assignments to complete as well.
Have you read the sidebar?
If you don't know how to Google, stop right here and there :)
Dude everyone makes mistakes. It's just a part of life. Having management that realizes that and encourages you to learn from it and KEEP GOING is good to have.
Never feel bad for making a mistake.

Only feel bad if you made a mistake and learned nothing from it.
‚ÄúWhen you‚Äôre screwing up and nobody says anything  to you anymore that means they‚Äôve given up on you‚Ä¶you may not want to  hear it but your critics are often the ones telling you they still love  you and care about you and want to make you better.‚Äù -Randy Pausch
[deleted]
[deleted]
Remind me!
I don‚Äôt think so.
What is the point of /r/learnpython if you're just going to tell people "google it"?
I think palini's point here is that a random comment on a relatively meta post asking for help in taking the first steps in python is not an effective way to get what you need.

Top commenter should check the sidebar, or post themselves more than two words explaining what they know and what they want to know.

Also, in case top commenter reads this, Sentdex on YouTube will get you started with some basic scripts you can play with
Gatekeeper of python r/gatekeeping
[deleted]
```
while true:
```

I thought the interpreter was with some kind of problem.
I did similar.

    if __name__ == __main__:

Spent a week (my own stuff, not work) trying to figure out why the new version of the script wouldn't start properly.
To preface I haven't worked with headers at all. We were having an issue where X-Frame-Options wasn't working (this behavior is expected, the header isn't supported). I completely overlooked the note in the Mozilla docs saying that "Content-Security-Policy" is recommended to use.
Don't forget to read this Wikipedia article later!
Hey, by the way, There's no space between "Remind" and "Me!". Make sure you use that exact capitalization. Cheers!
Omg. This here reminds me of my teacher. When we got questions about our project his first reply is always 'Google it.'
I mean isn't it more valuable to learn things oneself using Google and/or documentation instead of just asking for the solution to the problem? I find it is for me, but I could always be am outlier.
I think it's a decent advice though but not how it's often thrown at people as if they were morons. Rather, learning how to search for something even when you don't know the terms, break down research terms and possible answers, spot valuable sources and go through the documentation are behaviors we can teach and should encourage.

I'm glad to help with I'm also tired to see questions that are in the first three links of a google search or which are clearly addressed in the docs.
He got downvoted cuz he actually makes sense, but said it in such a way that others thought he was being stupid. Also, telling someone to "google it" or "search for answers" is taboo in r/learnpython
Use a linter like flake8 integrated with your IDE, and fix every warning!
If you're asking your teacher a question and haven't googled it, you're just wasting their time. Why would you want to make someone else a blocker for you getting shit done? 

Good rules of thumb:

- if you haven't spent 5 minutes stuck on this, you can't ask for help
- if you've spent more than 15 minutes stuck on this, you MUST ask for help
I mean, yeah, but googling for Python will give you the official docs, which aren't a good resource for someone who's completely new to programming.

 They asked for good resources to learn from, which is something that's better to ask a person who's learned Python than to just search Google for it.
No kidding, didn‚Äôt know that rule
The reddit is dedicated towards helping people learn, after all. "google it" is like telling them "keep searching", when they came here to get an answer in the first place.
The *youtube-dl* application is itself written in Python, and it is indeed the bee's knees.
[removed]
This post inspired me to never delete my helloWorld.py script. Someday it might be useful
One of the first python programs I wrote spammed my resume to tech jobs posted on Craigslist. It worked
I'm in the process of learning python myself (started ML and data science a week or so ago) and it's been oddly inspirational to not disregard even the codes that look stupid at the time. Thanks OP
But.....  

> I wrote a python program using youtube_dl that could download whole videos when given a url     

That is literally what youtube_dl does... Did you  uild a GUI around it or something? It sounds pretty useless otherwise. Or maybe I misunderstand...
Congratulations!
Thanks for sharing your story of success. It might sound simple, but is really inspiring
Can I ask you about your learning path? I am 36 and work in a hospital but want to change paths. I‚Äôve almost finished cs50p, an online python class. I have no other coding experience. I have a BS in General Science. I love python but wonder if backend jobs are available for those without front end experience. Did you learn other languages that helped you change careers?
I feel like there are a lot of people who made beginner projects using youtube-dl because I did as well, 2 nearly 3 times.

The first one I made was with Tkinter and same with the second one but alot more improved with pause/terminate features and then the 3rd one I was going to create with PyQt5 and name it qDownloader and make it styled like qBittorrent but I ended up ditching that project lol due to me realising there is no point
I just started learning python  and it's been slow and I've felt a bit unmotivated  at times cause my laptop is old so it takes a long time to lord things and I can't always figure out what's wrong with the code that vs code isn't  doing what I need but reading stories like this helps me   just want to keep going and trying till I get it
You legend! And I‚Äôm inspired - someday may my hard won coding of ‚Äúhello world‚Äù come in handy!
You can just do: ` YouTube-dl url ` in command line, and it downloads. No code needed.
Does no one use pytube?
Care to share? This is very useful!
Excellent job! That is a handy tool to have available. I‚Äôve got a few of those ‚Äúlower-value‚Äù scripts I‚Äôve written but that ultimately end up being helpful tools on an ad-hoc basis. Shoot, I‚Äôve built entire personal projects that were really of only value to me but down the road I found that utilizing those projects for professional projects are simple plug-and-play implementations. Not sure how compensation comes into play for that but at least my job was easier. 

Nice work.
Just print ‚Äúhello world‚Äù today, feeing good!
Can you share it?
Yea I made this program way back when to download the largest playlist ever lol. Put together like 120GB of music for my gf at the time by downloading just the audio of music videos lol
Hey I didn't know that. I should open it in an editor and learn from it. Thanks for pointing it out.
Yea I used tkinter to make a whole GUI  around it for fun
`yt-dlp` is a fork of `youtube-dl`. 

I started using it and never went back
ü§©
It seems to error out on country locked content for playlists, and I have no idea how to except the error because it still crashes in a try statement.
Lol
My man spammed himself into job
If you take nothing else from this post, just never delete anything. Who knows it might just be useful in 5 years lol
Yes, in another thread he mentions he made a TKinter UI.
If you choose to set your python script up to use particular settings of youtube_dl, you don't have to look anything up in future to use those settings again. 

Simplifying the process, as it were.
Best advice I can give is python and SQL are what I have found to be the most in demand.
I made a GUI around it. I did it purely as a learning experience not to made a product or anything like that
I did when I made my youtube downloader lol. Idek there was another (definitely still learning)
It's a pretty basic tkinter GUI around the youtube_dl package written by a very green programmer. I can throw it on github if people really want, but it's nothing special
Actually youtube-dl has command line options to do that now.  Before they did that though, I did something similar using youtube-dl's option to write to a WAV file, then use lame(1) to convert it to mp3.
[deleted]
You can probably find the source on github (either that or one of the forks of the original source), but opening an editor will probably not work since the script is distributed as a binary executable.
Ooooooh... You might want to mention that in your post. That actually is useful for those who are scared of the command line.
Is there any chance you could github (or wherever) it for us to look at? 

I would certainly be interested in doing so, and am sure others would, too.
[removed]
And it work lol
I just put all my programs on Github, and then forgot about most of them üôÇ Who knows, someone may find them useful one day!
Honestly, creating a Python script for that seems like overkill but that's just my opinion. Just an alias would work just fine.   

But anyway, he made a GUI for it apparently.
The stand-alone downloader can use a configuration file; that is where I set my defaults.
Some YouTuber said nobody hires newbie backenders. So that‚Äôs been in my head for weeks.
Yes, please. I have no experience in tkinter, so it would be nice to look at the code.
As a python newbie and after trying and failing myself to make this I would appreciate it :)
do you remember what that audio quality was like?
She's knows. She's my wife, and not my ex girlfriend for a reason.
Thanks
If you are interested I've made a script [a script](https://github.com/jjjules/archrice/blob/master/scripts/ytdl) to automate getting music or video from YouTube. It uses zenity and can either be used by selecting a file with a list of URLs or interactively with ytfzf. I did not tested it a lot I just made that for my brother but maybe it can be useful :)
1. Any free VPN is not free. 
2. No country has perfect copyright experience on YouTube. The point would be for the program to skip over it instead of erroring out on it.
Ah yes, use a free VPN in exchange for them getting all of your network traffic. What a deal!
[deleted]
Learning for the sake of learning is a good thing. Apparently OP did this as a learning thing.
A YouTuber once told me BTC was going to $100k by the end of 2021
I worked in tech recruitment for over half a year and this is not true, however I would say it's a little harder to get in with no experience as a backender as there's less modern frameworks compared to frontend with the likes of react/Vue meaning there's more people with experience
128 kbps, 48 kHz
Shit
Thank you.
I got a 404
[removed]
One could, of course, set up a VM with whatever OS is preferred, use that VM for anything that requires use of a free VPN.

Given how technical this sub shows itself to be, I thought such an idea would be common.
Hahaha, I'll be tuning in to hear more.
Live and learn! ...update tonight at 11.
Good point . I'll make sure to tune in
That is indeed a good point
Haha. Point taken.
I was curious as I've used youtube-dl for videos recently, but way back in the day I used some freeware to get audio for songs I could only find on youtube, [ex](https://youtu.be/SLu43E_Qu64). I think it downloaded the videos as FLV files, and then I didn't remember what I did from there.

Quality was absolute shit but still acceptable.
Fixed sorry
Username checks out.
[removed]
I can see where you're coming from, but people are often as cheap as they can be. 

Some know how to use free software to allow them to remain private while being cheap, others... well.
This is fair if you think that everyone‚Äôs goal in r/learnpython  is to grasp the language at a high level versus learn how to do specific tasks such as data science. Most courses show you the CSV module or how to code a read CSV function before teaching you an improved workflow using Pandas for data science tasks. I think that your point is valid, but some people are interested in learning Python for data science and may want to jump in to that quickly. Even using the CSV module versus coding the function yourself is an abstraction.

I do not think that one way is necessarily better for learning Python, but this is a great point for discussion and I‚Äôm interested to hear other opinions on this.
People always assume the requester is doing something that they may be working on. Python is a flexible language and just because your doing data analysis with pandas doesn‚Äôt mean the other person is. 

There are plenty of reasons to avoid using pandas. It‚Äôs a large module and total overkill if your just looking for one line in a bunch of csv files. 

Judgement needs to be made on what would be the best for the requester.
The problem with Pandas is that it is *extremely* powerful, but *extremely* arcane at the same time.  Your example of selecting rows from a dataframe based on some condition really hits the nail on the head.  It makes complete sense, but *only after you understand it.*
This is a pretty good write up, there's an additional reason to hold off on pandas if you're brand new: you might not have it.

Maybe you're a student that doesn't control their environment, or maybe you're using an online ide with a fixed set of tools, or maybe you just downloaded your first ide and have no idea how to add more modules.

For any of a number of reasons, getting pandas if you don't already have it is going to be something you don't need to know until after you have learned more.
While a lot of points are raised, I'm just gonna add my own. Not everyone aims to be a full blown developer/architect. Some people view stuff like Python more of as tools rather than Languages. People like these don't care about Software Architectures and Optimizations, they just want something that works and works well. It's like using excel but with extra steps.

**Developers** SHOULD learn how to do raw Python or any raw language they need to use before diving into frameworks and libraries (to an extent). You shouldn't be using a robust library all together if your script is very simple, but that is part of optimization and architecture.

**Data Scientists** will treat it as a tool, you use this and than and bam, you have results. Efficiency will just be a bonus.
Another good point on this, why use pandas if you don't need to? csv is smaller and in the standard library. We were experimenting with some code that a coworker wrote and the only things from pandas he was using were reading a csv and plotting some data later. We made it much faster by just using the csv module and matplotlib.
As someone who learned pandas first, I disagree with you.

Right now there are 2 very distinct groups of people who use python. Data Scientists and Developers. 

Developers may or may not have some background in another language, and are looking to make efficient applications. Learning the details will help then do just that. 

Data Scientists on the other hand mostly certainly already had some experience with other ways to manipulate data like excel. If you make simple tasks in excel too difficult in python, it will likely make then quit. Besides, the example already make them familiar with the dataframe object. It's very likely that 95% of their time they will spend manipulating dataframes. 

If you are worried that we are teaching the dataframe object too soon, get a R studio tutorial and look how long it takes for then to teach DataFrames. A Data Scientist have similar needs.
Just to add to the conversation, I thought I'd share my goto implementation for csv parsing.  It combines the ability of a straightforward approach with being able to easily access the data.

&#x200B;

    import csv
    def parse_csv(filename):
        with open(filename) as csvfile:
            dr = [{k: v for k,v in row.items()}
                       for row in csv.DictReader(csvfile, skipinitialspace=True)]
            return dr

Usage:

    file_data = parse_csv('somefile.csv')
    for data in file_data:
        print(data['ColumnName'])
If you want to learn python by the book, ok, if you got work to do and need to do stuff with a csv file, pandas all the way! Personally, I'm not a programmer, I'm a business person who spends 20-30 hours a week on python at work and I almost exclusively use pandas. I'm not interested in code, I'm interested in results
I feel your pain, I admin a very large Python group and the auto answer is use Pandas to people who barely know Python. It is irresponsible and wrong....
I've been there. 

I had to process hundreds of csv files and couldn't figure out pandas for the life of me. 

Ended up inserting data in matrixes and iterating through them by loops and for. I went the easy way because I needed to get that shit done quite fast
As a beginner, I'd say that the problem is that people try to jump into Pandas without knowing basic Python first. There are Data Science courses that give you the bare minimum of Python and I agree that's probably not enough. But CSV is not the only way to learn it. Actually, I feel it was better to do random stuff instead of focusing on this single area at first. I decided to start with ATBS and when I got to the CSV part I looked for a Pandas tutorial instead, but by then I already knew all the basics of Python.
I don‚Äôt need a cart to haul a bolder to the top of a mountain but it sure helps
I have code just like the csv one. Not having experience with pandas, I have no idea how that "select = " line is supposed to do the same thing.
Honestly I think that the real strenght of Python is inside its libraries and there are 2 situations where you land on a Python learning path:
- you are a cs student and you learned programming in another oop language (Java or C++ usually)
- you are someone who can get advantage in using py libraries for stat works or math or science related subjects 

I think your approach is totally correct, don‚Äôt misunderstand me, but probably better if applied from the bottom of another oop language and only if you are interested in learning programming, else there is no reason to avoid using a library that helps you also with a peculiar and easy manipulable data structure.

Furthermore ...Programmers are lazy people...üò¨
I largely, but not entirely, disagree. Yes, there is value to "building things up slowly" in pedagogy (sub name *is* learnpython), instead of skipping right to the best practices. But this sub isnt a classroom, nor do we have any kind of curriculum. There are no assurances that the post is later followed up with the best practice, or that the OP ever gets out of "hackish" territory. The posts asking for help are given direct help, not "Look at the documentation for this module and figure it out" as an exercise. When someone is asking for help, the community helps. And, being programmer types, we *like* doing things The Right Way (tm) - and especially arguing about it. But, while pandas is a behemoth and I distrust anyone saying they are experts with it, it is the best general tool to play with data in Python and it interfaces well with the best general tool for business-types, which is Excel.
I agree. Learning how to process csv files as a beginner in a conventional way will help you appreciate the value of Panda. You'll realize when and where using Panda is the best solution and when it's not. That kind of knowledge only comes from experience.
Python's job is to serve the user and complete the user's task. The whole point of Python is that we can make tasks easy, not hard. Learning the csv module is unnecessary. I've never touched the thing
I mean...I wouldve just said. Why use pandas when the CSV module is there and part of the standard library.....but yea this is good too.
Amen
Not sure if I agree completely. 

Speaking for myself, I tried reading csv files manually first, then I discovered the csv module, and only much later I discovered pandas. It helped a lot that I knew classes by the time so I kinda knew what pandas was doing under water. Also it gave me a very good foundation in pythonic programming. 

But on the other hand, learning pandas would have saved me a lot of time in the beginning and I'd learned the details about the rest anyway.

I think it depends on what one needs. If a student will use Python for one course and needs to get started quickly, pandas is a very good tool. For somebody who wants to be a developer or use Python for much longer, your approach might be of more use.
I am a beginner and found a lot of tutorials for pandas so that is why I began to use it. After using it for over a month I feel more confident. If I needed to work with CSV files and wasnt using pandas what would you recommend?
I do agree with u. Mastering the fundamentals is mandatory to get beyond the complete beginner level. However, you should be aware, that being stuck on a menial stuck such as loading a CSV will turn down any beginner... Cheers. Cross posted in r/VisualSchool
I kind of disagree from the fundamentalist approach, there is no need to reinvent the wheel if the situation does not call for it. Yeah concepts like imports, loops, assignments, etc. are a given. That is entry-level knowledge and can be learned in 5 minutes on Youtube. But just use the available tools if they have already been created. There is no practical need to learn things that are outside the scope of the problem you are trying to solve. Especially when it comes to Python which is already high level as it is, just use the libraries for christ sake. That is why the tools were created in the first place, not everyone needs to be a developer.

If you want to be an actual developer at the enterprise level then Python contains only a subset of applications you will be using it for anyways. Don't reinvent them because chances are some developer has already has done that and then some. There are far more practical uses for your time unless you really want to become a developer yourself. And if you do want to become a dev, I wouldn't recommend Python as a first language anyhow. You will miss out on a lot because it is too simple and limited. In that case forget Python and start with C++ or Java.
I don't think it's an issue. It's very unlikely that this sub would be the only source of learning a person would have. I myself like asking questions here too because honestly Stackoverflow gives this impression that my questions may be too simple... but it doesn't mean I wouldn't search there along with Google to find other answers. The person can then choose to follow the answer that made the most sense to him himself.
Not really...They can research first. Udemy and reading books on several module really helped alot. Do the book first and follow step by step on pycharm or jupyter notebook. Installing lots of python in window or linux. You need to understand linux first before you do python. Doing CSV on linux is more complex than window.  Udemy will explain better.
Unpopular opinion : I think Pandas is unintuitive and I prefer Pyspark which is better to read and understand for dataframe manipulations
By the time a new learning wants to import a CSV, I am sure as hell he/she knows what the `for` loops are all about. You are being unreasonably pedantic.
I agree that at some point, and in some language, it is good to understand how to code these utility functions.  But python itself is an abstraction coded in C which is an abstraction coded in assembly.  I will probably never create my own neural network framework or hand code the scikit learn modules.  We all accept some level of abstraction that we do not need to code ourselves.

When I switch between frontend/backend work with c#/.net/typescript and datascience with python, I greatly appreciate the abstractions of the pandas library.  I don‚Äôt need to focus on the low level tasks, and I can focus more on understanding the data and the modeling.

And when learning pandas/np/scikitlearn, it was the abstractions like read_csv, that allowed me to learn the overall process of reading, exploring, cleaning data, without getting lost in the lower level coding.   I could spend more time trying to understand the theory behind the algorithms, instead of spreading limited time over the more mundane.
i couldnt disagree more. I have seen students struggling with the stdlib csv module.
But what you described is exactly the DNA of python, it  aims to be a concise wrapper of functionalities without worrying what is beneath. And apart from the things that you described going on in a simple of.read_csv command, there are still tons of things going on that made your description rather ‚Äúhigher‚Äù in level. There are just too many things going on, such as how C was incorporated that optimize for performance in pandas. Let along pandas, even a simple generic Python line like a = list(), I bet most don‚Äôt know what happens in the process and don‚Äôt intend to find out. Then of what difference could it there be from constructing a table. In the end, They are both objects that store data, what else should we know about it beside using it. Also Keep in mind this process into knowing the fundamentals require long time and proper training to almost fully understand. Meanwhile, if people want to utilize Python for things they want to do with before they master the language, go for it. That is the original intention of Python. It welcomes everyone.
People forget that learn is coupled with fundamentals. The "show me" mentality is counterproductive for actually learning.  
And then the OP get confused, ask a bunch of ???, and get left on read because they was tossed in the deep end without floaties.
Completely agree with OP, and I‚Äôd like to add that learning Python and learning pandas are two very distinct things. 
Python is a programming language with a huge standard library, and the number of users who have no idea of the workings of the Python Data Model is astounding. 

Pandas is itself a huge library, basically a framework for data wrangling and while it‚Äôs extremely useful it has its shortcomings. 

Unfortunately people rarely distinguish the two, especially Data Scientists, which is why we end up with DataFrames everywhere and bloated environments. 

Most unfortunate is the fact that not only does a good understanding of the Python language lead to better programs but also more efficient code - even when using pandas.
[deleted]
Totally agree.  It's fast, but pandas is not intuitive at all.
This seems like a very good point. I briefly learned the csv module in a data science course but after one small lesson everything was Pandas...
You seem to have a passion for the language, any chance you teach? :D
I could not agree more. I also really appreciate seeing someone take the time to think about how about people learn and what really helps beginners.

For extra points, explain to the beginner that with the `for if print` statement above, they're basically performing a `SELECT FROM WHERE` SQL statement, which is basically the same thing as a `df.loc[df[col] == val]]` statement. As I understand it, that's what the low-level code in all data management software does, iterates through the set and performs equality tests.

Another reason why beginners should stay away from pandas is the documentation is a mess.
Totally agree, having proficiency with the csv module is very helpful. Pandas is great, especially for seeing the data if you don‚Äôt already know what you are working with. I definitely use the csv module more in my day to day stuff at work, but tbf I do more writing of csv files than reading.
I started learning python about 3 months ago, and I specifically needed to handle csv and Excel files. Like you said, Pandas was almost immediately recommended to me. While I needed to figure out a lot of stuff to get pandas to do anything for me, I didn't find any of it opaque or overly complex for a total newbie.

I actually found the documentation for Pandas (as well as the YouTube videos) WAYYYY easier to follow than csv reader/writer.

That's not to say that you're wrong, just giving feedback on my experience.
If you want more code, may I interest you in PySpark?
> pandas

https://en.m.wikipedia.org/wiki/Pandas_(software)

Oh my God, it's a megathread.
[deleted]
[deleted]
As someone completely fluent and I would even say advanced in R and shell scripting but barely intermediate in Python, Pandas has been a god-send whenever I need to work in Python for some reason. I already know general programming concepts, so I don't need to do things by hand to learn those. I'm not particularly interested in switching to Python full-time. Pandas syntax is much closer to R than base Python, so I can just translate my R code rather than figure out from scratch how to do what I want in a whole new language.
I'd like to add that the opaque solution of "just import panda" doesn't say anything about the implications, for say, project size or execution time.

Coming from BASH, I am used to finding the most optimal route from exec time perspective, even if the code is a bit bigger. From what little I know `csv` does one thing, while `pandas` do several, so it makes sense to use csv. (I used to work in embedded, and with very scarce resources.)

In a larger project where pandas and matplotlib gets used, it makes sense to drop csv.
Thank you. This post is super timely. I decided that my first project would be learning to read in an excel file, and then figure out slowly how to get python to do the various manual things that take place today. I jumped down the install pandas rabbit hole. Not being even sure which pandas to download and that I don't have admin access to my work computer, I came here and here is your post. I do appreciate learning the behaviour of a language first, because then I can figure out what I can/cannot do with it by slowly expanding my python universe.
\+1 for this. It is better to learn something as it is and then to explore more advanced methods, solutions etc.
Perhaps I'm just old and grumpy and this isn't really related, but I just find the pandas syntax ugly and unintuitive. 

SQL syntax is much cleaner. Any idiot can read English like this:

> SELECT \*   
>  
>FROM tips   
>  
>WHERE time = 'Dinner'   
>  
>LIMIT 5; 

it always irks me that I have to write tips twice to do the same thing with pandas: 

>tips\[tips\['time'\] == 'Dinner'\].head(5) 

Let's add a condition:

>SELECT \*   
>  
>FROM tips   
>  
>WHERE time = 'Dinner' AND tip > 5.00; 

With pandas we have to write tips three times to get the equivalent result!!

> tips\[(tips\['time'\] == 'Dinner') & (tips\['tip'\] > 5.00)\] 

Pandas is just ugly. I prefer SQL syntax when working with data but the python language doesn't really have the functional thinking that allows things like LiNQ to be added. 

PySpark has better syntax than pandas IMO but it comes with a whole lot of other considerations since it's built to execute on a cluster.
I completely agree! I'm currently learning python (after having a very engineering but extensive programming background in matlab, mathematica, C++) and certain parts are soo confusing. Your last point about code not having descriptive variable names was so annoying to me in particular. I'm so used to making variables as descriptive and different from each other as possible. It took me too long to realize df could be named anything and wasn't some weird internal/global variable. 

I also agree with your other points. The first way to open the csv file makes so much sense because the logic is clear. The PANDAS way is a nice next step, but makes no sense as a beginner.

Thank you for making me feel less crazy about this!
I take your point, but even if your main end goal is data science, I would maintain that it's important to learn how the language fundamentally works before you dive into pandas. No matter what you can't get away from these fundamentals of programming and understanding them from the outset will only help on your journey. As people who are trying to teach others python, I think it's important to keep in mind that larger view.

If you were helping someone learn to play guitar, for example, do you encourage them to start with a 9 string guitar and learn advanced tapping / sweeping techniques? No, you start them with a 6 string and give them basic chord shapes. Because even if they learn the advanced stuff up front, there will always be a fundamental piece of it that will need to learn and understand in order to truly "get" it, and if they do learn it early, they will see the patterns they initially understood over and over again throughout the learning process. BB King and James Hetfield play all the same notes and learned the same basic chords, even though the end goals are wildly different.
I would agree. My introduction to python was an economics course. We were taught basics of what we needed to know for cleaning and analyzing data. That meant for loops and pandas. I still lack a lot of the technical jargon knowledge, but my capabilities have progressed nicely despite that. I even got a raspberry pi to entertain myself during quarantine.
Why not numpy?
Right - I totally agree. 

If learning python is truly the point the exercise, then they should open the file, readlines, parse the separators and create a dataset that way. 

But no one actually does that anywhere ever.
If you want to do data science, you should be studying math not python.  It's like wanting to learn how a car works so you pick up Forza instead of repairing a junker.
I'm a beginner.

  


The way I see it, I'm learning python AND pandas.

  


I don't mind that pandas isn't following the strict rules of python. I really don't think it's impacting my python journey at all.

  


I treat them as two separate languages that I just happen to use in the same program.

  


I love pandas. I would encourage everyone to learn it.
I was going to add in a point about this, so thanks for bringing it up. Trying to install packages can be difficult for a beginner and if they run into trouble they could be discouraged from learning before even writing a line of code.
I'm so bad at managing my Python environment. Anyone got any tips and resources?

I currently use Anaconda but I want to be a bit more sophisticated and effective in sharing my environments with other people and ensuring that everything runs smoothly.
> Not everyone aims to be a full blown developer/architect.

Understanding loops & iteration, when to loop, if/else, expressions, etc are not "architect" level items. These are basic level of understanding items, and if you're using Pandas, they are often not necessary. Before anyone picks up a tool like Pandas they should fully understand these basic underpinnings of the language. I'm not really talking about learning to optimize algorithms or design scalable architecture.
Because pandas is the complete package, csv is not. what if you are suddenly asked to perform a new task that csv isn‚Äôt built for, things like merging two tables, pivot table, ETL transformation, pandas usually handle them in one line. Then your codes end up importing two modules, which only prompt the question: why not just use pandas?  

If you task is repetitive and simple without further change and only built for one task, in which case I agree choosing a simpler module is better. But once you need additional features which is not offered in csv, you would be in pain to maintain codes that do the same things by two modules, and certainly look confusing in script too
I think this is why there's so many pandas questions here. People are taking introductory data science type courses and the python language is supposed to not get in the way too much. The goal is to learn how to use the libraries and perform the analytical tasks.  

These courses probably recommend you have taken some programming before but is not a strict prerequisite. So a lot of people hit a steep learning curve at first and come here with the questions.

edit: Of course, I agree with the OP that "install pandas" is bad advice for a beginner asking how to read from a csv file.
> If you make simple tasks in excel too difficult in python, it will likely make then quit.

I completely agree with this point. That's why I said in another post that it was better to start with something like ATBS, which let me see how Python can be useful for a lot of different things, so when I jumped into CSV / Pandas I could see the potential of mixing both. If instead I had to spend a whole week learning Python stuff to do something I could've done in 5 minutes with Excel or SPSS, maybe I'd have given up. I know it sounds stupid - of course Python is much better. But you don't know that going in. It's easy to think you're using a flamethrower when all you need is a match stick.
I think it's important to consider the context. If someone asked you how to read a CSV, you really should consider them a beginner, and give them a solution as OP outlines.

Consider someone who is cooking for the first time. If they ask how to make a meal and you immediately say pull out your pressure cooker, you might be ignoring that the individual would have been better served explaining some fundamental steps, even if the pressure cooker might have yielded a better or more consistent result.
This is cool, thanks for sharing! Just so you know, the items coming from the `DictReader` are already `dict`s, so you don't actually need the dict comprehension in there. I believe it will function the same if you were to  `return list(csv.DictReader(...))`.
For every one beginner I see on here who's trying to use pandas for no clear reason, I see ten beginners who are using plain Python who get recommended pandas just because it has a one-liner for what they're looking to do.

That is not a good reason to use pandas.
Pandas isn't a cart, though. That's the entire problem.

It's an entire modern truck with 100 more knobs and buttons than anyone who's driven a normal gas car knows what to do with, a very foreign shift stick, and really needs a separate entire driving course to operate properly.

I mean yeah, if you've already gone through that course... you'll be fine with it.

Everyone recommending it though, seems to assume that everyone who has (just!) learnt to drive a car also knows how to drive trucks instantly, though.
Sometimes I see code that's using a cart to haul a pebble. I saw an example in the code I work on where a DataFrame was build up row by row (the way the csv module naturally works) and then written to a csv. That was the only use for pandas in the project!
I believe the select line reads as "Locate rows in the dataframe for which the specified property is the given value and assign the selection to a variable"

Edit: It seems that the comparison returns an array of Boolean values that are aligned with the dataframe reference, and the dataframe will return rows for which the Boolean entry at a given row is True
> Why use pandas when the CSV module is there and part of the standard library

Because you want to work with your data with the facilities of pandas and DataFrames, and reading it via pandas will give you that immediately. I take OP's point, but there are absolutely reasons to use pandas over the csv module.
>  It helped a lot that I knew classes by the time so I kinda knew what pandas was doing under water.

This is what I'm saying is important. You should understand the fundamentals of the language and how things are working before you move to the abstractions built over them.
It depends on what your overall goal is, if you want to manipulate data or do anything related to data science stick with `pandas`.
But look at the example in the OP. Are you really going to argue that the Pandas example to do the same thing is "more digestible"? It's shorter but that doesn't make it easier to understand.
You have many housing data and kernels on kaggle to help you get started. It might be a good place to start
For one, I want their names descriptive. It helps me to understand the code.
CSV isn't going to help you learn to read Excel files
As noted, pandas will be much better for that. If you're interested in using Python at work, make sure you learn about virtual environments and pip or, if you're mostly interested in data, check out conda/Anaconda. Then, it's pretty easy to install whatever you want and delete it without a problem... you will need to get an admin to install that for you.
Well you don't _have_ to use `[` (which is provided as a convenience), you also write `tips.query('time == Dinner').head()` or use `.loc` and `.where()` for more a sql-like flavor.

In every language you can always choose to write code that's difficult to read.
From what I have seen in this sub those whose goal is data science tend to have a poorer understanding of the language as a whole (bit of a generalisation...) I‚Äôm not blaming pandas but it is a much easier method which means you can miss learning about some basics such as context managers.

It‚Äôs why we in data science have a reputation of being poor programmers!
Many physics major I know don‚Äôt want to learn all the stuff to complete task in hand . Most people just want to learn as they go. The important thing for most of us (a lot of python users) is to just solve the problem not be an expert in programming. People who loves programming or want to expert at it tend to learn other programming languages and start from scratch. So they might enjoy implementing toy pandas themselves but not a lot of people have that sort of curiosity and time
Had we all the time in the world, we'd learn such things from the ground up, but that isn't the case. If someone is interested more in the statistical side of things, it makes sense to start building fluency in a major library right from day 1. It's a legitimate specialisation, it's not as if all engineers are hot shit with stats.
Also with a more fundamental understanding of the language, they are probably able to find pandas, and read the docs and learn it themselves, rather than starting with pandas and struggling with concepts that should be basic understanding already.
> If you were helping someone learn to play guitar, for example...

I'm hiring someone to make music. If the song needs 9-string and they can jump straight to it, lay down the tracks needed by Thursday, so we can ship the song by Friday... I don't care if they ever learn 6-string. (I'm no musician, but hopefully you get my point.)

Fundamentally, there's some that view programming as a tradecraft that should be deeply understood as a language. They're going to BE a "python developer" (among other things of course.) That's fine. Understanding the use of csv is a great precursor to using pandas. These folks are focused on developing their python skills.

OTOH, there are a significant number of casual(?) python users who just need to get something else done. They don't need to understand overloading or \_\_getitem\_\_ constructs. They need to get the data analyzed by tomorrow morning. These folks are focused on delivering specific results.

I'm not suggesting pandas is inherently better than the csv approach. I'm just saying there seems to be a larger percentage of people using python (compared to other languages) who don't really want or need to be python developers. It's a tool to get a job done so they can move on to the next problem.

BTW: I appreciate your thoughtful post. This is a good thread.
I agree with both approaches. I learned what objects were and how to use the CSV module too quickly and then learned a bit of pandas to finish a project. Then I went back, figured out "what it all meant" with the CSV module and then learned a bit of numpy to help me further understand pandas and dataframes...

A total clusterfuck but that's the way the schedule goes when you're learning at work, sometimes.

Great point though, I think if I was doing things properly I'd master CSV before getting into Pandas. Some fundamental concepts may be lost otherwise!
> I take your point, but even if your main end goal is data science, I would maintain that it's important to learn how the language fundamentally works before you dive into pandas.

I think you're completely missing the point. A programming language is just a tool to be used to accomplish a task. In Data Science you'll work with a combination of R, Python and at least one variant of SQL. Rolling out your own solution to read `.csv` files as beginner isn't a productive use of time when your goal is to understand how to build a GLM, what it does and it's limitations at one of many topics. The concepts alone are difficult enough and programming is just a  part of Data Science (Statistics > High level OOP language > Database language > Tableau/Some other BI software > Lower level programming) spending 2 days trying to write a `.csv` parser just for the sake of it is a waste of time. Why do you suggest using the `csv` module instead of writing their own version, or why use Python instead of C? Or rolling out their own plotting library using `pillow` instead of using `matplotlib`/`bokeh`/`plotly`?

Your ideas about missing out on learning language fundamentals are very far off the mark. In your OP you mention a bunch of stuff like learning how to import modules, using for loop, assigning a variable etc. as reasons to use the `csv` module of `pandas` most of the points apply equally to pandas. And nobody's goal is to simply import a `.csv`, that's just the first step in doing some sort of data manipulation and analysis which is literally impossible to do with using the 'fundamentals' of programming.
I deleted this. Sorry.
Pretty bad analogy and point. Higher math skills are important, but without computer science skills to implement them, what would you be doing? Developing theoretical, novel algorithms in academia? Machine learning algorithms in daily use today were invented/discovered before computers that could implement them. People with a sliver of the mathematical knowledge now use those algorithms in many practical applications that their creators never would have dreamed.

If you want to learn data science, you should probably learn the toolset(mathematic algorithms), ways to use them to solve problems (computer science), and most importantly how to communicate highly technical knowledge to a variety of audiences.
Not just difficult. For some students, they might be locked into a school provided ide where they can't modify it. When my kid was taking python classes he wasn't able to use `import threading` for example.
I really like [Poetry](https://python-poetry.org/) and have been starting to use it in new projects.
I use a virtual environment and pip.  When I start on a new project, `virtualenv -p /usr/bin/python3 ~/venvs/<project name>` then `source ~/venvs/<project name>/bin/activate`.  Install what I need to install (through a `requirements.frozen` file, if there is one).  If I need to "share" the environment with other people and there isn't a `requirements.frozen`, `pip freeze > requirements.frozen`, commit that, and push it.
As a data scientist (or some other profession that uses this as a "tool"), why? Do I need to know how to code in [vb.net](https://vb.net) when I use excel? I think I'll leave that to the Developers. 

It's just that I don't think I should prioritize my time learning something that is already done for me. Again, I think I'll leave that to the Developers that made the library. I'll prioritize learning how to use the "tool" for what it is. If I'm feeling very energetic, I might just learn a thing or two about loops and conditions. 

&#x200B;

Now as a developer, yeah I don't think I'll be able to be a good developer if I rely too much on libraries. In the first place, before I use something like pandas. I should have had an idea on how to do loops, conditions, functions, etc. I don't need to get into csv in the first place. but create/write/delete a csv file can be a use case to apply the basic concepts of programming.
Don't implement things you don't need. If you are only reading in a csv and that's it, KISS. If you need pandas later, it's incredibly easy to implement.

If all you're writing is a 50 line script, do whatever you want... but I maintain a codebase that was just 50 line scripts and now is a fucking mess because people just imported the flavor of the week (which pandas is not, I know).

At the end of the day, just be careful. If you're pretty sure you'll be doing deeper analysis, go for it. If you know the script will stay a script and never morph into a pulsating mass of python spaghetti code, go for it... if you're not sure, the csv module is actually pretty easy to learn.
I think it's simpler than that. 

Python for analytical tasks is rising in the last few years at a greater rate than python for developers. This means that there are more Data Scientists newbies than Developers newbies.
Actually, I always ask the person what is their learning objective. [example](https://www.reddit.com/r/learnpython/comments/f9bx6h/to_pandas_or_not_to_pandas/firumh1/)
Very cool thanks I'll try it!
Yeah, to be fair playing with data is my main long term goal with Python, so I knew I'd have to get into Pandas at some point. I can understand that you don't need Pandas for every minor thing.
That‚Äôs just stupid on the builders part but hey everyone has to start somewhere. There  are millions of ways to skin the same cat and eventually you learn the best way over time.
He did state **for beginners**. Your average beginner is likely not out here jumping into dataframes and whatever data sciencey stuff that its involved with that library.  And if they are god bless their soul. Though, I see your point for actual use cases that require it but I seen far more use cases as he has described. Someone wants to do something typical that can be done with CSV. First reply is ` import pandas as pd` lol.
True, but it's hard to tell where to stop when looking for fundamentals. Python is a high-level language, and a C/C++ evangelist will not agree that Python is a good language for beginners because it misses "fundamentals".
I get a handful of csv/xlsx files daily that I need to clean up and create reports with. If I could learn to analyze that or find trends from what I get daily that would be helpful but currently just clean and create reports for team to use.
yeah, you need ```xml.etree.ElementTree``` for that.
Lol yeah, I kind of realized that a few hours after that comment that I‚Äôve hit a wall. Thank you for the confirmation. I kind of feel like I‚Äôm just bumbling around trying to figure out what I should use
I just went through a session that included setting up anaconda and then installed Jupyter. Now things feel like it is slowly coming together. It already seems to have panda there (the session focused on numpy only but I was able to import). Now I feel like I can play around in my own and can read your comments with a tad more clarity. Thanks again
So, I think I have pip as I have 3.8 installed. But I can‚Äôt install anything without raising a service ticket through work right now and I think I need that to install the actual packages. 

Conda looks like once that is installed then any packages I want to add won‚Äôt require admin to install? Is that right?

Also, which pandas should I get? There are so many on pypi.org
Sure there are other ways to write it. But in my experience, when you're collaborating with others you very often end up with code using the \[-operator were you have to write the name of the dataframe twice (i'm not sure if it's called operator in python).
I think it is academia in general, and a result of a number of things.

1) they dont usually have a comp sci background and are new to coding

2) same with their professors. They usually hack stuff together and have learned it on their own, lots of bad practices and nothing like PEP8. They get it working, and that's that.

3) their professors aren't reviewing the code for cleanliness and might not have the best idea of what clean code might look like in general

4) the goal is to produce results, not write clean code. Hacking something together is perfectly fine. They don't need to maintain this stuff for years. They aren't usually writing a library for others to use.

I think number 4 is the main issue. If you just need results, you just need results. Who cares if it's messy if it works? Even coming from a comp sci background I think this is fine. The goal doesn't always have to be code you need to maintain forever, and I think we get distracted with cleaning up code and writing clean code for the sake of it, when it isn't always a big deal.

If I just need a few numbers I'm going to write a quick and dirty script, not some library I can package and upload to pypi.
That, and we data scientists usually come from different career backgrounds other than computer science. I am a DS, at a large company with a team of DSs, and not one of them has a degree in computer science. Biology, Astronomy, Finance, to name a few.
> is to just solve the problem not be an expert in programming.

without a certain level of understanding of the language, you can't actually be confident that the solution to the problem you're trying to solve is actually accurate and correct.
I agree that this practical approach to learning how to best solve specific tasks is really helpful. My thought process is that someone wanting to read a CSV file into python probably has a data munging/cleaning task in front of them and would best be served  by a Pandas tutorial with some basic cleaning steps and EDA (exploratory data analysis).
Hey, thanks for the kind words. You raise a good point and I suppose that I'm coming at this from the perspective of someone who wants to learn how a thing works before I start using it in earnest, and that maybe that's just not what everyone needs. But that's definitely how I try to answer questions on this sub if I can.

I still think that even if you're just "trying to get something done" it's useful to understand why it works. But if they're not going to be "python developers" then maybe they just don't care. And if they're not trying to be a developer, then I guess that's OK.
I‚Äôm sorry to jump into your comment chain but I had a question. Do you know of any good books that would get me closer to doing data science with Python? I‚Äôm a PhD in experimental psychology and have a very strong math background so I‚Äôm good on that front. I just need a comprehensive resource to help me along. I started data quest but I‚Äôm very lost now that I made it to the project based learning. I feel like they showed me some tools then asked me to apply them in ways that aren‚Äôt evident from the material they covered so far. 

I don‚Äôt know why but I feel fairly discouraged since I‚Äôve started using several resources then came to the conclusion that they aren‚Äôt very good (data quest has been good but with a few issues on my end). Just looking for advice I guess.
> A total clusterfuck but that's the way the schedule goes when you're learning at work, sometimes.

Man I hope most of the data science people here aren't working on real world problems where human health and safety are involved, because that's how space shuttles blow up.
literally?
A lot of people calling themselves Data Scientists aren't scientists or mathematicians. They're just using tools to analyse data.  I don't have to be a physicist to put gas in the car, fire the engine and look at the speedometer to know I'm breaking the law.  However if you want to win bring your best pit crew.
Very interesting. Thanks for clarifying, that part of your point was initially lost on me.
Why poetry over built in venv and pip? I'm asking because it was recommended to me a while back and it seemed like the amount of time saved with Poetry was equivalent to the amount of work setting it up and learning it/teaching it to everyone on my team.

It seems very nice, but I haven't seen a reason to justify leaving the standard behind.
So that your notebooks are coherent.

It's really not possible to be a good data scientist (in Python) without a solid grasp of basic syntax.

You might not need to know tdd, or best practices for software development, but you should understand how to use the map function and lambdas.
Great answer to the question by the way. Updoots for you!
OP did, but your post didn't say anything like "why *would beginners* use pandas..." etc. I'm just pointing out that pandas is often the right tool for the job, especially if you are reading this data for data-sciencey purposes.

And while loading via the CSV module might give you a better idea what's happening under the hood, if your beginner wants to play with data, pandas actually gives a much more beautiful and easy representation of it than Python standard data structures. If you are interested in it for data science purposes and not aware of pandas as a beginner, it's possible to do everything via ugly and slow low-level data handling and hamper yourself because you don't know the standard tools. I don't think there's anything wrong with getting to know the low-level and high-level libraries together.

EDIT: I do agree that there's an issue of context here. Many beginners don't have need for pandas. DataFrames really shine for well-structured tabular data. The low-level stuff should be presented to beginners unless it's clearly the right use-case.
I'd recommend sticking with `pandas` as it was written for your use case.
I'm pretty sure that once you have something to manage a virtual environment (either conda or venv or virtualenv or... [read this](https://docs.python-guide.org/dev/virtualenvs/)) you should be able to install without admin privileges.

The site I linked doesn't talk about conda, but if you are mostly moving data around and writing your own scripts, it's probably best (it's also great for other things, too and has some benefits on Windows which I assume you're using?).

If you just blindly install pandas with conda or pip, you'll get the newest version (1.0.something) which probably makes sense. I've haven't dived into 1.0 much yet, but my understanding is that it fixed a bunch of stuff and it's probably worth it to learn on that. Most things are the same across the versions.
I agree with what you're saying but the point I was making is that difficult to read code is a problem that goes across all languages.

The `[` is Python/NumPy indexing operator (or bracket operator). Just like in `some_python_list[0]`. In `pandas` the `[` is used to construct a slice for you and was implemented for interactive use and specifically not intended to be used in production (there's a note to this effect in the docs) but like you said that doesn't stop people from writing it in production code.
I agree with everything here. Hacking together something in a jupyter notebook is fine for exploration and one off things, but there is something to be said about poor quality (inefficient rather than messy) code going into production. Also some skills would help with the handling of big volumes of data where infrastructure could be a bottleneck
Same (marine biology for me), and some of the better DS don‚Äôt come from CS. However it was embarrassingly long until I learned things such as big O, and my programming showed!
For what it's worth, I'm very much *not* a data scientist, much more an "engineer" (whatever that means these days) but I don't have a CS background. My degree is in Physics / Astronomy. People come from all backgrounds on both sides of the fence.
case in point:

 [https://medium.com/@jstrand\_76194/when-science-needs-self-correcting-a130eacb4235](https://medium.com/@jstrand_76194/when-science-needs-self-correcting-a130eacb4235)
Pandas is so high level that you get stuff done with minimal understanding of Python. A colleague of mine had a need to get a table X from the database, pivot it and turn it to Excel for closer look. What I decided to do was to teach how to query from the DB (with a custom one-liner from an in-house package), how to set the arguments in pivot\_table and how to put it to Excel. She would have bored to death if I started lecturing her that she needs to know how with statement works, how packaging works in Python and the meaning of all the computery quiz words before she could understand this 3 lines of high-level code. Many of those learning Python wants to get productive fast and automate simple boring stuff, like my colleague, not necessarily to have the title "programmer".

&#x200B;

Sorry for the rant. I also like the discussion and your opinions though I respectfully disagree. Pandas is useful also for non-programmers.
To be honest there's a level of difference in the task as well. Coding in data science and other specific fields is more likely to be the task of writing something conceptually complex that has to run correctly once or a handful of times. Whereas software design professionals are trying to write simple (ie maintainable, where complexity is either deliberately ignored or excised from the main system) code that runs constantly. So "just trying to get something done" means different things with that dichotomy as well, which for a professional software engineer might mean doing an SQL dump for a data analyst to figure out while they spend time on code. Ultimately choosing the right tool for the job is a huge part of the job and that comes with experience. For beginners they probably need to understand how to work with json more than with CSV because the object model is closer to useful python concepts. At that point a list of tuples is be enough to get the concepts across, and depending on the domain the level up might be pandas, but it might alternately be numpy, or sqlite, or spatial libraries it graphics libraries.
Francois Chollet - Deep learning with Python.
...You should check out a research lab sometime. Typically nothing life-critical in physical sciences, but the race for the bleeding-edge is serious.

Spacecraft blow up because Americans use the imperial system for some retarded reason and that's how conversion errors happen and subsequent rapid unplanned disassembly.
Poetry is for building libraries and tools that can be published to PyPI so that someone else can install with `pip install`. Poetry provides a single channel for managing venvs, dependencies (`requirements.txt`), and files like `setup.py/setup.cfg/manifest.in`. Emphasis on the single channel part, because the number of "standard" files we've been accumulating over the years has grown to uncomfortable levels. Also, files like `setup.py` and `manifest.in` are really clunky and error-prone to manually write.

That said, if all you want to do is write a Python script, you don't need Poetry.
Yea my top level reply here was in connection to the op's whole thread and theme though lol. With that being said. I already agree for something that requires data sciencey pandas you should use pandas. Though beginners dont and likely wont need it for the tasks that are asked here.
Interesting. I didn't know the \[-operator was discouraged. From the [official documentation](https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html):

>The Python and NumPy indexing operators \[\] and attribute operator . provide quick and easy access to pandas data structures across a wide range of use cases. This makes interactive work intuitive, as there‚Äôs little new to learn if you already know how to deal with Python dictionaries and NumPy arrays. However, since the type of the data to be accessed isn‚Äôt known in advance, directly using standard operators has some optimization limits. For production code, we recommended that you take advantage of the optimized pandas data access methods exposed in this chapter.

I guess it pays off to actually read the documentation :). That said, all code you see posted around the net is using the (inferior) \[-operator. So that's the code you end up with when collaborating with others. 

Oh well, that's my rant. I've learned something new. Thank's for the input.
Same, but it's much less common than it is in DS (I work with lots of data scientists, first in healthtech now in computer vision), and DS code is very much of the academic dialect (read: verging on illegible).
> Emphasis on the single channel part, because the number of "standard" files we've been accumulating over the years has grown to uncomfortable levels.

I'm not sure what you mean by that. Do you mean changes in PEP recommendations for packaging over the years? I guess I just don't see a reason for yet another way to publish to PyPI.

I will admit that while I work on a fairly large codebase, it's not open source and doesn't need to be cross platform. Just writing setup.py and requirements is more than enough for our packages and is really easy to do. Perhaps it becomes more difficult if your req is 100 lines long... but that seems like a different problem :)
Please extend the README to show how to use it.

I want to use it, but I have no idea how.
This might be the tutorial to make such a program
https://youtu.be/7J_qcttfnJA
Please also create a requirements text.  


Also, if you wanted to make it more user friendly, you could use tkinter and just create a simple GUI textbox where people input their spotify/youtube user info.   


If you add a requirements text, then people can just create a virtual env, and install everything required (chromedriver, bs4, etc.). This way, it's almost as user friendly as you can get it.
Don‚Äôt forget to add a requirements.txt. 

Also wouldn‚Äôt commit the chrome driver.
Any particular reason why were are scraping YT and not interacting with the API?
Oh damn, I actually really needed this since Spotify just came in my country few days ago, thank you and nice work.
Good job!
Does it work the other way around ?
I reallt could have used that a few years ago....
As I haven't done much with classes at all, I've been wondering where you'd actually use them and I looked through your source code but to be honest, I don't get why this is done with classes. 

Wouldn't it be just as easy to keep the files seperated (as you did already) but instead of having classes with methods, just have functions?
Oh man, this is so cool! Now I have a base to try and export my Facebook saves to Google Maps! Thanks!
should do that for sound cloud if possible
This will work great on my PlayStation since it only plays Spotify music during game play
What is selenium used for in th code ?
How do you do it? I mean, do you follow some YouTube tutorial?
It's good to write some code and make an automation and for this i am going to say you can also do it with IFTTT(app available in app store or play store) there is also website for it you just need to connect YouTube id and spotify account.
From what I can see in the code, you will need to have Google Chrome browser, chromedriver that matches the version of your chrome browser. Then get your Spotify user account id and token somewhere from your account, so that you can use the Spotify API, and enter those values in secrts.py. Once you have all the required packages, simply run main.py. It will prompt for a playlist URL and name. That's all I believe.

Edit: related to chromedriver,  you do not need to install it. Simply, in this case, place it in the same directory as main.py
Also have a requirements.txt or something similar. 

Also please do not include the chromedriver binary in your git, licensing issues aside it needs to be the right version of Chrome. Include in the readme how to find the right version (manually from website or make a script or even conda).
I have updated README and added requirements.txt.
I have added all details in README. Please check it out now.
While including how to use it in the readme is definitely good practice, in this case, it's pretty obvious he just made a very simple CLI by glancing at `main.py`
Thanks!
I'm 50/50 on the chromedriver part.  I hate when people submit *build-your-own-adventure* code where you have to hunt down parts on your own.  

If there's a stable way to collect the same version of the chrome driver, then they could add that to code instead of the actual exe.  If not, I would much rather see the exe than to hunt it down.
I was thinking the same thing.  YouTube is very good at figuring out (over time) which pageviews are bots.  They're going to break this software.
I tried youtube api first but I couldn't get it to work so I decided to  scrape YT instead.
That's great. Thank you!!
Thank you!!
I saw the code and I don't think it words the other way. The code is using api for just Spotify and in general doesn't have class methods that would enable it to work other way.
No it doesn't, I had difficulties getting youtube api to work.
How much Python do you think they would learn by using IFTTT?  I'm going to guess 0.  

If a person is trying to learn Python, then maybe just *let them*.
[deleted]
Absolutely perfect now! Really awesome job. Also, I saw a spelling mistake, fixed it and made a PR. Please merge it.
Selenium documents pretty well what you need to do to get hold of your drivers, so a link to their docs hopefully is enough to get started. 

I‚Äôm very cautious of running an exe file from someone else‚Äôs repo where you can‚Äôt check out what‚Äôs in it, is it what it says it is? How do you know? By the time you‚Äôve checked that out you may as well have got the driver from its source.
In my opinion, a good way to improve your chances of not getting flagged is to use a randomizer to choose when and where something gets clicked.  If "next" gets clicked at pixel 34*50 every 2.10 seconds, something is amiss.  Not so if it was clicked at 34x75 and 2.05 seconds later at 30x12 and then 3.1 seconds later at 20x66
So you can learn something. Imagine these playlists are fucking massive. Then this really isn't that much work after an initial setup.

But that's beside the point, because this is someone learning and this is a great learning project.
He learned alot, just not how to make it user-friendly.
Got to have API keys etc for accessing the APIs.
Sometimes I feel like people are not here to learn python.
I see your point.  As a matter of course, I run random stuff on a VM rather than doing the research.  I happen to use the chrome driver frequently, but if it were some obscure exe, I'd never bother to read the docs & figure it out & prefer it bundled.  

Still though, all the more reason to agree with your point.  If you're not running on a VM, then obscure crap has no business.  And if it's not obscure, it is worth knowing where & what it is from the source.
Part of the job of being a programmer is making your code usable.  If he's not going to automate the installation of that stuff, he needs to at least put in the readme how to use it. 


Like technically I don't "have to" explain how to use pip install if I'm doing personal projects.  But if I'm sharing it, I'm supposed to at least say "run a pip install on the following" so that a semi competent person can know where to start researching.
[deleted]
To get your point across quicker next time, you could try adding a few more details to your feedback and not be mean about it.
That's some great work. The field of automation is a field where Python is king. Remember, don't tell your boss about this little program of yours ;)
This experience is equal to making your first $1 off the internet. An exhilarating feeling. Don't let yourself be fooled;  The actual value is way greater than the minutes saved or the $ amount gained.   


You had an idea for solving a problem, you broke the problem into smaller pieces, made a game plan, took action and completed it. That is absolutely magnificent! Well done, be proud of yourself. There is no stopping you now. Move on to a harder problem next.
I know the feeling. Congrats! Ive been automating most of my work for the past 1.5 years and its amazing. Ive even gotten extra bonus money because of that. Even knowing the slightest amount of coding can get you miles ahead of your colleagues.  
  
PS: I started automating with AutoHotkey and moved to python in 2019 november. Both are great at accomplishing your tasks 10 times faster than your archaic colleagues can.
by scraping?
Quite a kick, isn't it? Doing creative work instead of boring work. Well done!
Congrats man, this will definitely encourage you. keep going .... brother
Congrats!

Are you able to explain what modules you used or share your code? Interested how you achieved this.
Good for you. I am also trying to achieve something like this. Copy pasting contents from excel to word document. What is the best library to do this? It will also need some formatting on the word file.
Can you share it on your GitHub and drop the link here?
>It shaved off at least 40 minutes from my workload.

Don't tell your boss that!
This is what a programmer is at heart. Well done! üôÇ
I recently had to download a bunch of files from a specific sub directory of a github page. It probably would have taken less time to just download them manually, but I decided to learning about the github python module would be more fun. I was right :-)
It might take you a few hours for a 30 minute job first time. But next time it'll take 10 seconds and save you 30 minutes per run
Dont let him.know
Man you should be the boss. Keep up what you doing and python will become you best friend

Also, why dont you tell your boss? this could help other people at your job and he might give you a raise or something :D
Congratulations!
I assumed you scraped the web form using regex, then saved to a word doc
That‚Äôs awesome! Python is so great for things like this. I need to build something with beautiful soup!
Awesome dude!
That's a good start, keep going!
Congrats, man! Keep up! I‚Äôm new to Python and currently I‚Äôm trying to create a script breaking digest authentication on a web-serverüëçüèº
You‚Äôre starting to know how to do it the right way, then.  Just make sure to check the work when done by a script.
What kind of work do you do that requires this? Administration?
Great work! I am new to python and still learning the basics. People like you fascinate me to give it all.
So everyone shares these stories. I'm wondering how you got to install python on your work station?? Every place I have worked is extremely tight ass about people installing shit on their stations (insurance type work).  IT dept has all that on lockdown it seems

Did you run into this? I've been debating just installing it and if people ask I'll tell them I'm trying to make scripts for work.
The conclusion of this thread is:

Tell what you did to your boss, if he gives you a reward, continue doing things for that company else look for other job.
Great !!! how long have you been learning Python?
[removed]
Good luck
Howd you go about it? What libraries did you use?
How long have you been doing Python for? I'm fairly new :)
Great job! Way to go!

You might benefit from some code review.
Thank you my friend. Absolutely won‚Äôt tell my boss.ü§ê
Ya or he will give you more and more work when he comes to know how smart enough you are to finish it fast.
I believe in the long run, telling your boss about that program will actually help you and your company.

Why should anyone fill out these forms manually, if an already implemented and tested solution exists.

Additionally, he will consult you if he ever has tedious, monotonous work again. Just make sure he knows that writing the program takes some time as well. You will learn something and your given tasks will shift more and more to interesting things.
I screwed up and told my boss about this small program I made. I could literally be chilling at work but no, he gave me more work. Lesson learned.
It's really interesting how the replies to this comment have transformed to two schools of thought.

A) Don't tell your boss, why would you want more work, are you crazy?

B) Tell you boss, do more interesting things at work, get more responsibility.

In the end, it really matters what your goals are. If you want to be a programmer for a living, certainly tell your boss. When they push more work on your plate and expect you to perform without any pay increase, be ready to walk, there's a better job awaiting you anyways. They will almost always offer you more before letting that happen, retraining someone costs them time and money, you are far more valuable to them then they will initially let on. If you don't want to program for a living, and really just value your free time and not being micro managed, hacking in secrecy might be perfect for you...but unless your job is absolutely awesome, it would seem from the outside like you're selling yourself short
[deleted]
Can you link your first Python program replacing AutoHotkey functionality?
That's right
Used Beautiful Soup and Requests
`python-docx` will help you write to a Word file.

You can also read from an excel sheet using `Xlswriter`, but it might be easier to use Excel to export it to .csv (comma separate variable, though it's usually best to use tab-separated csv) and read it that way? Python's stdlib already has a `csv` module.
openpyxl,  I guess
Sure! Here you go - [https://github.com/abhisu30/OnlineFormExtraction](https://github.com/abhisu30/OnlineFormExtraction)
I'm wondering this, too, /u/8rnlsunshine
In which case learn c# or vb.net, as you can compile and run those in a stock.window environment!

Alternatively just use a portable python install
Your goal is to defame my nick all around the world, right?
I‚Äôve been learning python for just over a month. Keep at it my friend. All the best!
But you can very well share the code with us üòÅ
To play devil's advocate here...what kind of relationship do you have with your boss? Would he see the value? Could you express you want to do this on other projects for other people? If you like the work, this could be an opportunity for you...
I told everyone, and i was really proud. I had accomplished that in my third week of the internship. I never ever used it again until the last week, when i overheard someone had a similar problem. And they didn't even use it
..and thats why you shouldnt reward productive people with more work.
[deleted]
Yea but being asked to fix every printer problem just because you told your boss you can program a little - that isn't worth it.
Yeah I agree with this. Letting your boss know you have skills such as coding will make you more valuable. It can also broaden your job/career at said company. Keep in mind that your employer may either want to keep you closer knowing you have these skills, or get rid of you, frightened that you‚Äôre competition for him/her. If it‚Äôs the latter, there are better jobs out there.
It really depends on the boss and the company. Some might honestly re-deploy OP on more meaningful automation work or even get them training. Others might distrust the program and obsess over whether it's accurate, saying OP is the gatekeeper and must oversee each line. Still others might say, develop the program further so we can get rid of OPs coworker who did it as directed for years but would make the manager look great by laying off. 

There are scores of people and companies in the latter two examples. OP should probably get his Github ready and maybe even have an offer ready before sharing any of this in case things go bad. 

I might sound paranoid, but I created a very simple automation and it cost two people their jobs. And one drank herself to death shortly after.
Not quite the same thing but I've read where a programmer agrees to make a thing for $100, delivers it to the client 10 minutes later, and client says, "Why am I paying you $100 for something so easy to do?!" So from then on programmer never delivered until the next day. LOL.
tough decision...
>people will lose their jobs...

That's gonna happen wether you want it or not.
And wether or not OP automates others jobs. About 45% of the work force can relatively easily be replaced with robots for significantly less than humans. Its gonna happen just a matter of time.
Can you elaborate on why it's better to use tab separators instead of commas? I've been using CSV and not had any issues but in all ears if there is a good reason to change
Some questions:

1. How did you learn to do this? Via *Automate the Boring Stuff With Python*?
2. How come you chose to use `input()` rather than doing it via a command-line parameter? 


Also, I'm surprised that you can just `open()` a docx and write text to the end of it, given that they're a compressed archive containing a collection of text files. I'm guessing it worked for you, but I guess that's by luck? Did you have any trouble with this?  Usually I would expect someone to use an interfacing library of some kind.


(Note, if you just made a plain-text file called .docx and then wrote into it, and then had Word open it and THEN save it as a proper doxc I image this would work fine.)
Thanks, sorry for commenting asking for this just now :)

Little question: bs4 and request have to be pre installed via pip?
There is no goal
am his boss. this could backfire.
Heh, nice try boss.
This is a good point. I have two supervisors - only one of them gets to see the stuff I come up with. The other one just thinks I'm productive and accurate. The second the latter learns that I know how to automate almost 100% of my workflow she'll be asking me to wear multiple hats, share the tools with my shitty teammates and rewarding their laziness, and not paying me a single extra cent.
I‚Äôm sure my superiors will appreciate the additional skill set I am developing and it would improve my chances of getting a raise. But I‚Äôm still learning python and will wait to tell my boss about it till I‚Äòve gained some more confidence in it. Until then I‚Äôll just use it to make my work life easier.
Absolutely agree.  Some seem to relish in employees being buried in work, and the look of dispair on everyone's face. While they plan their next golf outing..
True, but intelligent companies know not to waste talented employees on menial work, or drive them to a competitor with poor treatment
yeah it should work for small companies for sure.
"Sorry I don't know how to fix printers. Don't we usually call the service guy?"
This is true. But only OP will know whether it‚Äôs the right move to let the  boss know.
> I created a very simple automation and it cost two people their jobs. And one drank herself to death shortly after.

Holy moly, that sucks. What can you share about the actual automation you wrote?
Yeah, I tell my wife all the time that with a team of like 5 or 6 python developers, I could wipe out like 95% of her department in a year.
[deleted]
Data tends to contain commas more than it does tabs, and last time I checked when exporting by Excel those commas weren't escaped. I'd have to double check to be sure.

However, in the general case you want the delimiter to be something not in the data set, and tabs rarely are
[deleted]
> Little question: bs4 and request have to be pre installed via pip?

Yes.

    pip install requests

    pip install beautifulsoup4
That's what concerns me the most
I'm willing to take that risk
Everybody knows that if you ask an undercover boss if they are a boss they have to say yes.
No, I'm not the boss! Look, I do the emoji üëªü•¶
That may be true in some circumstances, but we're in an economic downturn and walking into a historically terrible crash. The freedom to go to another competitor where you can experience better treatment may not be there as reliably as people would imagine in ordinary times.
I'm running into this problem right now.

I'm a statistical programmer meaning mostly high level scripting (SAS, R, SQL, and *some* python scripting), I get pulled into a meeting with two senior managers and they proceed to tell me how I need to develop an app (*that will change the industry!!!*) for them in C++ and were shocked... SHOCKED to find out that I couldn't do it without a significant effort. 

They were thinking I could do it in a 1-2 hours every week in my spare time.

From their reaction, they didn't believe me and told me to talk to the senior statistician to make sure I was understanding what I was refusing to do and the opportunity I was missing by not helping.

The statistician has my back and thought it was equally absurd, but I'm sure right now they are double checking with other programmers because they don't trust my answer.
That got me suspended for insubordination and eventually fired.  I did programming for people on the side.  My boss, a woman with permanent PMS, hires someone to do just that sort of thing then comes in an asks me to help accounting out by writing a small program for them.  I asked her if she didn't just hire a guy to do that sort of thing.  She didn't say a word, turned and (probably) ran to HR where she wrote me up for insubordination.  I was suspended with pay for 3-4 months and then fired.  I was 1 year away from retirement after 20 years with the company.  My reviews were always close to perfect for twenty years. 

My lawyer got me rehired and I was suspended for about 9 months more with pay and was paid what they called severance and allowed to retire.  I needed 21 years service for full retirement.  Funny thing was that I never told her I wouldn't help accounting.  I was just joking around.  She was fired 6 months later and her boss was transferred to the company's equivalent of Outer Mongolia about 9 months later and never heard from again I understand.  Our company newsletter had a Retirees Section and I sent a picture of me at the wheel of the nice RV I bought with the severance money along with a story of all the wonderful places we had been to since retiring.  I imagine what my boss thought of that.
"But you said you can program! Stop trying to do less work and fix the printer!"
I agree.
Found the middle manager! 

It was pretty darn simple. It basically just exported monthly calendar listings from FileMaker to our WordPress website. In between it also validated addresses and formatted text, tagged it to a region in the U.S. via the zip code and made a pre-formatted social media marketing message withing WordPress. I had to "write" (copy) like 5 lines of code and the rest was plugins. 

I was pretty proud until the one woman got axed. The other was moved to another position.
Thats why we are in r/learnpython so we can be the wipers not the wiped.
Your being a horse right now.
Ah, that does make sense.
All of my CSVs are from data I generate myself so I've never had to worry about the formatting of it. In the case of unknown input it does make sense to use a delimiter thats unlikely to be in the data
Who said it was wrong? :)
Thanks man
About life you mean
All the more reason to prove your worth
I feel this so much. Somebody always has a "world changing app idea" but is surprise surprise never willing to pay the $250k in developer salaries and $25k/month in services that are needed to even get the prototype running...
Doxxing suxs
Sure but you must have a real shitty boss for that to be his reaction...
> Found the middle manager!

Not I, not even close. I was just wondering what kind of simple automation == two full-timers (I assume).
Neigh.
[deleted]
[deleted]
I'm with you u/JBTheCameraGuy

If you have a company that doesn't value you then find a new job.  I know that's not easy, but it's not worth it going every day to some job where you don't have a good feeling about yourself.

Don't hide things like this from your manager.  If one my employees was actively being deceptive, it would not earn them a positive break in the future.  Hiding something is being deceptive.  Being told about something like this earned my employees "spot bonuses".  There are well-meaning managers out there that value employees and do what they can to mentor them as well.

Please don't play games in corporations.  It works against building a positive team environment.
The dumbest part of this whole thing is it is ACTUALLY a good idea.... they just need to pay someone to develop it instead of skimming hours of their salaried employees.
I don't have a boss.

Both of my comments were jokes.
Yeah, it was  a joke. Pasting my response to a similar question: 

It was a magazine company, the calendar was a huge money maker so they didn't mind paying people to run it. This was about 10 years ago now, but even then I was blown away by how manual a LOT of publishing was.
No its okay. Horses relied on humans not haveing cars. There population went WAY down when it happened. But then the car came. At first it was shitty and couldn't do much so they still used horses, but in a few decades they were obsolete. It's a better idea to get ahead and be the car then it is to be the horse trying to slow the progression of the car development.
It's more usual for command line utilities to receive information via parameters. Prompting for input implies your program is "interactive", but this program isn't really. It doesn't "need" the user to run and its output is to a file. 

Also, it requires you to first invoke it over the command line, and then type some stuff in, rather than typing it all in at once, leveraging your shells tab completion for files names.

I.e. it's a "batch process" and should be treated as such

Of course, for a 30 line script that'll be used once it doesn't matter. I was really hoping the OP would say they don't know how command line arguments work, and I could link them to something. Or that they aren't using the command line at all as they're scared of it, and were double clicking the file in Windows Explorer, or something. Again I could talk them out of that and into the power of the shell :)

Ps For your sake, know that argparse is often overkill for such a small script. Just read sys.argv directly.
The top has to stop playing games if they expect the bottom to follow.
Nice. I really hope nobodies boss is that thick headed. 

Work for yourself? That's the dream
I worked in publishing too, mostly news. If you've ever seen a good old-time paste-up person work, it's amazing how fast they are, moving things around, rolling out rules between columns, slicing and moving text with their exacto knife. I doubt a computer would beat them, at least not on the crap computers I used. 

The wax we used to stick the slicks to the boards is no longer available so they finally had to give it up.
[deleted]
Not OP, but I don't know how command line arguments work and would love that link. Mainly because I've only given command line arguments a cursory look and, in my ignorance, I can't see how they could replace the input function here. I wrote a similar script today, and it's almost identical to OP's. It'd be awesome to know what I could have done better.
New to python.  Why do people insist on using shell?
Perhaps it's easier long-term to use input() because although OP remembers how to pass file or folder names in what order now, in a month or 3 OP might prefer to be prompted.
Student still.

Luckily, it seems that my interest for programming came much earlier than a lot of other people on reddit (age 9) and my understanding of what I was actually doing, equally came earlier than the other people here (age 11).

So now I'm just trying to figure out what jobs are most appealing to me.

Software engineering, software developing, machine learning, data science (yet to look into, name sounds fun), data analyst (yet to look into, name sounds found) and ethical hacker (pentesting etc) are currently the ones I'm picking between.

Using lockdown to do online courses on pentesting. Afterwards I'm going back to machine learning to make a basic neural network to review the experience.

On the brightside, I've got 3-4 school years before I have to pick a university degree to get (or not to get).
Yeah, I heard a lot of stories about those days. I have a few of the pica magnifying glasses. 

But Adobe is so, so much faster. Drag image, Alt+click and you've flowed an entire page of text around even awkward-shaped images. And the template has all the headers and footers done for the entire magazine. We have one well-paid designer doing four magazines (60-80 pages) and he still has a week or two to research, ideate and work on special projects between production cycles.
Roughly, when any of these are true:

1. When you need many command line args
2. When you need --help
3. When the lines of code to setup and use argparse would account for 10% or less of your script :)
4. If lots of other people will use the script in future

case 3 is true for OPs short script.
I didn't have a link to hand, but a quick google and a read shows this as covering everything in an approachable manner:

https://realpython.com/python-command-line-arguments/
Well, what else would you use? Windows explorer and double clicking everything? Dragging and dropping things about?

Or do everything in your IDE and hope it has every function you need?


As far as I'm concerned a shell is *the* way to interact with a POSIX or Windows computer system. The reason for that is these computer systems are made up of processes on a filesystem, and processes do useful things. A shell allows you  to invoke the exact process you want with the exact parameters you want, and is often design around facilitating that, e.g. tab completion and glob expansion. 

Your operating system already comes with a large suite of useful utilities, and it's trivially easy to add more. E.f. if I want to check a files integrity I'd use `md5sum myfile.txt`. The GUI alternative would be to download some random app of source forge, hope I don't get a virus, and then click a bunch of buttons.

Unless you mean "why do people write bash scripts rather than python?" And the answer is usually compatibility and/or brain damage.
I'd say that's a reason why command line arguments (and `--help`, if desired) should be used!

Like, what's happens if the user enters a bad URL? Or no URL? Or  when that times out?

With arguments every case is unified and we get an error return code from the status and the appropriate error message.

In the `input()` case I guess you reprompt in some of the cases but let others throw an error?
Wow awesome. You're waaay ahead of the curve. Keep it up and you'll be going places for sure.

A lot of software developers/engineers end up jumping around a lot so you don't necessarily have to pick a specialization but it sounds like you already know that.

You have your own website or portfolio or anything like that yet? That's a great way to establish yourself and start getting work as a freelancer.
I worked with a graphic designer who refused to use the tools to make his job easier, and instead of using tabs would space-space-space-space, and of course his text was all ragged, and as soon as it was edited he had to go through and catch all of the places he'd put in spaces or line breaks, and of course he'd miss at least one or two. I even created a bunch of cheat sheets telling him how to do things like hanging indent and he thanked me profusely. Then never once used it.
Nice posts with some good ideas to try. 

How do I write a program that gives me 30 hours a day instead of 24?
https://www.codewars.com/ is also great for beginners to practice their skills! 
Highly recommend
Edit: spelling
Anybody know how to do a step 5?
CS1 teacher here.

I love these problems.  They are good, and the difficulty scales pretty well - mostlhy.

But problem 5 is a lot harder than the others, because web scraping is a dark art.  You have to use something like the requests library, and a lot of site owners restrict web scraping.  Then the code you get is often really messy, so you end up needing something like beautiful soup to make it more manageable.

So I'd make it easier like this:

* Find a web page that interests you.
* Use ctrl-u to view the source code of that page
* copy the page's code and paste it in a text editor
* save the code to a local file
* write your program to read the code

This solution manually downloads the page code so you can get to the content you want (even through menus and other stuff) then work with it.

But you still have the complexity of HTML as a data source.  You might think about learning how to use the beautiful soup library to grab specific elements you are interested in working with.

I have a video on this (and reading APIs) that I can make available if people want it.
These are some great ideas! I also recommend trying to automate anything you currently are doing that may be tedious.

For example:

1. Calculate the size of folders in a directory to see which ones take the most space.

2. Download and unzip a bunch of files.  A good site to try this on would be https://www2.census.gov/geo/tiger/TIGER2020PL/LAYER/COUNTY/2020/. Try downloading counties for a selected set of states instead of all of them to make it a little harder.

3. Reorganize your pictures by renaming them based on the date the picture was taken.

4. Download some COVID data in a spreadsheet and do some calculations like average number of cases over a 7-day period, find the highest number of cases in a day, or calculate the number of cases per 100,000 people. Here‚Äôs a good source of data for the US: https://github.com/nytimes/covid-19-data. This is a great way to learn the Pandas library.
These look pretty fun and I'm still quite new, so I quickly took a stab at problems one and two. They're pretty simple, but any feedback is appreciated!

Problem #1:

    def vowel_input():
        vowels = ('A', 'a', 'E', 'e', 'I', 'i', 'O', 'o', 'U', 'u')
        some_char = input('Please enter a vowel: ')
    
        while some_char not in vowels:
            some_char = input("Invalid input, please try again: ")
        
        print(f'The vowel you entered was \'{some_char}\'')

Problem #2:

    def persistence(n):
        count = 0
    
        while not n < 10:
            product = 1
            for i in list(str(n)):
                product *= int(i)
            count += 1
            n = product
    
        return count

I feel like the second problem can be solved recursively somehow as well, maybe I'll try that a bit later.
I love this.  Currently in my first week of python.  I‚Äôm between step 2 and 3, where I‚Äôve made a addition calculator earlier this week.  Really looking forward to step 5.
Hey, I think you are trying to figure out a project to do; Here are some helpful resources:

- [/r/learnpython - Wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_flex_your_coding_skill.21)
- [Five mini projects](https://knightlab.northwestern.edu/2014/06/05/five-mini-programming-projects-for-the-python-beginner/)
- [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)
- [RealPython - Projects](https://realpython.com/tutorials/projects/)

^(I am a bot, so give praises if I was helpful or curses if I was not.)
^(Want a project? Comment with "!projectbot" and optionally add easy, medium, or hard to request a difficulty!)
^(If you want to understand me more, my code is on) ^[Github](https://github.com/srz2/BeginnerProjectBot)
> **User inputs** \- Create an app that asks the user to input one character that must be a vowel. 

Every time I see (almost) *any* code that uses `input()`, I immediately know the coder is a beginner. There are essentially no real world use cases for `input()`, yet this is a common exercise for beginners for some reason.  I find it far more helpful to show beginners how to use `sys.argv` to pass in arguments, and then introduce `optparse` as soon as possible.  Other than prompting for a password, no serious command line program uses an interactive input prompt (you use arguments, switches, or read from a file), and you certainly would not use `input()` with a GUI either. So why does everyone love `input()` for beginners' exercises?
bookmarked
Bullet 2 and 3 are exactly the projects I suggested for Python beginners as mentioned in Kids Python 101 "Chapter 11: Write Functions" lesson on [https://kidspython.com/](https://kidspython.com/). As a Python beginner, I'd suggest focusing on fully understanding the concepts and practicing projects that require less than 20 lines of code. You can start with implementing common Python library functions, like add(), sub(), swap(), max(), min(), strings replace(), find(), reverse() and so on.

Once you complete Python 201 or more advanced lessons, you can try to work on projects solving real world problems as mentioned at bullet 5. My suggestion for young kids is to work on game projects like writing tic-tac-toe, connect four etc.

I will share more course materials and project ideas on the Web site and in our [Kids Python YouTube channel](https://www.youtube.com/channel/UC-VGmSaLz-WGwyeWk7kyebA). Feel free to watch and subscribe if the information is useful!
For number 5, I've tried this before and was able to have it work for a wikipedia page but I found it difficult with most modern sites (Reddit, Youtube, I assume Instagram would be the same) because they're all dynamically rendered so what you scrape ends up looking different from what you see on the page or sometimes doesn't work at all.
A project that teaches how to use python to generate a website that display data from a database, takes input and process what to display next will be great. Perhaps something like memorization tool/Anki-kind of thing.   


Does anyone know and can recommend a resource to learn how to build something like that?
!projectbot easy
Great Thx !!! üëç
Thank you!
Well, now I know what I'm doing this weekend
Features and limitations of python programming language. https://youtu.be/9SN4-d1p7t8
I have been learning python for the past 5 months, I did first 4 things now. I'm made Report Generator app with tkinter GUI. I'm struggling with compiling speed and size of program when changed as stand alone application
Would you recommend all of these to someone who wants to go into data analysis / machine learning too?
Hi I am new to python and am trying to do project 5, bots & webscraping. In order to do that I need beautifulsoup. I put the following line of code in pycharm: 

from bs4 import beautifulsoup4

but when I do that I get this warning: 'beautifulsoup4' is not declared in \_\_all\_\_ .

I have been stuck here for 3 hours now trying to fix it. I have read and watch several tutorials about it but it still doesn't work. Does somebody know what the problem is? 

I am using python 3.8
omfg
Cool stuff. I've managed to deal with #2... It was fun to figure out!
Good day, I need a Monopoly game for my school project, let me know the cost pls. My email is muyiwaadebanjo@yahoo.com, thanks
Body.pop(sleep)
Nose.insert(cocaine)
time.sleep(7200)
Where can I start learning code to even get the skills to start doing these? So far i'm an hour into linkedin learning tutorials.
I can also recomment [https://projecteuler.net/](https://projecteuler.net/)
For whatever reason people here like leetcode better. Every time I ask why, they give vague subjective answers.
There are a number of ways to do it, but eventually, you will end up at beautifulsoup4.
Here's a guide: [How to scrape data from a website](https://www.google.com/amp/s/www.freecodecamp.org/news/web-scraping-python-tutorial-how-to-scrape-data-from-a-website/amp/)
I think there are a lot of people
lol yeah, i think ppl can forget what it's like to be a beginner, if they think that's comparable to asking user to input a vowel
A variant of #3:  Reorganise a music collection by year, instead of by artist.

You may want to do this with a copy of the files - unless you plan to re-sort afterwards.
I like number 3, great idea.  

You could do #2 with important backup folders on your computer.
I actually tried no.3 for a few photos but get 'None' all the time. Is it sth wrong with my code?

    def get_date_photo(path):
        return Image.open(path).getexif()
    path = '/Users/kcanut/Dropbox/Python_Not_Babbel/photo2.jpg'
    a = get_date_photo(path)
    date = a.get(36867)
    print(date)
I have a suggestion i see right off the bat that may help you with matching letter casing in the future.

    vowels = ['a', 'e', 'i', 'o', 'u']
    some_char = input("Please enter a vowel").lower()

If you use lower() at the end of the input it will turn it into a lower case letter which will allow it to be found in a list of lower case vowels. The lower() method returns the lower case version of any given string.
What are you using to learn python? I'm just starting as well
Bad bot
!projectbot
Input exercises allow beginners to interact with their app since python is not a frontend language. it also gets them to understand other basics. As you can see in the comments, some of the users are implementing setting variables, using lists, and if, else, while conditionals. Sometimes it's more important to first teach people something that engages them so they are interested in continuing.
What can I replace input() with? Just asking, I'm starting to learn Python.
Some apps may report a problem when running, and give an option to abort.

Examples: moving files (query action if destination already has file with same name), deleting files / directories.

    rm -r       // Usually prompts to confirm a delete.
I respectfully disagree!  (though you did admittedly say \*almost\*)

For example Hangman would be no fun if you had to pass all your letters as arguments at the start.  There are plenty of other cases (mostly games) where interactive inputs are very useful.  e.g. A text adventure, a game of chess.

I would expect the majority of non-beginners programs to use either a GUI or command line options, however there are many use cases for `input()` in more polished and interactive programs too.
I've had a similar problem on things I've tried before.  After a bit of googling, the only answer I came upon was to use Selenium instead of beautiful soup.
That's a good medium-range goal, but there's a lot of moving parts there. You should know how to do functions, loops, lists, and all the basics first.  

Then you should learn enough SQL that you can at least get data from an existing source, or ideally build the database yourself.  

Then you need to know how to connect to a database, pass it an SQL query, parse and output the results.

If you want to make this active on a web site, you also need to know how to use a web framework like django, flask, or bottle. 

I teach that towards the end of class.  It's literally video #30.
Hey, I think you are trying to figure out a project to do; how about this one?

Project: **String Reverse** 

I think its a _nice_ project for you! Try it out but, dont get discouraged. If you need more guidance, here's a description:
>Take input from a user and reverse it


^(I am a bot, so give praises if I was helpful or curses if I was not.)
^(Want a project? Comment with "!projectbot" and optionally add easy, medium, or hard to request a difficulty!)
^(If you want to understand me more, my code is on) ^[Github](https://github.com/srz2/BeginnerProjectBot)
I would recommend at least 1-4 if you are going to be going into data analysis / machine learning. The fifth project is useful because though its difficulty is much higher than the others, it allows beginners to combine skills in 1-4 and really gives a sense of writing clean/well structured code and problem solving which are needed to build apps in the real world. I would just get though 1-5 to make sure you have a good base of understanding but it is possible to replace the 5th project with a machine learning project instead.
Since this project is just for practice i would recommend using Selenium Webdriver here:

[https://selenium-python.readthedocs.io/installation.html](https://selenium-python.readthedocs.io/installation.html)

Its pretty easy to use and with this you will be able to complete number 5.
I've just went through the methods' lesson from Automate the Boring Stuff with Python, so I know exactly what you are talking about!!!!
No reason to reinvent the wheel. Just: from time import long_days
I took a c++ course last year 2nd semester and was able to start doing the easy ones by summer time. 

I'd say if you can learn about arrays and lists and other data structures, you should be someone good for a bunch of them. You just need to make sure to map the ideas out on paper, use an editor and copy and paste your solution. Other than that, it's one step at a time.
https://www.codecademy.com/ is a great place for complete beginners!
Never looked at leetcode but will check it out.

Can't really see why it would be better though as codewars is pretty spot on for purpose. 

Done maybe 8/9 Katas and all have been decent, also great to review how others did it so you can see different ways that you didn't think of/know was possible

Edit: also not saying codewars is better, saying they'd probably be on par at least
What?
Or selenium
Thanks for the source! You rock!
Super useful, thanks!
I started with pycharm and I honestly really like it.  Besides that python itself and I have a google Colab account I use sometimes
Hey, I think you are trying to figure out a project to do; how about this one?

Project: **Directory Tree Generator** 

I think its a _nice_ project for you! Try it out but, dont get discouraged. If you need more guidance, here's a description:
>A Directory Tree Generator lets you visualize the relationship between files and directories, thereby making it easier to understand the positioning of files and directories. For this project, you can use os library to list the files and directories within a specific directory.


^(I am a bot, so give praises if I was helpful or curses if I was not.)
^(Want a project? Comment with "!projectbot" and optionally add easy, medium, or hard to request a difficulty!)
^(If you want to understand me more, my code is on) ^[Github](https://github.com/srz2/BeginnerProjectBot)
If you find it useful for playing around and learning, there's nothing wrong with it.  Go for it. I shouldn't have rained on the OP's parade.

I guess my point was you just don't see input() out in the wild except in a couple instances, but for some reason that's the first thing we have a beginner do. It's weird to me.  Take almost any command line program, say grep, ssh, cat, pandoc, or gcc, and you won't see an input() type of situation except for password entry and usually some sort of confirmation ("Are you sure? Yes/No"). I spend enormous amounts of time living on the command line, and personally I find it a rare use case. Not that it doesn't happen, but it is the exception to what is considered good practice for normal user interfaces.  It is almost always better (except for the cases I just mentioned) to pass the info into the program through arguments, switches, and files.  

I suppose I was reacting to this recommendation because I think input() shouldn't be taught as a "normal" way to interact with programs. New programmers will use it in places that don't make sense, and more experienced ones will move on to better methods (namely arguments, switches, and files).
That's a good example. Passwords and confirmation are two perfect use cases for input().  My point is it's not a good user interface for normal use cases.  I'd rather teach new users to use sys.argv.
Interesting, I remember hearing that name being mentioned a bunch when I was working on my scraping. What does it do differently?
Is Automate the Boring stuff still good? It seems super old....
But Where's the fun in that üòâ
Does everyone pay the $200 pr is there a free one?
It's a library that is very helpful for building web scrappers.
No problem mate! :)
good bot
hehe shit works :)
!projectbot hard
beautifulsoup is a library for parsing html, selenium is for automating a browser.
Still relevant. Still solid. Content is usable for Python3, so I‚Äôd say yeah.

Interested in hearing the rest of the communities thoughts.
The fundamentals of python have not changed significantly, so yeah it's still good
Well, I can't be a very good judge for this, because I barely started learning. I hope it's useful knowledge there.
Choose Python 2 instead of 3. Python 2 is free.
They offer a free version.. But even then if you were serious and want to get it down quickly, you could do it for a single month and cancel after that. 

But Codecademy is a bit more interactive than other resources I've seen.   
They also offer a trial I'm pretty sure so you can try it out before you commit to anything.   


Also pretty sure they offer python 2 for free. I learnt via Codecademy and it was definitely money well spent.   
Otherwise you can look into automate the boring stuff etc,,
What‚Äôs the difference between beautiful soup and selenium
Hey, I think you are trying to figure out a project to do; how about this one?

Project: **Python Website Blocker** 

I think its a _challenging_ project for you! Try it out but, dont get discouraged. If you need more guidance, here's a description:
>Create a blacklist of websites to block while surfing the web.


^(I am a bot, so give praises if I was helpful or curses if I was not.)
^(Want a project? Comment with "!projectbot" and optionally add easy, medium, or hard to request a difficulty!)
^(If you want to understand me more, my code is on) ^[Github](https://github.com/srz2/BeginnerProjectBot)
[deleted]
!projectbot easy
I love the simplicity of this answer
What about scrapy? I've used bs4 and selenium before, but have been seeing scrapy more and more in the wild.
Hey, I think you are trying to figure out a project to do; how about this one?

Project: **Dice Rolling Simulator** 

I think its a _nice_ project for you! Try it out but, dont get discouraged. If you need more guidance, here's a description:
>Create a rolling dice. Start off using only a 6 sided dice. You can step it up to other dice types. Create a random number based on the type of dice to present to the user


^(I am a bot, so give praises if I was helpful or curses if I was not.)
^(Want a project? Comment with "!projectbot" and optionally add easy, medium, or hard to request a difficulty!)
^(If you want to understand me more, my code is on) ^[Github](https://github.com/srz2/BeginnerProjectBot)
this is exactly it
Never used scrapy personally but from my understanding scrapy is a fully realized web crawler. This means scrapy comes out of the box expecting multiple sources it needs to examine and pull data from. You could implement this same functionality in bs4 but it might take a bit of engineering to get it all to work the way you want it to. Scrapy is a full-fledged web crawling *framework* whereas bs4 is just a web scraping *module*.
Look how they're massacring the good bot.
43 here. Retiring from the military in a year, and plan on going into IT
Just turned the big 6-0 back in June!
53 here!
[deleted]
Yep, middle aged and trying to learn Python, Ansible, YAML, JSON, REST, and get up to speed on cloud. If it wasn't fun, I'd say it's overwhelming.
Started learning at 42, check this out https://talkpython.fm/episodes/show/194/learning-and-teaching-python-in-a-vacuum
How about starting a discord channel for the folks who reply here?
I'm 27 and work in IT, but a new job required me to go from knowing "a little Python" to being able to develop actual scripts for prod. 

My advice to you guys is find a project to develop and learn that way. It's easy to watch some videos or read a book and mimic what they're telling you to do, but having a goal and asking yourself "hmm, ok, I need to do X. How is that done? Now how is that done in a Pythonic way?" will push you to research on Google and teach you real-world approaches to developing a program. 

Just my 2-cents. Happy coding!
Buncha old MFers in here! JK! 

I‚Äôm 34‚Ä¶ working on getting good, at least good enough to call myself a strong scripter so I can have a higher-level Linux job.
42.. feel insecure.. frustrated..and left behind..

Maybe we 40 plus guys should have a group??
I'm 34 now. I know it's hard to keep on track given the circumstances (work, family), but I try to motivate myself thinking on the goals I want to achieve.
43 and just started with Python
41 here, just making some exercises.
Here at 40
39 here .. just started to learn python 2 months ago without any programming back groud.. miles to goo....
47 years here and so frustared
I learned python in my 40s. But it wasn't my first programming language.
45 here, cut my teeth on BASIC on 8-bits: Apple //e, Commodores, Atari. Still tinker with my C64 and thinking of making a game server for a MUD, maybe. Not as a first project of course. :)
[deleted]
I did, at 42.
Turning 38 in a couple of months and just finished up some coding classes
45!
I'm about to turn 60 and I decided I want to learn to code. I have lots of free time, so why not? But yeah, I feel ya.
Turning 39 soon.
41 here let's go!!!
44
29 here. Not too old, but boy insecurity gets you.

Congratulations and thanks for the post!
Good job! I went back to school for a geology degree at 40, took my first Python-based class at 43 got my BS at 44, then an MS at 47. You‚Äôre never too old to learn something new. Personally I hate coding and I‚Äôm not good at it, but it‚Äôs a necessity in any almost scientific field these days. Stick with it and always ask for help.
Today is my 53rd birthday and I'll be working on a POC for a start up idea that involves FastAPI backend with a postgresql database and Vue frontend. Building fully cloud native with Docker and eventually K8s.

Lots to wrap my head around.
42, just started a few months ago. I'm done being tied down to a single place for an entire year minus one or two weeks of vacation just to be able to earn money to live. Figured this was the best way to start on the path to full remote work, hoping to be there within a year or two.

The worst part about learning something completely new at this age is how lazy I've become. I never really had to work hard in school and it has caused serious problems for me my entire life. This is going to be a shitty test to see if I can overcome those issues.
42 here!
36 here.
41 as of Saturday. Started programming around 16, only started expanding to python about 2-ish years ago. Kicking myself for not working with it sooner. Yay, late bloomers... I guess. o_0
35 here, and I thought I was the only total newbie at this age! Never programmed before, started teaching myself through Sololearn and Crash Course in Python. I am struggling so much with the basics, I jumped from resource to resource trying to find something that worked. I feel as though I need things explained in a very non-maths way to get my brain to ‚Äòclick‚Äô and have it sink in. I‚Äôve gone over stuff again and again and not ‚Äògot‚Äô it, but I am starting to get there now.

My plan is to start Space Invaders in the back of my book to get some hands-on coding, and refer back to the appropriate section as needed. I also have vague plans for a text-based adventure game, I just have to figure out the best way of joining many overworld sections together! So far I‚Äôm looking at classes, it‚Äôs just the specific setup I need to work on. Wish me luck!
43 here. Wrote my first line of code in March. I am still very excited and will start a 3-months intensive course in 2 weeks. You can do it! In our age group we know ourselfs better and have more experience and this is a big advantage. Remember when you were really proud of yourself because you accomplished something? Do that with every line of code! I believe in you!
Turned 40 in Jan and started learning python last year during lockdown! Have mostly switched to GD Script - the language used by the Godot engine - but my Python knowledge was invaluable and it was exciting to realise I understood programming, at least at a basic level. Still have so much still to learn, and planning to continue with Python too. :)
50 this year. Started learning Python last year. Learnt HTML as I was parsing web pages. Carried on to learn CSS. Learnt Javascript because I was parsing JSON with the python code. SQL for a similar reason (All of that thanks to Dr. Chuck) Thanks to the guys at CS50 learnt C more python, more webdev , SQL and flask. Learnt IT support from google. Got a job in a company (after almost a year of cramming all that) now doing React Native, Flutter and Kotlin as I am moving into mobile development.

Never been to university been self employed most of my life doing manual labouring type job. I know not everyone can do it, but it is possible. Keep going , good luck with the journey.
49 here, started 5 years ago. Dude, you don't need a separate thread, just post here. You're already in a supportive community. Post specific questions, google first, always use code formatting. That's how this works. People will help you.
41! Started learning at 38 and I'm looking for my first job as a developer now! Keep going!
Does 38 also count?
Keep on grinding! :)
[deleted]
41 next month and studied python for about 8 months, took a break and now enrolled in a boot camp covering html, css, python, ruby, SQL and more! Starting part time (15-20 hours/week) with it on the 30th! Hopefully will be able to balance it with 60 hour work weeks and three kids! Age is just a number and coding is interesting tho, so here goes nothing! Oldies unite!
Nearing 40.

Struggling a lot.

Lots of things in plate.

Couldn't concentrate on any!

Python(hobby) , PEGA(work related) , Node js(add on) !!
38 here
41. Great thread!

I started over xmas holidays but chaos quickly overruled. I moved abroad almost 2 years ago, so I'd been taking a mandated 20 hours of German lessons a week -- now THERE'S an impossible language for you -- and planning a divorce.  I've been disabled for a decade. I have no direct tech background (but I can analyze the hell out of a 19th-century novel for you zzzz). And I guess there's still some pandemic thing going on, stalking my immunocompromised self?

But now: I'm planning to move back home in a couple months. In addition to gaining back some of the 40+ pounds I've lost (BBQ! Mexican food! drinks with ice!), I'll be able to focus again on the Python. It'd be awesome to know I'm not the only grad student in the School of Hard Knocks: Independent Study Python Program üòÇ
To all you more well-aged people here, if you need any help get started / want a place where you can ask questions.
You can if you want, DM me so you can join my discord. I am there every day to help.
I am a non-english speaker from Mexico currently I am 30 yo, I have a bachelor degree in marketing but the salary for this types of jobs is not very attractive here in Mexico, I've read that learn to code may be an opportunity to improve my current life style so I decided to give it a try now to see if I can switch careers.  
Currently I doing the FreeCodeCamp course but I would like to hear any suggestions of where should I Keep learning and what else can I do to learn the fasstest way possible.  


PS: Congrats for your choice to learn to code. 

Sorry for my english and Thank You.
33 here. No background in CS, trying to put myself on a track that won't end in me doing min wage work the rest of my life. Struggling a lot.
I first started programming at the age of 4 (TI-Basic on a TI-994A).

I turned 40 this year (so much pain behind a number), and I've been using python for ~20 years now.  

I just learned something new today (https://old.reddit.com/r/learnpython/comments/p21hb7/you_can_link_to_a_script_and_put_it_in_your_path/) - the learning never stops!
50 here. started teaching myself about a year ago. Worst thing about python? stupid whitespace
48 here.  Doing 100 days of Code now.  Hoping for a career change by next year.  Started with Automate the Boring Stuff.   Dedicating two hours a day to code.
I'm 31 at SNHU learning Python online. I feel like I have a grasp on some things but functions and loops are still messing me up. I'm thankful because one of the tutors is really good and they always walk me through any python trouble I have. I'm almost done with my first course and I feel like I probably would have benefited more from python learning this in an in person environment. I bought a couple of python books as references in the future as I want to get a job in coding.
All the folks in this thread looking at python like "You know when I was your age you weren't even a glimmer in C++'s eye"
43 with 3 kids and new 7months  twins here .
Keep going . üòÅ
40 years here, been avoiding anything programming since the C64's days in the sun. Annoyingly I discovered when starting to learn programming that is something that is just so satisfying.
Older than you, been Python-ing since 3 years ago
42 in a few days. Is there a decision on the meeting point yet? Looking forward to it!
I started Python at 40 with the Google ‚ÄòCrash course on Python‚Äô. 
I guess the course turned me off Python as I‚Äôve not returned. 
I should probably pay for Automate the boring stuff on Udemy to get back into it.
37
41 here starting out learning python.
lol , trying to get my dad n mom into but they wont listen, good for you mate
 Older the better, you know what you need.
Hey mate,

If you run into any issues let me know. I teach it for a living.
43 here. No coding background and now fighting with python...
39 and not so long I started to learn python
40! Trying to grasp it man.  Having a tough time with classes.  I‚Äôm going to pay for a tutor to get me over this slump.
40 here. Studying for computing degree part time. üòÄ
27 feeling overwhelmed and too old to start programming , been learning for about 6 months in total , i feel really stupid sometimes and its extra hard for me coz english is not my native tongue and theres words that dont exist in Polish like instantiate and some other , just been learning english from the internet and computer games for the past 12 years or so , coz i knew english would be usefull down the road for something

Its motivating to see people start to learn at 40 , Cheers !
I'm 32 and started slowly learning Python about a month ago. It took me a while to stick with a resource that suits my learning best and I its going to be a very long process but I am determined. I spend about 1/2 hours a night. I haven't written any of my own code as such yet, just figuring out and remembering all the different processes. 
I do wish I started earlier but I suppose now I'm older I also have that little bit more patients and try to be thorough. 
Great post by the way, motivation is key to learning.
30 been learning on and off for a year (more off big life changes) Would love to turn into a new job down the road but just started a new job 2 weeks ago to pay bills.

Would love a Discord for maybe newer people to python as the big ones are a little intimidating. Would be nice to share little wins without fear someone who has 20 years knowledge just wants to shit on ya.

If anyone does Have a more relaxed discord for chatting code would love to join. Discord ID Tehkast - Bruce#4252

See others saying old geezer learning etc would be nice if someone has not already made one.
36 here
46 here, but old school programmer and late on python =D
DM me. I will be happy to guide you.
Hey! Congrats on your new venture and good luck!

In Italy we have a saying that goes ‚Äúfrom the cradle to the grave, you will always learn‚Äù.

I graduated in sound design at 43. Now 46, also learning Python and programming. Keep it up!
39 here. Doing python as a hobby
Late 30s hey üëã
41 here.  I've been in networking quite a while but looking to move more into dev.  In the meantime, I'm hoping to get my DevNet cert out of this and combine what I know with what I'm learning.  Currently learning from Angela Yu's 100 Days of Code on Udemy.  Good Luck, brother.
I started at 40, last year
I was 42 when I started. 46 now. Best career decision. Really enjoy work now.
49 here! I've been in IT for years', and have dabbled in programming here and there, but this, I would venture, is probably the first time where I am full on studying and learning it to use it at my job where I am in a role to be using what I learn. Thanks for sharing your story!
45 and I've literally forgotten more than most people will ever know.

I actually have some brain damage recently.  So pretty much starting from scratch with programming skills.
45 here, however I have been a developer for over 20 years.

My job is taking a new turn and Python is the way to go. Been learning by myself for about 1 month now. It is an interesting language and easy to understand the basics.
I started learning python last year at age 50. Great experience, good for the brain, incredibly powerful language and libraries.
I just learned python when I was 74 years young !!! Lol never too late to learn ! Besides like any other programming language you embark in a long life learning quest !
I'm 30 and just started out, hope that counts.
41 year old nurse, working full time and then some, raising tiny humans and soaking up Udemy Python courses in the wee hours of the morning before the rest of life starts. Thanks for this thread - I think I needed to know y‚Äôall are out there too! Yay to us - driven, lifelong learning, skill building, hopeful, not-quite-old but not-quite-young folks cracking away at it!
53 here! Started learning 2-3 years ago, but have been taking a break due to health issues. Plan to dive back in soon, though!
30 - been through three python introduction courses.
37 here started Python Bootcamp Monday üí™üòé
Hi! üëãüèª I just started about the same time as you also! The biggest challenge for me has been carving time out of the family to get started and stay started. Also I get impatient sometimes. Staying patient has been key for me. Thanks for this post! Maybe we could start a small community somewhere(discord or subreddit)?
41 and learning Python as part of a data science certificate. After this, I want to find some kind of placement (interning maybe) to get some experience.
Give yourself permission to try, to stumble and to accept help here. Have no fear, us old dogs can still learn new tricks. I'm early 40s, process engineer. Started learning/tinkering with Python a couple of years ago. Currently working my way through the UC San Diego micromasters in Data Science.
Also tinker with Raspberry Pis, addressable RGB LEDs, made a TV lift cabinet automated with a raspberrypi and python. Done some webscraping, made basic flask apps deployed on Heroku. Have used it for work a bit too. It's amazing what you can do with Python!
44 year and just started learning Python last year.
hahahahaha. try picking it up in your 40's while it is a very small part of a much larger infosec job. i wish only learning python was my challenge.  Good luck!  It never ends. :)
Wow, so many respond! Thank you all for the shout out.

Then, I'm curious now. What is the most frustrated thing when you start learning Python? 

&#x200B;

Let me share mine.  Okay, so I worked as HR profession so I am quite capable of advance excel function. I have some basic knowledge of html. but when come to Python, the "coding sentence" (don't know what they really called it) is just confusing. sometimes the command is put to the front, sometimes at the back. sometimes we need to '.'  and sometimes it just need a space. Seem like there's no logic in coming up with the language (at least, to my beginner self) 

Especially in Loops, I just so confused that I have to write it down and take it apart in each element and then compare it to the example. Totally took me one hour to understand it but in real time, it's like a week of watching lesson. doing exercise. fail. try again. search internet but more confused. etc.

&#x200B;

so , what is your more memorable story?
Well‚Ä¶i‚Äôm learning c++ at 14, does that count?
If you need a course at a discounted price, let me know in DM
Welcome
38 here. I've started to learn two years ago and still continue but not fast as I want.
Took a Python class while I was 39 turning 40. Now using it at work and I turned 41 this summer.
Around 40s here!

I learned python in a month including learn shell scripting and tcl. I was writing text parser script in python.
Yep, I‚Äôm 41 and just started learning to code last year. Python is MUCH easier to read from the jump, compared to my boot camp‚Äôs language of C#. 

Good luck!
I'm in my 40s learning python. There are dozens of us.
Not quite 40, but 37, white collar worker, no degree. Was going to do BS back when I was 19 but finances got in the way. I'm established in my field, and now I'm putting more time into learning and considering finishing my BS
42 and doing it off and on between CompTIA and stuff. Sometimes I feel like I get t and other times I'm like "duh".
43 and having to move from R to Python. Struggling to push myself to learn Python with the same effort.
I started at 45 during the pandemic furlough. I‚Äôm so glad I did. I sometimes think I‚Äôd like to transition to IT, but I‚Äôm also just as happy having coding as a hobby‚Ä¶something to keep my brain engaged into middle age.
Right there with you buddy.
Here!
47, just starting out.
45 years young here, and bought a load of Udemy courses and a few books. Just getting another project out of the way before starting on my Python journey. Wish me luck! üçÄ
42. Starting intro to programming this coming semester. So far I‚Äôve only watched a few videos and ordered a python book. Lol. I really love computers and math. Had my a+ cert in the early 2000‚Äôs. First pc I built ran windows 98!
Yeah. I‚Äôm with you at 42.
Went back to college at 37, entering my last couple semesters. I‚Äôll be almost 42 when I graduate. Double majoring in Information Science and Computer Science. Learned Python and Java simultaneously. Not easy but doable with some focus and determination.
Use skillup companies to fast track.
42 soon and have been picking away at it for a couple of years.  Not a great programmer, but adequate for my needs
I started 15 months ago at 41. I have learned a lot in that time. I can pretty much pick up any language and do stupid things with it. I‚Äôm currently learning Common Lisp and C++. Languages I have learned and still learning are Python, C, racket, SML, Rust, and a little Ruby (enough to hate it). Right now, my biggest hurdle is learning all the math I should‚Äôve learned 20 years ago so I can learn algorithms. 

I don‚Äôt think age gets in the way except that I have more responsibilities that I didn‚Äôt have when I was younger, so it is harder to advance when juggling a job and family. The biggest annoyance is reading questions like, ‚ÄúIs 22 too old to get started in programming?‚Äù The way I see it, I have 25 years left to work, so what‚Äôs 3-5 years to gain new skills and enjoy 20 years in a more challenging and rewarding career?
*raises hand*
I started serious programming when I turned 50. I had some experience on 8-bit machines back in 90's, but I had a long gap afterwards. It's never too late to learn new things.
36 here, so getting close to 40!

I am in the middle of reading the Python crash course 2e by Eric Matthes, which is a great resource.

I have been a sys admin for about 15 years, pretty familiar with powershell, very familiar with linux bash, but decided to pick up Python as a ton of cyber security-related things are done with it, and I have never formally, fully learned a programming language, I have mostly dabbled and snipped bits of code here and there to accomplish some specific goals as a sysadmin. 

I am finding the hardest part is finding projects that are both feasible and engaging. I wrote my first program and accomplished a huge automation win for some security scanning I was mostly doing manually, and that felt great. It still needs a tweak or two to format the report a little more cleanly, but as I am getting near the end of the project, I am concerned I will not have enough things to practice with to keep me interested.

The book I am reading and most online training courses have you build programs that essentially do nothing; alien shooter games and whatnot. I find I have a hard time finishing those if the end-goal is not something I care about like shooting at fake aliens as opposed to solving specific challenges I have as an admin that cannot be solved by more simple means.
I‚Äôm also 40 and learning Python for data science application specifically. I feel ya. My brain doesn‚Äôt have the same short term memory as before so building up to use concepts in unison is frustratingly slow going. I know it‚Äôll start clicking for me at some point, looking forward to that payoff.
40 year old here. 1 year to go on a Bachelor's in IT , started during the pandemic. I've never encountered anything yet I couldn't handle. In fact , I'm usually helping my classmates. Im gonna do a bootcamp sometime during q2 and q3 next year when I dont have classes to take. Nothing is impossible. Go for it.
I‚Äôm 24 sitting here thinking I‚Äôm running out of time to get into programming. This gives me peace of mind. You rock!
30 and learning Python!
38 here! I started learning Python trying to move to another job or get an extra income. But will all the endless possibilities (data analysis, webdev, scripting, etc) I'm lost hahaha
54 here! I worked in the field 30 years ago!
40 here. Came from a fashion background with no programming experience. Did a boot camp during the pandemic and recently got a data engineering job. Still learning Python and many other things, which is HARD but I know will be worth it. If you start a Discord, I'd love to join.
I'm 47, have ADHD (medicated, thankfully), and started learning Python last year. It's entirely possible to do and you're not alone. :-)
46 and just started with Python last year. Could use support. Done some Django, Flask and others.
41!   Spent 17 years in business administration and got laid off due to the pandemic.  I've always been interested in technology and decided to move into IT.   I got two AWS certificates during the pandemic and am now learning Python and HTML.
40 here, I work for an ISP and have dabbled in python, but only recently started taking a course to learn.
Same here, 44! Go buddy, you can do it!
I just started a couple years ago and have been on and off but will try harder. Just keep doing exercises over and over.
I found that repeating over and over and over (making your own) some concepts and exercises is the only way.
44 here and started my masters in CS last year with no prior experience. Get r done!
42 and starting my second semester in a Masters in Analytics program with no coding experience. Been taking the business courses first while I continue learning Python and R.
33years here
I'm 45. Switching from International Relations (!) to Data Science. I did a Udacity Nanodegree and then a lot on my own. I now work as Data Manager and use pandas, Power Bi, SQL, etc on a daily basis. I'm planning to take some formal education next year, probably more towards Data Engineering üòÖ. I'm up for the 40+ exchange/discord/twitch or whatever
Not quite 40‚Ä¶ 39 here (40 in April), and have a year left to finish out my cs degree
44
30 here, started learning python last december. I'm to the point now where I'm automating a ton of tasks at my job and helping build pipelines and other infrastructure for our data that had been poorly managed up to this point.

It's SUPER motivating to see so many other people past their 20s learning to code. Keep at it!
34 here, learning python currently, just learned a lot of SQL as well. Was sick of working shit jobs so I decided to invest in my future
Not quite 40, but I'm 32 and started last week.
I'm trying to learn via textbook from the library. Hopefully I will end up employable this time around. I've had bad experiences in school environments so I'm trying to minimize education costs for the time being
Late 40's and wondering why I never tried programming before. (not counting that time in 1998 where I tried to learn ASP... ) Every time I get something to work I feel like I am a wizard..
52 & starting...have a background in WebDev & Graphic Design/Art. Mostly wanting to expand my capabilities/understanding in project management.
I got slightly ahead of the curve in front of you. I began learning Java at 33 y/o and Python at 35 y/o.
46 - new job new language.  If you have programmed before, its a minor syntax hurdle.  Good luck!
49.  Its no big deal.
57, just learning python for my own enjoyment, its been good so far.
I‚Äôm 40 and starting to learn python. Hoping to make a career change within a year. So hard but I hope I can keep this up in my busy life.
Persistence is your beat friend
I learned when I was 35 and transitioned to a job using mostly Python. It can be done.
45...starting python.
35 started learning Python 2 years ago (still learning). Found Podcasts like Code Newbie & Learn to Code With Me to be very helpful - full of ordinary people who have learned code at different life stages & successfully transitioned careers..
Well done ! I started in my 50s - been at it for about 10 months now - it‚Äôs a beautiful programme language ! Enjoy the challenge!
I am 55, I just started learning python.
It feels good to read about others that are opening new doors later in life. I'm 34, and I've been learning Python/Computer science for about two months so far. Feels good to be improving once again!
43 here
Not far behind you 40 and just really getting into R do fairly well with it python is my next phase
Started at 37 myself. One of the best decisions I ever made. I used mostly Perl up till then, I fear what I world be doing if I hadn‚Äôt made the switch.
Im 43 and started to learn Python 1 year algo, Its passionate.
Learning programming its good, but find IT job better :)
Im 45 and I picked up Python a couple years ago. I went to school for computer science so im not new to programming. Python is an awesome language for a first language. my first was Pascal. Well anyway, good for you. I really enjoy Python and Im sure you will too
Yup, 41, retired from the Army 6 years ago and chasing a degree in cybersecurity.  I never thought I'd have to learn to use so many programming languages in my life.  It's all kinds of frustrating most days, and I feel completely lost most of the time, so I get where you're coming from.
48 here!
Does 36 count?
25 here, been using python for about 7 years and professionally for 3 years now...still then I consider myself as a beginner. Learnt new things about python today and how amazing the language really is.
36 here and while it‚Äôs the best feeling when you get it right‚Äî I keep taking pics of my successes. It can be a pain in the ass, being stubborn comes in handy.
Totally new to programming.. 42 ..started with C.. slow progress.. not able to grasp logic of what is often quoted on reddit as "elementary".. struggling on setting up the environment.. compiler.. IDE.. was following  video tutorials.. now switched to text books..
What area do you plan on moving to when you retire and what type of IT would you like to get into?  I left the Army after 10 years and moved into data science/engineering at the end of 2019.
Salute to you Sir üññ
Prior military as well (not as old‚Ä¶but close)
Learning Python and growing SQL skills
Nice, planning on going into the military after college any tips?
What MOS? You might be able to leverage that.
Thanks for your service, how long? Retiring means like 20 years minimum?
Hey! Are you me?
Me too!
Me too, on the BASIC on the Atari!  Used to type in BASIC programs from magazines (from my parents early Apple dealership) on Atari and early Apple IIs. I'm 49    


Long time Java developer, trying to transition to javascript and python.
I might be able to help with the Python part! I'm offering free Python training as part of a program I launched earlier this week. If you're interested, check out this LinkedIn post!

https://www.linkedin.com/posts/pablovillarroelc_python-programming-coding-activity-6833497829357436929-bIOl
That is a lot to swallow in one shot! How long did it take?
That's a lot to learn at once! But I can help you with part of it. I'm offering free Python training as part of a program that I recently launched üí™ You can find more info on this LinkedIn post! (or feel free to ask me anything!)

https://www.linkedin.com/posts/pablovillarroelc_python-programming-coding-activity-6833497829357436929-bIOl
Discord Python Geezers
Discord?  What's that young whippersnapper?

Is that like IRC?  ;)
I say Yeah!
I am in
That's a good idea. I would suggest creating a server with a bigger scope so that python can be one of the channels, but the overarching aim can be creating a group for senior/experienced/old developers who can support, help, advise, and socialise with one another.

There are some such forums already in some servers, but it's pretty disjointed thus far.

If such a server were created, please do post here. I will be sure to join as well. Such a forum has been sorely missing for a very long time. Uptake may be (realistically) slow at first, but its need is simply unquestionable.
I started up a dial up BBS for this. It's fast at 400 baud. Call 313-555-5555
I'm 53 and started with python last year. It was my first language unless you count PLC. This is the way. I've done several real world projects in the past year that are being used at work. I learned using this method.
After having tried and failed the watching videos and walkthroughs route, working on my own project now. Accomplishing more than I thought was possible but for me this was key to staying motivated. I also started again a couple months ago.
26 and almost in the same scenario! my new position requires me to learn Python(because I have a little knowledge about java, no experience though) and a CMS (content management system) that is built using python. 

It is pretty challenging!
Excuse me? old MFers?  That's "experienced" to you!!!

üòÇüòÇüòÇüòÇüòÇüòÇ
Bash is _far_ more important than Python for most linux stuff, just FYI.

I long for the day when I can replace all my horrific difficult-to-read bash scripts with python ones.
I agree...
That's a good idea. But in the meanwhile, maybe you'll like to know that I'm offering free Python training as part of a program I recently launched. Feel free to check it out if interested! 

https://www.linkedin.com/posts/pablovillarroelc_python-programming-coding-activity-6833497829357436929-bIOl
What are your goals?
That's actually my goal as well.
You're already in one. You don't need another one...
Other than just for fun, what do you want to do with your code?
I started with fear of being obsolete but it actually open up more possibility.
Embrace the insecurity and allow yourself to fail. The path to success is littered with failures.

https://i.imgur.com/sLNWCLh.png
It would be nice if I can go back to school. I'm torn between proper education and just take a course and jump to action.
Was this an online degree? I want to go back to school to study finance and sw development applied to it.
Happy birthday!
Yeah, I went to grad school right after having a kid. It aged my brain. I used to sponge up everything without effort, then I had to learn how to learn.
Worst part of me if having to lookup how to to achi be X, knowing that I have googled it Y times
I‚Äôm exactly like you. Consider checking out 100 days of code on udemy. Her class forces multiple small projects on you daily. I‚Äôm still struggling, but having to actually think and do the work has helped me tremendously.
This is an awesome story!
Data viz sounds like something I'd really like...
I feel ya. even python is like future survival plan to me. but it still hard.
Hi! what is your discord account name?
I'd be interested in this :D
Ese raza
> I turned 40 this year

> https://old.reddit.com

Geez, even your Reddit is old! ;)
Hell, my young one... I started on a TRS-80 model III  with a tape drive.

üòÇüòÇüòÇ
you'd rather `{` and `}` and `;`??
Are you using an IDE?
I‚Äôm doing the same thing! How far have you gotten through the text? Are you finding it worthwhile? I am about a quarter of the way through it.
What are you changing from?
wow congrats; so is that 3 kids total, including the twins, or 3 kids, plus the twins, for 5 total?    
My twins just graduated from high school, boy and girl    
It was exhausting early (we also had a 3yr old when they were born), but fun later; they are now best buds
Yikes my twins are 15 and still rough!
For me, it's like open up a whole new world. something that I want to do but don't know how to do, now it seem possible. (though I am not there yet)
it have to be for your own benefits. I tried to persuade my dad to use watsapp but he refused, strongly. then, I told him that my brother was sending a vdo of his daughter in watsapp. Now, he slowly started using it. so he can see a vdo of his grand child.
Fighting!
Please report back on how it goes. \^-\^
I feel you. I'm working full time and my job is actually very demanding. so, finding time to concentrate is very difficult. I agreed that we should create small community but I'm very new to reddit and discord as well. what do you think will be the best place?
me too. I'm on data analysis path at coursera.
I think my first language is lotus123. but that is like a million years ago and it's a very basic one for kid's summer camp or something like that.  


after learning basic python, it's like opening window of  opportunity. but just that now I can see outside and I'm breaking the code to the lock. LOL.
of course.
How did you get into data science ?
I served 10 years. Probably the best decision in my life. I volunteered for the jobs no one else wanted to do and it brought me to places I could of only dreamed of.

My piece of advice. Don't ever forget this saying.
"It's all what you make of it"

If you tell yourself this sucks, I hate it, I want to get out - well it's going to suck.

If you stay light (mentally) and find a way to make things better for yourself or find new challenges well it will pay dividends. The military teaches you a lot more than just discipline.
yeah dont
I seriously regret joining the military. Left me with a bunch of injuries that never healed correctly and constant pain. Just felt like a giant waste of time.
Only the things written down are promised. Pick a job in your major (if you like your major) so that you can get experience to go with the degree. Take advantage of college benefits. Get your masters/PhD for when you get out. If you have no ties to a particular branch (family history or whatever), I recommend joining the Marine Corps. It will be tougher while you are in, but the name recognition is much stronger than the other branches.
Are you me? Or is he me? I am confuse
No, not exactly!
>How long did it take?

This indicates that at some point I would be done... that's not how it works. Give up the idea that anything is ever done or complete. Just make progress a little at a time.

I started about a month ago. I put in 2-3 hours a day of writing code, reading docs, watching videos. I get burned out... switch to something else.
Aah I remember the good old times when I ran a BBS, and then Internet came and spoiled all the fun.
op me!
irc what's that the new version of confer? 

(and yes you young people that's the joke, irc grew out of and replaced confer)
Like an AOL Chatroom
Well yeah, but I already do that. For whatever reason, no one seems to give a shit that I can do bash, they all want fuckin Python. The other quarter to half of them want Ruby because they‚Äôre still using Chef and Puppet. ¬Ø\\\_(„ÉÑ)\_/¬Ø
I want to learn how to automate tasks using Python. I also want to make small 2D games with the libraries out there. I saw an [awesome Tetris clone](https://www.reddit.com/r/Python/comments/ozau6m/after_the_snake_game_i_decided_to_make_the_tetris/) and thought that Python is a powerful and versatile language!

I was learning web development but I felt like I was stuck there. When I discovered Python I immediatly felt that this is the thing I want to do.
There's a big difference between high schoolers learning to bot Minecraft and us older folks trying to apply a lifetime of knowledge. Not that everyone can't learn from each other, but I definitely teach someone with life experiences differently than I do someone starting tabula rasa.
> Other than just for fun, what do you want to do with your code?

I hope that it's just a start and I go on to learn other programming languages and really just have an understanding of how computers really work. While I don't have a specific coding goal, as such, I'm sure along the way I am going to find many things that will interest me.
Thanks bro/sis üòä
I don‚Äôt think going back to school is necessary. I had always planned on going back to school to study geology. My first run through college was straight out of high school with an easy major. I was too intimidated by all the math and physics that a geo degree required and was also too busy partying. This time I didn‚Äôt have to retake all the general education classes so I could still work. You will probably get more skills and applicable knowledge just taking a few classes that focus on what you want to do.
These were not online degrees.
I would have done, but I‚Äôm not brilliant at learning from oral stuff - I find it easier with a book so I can actually see it and go back over it if need be. I‚Äôve started Space Invaders, and I feel pretty good about it. I just have to check if it actually works so far! I‚Äôm using my dinnerbreak at work to code on Google Docs, then I‚Äôll import it to some actual files. I‚Äôm also trying to think about extensions to the project as I‚Äôm doing it, so I‚Äôm not just copying out of a book.
This guy is the man
It‚Äôs been one hell of a ride hasn‚Äôt it?
Yes, Yes it has. It has come a long way... 

I wonder what it will look like in 50 years.
I started on a thermal printing dumb terminal connected to the mainframe in my dad's lab. I've been online since 1973.
Yes, clearly.  The amount of time I've spent aligning lines of code perfectly, for what? Give me braces any day
Aww thank you. Actually 3 bandits plus the twins Lmao . 12 m, 9,f ,5f and da twins (m) üòçü§©.
I know right , i wrote my own pledge (I committed to completing this phyton challenge  ! Tired frustrated ? Yes lmao .
So far it‚Äôs going good! I needed the accountability and structure. I‚Äôm doing the NuCamp Python SQL DevOps boot camp. Message me anytime if you want to chat about any of it. You got this üí™
I‚Äôm enjoying NuCamp so far. The material is honestly everywhere on the internet for free but they have given me the structure I needed to remain consistent and project ideas I would not have thought of.
I'm interested too
Me too
I feel this. But still torn in retrospect. Like, what a pain the ass that was, but don‚Äôt completely regret it either.
Marine?
Man, it may not mean much for you and I'm sure I wouldn't be able to cure your injuries but you can be sure that any person in this country will respect you and see you as a hero. I'm not a war hero but I have my own chronic illness and injuries from a non related accident. Sometimes, I'm really pissed off but in general I try to have a good time and have a cordial environment with the people close to me.
Planning to go officers route to try and fly haven't decided on navy or af trying to find out how realistic it is to get a flight school position
Just witnessed 3 people have the conversation which my father has with himself
* xelf slaps somekindairishmonk around a bit with a large trout
Oh god i haven't read the word confer in such a long time
Looking back on those, I can only imagine how many times I was exploited as a pre-teens 11/m looking for 11/f cyber
>The other quarter to half of them want Ruby because they‚Äôre still using Chef and Puppet.

Oh god, I feel you there.
I can wrap bash in a python task runner easier than I can create a dictionary in bash. Like, infinitely easier. Why would anyone write anything beyond a bootstrap script in bash (sh better there anyway) I just don't know.
Problem you‚Äôre gonna have is, how do you define your membership: only people over 40 allowed? How‚Äôs that even gonna work? Are you going to police it? Is anyone? And if you don‚Äôt, it has already failed on its own terms. There‚Äôs plenty of room here for everyone, as well as over on the official python discord, which has tens of thousand of users and help channels for all levels. Just post your questions. People will help you. They don‚Äôt care how old you are.
I'm 26, but I think a beginner is a beginner, no matter what the age, and I would love to learn, it doesn't matter who I am learning with. :)
Good I prefer to go to the classroom. Well done, congrats!
Damn, you beat us all! ü§¥
even with braces & semi-colons you still have to properly indent C/C++ code. for what?? readability, easier to debug & maintain. idk what tool you're using to write code coz "aligning lines" of blocks of code in python hasn't been an issue for me vs having to do `{` for a block & `;` to end a statement.
I wont pretend like I know first hand, I did not go into military. My friends from grade school/high school and their military bros all have said it sucks in so many ways.
Yeah.
I would disagree with them but that‚Äôs a nice thing to say. I hope you‚Äôre able to kick the shit out of your illness.
You are number 4... you answered!
Brought to you by Khaled Mardam-Bey.
I'll be honest, the internet was so small back then, I didn't think anyone here would know it.

Looking at it's wiki page I see that confer was written in Fortran!
Ouch.
Your points are absolutely correct. The point isn't about assembling a large group of a certain demographic to have more technical expertise. The point is finding a smaller group where you can form a community. It's really hard to work someone through a problem in a group that is half a million deep.
Thanks!
> even with braces & semi-colons you still have to properly indent C/C++ code.

You don't _have_ to.

That's the entire reason the https://www.ioccc.org/ exists.
I use idle, there are no guides at all
In the end, it kinda worked out for me. But luck was involved and I didn‚Äôt have very good opportunities to forego.
If you want to see the most toxic guys all shit on each other the Marines is the best of the best in my experience.
Yeah pretty sure all of your co's just hate you have a few friends that I have heard from and it doesn't seem fun
God that's like ancient scripture
[deleted]
LMAO
i use idle shell too to test short ideas. for the main code you can just create a new file in idle & save it as a `.py` file. there's auto-tab when you start a new block, like when you type `if, while, for, try` or anything that ends with `:`. you just have to backspace when you want out of the block; instead of typing `;` at the end of each statement & `{` to mark the beginning of a block & `}` to end the block
But if you're hell bent on it you can always go in as a reservist. If you don't like it it's only a weekend a month. If you like it you can switch to active duty.
My cp
My co in charge of the whole squadron was awesome actually got lucky there. The e6 in charge of my shop was a psycho hopped up on Mexican steroids who threatened to break my legs if I tried to join the marine corp wrestling team.
That's about when I started learning. I have an awesome job now! You might hit a wall where you think you'll never get it, but then you whip up a Discord bot in an hour to learn the library or you help automate a task at work to save hours.

I'm also in the sub-40 range, but I was just defending the desire for a smaller group. I know that once a Discord group gets a certain size, I tend to not keep up (looking at you Network Chuck and r/mechanical keyboards).
I don't even pretend to understand the first bit (pun intended?) of any of those programs.
That sounds scary as fuck. Who gave him a rifle or psych clearance
very certain that your words are music to their ears.
Doubt psych clearance is a thing. We did have lowest level security clearance though. Not encouraging.
Meant the mental checks from the doc you get when you get l your medical shit done
This was added in Python 3.8 and isn't available in Python 3.6 or 3.7 (where f-strings were available).
f strings are awesome.
Jeez .. I didn't know about that .. been doing python professionaly for 3 years now .. come on python there is a limit to how much I can love you
Great post, I've been doing python for years and didn't know about that.
New here so im a bit confused on how this helps.

Don't you already know the variable name as that is what you need to put in the print statement? So how is it very helpful to also have it next to its value 

Thanks
sweet, thanks for the pro tip man!
So you‚Äôre printing the variable name & the value assigned to it by doing the example_variable=   ?
Please use debugger instead of prints. World of difference and you get much more info quicker, you have conditional debugging, you can move back etc.
Learn to use `pdb`. It's really simple once you've used it a few times.

Just put `import pdb; pdb.set_trace()` anywhere in your code to set a debugger breakpoint. Your program will be frozen once it reaches that line and you'll be given a `pdb>` prompt. You can start inspecting objects, advancing forward line by line, stepping into and out of function calls.

https://docs.python.org/3/library/pdb.html
Buckle up, OP, because it gets even better:

    >>> spam = {"eggs": "over easy"}
    >>> print(f"{spam['eggs']=}")
    spam['eggs']='over easy'

or even

    >>> foo = "something"
    >>> print(f"{foo.upper()=}")
    foo.upper()='SOMETHING'

You can put expressions on the left side of the equals sign, and the string will render the whole expression. That's _so_ much nicer than:

    >>> print("spam['eggs']=" + spam['eggs'])
    >>> print("foo.upper()=" + foo.upper())
Holy crap, that is awesome.
Another nice detail: Try whitespace around `=`.

    >>> print(f"{example_variable = }")
    example_variable = [1, 2, 3, 4, 5, 6]
Print debugging üò•
Ooooo. I like this one.
Thank you for this!
Thanks for sharing.
Wow I also didn‚Äôt knew this. Ty man!
Sweet!
I always just do 

print(‚Äòlogging message: ‚Äô, variable)

But this is a neat trick!
Dang, very cool! This does in one line what took me like 100+ lines when I wrote [pout](https://github.com/Jaymon/pout).
Nice, thanks for sharing!
Hahahahahahahaha this is gold.
f string are f-ing brilliant!
Neat trick, was not aware, thanks for sharing. I'll be sure to use this going forward
Whoa! This is awesome. I usually would just format that manually. Thanks OP!
Wow that is... Very convinient.
üòµ
Such convenience
There is a package that does this with some syntax sugar and pretty printing: [icecream](https://github.com/gruns/icecream). It probably does much more too, but the basic idea is the same.
I use [icecream](https://github.com/gruns/icecream).ice(example_variable)
[https://github.com/gruns/icecream](https://github.com/gruns/icecream)

  
Check this out, I find it better than print statements.
Ah, nice! I‚Äôll add that to avoid potential disappointments :)
[deleted]
2nd only to g strings
Why is an f string better than something like print("String"+myvar+"String")?
Discovered them, converted all my code to use them, regretted instantly when the machine I needed to use didn't have a new enough Python version.

I'm fine with having a minimum required version to use something I've written, but "because I wanted a different print function" is a pretty bad reason.

(I think most distributions have updated by now, though)
They are awesome but a small peeve - you cannot do:

    var = "hello world"    
    print(f"{
        var
    }")
It's a 3.8 feature though :)
Right? Like, just give me a break so I can try to even think about other languages‚Ä¶ jeez
Not related but, I'm trying to break into Python and have experience as a Software Developer. What field are you in and any advice for me? Looking General SDE + Django roles.
Because when debugging you will often be making a lot of print statements and the output is going to be visually separate from those statements meaning you will need to label them so you know to what variable each statement refers.

`print(f'foo = {foo}')`

is less efficient than

`print(f'{foo=}')`
Yup, instead of 

    print(f‚Äùvariable_name={variable_name}‚Äù)

you can just use

    print(f‚Äù{variable_name=}‚Äù)
[Fixed formatting.](https://np.reddit.com/r/backtickbot/comments/nvdhpg/httpsnpredditcomrlearnpythoncommentsnur6o9til_ive/)

Hello, GummyKibble: code blocks using triple backticks (\`\`\`) don't work on all versions of Reddit!

Some users see [this](https://stalas.alm.lt/backformat/h12knsv.png) / [this](https://stalas.alm.lt/backformat/h12knsv.html) instead.

To fix this, **indent every line with 4 spaces** instead.

[FAQ](https://www.reddit.com/r/backtickbot/wiki/index)

^(You can opt out by replying with backtickopt6 to this comment.)
[deleted]
Exactly, such a bad practice to teach beginners print debugging instead of teaching them how to use a debugger properly. I definitely blame many beginner courses for this.
Some people really like print debugging, one cool thing is that you can run your program and look up and down the printed output to quick ‚Äújump around‚Äù in time to see what the program was doing. 

Contrast that to interactive debugging where it is very much so a ‚Äúforwards only‚Äù experience
I'll stick with my notebooks, thank you.
Well put üòÇ
You're so lucky, I'm stuck on 2.6
Someone needs to submit a PEP next April 1.
Groovy beat Python to it.

http://docs.groovy-lang.org/latest/html/api/groovy/lang/GString.html
easier to use, much easier to read, sometimes faster
From my understanding, there's no need to do formatting so you don't need to convert integers to strings and f strings run faster. Someone more experienced can probably give you a more in depth explanation but that's just my take on it
Less characters to write. And it supports formatting like 

{some_float:.3f} will format the number with 3 decimals
Use and F string and you'll realize. You just put {statements} and it runs inside of the string. Genius!
The '+' approach is extremely inefficient. Since strings are immutable, A + B + C takes two strings of lengths a/b and produces a new string of length a+b, then takes that new string and a string of length c and produces a fifth string of length a+b+c, etc. etc. 

So, if you have a lot of strings/variables concatenated together, this approach wastes a ton of time creating temporary new strings and copying them over and over.

Also, f-strings always formats data to strings properly. Adding stuff to a string may have weird results depending on how the operator is defined for the thing you're trying to write.
imagine trying to type out all that rubbish vs just using *pdb*
But it was easy for you to rollback your code because you have excellent version control!
f strings were added in python 3.6, which is the oldest currently supported version. In an ideal world every system would already be on 3.6 or newer just for that reason alone.

that said, there are a ton of other nice reasons to upgrade to a newer version. Specifically, 3.7 greatly improved the asyncio library and how to write async code, and that's reason enough to go to at least 3.7 imo
  You can use multi-line quotes. 
 
    `print(
       f‚Äú‚Äù‚Äù
       {var}
       Text
       ‚Äú‚Äù‚Äù
    )`
But you can do:

```
print(
    f"{var_1}",
    f"{var_2}"
)
```
There is an official solution to this - which is to add a f" in front of every new line.

https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python < look for the chapter titled Multiline f-Strings.
I am currently working as a ML/Data Engineer for a startup so not sure if my advice would be of any help but what helped me was not to try and swallow the whole thing at once but learn stuff which is useful to you in the short term . This way you will not be scared off and keep gaining confidence as you are more and more experienced . There will be a stage when learning new stuff (there will always be new things to learn) will be very exciting to you and will seem easy too.
You should put this in the OP for noobs like me lol.  Took a few comments to understand what the benefit was.
Ahh so that how it, was very confused until i read this comment op.
I prefer logging over over printing yes.
Debuggers are great, but when I‚Äôm just prototyping and/or roughing something out quick (typically in Jupyter) I find print statements to be a lot more effective ü§∑‚Äç‚ôÇÔ∏è
A lot of University classes also promote the use of print statements as a form of debugging.
I spent a half hour literally yesterday making a dozen `print(f'foo() = {foo}')` in an `if __name__ == '__main__'`, so that future me could run the class and figure out what all of these similarly-named functions actually output... and it helped me figure out that there's another class out there that does the exact same thing but with slightly different names.
Whilst that may be true, print debugging as a whole is still much more limited. An actual debugger will let you see all the variables at a particular breakpoint, will let you step in or step over functions, will let you go up and down stack frames to inspect variables at each point, gives you full access to the REPL at any breakpoint so that you can run whatever arbitrary Python you want to perform investigations, will let you easily set conditional breakpoints and breakpoints for exceptions... None of this is impossible with printing but it's \*so\* much more involved to do so.

Print debugging is a good first step, especially as a gateway for new programmers starting to inspect their code, but it's really not a replacement for a real debugger.
ü•≤
‚ÄúNext, in python 4!‚Äù
[https://www.python.org/dev/peps/pep-0401/](https://www.python.org/dev/peps/pep-0401/)  


They've got April Fool's covered.
Beyond u/Al3xR3ads' points above, f-strings also allow some additional formatting options beyond what is possible with `print`, or at least makes them much easier to do. For example:

    >>> # formatting numbers
    >>> x = 0.123
    >>> f'{x:.2%}'
    '12.30%'
    >>> f'{10**8:,}'
    '100,000,000'
    >>> 
    >>> 
    >>> # custom fixed-width spacing
    >>> hello = 'hello'
    >>> f'well {hello:^25} there'
    'well           hello           there'
    >>> 
    >>> 
    >>> # right/left/center justification with filler
    >>> f'{hello:*>10}'
    '*****hello'
    >>> f'{hello:*>15}'
    '**********hello'
    >>> f'{hello:*<20}'
    'hello***************'
    >>> f'{hello:~^20}'
    '~~~~~~~hello~~~~~~~~'
wow, cool, never thought to use that tbh. Thanks for this valuable comment!
Maybe I am missing something but I don't think it's fewer characters to write. with the old style you just put variable + variable that is just one extra char compared to putting one variable there.
Do f strings also work for variables? If they do then I'll find them very useful.
More like, I didn't do every switchover to f-strings in a single commit so I was fscked.
You're not wrong, I'm just telling you what happened. 3.5 was the version I believe was available on the CentOS system I needed to use. Upgrading Python is not something you can just do easily if the distribution doesn't have a newer version available. And you definitely don't want to go down that rabbit hole when the only reason you need a newer version is fancy print format.

This was a few years ago, so it's distinctly possible that either newer versions of Python are available for those older distributions, or those older distributions are so old that they aren't being used anymore either.
Ah yeah that‚Äôs true but it‚Äôs still a little wonky to me but its more of an annoyance than anything.

You can always just use ‚Äòformat‚Äô in those situations as well.

Edit: for all you down voters this is also prone to potentially needing textwrap dedent depending on your string and desired result.
There's supposed to be a new line after the open parenthesis, the comma, and the last double quote
[Fixed formatting.](https://np.reddit.com/r/backtickbot/comments/nutxcc/httpsnpredditcomrlearnpythoncommentsnur6o9til_ive/)

Hello, backdoorman9: code blocks using triple backticks (\`\`\`) don't work on all versions of Reddit!

Some users see [this](https://stalas.alm.lt/backformat/h0zhfpc.png) / [this](https://stalas.alm.lt/backformat/h0zhfpc.html) instead.

To fix this, **indent every line with 4 spaces** instead.

[FAQ](https://www.reddit.com/r/backtickbot/wiki/index)

^(You can opt out by replying with backtickopt6 to this comment.)
Another good solution

Since same indent strings are concatenated

I forgot but tried it and it works without an f string in the middle too

    var = "hello world"
    print(
        f"{var}"
        " -- "
        f"{var}"
    )
What if you don't know the length of the string?
Ah yeah that‚Äôs great, everyone (including me) do that. I am just speaking in general for overall programming and not prototyping.

But regarding your post, f-strings are really useful and I didn‚Äôt even know about that `= ` feature, it‚Äôs good to know.
I love that it‚Äôs PEP 04/01, too. Peak nerd humor, I love it.
It's more like

     "ID: {0:03d} out of {1:03d} discovered in {3}, please enter {4}".format(id_code,n_codes,loc,text_suggestion}

vs

     f"ID: {id_code:03d} out of {n_codes:03d} discovered in {loc}, please enter {text_suggestion}"

Once there's any length to the string, the f-strings are a lot easier to read because the variable names are given in-line rather than listed at the end.
It depends, the trivial example is this

print("my_var="+my_var)

Vs

print(f"{my_var=}")

But if you look for the documentation on f-strings I'm sure you'll find something that will make your life easier for other things as well
Yeah you can use them anywhere you use regular strings.
FWIW its actually really easy to install a new version of python on (most) linux distros. You can download an archive from the python website and build it yourself. Takes ~5 minutes, and its like 3 commands (untar it, run the configuration script, make build). But yes I agree that its annoying when a distro doesn't provide an easy way to upgrade the version through their package manager
This. F-string is a readable string. Everything else is dead to me
Absolutely not. This is a fantastic way to ruin a system.

"Just untar and make install" is what leads many people to Reddit with "help me fix my computer everything is fucked"

If you're desperate for a Python version that doesn't match the distribution installed one, use a prefix, virtual environment, docker, VM, literally anything but what you suggested
Have you ever actually installed python manually? You don't override where `python` points to on the system. If you manually install python3.7, it gets installed as python3.7 on the system, not as python, not as python3.
[deleted]
This thank you is a re-post and doesn't include a code example. Instead of answering, I will reply with a complaint and report OP for a perma-ban. 

^(jk, this comment is a joke about stack overflow)
IMO Stack Overflow is just the wrong place to ask beginners questions.. most questions that get asked on here could be googled pretty easily, however one first has to learn how to ask the question as general as possible which is a learning process of itself.
Basically what I'm trying to say is don't completely disregard stack overflow. Once you get better at programming it will be very useful, people just react rather harsh to questions that have been answered before or are really specific to your particular issue.
Glad you enjoy the help you get on here though!
[removed]

>I've asked a couple of times here for advice or help.
>
>There were always people willing to help or share their opinion. No one was mean!

*No one was mean!* - we should make this our mantra.
Love this sub def top 5 nicest on Reddit
I'm an old guy. Back in 1990s when there were no web discussion groups of any kind because the Web was just born, we connected to BBSes to chat etc. And we had rules. Similar to StackOverflow, btw.

Since everybody breaks rules sometimes, we had a standard punishment: Answer 3 beginner questions.

As you can feel, it's considered a punishment because beginners ask the same questions again and again: lists, functions, strings, files, etc. and it's quite tedious to repeat answers. Questions which have been answered many times not only on the same platform like StackOverflow or /r/learnpython but on the Internet as whole. Thus can be looked up easily.

&#x200B;

Still, we're here ready to help. It's not a job so we're not expected to answer a question. It's better to be quiet than be rude. And that's my personal rule I try to follow.

Thank all of you who help beginners. You have my respect.
I had a very small breakdown yesterday night and felt like giving up. I just realized I've been forgetting to come here with my broken solutions to my problems the last couple of weeks. I need to come back to this sub more often. More importantly I need to try and chip in when I know I can help. Thanks for everyone who comes to this sub!!
I feel the same way. I'm finding the older I get it seems like the meaner the internet is. This sub is definitely very friendly and helpful! Very much appreciate all the encouragement I see here!!
I've found so many answers I've had here. I'll get stuck on a problem for school, it'll LOOK like it's supposed to work. I'm SO thankful for this sub.
I give up on programming at least once a month lol but when I go back I figure out why I kept screwing up the code I can continue. Good work!
I have just used Reddit and figured out this subreddit and learn a lot of things from it. I wonder Does anyone here summary the most interesting topics about Python? I really appreciate it  if anyone can summary links and share to everyone ;))
Genuinely one of the nicest subs
This is an awesome forum. I made a post yesterday and within minutes I got great responses. It encourages me to keep pushing forward. Thank you to this community. :)
Very cool sub with some awesome helpful people
Hi man, I recognise this so much! Started programming with Python a few months ago, and I was unpleasantly suprised by the enviroment of Stack Overflow at first...sometimes it felt the quality of the question is more important than the question itself, as I noted that after a few questions, my votes got some downvotes.

Now I notice I do take more time and effort to find answers myself, which is one of the advantages of their system imo. And so far, I always managed to find my answer. I also understand it makes it easier for other people to actually find an answer to the questions they need, as it would be a lot harder to find those with an overload of 'bad questions'.

&#x200B;

Nonetheless, I do really miss an enviroment where I also am free to ask  more 'stupid' questions without the need of thinking too much about the quality of the question. Hopefully, here is the right place for that :)
I whole heartedly agree, so many people here are willing to answer questions and the mods especially i praise because they dont take down beginner questions on basic stuff like they do on stack and other subs. 

Even if the sub is for learning some of them still wont tolerate behinner questions it seems. They will just ban you instantly no second chances. On stack they give you more chances but people still down vote your question regardless of how well you ask it sometimes just because your a beginner.
Yeah, Stack Overflow is kind of a cess pit. Good information, but the users are....ugh.
This sub is almost as toxic as stack overflow aha (I'm just trying to be funny)
> Did the same with Stack Overflow - it was disgusting.

I'm very sympathetic with the Stack Overflow people.  They have a lot of clear, sensible rules, and yet most of the  posts blatantly ignore those rules.

Stack Overflow is very much not intended to be a place for beginners to ask the same questions over and over again, but a place for people to ask advanced, tricky questions that cannot be solved anywhere else.

I stopped contributing to Stack Overflow, not because they were "disgusting" but because I got burnt out dealing with the endless, repetitive beginner questions - questions that generally already had answers - and if you point out to poster that an answer already exists, you generally get abuse.

Don't get me wrong.  I spend a few hours a week on this subreddit helping people, even total beginners, but I _expect_ to get beginner questions here.

The reason that Stack Overflow has value is because of those "disgusting" users.  I hate to be blunt, but if it were up to beginners, Stack Overflow would be worthless.
Yeah, it's funny how the Internet world has those extremes - depending on which ones happen to cluster up, the experience can hugely vary. Even inside some Subreddits there are very different communities, some will eat you up and try to pull you down, some will be very helpful.
you're so right,I love this sub a lot
Really have to thank everybody offer to help here.
People on this platform are indeed helpful. It's interesting to be helped by people one may never meet.
Always, always! üêçüí™
The lovely people on this subreddit keep me programming. I owe them so much they have been helping me so much. Love these people.
I've always been fascinated by programming, I have family members that are programmers but they've never been all that encouraging when I bring up the idea of wanting a career change. I'm in my late 20's and some of them have told me it might be too late, which was somewhat discouraging to hear.

Posts like this give me hope that maybe I can just say screw it and go for it. I've done some free coding courses but I've never done anything python related. I have been contemplating taking a certification course on Coursera and might just go ahead and do it now.
Here‚Äôs the two BEST places I‚Äôve seen so far for support is becoming a programmer, always willing to help each other and comment sections on YouTube‚Äôs healing music lmao. The most loving place in this world üòÄ
i completely understand the S.O. community attitude.  I think main problem is when many of us beginners do a google search,  S.O. is the overwhelming source cited for answers but then disappoints for all the reasons stated above posts.  geek for geeks & w3c schools should come up higher on google hits for basic questions, imo
The problem when you do come with enough knowledge to ask a good question is your questions are at that point are usually subtly different in their nature to existing questions, and often the question moderators don't have the knowledge to know it isn't a duplicate despite it having lots of similar terms.

I only ask a questions on SO every 1 or 2 years because I find it only effective if I include several paragraphs of researched defense about why it's not the same as existing questions on SO. It's a frustrating process and a real last resort.
Agreed, beginners should be looking to stackoverflow for answers but should be asking questions here (and other places that are specifically geared towards beginners). Stackoverflow is not meant to be a learning resource, it is a maintained repository of programming related questions and answers. Good stackoverflow questions are designed to be a resource for future searchers and most beginners are not able to write questions that fulfill that purpose.

If you want to read more about this topic, I suggest this blog post: https://codeblog.jonskeet.uk/2010/08/29/writing-the-perfect-question/
Perhaps an unpopular view, but beginners should also toughen up a bit as there are frequent encounters with narcissism, intolerance and self-importance in software development. It‚Äôs in no way correct behaviour, and often covers up their own insecurities but it certainly exists. 

Forums like this and general info sites can offer a lot if you search more than once, and refine your search. S.O. Is great for detailed issues that are less likely to impacts beginners.
as i state above the reason beginners go there is that google lists stack overflow as the best/top source for the question being asked and that simply isn‚Äôt true
import chicken_tacos as food

with open(mouth) as hole:
    food.nomnomnomnomn
Enjoy!
*Approved*
i‚Äôm the only one i know that hates tacos,  i‚Äôm a burrito guy
I‚Äôm also a beginner and definitely appreciate exp programmers reaching back patiently to explain. All due respect to stackoverflow but i find the answers on that site frequently don‚Äôt answer my basic questions.  I get good insight from w3c schools python tutorial and reddit
Geek for geeks is fucking awesome. I've been meaning to look at w3c.
This is all true. I've had moderators skim my question and lock it without comprehending that I was asking a nuanced question that was similar to, but definitely not the same as, existing questions. It's frustrating. 

Honestly, I don't ask questions on SO anymore. I just search it for the answers already there. If I can't find an answer, I just go back to the docs. I'll *answer* questions, but it's rarely worth asking a question. Perhaps that's because all the low hanging fruit have been answered so it's becoming harder and harder to ask a new, unique question.
I‚Äôve been using https://www.w3schools.com/python now as my first ‚Äògo-to‚Äô. they explain everything in easy to understand way. and their TRY IT lets you run their examples & and make your own too.
Oh nice. I will definitely try it out when I finish the book I'm reading and learning with.
Awesome! I'm a big fan of Al. Thank you for sharing!

If anyone is interested in cryptography, he put out a new book last year on the topic. It uses cryptography examples to teach python concepts, and it is a lot of fun.
Just watched about a half hour of one of the past streams, *super* cool stuff!
Nice! I'm learning Python to get into data science, a couple weeks ago I started an online book club over discord with other redditors, we meet 2x weekly and we just cleared chapter 6 of [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/). Al Sweigart is basically foundational to my learning process! Can't wait to see some streams and have a chat with him.
Wheeeee! 
[deleted]
 

Python: Master The Art Of Design Patterns 

\--

About This Book 

\--

\-Learn all about abstract design patterns and how to implement them in Python 3

\-Understand the structural, creational, and behavioral Python design patterns

\-Get to know the context and application of design patterns to solve real-world problems in softwarearchitecture, design, and application development

\-Discover how to simplify Design Pattern implementation using the power of Python 3

\--

Visit website to read more, 

\--

https://icntt.us/downloads/python-master-the-art-of-design-patterns/

\--
All over it 
Oooh, how exciting! Tuning in for sure 
This is fantastic. Definitely gonna check out his stream!
His stream right now is really great!
Thanks for letting me know! Thats a definite follow, I love this guy, he made Python accessible and understandable to me.!
Hey Al, 
 You are incredibly generous with your knowledge. Thank you very much for all that you do. You have given fuel for my interest of programming. The resources you have created are unparalleled for the beginner such as myself.
Went to his website and was delighted to see that he graduated from the same University and program that I  am currently enrolled in! Hook Em
Ya. "Cracking Codes with Python" is the second edition of "Hacking Secret Ciphers with Python", which I originally self-published in 2014 or so. It has a new title and professional editing job. The book covers "cryptography" in the "secret decoder ring" sense rather than the "graduate level mathematics" sense. But I never found a book that talked about these classic ciphers that also covered how to break them and how to write programs that implement and break them. The book assumes no coding experience, so if you're interested in simple ciphers (and why we don't use them anymore in the age of computers) it's a pretty good book.
Interested in this. Is it called Cracking Codes with Python? 
I'm a twitchnewbie, where can you find the past streams? Hes currently offline 
[deleted]
I would seriously love to join this as well. Please add me!
Hey, is it voice chat? If not, then I‚Äôd be interested to join. Kinda shy so if it‚Äôs voice chat then I‚Äôll pass. But that effort to make such a club sounds awesome. Good work
Hi can I join in? I started learning python too. If u can send me link to the discord group thanks 
It's [OBS](https://obsproject.com/), which pretty much everyone on Twitch or other streams use. I got a cheap "green screen" off Amazon (really, it's a green bedsheet, but it works as long as you can keep it flat and well lit) to hang behind me. OBS also reads the screen, handles the audio input, and puts the image overlays. It's a really nice piece of software. You can also use it to make screencast videos, though it doesn't do editing. I use Camtasia for my YouTube screencasts.
Didn‚Äôt catch the stream but it is a high chance it‚Äôs obs
The software is OBS, the background taken out is using old-fashioned green screen technology.

You can read technical details of his set-up etc on his twitch profile or description page or whatever.
Hey, I'm just starting to learn to code and I'm in the middle of your book (automate...).

Just want to thank you for all your work. You're awesome :)
Going through automate the boring stuff with the udemy course atm. I‚Äôve tried some other tutorials but yours is far out the best. Thanks a lot for putting in so much effort, i‚Äôm enjoying coding more with each chapter. 
Hey man I have three of your books, the on on making games, the one on cryptography and the automate boring stuff. I love all of them awesome work!
Yes that is the one.
u/alsweigart is active on reddit as well.
https://www.twitch.tv/alsweigart/videos
Note that these are only automatically made available by twitch for 14 days, so maybe ask him if he's going to r them on YouTube, or download them yourself, if you want to keep them accessible.
Hey, I'll flip you a link to our Discord!
Hey there,

The book club part is done over voice, but the community largely interacts over the text chat. Discord has decent code markup and we do our own version of the #100DaysofCode challenge within the server, if you choose to opt in.

I think you'd be able to get along just fine text only. I've sent the link if you want it - I believe it has a 1 day shelf life.
:D
:D
:D
I'm new to Twitch. Is there an easy way to download the archived videos?
I am at my 10th chapter am learning solo, can you plz let me join you as well. Plz
I‚Äôve just started and would looove to join!
Nice! Thanks for that! I‚Äôll probably join in on the voice chat just to hear the discussions. Hope we learn a lot!
hello, can you send me a link ? im learning by myself with the book and it would be really helpful
Maybe he could make a Python script?
Not that I know of directly, but there are web browser plugins that can do that sort of thing, might need to do a little googling.
youtube-dl can do it.
Sure thing, be sure to introduce yourself! 
[deleted]
Can anyone please explain how to join, the process,. I don't know much about internet or twitch sorry
You got it! DM incoming. 
Hey there,

So you'll need an account with Discord, and you'll need to either access the service via their web interface or a client program. They are on various platforms, and have p decent phone integration. That link you got probably expires 24 hours after it was created and I likely reused it a few times so you might not have that full 24.

&#x200B;

[https://discordapp.com/](https://discordapp.com/)
I'm just getting started as well and would like to be added, if possible. Thank you!
Thank you very much, I created an account and am using Discord app instead of web.
For sure, please say hello when you get there! 
[deleted]
I‚Äôd like to join too please! Got 2 weeks of vacation and I‚Äôd love to learn some more python but finding it hard to motivate myself. A group would be perfect
PLEASE NOTE: 

DO NOT USE THE LINKED WIKIPEDIA MODULE FOR ANYTHING OTHER THAN PERSONAL PROJECTS WITH LIMITED USE!

Use [PyWikiBot](https://www.mediawiki.org/wiki/Manual:Pywikibot) instead as it respects the wikimedia server bandwidth much better.
One third-party module I enjoy is PySimpleGUI.

Asciimatics is really fun.

TQDM is a classic module that allows really easy terminal progress bars. I did a search for progress bars on PyPi, and there are lots.

A few oddities that you might not expect:

tkinter has an unexpectedly easy way to access the clipboard

pygame isn't just for games. Sometimes you just need a quick way to make a program loop and get live, non-"input" keyboard input or find a relationship between rectangles on a 2D plane.

The amount of built-in modules in a vanilla python install is staggering. Also, it's really worth exploring sample scripts, both in the built-in modules and in third-party modules.
Dang. I remember learning Logo.
Thanks for sharing! üòäüëçüèº
Try [Arcade](https://arcade.academy) for graphics. It is really well documented.
I love when people share stuff like this, thanks man. Super interesting.
Thanks for sharing, I‚Äôm definitely going to mess around with Wikipedia now!
Thank  u
Saved. Thank you!
Can I browse PyPI by category?
saved  
–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ!!
Some pretty useful and some obscure modules:

* Ctx for runtime contexts
* Tabulate for pretty tables
* Argparse hasn't failed me yet
* CSV works well for writing data files for business people
I‚Äôve used emoji before, it‚Äôs cool
Thanks for sharing
Honorable mention to Tkinter for all the good uses it provides as simple as they are.
Also check out pendulum for datetime support especially with timezones. It's the library that Apache Airflow uses.
I've been searching for some packages to work on, thanks a lot.
Thanks buddy
Im shocked by the first two like wow i cant stop thinking of the cool stuff im gonna do with them
have to add them to the my to-list, once it's done :D
It still does not seem like it's possible to make simple GUI using Turtle (based on brief look in) 

Maybe there is some default package module for GUI I am not aware of? If not, any suggestions why?
Surely gonna try them. 
Thanks üòáüòá
Wow, how many GUI python modules are there? And more importantly, which one is best?
Anything you would recommend for a newbie ? I‚Äôm a beginner and trying find more projects, tutorials working with numpy and openpyxl? Feel like it‚Äôs the best way to learn..  videos are boring and I‚Äôm learning nothing
Hmm. Rather than use dictionary text files in the future I might just use PyDictionary!
Thx a lot I am saving this.
interesting. some [tutorials](https://www.simplilearn.com/learn-the-basics-of-python-article?utm_source=reddit&utm_medium=crosspromo&utm_campaign=july) that I could find.
I would posit that the `Turtle` module really isn't all that useful. Yes, it can be fun to fiddle around with it, but it doesn't really have any "practical" applications that I know of.
This is so cool! 

I am a beginner, any ideas how to type in English words in the command line and get the definitions back using PyDictionary?
Great!
Whoa!!! PyDictionary is awesome! Can make a little spell checker with this! Thank you for this little list.
I have only used it once but I really enjoyed my experience using typer: https://pypi.org/project/typer/
https://github.com/evhub/coconut
What is this ? Medium ? I'd atleast hope the libraries to be shown in a project to see what they're good for, I really don't want this sub to become yet another empty site where I have to avoid most of the content.
I use Arrow at work, and preferentially at home. I have to do a lot of conversions of dates and times at work, as well as storing the results in spreadsheet cells. Arrow is *much* easier for me to use.
I didn't know that. Thanks for mentioning it!
Whats the problem with the wikipedia library?
When you say limited use does `./wiki.py bananas` when I want to read about bananas count?
> respects the wikimedia server bandwidth much better.

What does this mean?
Those are good suggestions
>TQDM is a classic module that allows really easy terminal progress bars. I did a search for progress bars on PyPi, and there are lots.

Check out the [one\_line\_progress\_meter](https://pysimplegui.readthedocs.io/en/latest/#progress-meters) in PySimpleGUI.  Odds are you're running on a system with tkinter, so try out a more graphical version that has a lot of stats too.  And it's only 1 line of code so you don't have to modify anything about your loop.
I just found TQDM... I feel like such an idiot for not using it earlier, super useful stuff
[https://pypi.org/project/PySimpleGUI/](https://pypi.org/project/PySimpleGUI/)
I find tkinter great for a lot of things except for the actual GUI system lmao
If you are looking for a cross-platform solution I wouldn't really recommend Tkinter for clipboard access because of the fact that in some Linux distributions Tkinter is not preinstalled (Arch for example) instead id recommend using another alternative that is specifically made for clipboard usage.
Me too.. when I was 8 years old.
Happy to Help! I will post more interesting modules and projects in Python in the future
I agree. That's a good suggestion. Thanks for sharing it to others
Thanks for the appreciation! I will post more about other interesting modules and projects in the future
That's great! I hope you make something interesting with it
Happy to help!
Happy to Help! I'll make more of these types of lists in the future
You can filter by classifier: https://pypi.org/search/
Happy to Help!

 –†–∞–¥ –ø–æ–º–æ—á—å!
Love tabulate.
[https://pypi.org/project/emoji/](https://pypi.org/project/emoji/)
You're welcome!
[https://pendulum.eustace.io](https://pendulum.eustace.io)
Great! I am excited to see the projects that you are going to build with this module!
You're welcome
I'm sorry for my vagueness there. I actually meant that the Turtle module is used to create graphics and visuals such as digital drawings along with simple games. I didn't mean GUI's
Tkinter is the standard module for gui development I believe.
[https://realpython.com/beginners-guide-python-turtle/](https://realpython.com/beginners-guide-python-turtle/)
Happy to help!
I like PyQT. I like it beause I love KDE and also it's cross-platform.
check out  [https://awesome-python.com/](https://awesome-python.com/)
Happy to help!
True. A lot of these don't have many practical uses. But, you can learn these so that when you learn the more advanced and useful modules, you can be better prepared. They are fun to play around with
You could get the word using the 'input()' function and then use that to find the definition of the word
Happy to help!
That's an interesting one
I'll try my best to include examples for these modules
The sub is called Learn Python. This post absolutely fit here.
Nothing, but from its description at https://pypi.org/project/wikipedia/:

> Note: this library was designed for ease of use and simplicity, not for advanced use. If you plan on doing serious scraping or automated requests, please use Pywikipediabot (or one of the other more advanced Python MediaWiki API wrappers), which has a larger API, rate limiting, and other features so we can be considerate of the MediaWiki infrastructure.
Depends how often you want to read about bananas
That is fine
It means Wikipedia is a free-to-use service and as such does not have infinite capacity to serve data. Running servers costs money and they don't have the datacentres like Google or Facebook do, they can be overloaded quickly.
Everytime you load a Web page, someone, somewhere has to pay for it. It's a small amount each time but it's not free. Electricity costs money so the Web costs money to use. You just aren't always the one paying for it directly.
PySimpleGUI just keeps on giving!
[https://tqdm.github.io](https://tqdm.github.io)
Happy Cake Day
That's very interesting. [Tkinter](https://docs.python.org/3/library/tkinter.html) is generally considered a standard Python library. I would dare to suggest that if a distro's Python lacks Tkinter, then it has a fundamentally broken Python system, and you are generally going to have a bad time, if only because of all the many little libraries that count on Tkinter as a dependency.

In general, for ease of access to the clipboard, **most** Python systems will have access to Tkinter.
cool and following
For sure man, I think people need to hear about them tqdm I find interesting, looking forward to your next post brother! Keep it up
Thanks. I should have included that.
No worries, still very useful and interesting post, thank you!
[https://docs.python.org/3/library/tk.html](https://docs.python.org/3/library/tk.html)
Cheers! I had Tkinter in mind, but never knew it's considered part of the standard distribution.

Is it good?
I prefer PySide2, made the jump from pyqt5 a year ago
Thanks
Ah I was wondering if it was something to do with copyright
Thanks.
Happy Cake Day EdwardWarren! Stop searching the world for treasure, the real treasure is in yourself.
I've only used it in a single project (on going) it's capable but has taken me some time to get used to it.
I used Tkinter for my first GUI based Python project. Before that I tried starting out with other libraries, but was able to pick up the basics of Tkinter much faster than anything. 

I‚Äôm having trouble finding it now on my phone, but when I was reading the tutorial I used, there was this diagram showing how Tkinter is built on top of Pygame and other things, so it‚Äôs supposedly easier since it abstracta away some of the lower level stuff you‚Äôd have to worry about using pygame.
I've used it a lot. It's very useful if you want an easy cross-platform GUI, but it can be a bit clunky sometimes, and doesn't look all that good on Windows.
Nope
TkInter is *not* built on Pygame, it's built on the Tk/Tcl infrastructure. Still, the abstraction is (generally) a good thing; it makes GUI development relatively easy.
My mistake then. I wish I could find the chart, but I must have misinterpreted it.
Damn. You know how Volvo made the seat belt and gave out the design for free for all car manufacturers to make safer cars and them not making any money off of it. You are like a python volvo.
Thank you, Eric.
PCC is the first book I bought to learn Python, and I created a binder with all the cheat sheets. I keep them in my backpack everyday when I go into the office, it‚Äôs perfect when I need organized and detailed assistance. Time to update the binder! I swear by it, thanks!
Awesome, thank you. 

Just bought your 3rd edition too and its excellent!
It's people like you that make me have tremendous respect for internet's programmer community. Guys like you put in so much time and effort and then make all this knowledge available freely. Thank you for being so awesome. *chef's kiss*
Thanks for sharing this, I've saved it for future reference.

You asked for suggestions, so I'll point out that I think your second `while` loop example (top left of the second page) is a bit "iffy." A naive user might expect `msg` to only be printed if it's not equal to "quit", but it will print "quit" and then stop.
this is great I may pass my class with this.
Love the book. Been using the hell out of it at work!
Awesome resource! Thank you so much!
Thank you!
Huge fan of the third edition. Bought it the other day. Thanks for the free resources as well. And the awesome blog posts.
Thank you for such wonderful effort.
Amazing!!! Thank you!
Thanks, much appreciated.
Absolute legend
Great job!  Thank you!
thank you
Thanks brooo
Dude, this is awesome, thank you!!!
Thanks bubba
Thats pretty indepth
Legend! Thank you!
Really well done, OP!
Thanks for the cheat sheet. I'm teaching the younger ones Python and I'm using your book as a teaching aid. Your book has been very easy to follow and has definitely made Python less daunting to folks who has zero programming experience
You, sir, are a steely-eyed missile man!

I'm teaching Python to high school students, and when the students ask if there is a good resource, I link them to your book.  (I also bought the third version for myself).  It is simply the best resource for learning Python in a orderly manner.

Thank you for updating the cheatsheets,  you're the best!
Not all heroes wear capes ... thank you!
Thank you
Much appreciated and cheers, Eric!
Just sent this post to my entire college class. You're helping so many people
Daaaamn, that is soo helpful, thank you very much for your effort. Like it as been said already: "You are like a python volvo"!
Thanks for this!
love your book. was almost done with pcc2 when the new one came out and i'll be buying it as well its such great reference material.
I just started going through your book after speed watching a 4 hour course for a general idea of what I would be learning. This cheat sheet is priming my mind and helping me connect as I'm going through your book. You're amazing, thank you! Your book is going wonderfully
thank you
I got the third edition from my partner for my birthday. Changing careers at 46 ain¬¥t easy. Your book, is pure gold. Thank you Eric.

Also, thx for these sheets. Most handy.
Dude this is the shit - right here thank you, im a buy your book just for this alone
Thanks Eric!

Ive been working my way through the book and just wanted to bring something to your attention re exercise 10-10.

It seems that the books you can download from Gutenberg are in a different encoding than usual. My program keeps getting an encoder error when trying to read them.

It's probably me just doing something wrong but just in case I thought I'd mention it.

Thanks again!
Great job, thanks!
Shouldn't we pin this or something to the top of r/learnpython for every beginner to see this immediately?
Still banned on learnprograming because I commented to someone you made your own book free to people lol. You make really awesome beginner material and more people should know about the book!
Not all heroes wear capes! Thank you!!!
Thanks so much, brother! You took lots of effort to create this and I really appreciate your hard work.
The \*Best Python Cheat Sheet: [https://kieranholland.com/best-python-cheat-sheet/](https://kieranholland.com/best-python-cheat-sheet/)
WOW... Yeah, this is incredible ...I just want to Thank you for making this, this is extremely helpful ... and ..um ..I think I  love you now
this is exactly what I was looking for, thank you very much! :)
This is awesome. Thank you!
Thank you! just started learning Python, and I believe  this will be of great help
Thank you very much Eric. I'm loving your book! Going through project two right now.
Do you have plans to make this document available in web version without downloading it?
Not a mistake, but syntax highlights would make this much more readable I think. :)
I have a question, do recommend PCC 2nd edition or the 3rd one?
Beginner in python here. Thank you for sharing!!
Holy smokes, talk about being on reddit at the right sub at the right time. So now that I have this really neat pdf handy.. I'm pretty much up there alongside some the great hackers of our time, like Ian Howe. Thanks boss!
Thank you so much
You‚Äôre the real MVP ü´∂üèº
Is this good for somebody like me who has never thought about coding before 5 days ago and want to start learning it all from scratch?
How do I begin with the basics ? I‚Äôm a civil engineer by profession.
thank you! This will definitely save me time :)
Thank you!!
Based
Thank for this sheet
Hello I bought 2nd edition of python crash course last year. Is it still viable i really want to learn again. But I saw that there is a newer version and I dun have money right now. Is the 2nd version is still worth a try? Thanks again for books!
you're amazing, thank youu!
Hi Eric,

The cheat sheets for the 3rd edition don't include match/case which made me wonder if there are any other keywords, etc. that are omitted. Are you planning an update anytime soon?
Thank you!!!!!
[https://quickref.me/python.html](https://quickref.me/python.html)

This might be helpful too
You're quite welcome!
That's so nice to hear! I'm really happy to hear how helpful they've been!
Time to upload them into Google docs, so you have hem everywhere, with or without your backpack
I'm glad to hear it's working well for you so far. :)
Thanks for the suggestion! I updated that so "quit" won't be printed, and also caught an indentation typo in the if-while sheet.
Good luck!
I wish them well. :)
Doing exactly that at 47. Good luck!
Hi! What edition of the book are you working from, and what OS are you using?
I have never thought of that. I don't have plans to at the moment.

A lot of online "cheat sheets" are really just websites with more concise information than other sites. In my mind a cheat sheet is constrained by the size of a physical piece of paper. The most challenging part of making a set of sheets like this isn't really choosing the information to include; the real challenge is fitting that information into all the little boxes, and using all of the space well.

So I'm not planning to reformat this information as a website. An online pdf viewer might be an option?
That is an interesting suggestion, and I've made a note to consider that in my list of ongoing refinements. My first thought is that it would make the sheets too busy and take away from the clean layout. But I'd be quite open to hearing what others think.

When I first made these, I developed them in Word and then saved them as pdf for distribution. It worked, but it left artifacts in the conversion process, and it was really difficult to update the sheets on a regular basis. The first version of these were popular enough (1.3M downloads!) that I redid the entire set using Indesign. People had requested printer-friendly versions for a while, so one of the goals of that iteration was making a black and white version of the set.

We're all programmers, so I looked for a way to automate the conversion from color to black and white. It turns out Indesign (and most of the Adobe suite) ships with a scripting language called [ExtendScript](https://extendscript.docsforadobe.dev/introduction/extendscript-overview.html), which is like a 2000s-era JavaScript. I wouldn't call it a fun language to work with, but I was able to write a script that does the full conversion. So now it's relatively easy to make minor updates and fixes between full revisions.

All that to say I could see making a version that uses syntax highlighting for those who want it, and keep the original styling for people who like the cleaner version.
For technical books in general, you should always use the latest version unless you have a very specific reason to use an older version. The only reason I could imagine intentionally choosing an older version is if you're working on a legacy codebase.

Here's a summary of [what's new](https://ehmatthes.github.io/pcc_3e/new_in_3e/) in the third edition. The most important updates are in the testing chapter, and in the projects section. Everything in the second edition still works, but the updates in the third edition are significant.

I've been telling people that if you have the second edition and you've already started, it's reasonable to finish working through that edition if you can do so in a reasonable timeframe. If you haven't started yet, definitely work from the third edition.
It's not a standalone learning resource, but it's a good complement to whatever primary resource you choose to learn from.
If you're new to programming, I tend to recommend my own book. :)

In all seriousness, I originally wrote Python Crash Course because I was teaching programming on a regular basis, and noticed that all the books at the time either made too many assumptions about what people already knew, or were written specifically for kids. I couldn't find a book that made no assumptions but spoke to you like an adult. So that's the book I wrote.

I also didn't like the approach of dumping everything about the language into a book. We have extensive online reference documentation now, so you don't need a book or course to teach you everything; you need a course that's well curated. The guiding principle of Python Crash Course is: *What's the least you need to know in order to start working independently on your own projects?*  It has worked well for all kinds of people, and I've heard from many readers who have learned programming mid-career to either change jobs, or do their current work more effectively.

Even if you don't learn from PCC, I think that's a good mindset to keep when selecting a learning resource. Don't try to learn everything; learn enough to start applying the principles you're learning to your own work.
All of the code in the book still works, and I would expect it to continue working for a little while longer.
I didn't include match/case in PCC because I'm not trying to include \*everything\* in the book. It's meant to be a well-curated introduction to Python, and part of that means figuring out what new features of Python need to be included in an intro to the language, and what can be left for later.

I don't have any plans to add match/case to the cheat sheets at this point.
Damn. 1 year down the line, and I still get recourses
Kudos!! We appreciate you
I use Evernote, I swear by it. I keep my notes, code, documents, etc. on there all day, all year. I‚Äôm not a naturally organized person, so it does wonders for me.
Thanks for the detailed response! Man... I remember using InDesign to make a website for a company during one of my summers in college- to give you an idea, my first time in college was 2001-2005, so it's been a while!

I will definitely be using the sheets either way, since I'm finally ripping off the band-aid and forcing myself to use git for everything. And of course... cursing myself for not doing it earlier.
thank you ‚ù£Ô∏è
Thanks for the reply I appreciate it! Do you have recommendation books for django with function based views like what you did in your python crash course. really love that one. Thanks again.
Git is magic, you'll never look back. :)

Also, it sometimes gets a reputation for being difficult to use. If you're working on a large, active, distributed project it can certainly be challenging to use. But for personal projects it's really easy to work with once you get a little practice with the fundamentals of init, committing, and branching. And, on a personal project, you can always back up your entire directory if you're worried you'll mess something up. You shouldn't do that often, it misses the whole point of version control. But if you're going to try a reset or rebase command for the first time, you can back up the entire project first, including the .git/ dir, and try these commands out.
I don't know which books have which styles. I have some Django recommendations [here](https://ehmatthes.github.io/pcc_2e/recommended_reading/django/).
Thank you!!!!
After I learnt to code I always thought it was a shame we weren't taught it in IT at school
This is great!

Could you share the link?
That's brilliant. python is fun and useful.
Construct 3 would make it fun. Visual coding game development. Moving to godot or unity would be a good step up. Godot script is based on python and unity has Bolt which provides visual scripting but unity is just in c#
I want to get into data science with python but I don‚Äôt know where to start, can I get some tips please?
When at university I studied Turbo Pascal. That's crazy. Just teach me a language that people actually use, why waste resources on an academic-only language?
Hey Matias,

&#x200B;

Great job buddy, I also started my own YT channel for a month now. I'm a not computer science student. But I realised that coding is a skill that can be learnt by anyone, provided they put some effort. I seek to deliver the same value as you are through my channel. I think if you're covering niche areas such as ethical hacking on Python, go for it, and do share your link, I'm keen to learn a thing or two.
[deleted]
You have another subscriber, also based on the UK. I‚Äôm a Infrastucture engineer/PM/any job title, looking to learn Python. And swallowing up every resource I can!
I'm tutoring, do you have any general advice for teaching to students that are struggling to learn the basics?
Who was the wheat yt for you?
I'm two years away from graduating high school and have been looking for universities to study Computer Science. Which one do you recommend (preferably in Europe)? I've been considering Cambridge but I'm not sure yet
All the best friend
Who are the YouTubers that you recommend for a beginner? Someone who isn't boring / making it difficult and boring to learn. 

I haven't found too many.
Same. Maybe it's because I'm a little bit older, but I didn't touch any form or programming until University. I really wish I got into it earlier.
For reference I‚Äôm in my 30s, but my high school had courses to learn and prepare for A+ certs hardware software network and then a Linux one. The county paid for all the tests.  We learned cmd and bash commands but not programming. It would have been nice but maybe it wasn‚Äôt as accessible then, idk
I have a bachelors in electronic engineering and I had a minor coding class. The funny thing is the logic is easy for me, it‚Äôs syntax and silly crap that traps me most days.
I thought I would never need it. But when I was 30it became a hobby and now I use it at work.
I wasn't sure if it was allowed in this subreddit. But sure: https://youtube.com/channel/UCp6u6DONXuECWbzz4kFn01Q
What can I help you with?
Thanks very much! :)
Any of the highest performing tech universities will provide a great experience.
If you're interested in Programming Language stuff, Glasgow, Nottingham, and even Cambridge are great.
TechWithTim or Corey Schafer
Same, and I'm only 24 so it's definitely not just an age thing.
That's a shame really. I'm from India, and we had programming from the third standard/grade/level. We started off with LOGO (this was in the '80s) and then BASIC, C, Java. This wasn't the norm though, and it was a "special" school.

LOGO is a great language for children to start with. Unfortunately, it seems to have lost popularity and usage altogether.
Same here. It definitely makes ppl less scared of it.
It definitely seems to vary from school to school. Our IT lessons were just about PowerPoint, Excel, etc. I guess it depends on what your teacher knows.
That‚Äôs a shame given bash is a programming language. In fact Python has adopted various bash idioms. Still pretty cool to get Linux cert from school though!
Same, but my high school also had a Cisco CCNA course. Two full years and the class was two periods. We had the chance to take the CCNA when we graduated but if I remember correctly we had to pay for it. One other class had a focus on Photoshop and web design.. but yeah no programming‚Ä¶ maybe there were no teachers for it back then.
Thank you so much!
Just had a look. Brilliant
Nice work. Wanna head to r/scambait and share your source on github?
[deleted]
Python has the turtle module, which is a good substitute for LOGO imo.
I didn‚Äôt really know much about excel until college statistics and then got very good during my first job.
It wasn‚Äôt really bash scripting it was using bash to install and manage drivers and software and network stuff. More of the utility stuff
Sure - it's also here: https://github.com/Noob-C0ding/Anti-Scam
I hate to say this man (because I was in a similar situation) but watching videos alone will not help you learn python. You need to actually apply that learning and start practicing that new concept right away. When I did this, I was feeling frustrated every single time. It‚Äôs like I could follow the examples in the video, and the minute I went off and tried something on my own, I was totally lost‚Ä¶ and then I became frustrated. But in fact, that‚Äôs what learning feels like sometimes, that is your cue that you are stepping outside your comfort zone and venturing off and telling your brain that this is something new that you want to learn. It can feel shitty and frustrating ‚Ä¶ many times actually. But the key is to keep at it again and again. If you try and fail, and fail many times, and unable to debug your code, and research your error and you still can‚Äôt figure it out, then congratulation, because that IS LEARNING (you‚Äôre trying!). But if you don‚Äôt try at all because you are afraid to confront that, well I‚Äôm sorry that‚Äôs not learning because you are afraid you won‚Äôt be able to solve the challenge. Don‚Äôt have the mindset that you NEED to solve the problem, but simply attempt to solve it and work your best to understanding your code. Even if you fail over and over, that‚Äôs fine because you are doing your best, and that‚Äôs what matters for your learning. Don‚Äôt worry about getting the problem right, worry about understanding why you are getting it wrong.
This is normal.

You've probably learnt a lot but you just don't realise it. Perhaps because you have not applied it into real world projects.

Nonetheless, I think these two books in combination were brilliant, why? because they taught little things that a lot of books, udemy and youtube courses and websites fail to do so:

* [Head First Learn to Code](https://www.amazon.co.uk/Head-First-Learn-Code-Freeman/dp/1491958863?dchild=1&keywords=Head+First+Learn+to+Code&qid=1625348712&s=books&sr=1-1&linkCode=ll1&tag=specialdeals-21&linkId=c44b2c5fe8ea7af506a5d30a22965bdd&language=en_GB&ref_=as_li_ss_tl) - a little long and cluttered but overall great as it takes tiny little steps.


* [Python 101](https://www.amazon.co.uk/Python-101-2nd-Michael-Driscoll-ebook/dp/B08GZTFCRF?dchild=1&keywords=python+101&qid=1625348832&s=books&sr=1-1&linkCode=ll1&tag=specialdeals-21&linkId=db09e9e5d1eed7ae39648324bf703333&language=en_GB&ref_=as_li_ss_tl) - more succinct and every little thing is explained really simply.

If you can't afford them, then msg me and I will sort it out for you.
What parts confuse you? Where do you get lost?
confusion and frustration have to be powered through and will be a constant even once you know how to program, every time you learn new concept (which is true for your entire career)
Simple advice - use the official Python tutorials (even comes bundled with the installation last I checked). Don't get sucked into the Paradox of Choice. Use that, finish it, and start creating small hobby projects - calculator, echo server, website, interpreter etc. Ask questions while doing projects - this is the best way to learn and remember what you learn.
https://www.udemy.com/course/100-days-of-code/
That is quite true, to an extent. Though it only has support for the actual turtle graphics part of LOGO. Full-fledged LOGO is a lot more powerful (well, it's almost a Lisp). For instance:


    to solve.quadratic :a :b :c
      local "delta 
      make "delta (:b*:b-4*:a*:c)
    
      ifelse :delta < 0.0 ~
        [print [no solutions]] ~
        [print list (-:b + sqrt :delta) / (2*:a) (-:b - sqrt delta) / (2*:a)]
    end
    
    ; this is just a variant, more "Lispy" in its nature
    to solve.quadratic.lispy :a :b :c
      local "delta
      make "delta  difference product :b :b (product 4 :a :c)
    
      ifelse lessp :delta 0.0 ~
        [print [no solutions]] ~
        [print list (quotient sum -:b sqrt :delta product 2 :a) (quotient difference -:b sqrt :delta product 2 :a)]
    end
    
    ? load "quadratic.logo
    
    ? solve.quadratic 1 2 3
    no solutions
    
    ? solve.quadratic 3 4 5
    no solutions
    
    ? solve.quadratic 2 10 3
    -0.320550528229663 -4.67944947177034

    ? bye

The only modern language which feels as smooth to code in I find is Python - Guido was a genius with the syntax (people claim syntax doesn't matter, but I think that when you have to work with something for long periods of time, it definitely matters). If LOGO had proper commercial support and interest, I'd love to work in it as well! :-)
Cheers. I'd suggest adding some random postcodes too though as your data would be filtered out really easily if you use the same one each time. There is [https://www.doogal.co.uk/PostcodeGenerator.php](https://www.doogal.co.uk/PostcodeGenerator.php) (and probably others) that you could potentially integrate or just use randomly generated two letters, two numbers, two letters.
[deleted]
[deleted]
Great advice. I was very much thinking on the fly.

Could always have a separate file with all legitimate postcodes and pull a random index from it.

Cheers for the advice. Was there anything else?
We all started not knowing anything. Every single person that can code, and code well, couldn't print "Hello, World" at one point.

Try not to get disheartened. Watch the YT videos and then apply that and practice, practice, practice. 

I will look at doing some basic beginner stuff - if you're interested. Go right from the start and build up, lesson by lesson.
What language you started learning?
I was on the same boat some time ago, and what helped make things start to click was realizing how to solve a real problem I had, which also got me started with microcontrollers i.e. raspberrypi. If the tutorials don't click, I would suggest spending time to find a way to apply it to your own needs. Maybe simple backup scripts or just play around with text. Also, what really pushed my learning curve was to just dive in head first into more advanced projects. A lot of times that helped me solidify my understanding of more basic concepts. And really, just keep doing it because mastery is fundamentally dependent on the amount of time you've spent.
I have a solution for you!

You need to try out a good debugging tool that allows you to place *breakpoints* in your code, and then run through it such that every time a line of code with a breakpoint runs, it will freeze the python interpreter and allow you to check the state of your program. 

Every debugger I have ever run was built into the IDE I was using (actually that‚Äôs not technically true but it should be for you), where IDE stands for Integrated Development Environment. PyCharm is so good it‚Äôs basically its own programming language on top of Python. VSCode has extensions that can make it good if you‚Äôre lucky. Make sure you get one that‚Äôs Python compatible, and don‚Äôt worry about multiple language support on an IDE until switching apps is the biggest problem you have when multi-language coding. 

Of course, if you give up every time you get confused, you won‚Äôt get anywhere. You HAVE to struggle in front of your screen until you are its willing master.
Could you give a specific example? I can try to guide you
Learning Python or any programming language isn't a destination, it's a journey. No matter how much you learn there will always be more to learn. That being said I recommend trying a basic learning python course from a place like skillshare or Udemy. There are a lot of great self-paced courses. Once you get into something like that, then you can come here and ask more targeted specific questions and get the help you need. 

You could also sign up for leetcode.com and try working on some of their easy problems. If you find the "easy" ones too difficult don't get discouraged you're just starting so it's understandable.
+1 to this. It sounds like they need a goal instead of just aimlessly learning.
If they're struggling with loops I don't think going onto leetcode is a good idea. It'll definitely just frustrate them further
Yeah, that's a fair point.
I‚Äôm too afraid to start a book on recursive algorithms because (read_comment())
I learned python because of you :D
You should rename yourself to Al Swagger for how awesome your teaching skills are! I learned Python through your course on Udemy and used [PyAutoGUI to draw an Aztec spiral (pantograph)](https://github.com/whizbuzzer/PythonAutomation)
Cool book cover, thanks for the cool books, Sir.
Atbs‚Äô chapter on Regex has been the best explanation of it that I‚Äôve ever seen, thank you! Looking forward to this one :)
Thank you for the amazong book. And videos!

It is one of the first books i read to learn Python, and it made me enjoy using Python so much.
You are a beast!!! Thank you so much for the books
Your book help a lot so Thank you for the amazing job, thanks again
Hi, I‚Äôve read ATBSWP, now reading Beyond the basic stuff and it‚Äôs amazingly well written and I like it a lot. I actually automated many boring things due to your course and books and now getting better in coding. Thanks for your great work and will be looking forward to see the new book.
Started reading the book on my last job that had tons of downtime. After some bad experiences with programming in the past, your book helped me regain confidence to at least give it a shot and start learning again. I‚Äôm still at the very beggining of the mearning curve as a whole but I‚Äôm now in a Data analytics internship. Thank you for the knowledge and thsnk you for the confidence you gave me :) have a terrific day!
You're a pretty cool guy, EOF
I have no questions. Thank you for your udemy course, you are my savior
Damn you OP, it‚Äôs your fault I‚Äôm in the space I‚Äôm in!!! ‚ù§Ô∏è
My life is so much less boring thanks to you
I have a copy of your book on my shelf. Maybe one day I will read it :)
Can I have a free sign up code? üòÇ
Hey are you aware this book is part of the syllabus of a Indian University named VTU?

It's the best textbook ever well explained
    else:
        # base case
        return 'no reason at all. go for it.'
:)
Did he have a gun to your head?
As did I. I still use ATBSWP as a reference.
Thanks to you*
Neat! Could you post a screenshot of an image the script produced?
:D
:D
Thanks! :D
syn/ack

:)
:)
:D
:)
The codes are up now! https://udemy.com/course/automate/?couponCode=OCT2022FREE
I wish
https://imgur.com/a/l619PM3
Holy crap that's amazing thank you so much! I've had your youtube videos up all week. So excited to take this course! <3
And here's a little roadmap for people who are new or want to continue learning before doing any projects

## Road-map

Here's a Python road-map to take you from complete beginner to advanced with machine learning. I don't know what area of computer science you're interested in (AI, web dev, etc.) but I'd say do everything up to intermediate and then branch off. You'll need everything up to intermediate to have any chance of passing a tech interview if you want to do this as a career. Hopefully, this provides some framework for you to get started on:

## Beginner

* Data Types - Lists, Strings, Tuples, Sets, Floats, Ints, Booleans, Dictionaries
* Control Flow/Looping - for loops, while loops, if/elif/else
* Arithmetic and expressions
* I/O (Input/Output) - Sys module, Standard input/output, reading/writing files¬†¬†
* Functions
* Exceptions and Error Handling
* Basics of object oriented programming (OOP) (Simple classes).

## Intermediate

* Recursion
* More advanced OOP - Inheritance, Polymorphism, Encapsulation, Method overloading.
* Data Structures - Linked lists, Stacks, Queues, Binary Search Trees, AVL Trees, Graphs, Minimum Spanning Trees, Hash Maps
* Algorithms - Linear Search, Binary Search, Hashing, Quicksort, Insertion/Selection Sort, Merge Sort, Radix Sort, Depth First Search, Breathe First Search, Prim's Algorithm, Dijkstra's Algorithm.
* Algorithmic Complexity

## Advanced - A.I. / Machine Learning/ Data science

* Statistics
* Probability
* Brute Force search
* Heuristic search (Manhattan Distance, Admissible and Informed Heuristics)
* Hill Climbing
* Simulated Annealing
* A\* search
* Adversarial Search (Minimax & Alpha-Beta pruning)
* Greedy Algorithms
* Dynamic Programming
* Genetic Algorithms
* Artificial Neural Networks
* Backpropagation
* Natural Language Processing
* Convolutional Neural Networks
* Recurrent Neural Networks
* Generative Adversarial Networks

## Advanced - Full stack web development

* Computer networks (Don't need to go into heavy detail but an understanding is necessary)
* Backend web dev tools (flask, django) (This is for app logic, interfacing with databases etc).
* Front end framework (This is for communicating with the backend) (Angular 6+, React/Redux)
* With frontend you'll also need - HTML, CSS, Javascript (also good to learn typescript which is using in angular. It makes writing javascript nicer).
* Relational database (MySQL, PostgreSQL)
* Non-relational (MongoDB)
* Cloud computing knowledge is good, (AWS, Google Cloud, Azure)

## Resources

### Books

* Automate the boring stuff
* Algorithms and Data structures in Python by Goldwasser (Intermediate level)
* Python Programming: An Introduction to Computer Science
* Slither into Python: An Introduction to the Python programming language
* Fluent Python - Clear, Concise, and Effective Programming

Here's some ones for other related and important topics:

* Clean Code by Robert Martin (How to write good code)
* The Pragmatic Programmer by Andrew Hunt (General software engineering / best practices)
* Computer Networking: A Top-Down Approach (Networks, useful depending on the field you're entering, anything internet based this stuff will be important)
* The Linux Command Line, 2nd Edition (Install the Linux operating system and get used to using the command line, it'll be your best friend).
* Artificial Intelligence: A Modern Approach

### Online courses:

I am not a fan of youtube for learning as you're just being hand-fed code and not being given any exercises to practice with so I won't be linking youtube video series here. In fact I'm not a fan of video courses in general but these two are good.

* Udemy - Complete Python Masterclass (This is for beginners stage).
* Coursera - Deep Learning Specialization by Andrew Ng (Advanced - A.I.)

Most importantly, practice, practice, practice. You won't get anywhere just watching videos of others programming. Try dedicate an hour a day or 2 hours a day on the weekend if you can.
I would also highly recommend Python Crash Course.
> Another thing which I would recommend is solving problems

Yep, this is really helpful for practicing!

Here are some more: https://pythonprinciples.com/challenges/ (ranked by difficulty, there are sample solutions and hints too)
I'm going to respectfully disagree with the notion of "before you build projects learn this and that." If you have a project in mind that you want to do, jump right in and start doing it! You will learn ***so*** much more from working on an actual project and Googling what you need along the way than you will jumping from tutorial to tutorial.
Great post.

I just finished up MITx - 6.00.1x and am excited to try something new. I had gotten Automate the Boring Stuff's course on Udemy and started it but I left off right at Web Scraping section so that is where I will pick up now!
I wish Hacker Rank would just die.

So many companies still use it, but their tests are extremely convoluted and you spend more time trying to figure out how to pass your result into their shitty output function than about how to solve the problem.
I'd personally recommend pysimplegui before tkinter
Thank you very much. I'm still learning and I'll save this post for later after I get back from work. Looks useful!
Thank you
u/andledrao
Great list!

I'd like to add that a "programming challenge" like advent of code is a good source for project ideas. They are completely open-ended so you're actually writing an entire application, rather than just filling-in-the-boxes. There are also a lot of reference solutions available online that you can compare your solutions with to get ideas for where you can improve.
Thank you. just what I needed!
I'm a complete beginner to GUIs (with python or otherwise), but what's the advantage of Tkinter over something like Qt ?
I was thinking about this exact thing today since I‚Äôm almost done with my intro to python class and was unsure of what to do next. Thank you for posting this!
Not a good idea to try Project Euler on Hackerrank without a rich background. I mean that was good but too hard. Some of the questions are so difficult (albeit marked as 'easy') that for months there won't be an accepted answer. Other stuff like "problem solving" on Hackerrank is friendly to everyone in my opinion.
This posting is gold . Thank you.
Great advice
Greatly appreciate your work, the road map you created is on point. I have read and watched so man tutorials but this is very structured method for self learning.
Commenting so I remember this for later.
Thanks for such a structured recommendations.
For now, I'm reading python crash course and just finished elementary tasks level on checkio (the last one is good as well). Automate the boring stuff - is the next one "must". Thanks again!!!
learn [pathlib](https://docs.python.org/3/library/pathlib.html) to mess with files and folders! Only consult `os.path` when you really need to.
This is amazing,  I‚Äôm currently studying software engineering Yr1 and a lot of Python is being taught - I‚Äôve already got the  ‚ÄúAutomate the boring stuff‚Äù book,  but the web links to further exercises is invaluable, Cheers!!
[deleted]
Also, [exercism.io](https://exercism.io) is fantastic for problem solving.
My issue is I've got a CS degree and 20+ years experience in IT.  I've been doing scripting in bash and perl all those years, and I've got some C/C++ background from my education.

So I'm learning python, but I've got lots of stuff in my brain already on data structures, algorithms, OS managent, "IT stuff", etc.

So the approach I've been taking is just finding mini projects of my own, whatever sparks my fancy.  I'm also writing my tools I'll usually write in bash/perl, in python instead.  It takes me longer, but it's been a great learning experience.

I will say, learning to think differently has been the biggest challenge.  When I should use which type of loops for example.  Knowing about the range operator,  lack of for(x=0;x<12;x++), etc...
My 3 next steps regarding python are :   
\-Complete automate the boring stuff ( I am currently at chapter 9 )  
\-Learn webscraping  
\-Learn tkinter

I am kinda not motivated tho! that sure helped me a little ty :p
I'd recommend Complete Python Developer in 2020 Zero to Mastery on Udemy.
Life saver you need more upvotes, as some would say.
But feels you have created good karma in real life.
(i think i accidently figured out why its called karma points:p)
Anyways  Thanks:)
[deleted]
> You won't get anywhere just watching videos of others programming

This is really crucial. The main thing I've found to help as a beginner is to actually write code.
Are data structures and algorithms important when it comes to ds/ml ?
Thank you x10000000000!
I would add 'Fluent Python' for an intermediate book
Do you have any projects or exercises to gauge competency? Like, "after the beginner stuff you should be able to ______________." 

It feels like a lot of learning material jumps from "Here's how to do basic loops and conditionals. [Now draw the rest of the fucking owl.](https://i.imgur.com/rCr9A_d.jpg?maxwidth=640&shape=thumb&fidelity=medium)"
!redditcopper
Nice write up üôå
This just got me more motivated. Thank you
Great , this a comprehensive list to get started
sweet answer, but just wondering why would anyone would want to for web dev. after AI/ML.
[deleted]
Thank you for summarizing. This will be very helpful.

I started learning python few months ago, but got diverted back to my core area (SAP) . This will help me revise and catchup.
This is awesome thank you :)
Just to add also Impractical Python Projects is a great second book for anyone who has finished ATBS.
Thanks. I'm learning through that book. So far, it seems good.
Well, I said, "before building any **big** projects" because beginners are new learners. They will have big ideas and they will try to achieve them but they might not know where to start from. This just gives them a basic idea about what are the bare minimum things possible with python also, there are many beginners who literally do not know what to do after they finish a beginner python course which at the end demotivates them and they entirely leave programming. Doing these as I said, "will give you guys a massive skill, knowledge and a confidence boost in python". By the way, I never said it is compulsory but doing them will surely help.
Yeah but I've gotten into projects that I never finished cause I thought I knew more than I did.
I am planning to supplement my learning with the same.

Did you face any difficulties in learning with it?  
Like do you need the reading reference book - by John Guttag, etc...

What are your suggestions for a newbie to start the course?  
And what did help you to complete the course?  


Thumbs Up on your Python Journey:)
6.00.2x is currently just started! If you want to dig into some algorithmic chops
It's a Python standard library, but that's pretty much it.
Link is working now. Reddit messed it up.
No problem, glad to help!
Couldn't agree more!
DS/ML wouldn't exist without data structures or algorithms. They power data science and A.I.
No problem, glad I could help out!
Yep that's a good one I'll add it to the list!
I don't have anything off the top of my head but the books I've listed have exercises/projects at the end of each chapter. Your best bet is to take a look at them.
I'm a data scientist and I'm realizing how useful it would be to know how to make a data driven website. I'd like to learn more web dev.
I'm not sure what other resources have exercises on this but my book - slitherintopython.com - has some exercises at the end of each OOP chapter (chapters 17 - 20) to help you build on what you've been learning. Hope this helps!
Glad to hear! I hope it helps you out
Sweet! Thanks.
I do agree, but I also think that diving in the deep end is a great way to learn. It'll take longer, you might not get everything right but you learn so much and one of the best ways to learn programming is to fail at something.
Well let me start with a disclaimer, I would definitely considered myself a beginner when I started the course (I still do, really) but I had taken other tutorials so I had a light background on the basics. It also took me two tries to get through the course and on the first try I did the first three weeks (out of seven - then I had to stop because of time constraints) - but so on my second try the first three weeks were very easy for me since I had already done them.

I did find the course challenging overall but I would definitely recommend it if you really want to learn Python. For all the challenges there were quite a few "Aha!" moments that made it worth it. That being said, I did devote a fairly sizable chunk of time each week (maybe ten hours) to get through it and understand everything. So I would say just make sure you have enough time to get through it. I didn't use any books or anything, just googled around when I needed clarification or help.
Thanks for the heads up. I am interested in that, but think I am going to forego this session to be able to do some self paced learning. I will definitely be on the lookout for it in the next session.
I'm a data analyst and improved web dev skills would definitely make me more prone to pushing a consolidated web dashboard.
Hi, thanks for replying, I understand your point, but I believe that data science just is a part of AI/ML, just have a look at the algorithms there, how many times have you used any genetic programming approach? or used GANs much deeply.

I think that for visualization of data knowledge of front end is important, like chart.js is a great module for visualization, my friend used this for a programming challenge, you can check it how [here](https://sachin-career.herokuapp.com/) if you like and [here's](https://github.com/GermaVinsmoke/sachin-career-analysis) the repo. if you'd like to learn, feel free to contact him.

to conclude I think that to an extent we can say that knowledge of web dev. required for data scientists.

but in a broader term people who are in core Machine learning/deep learning don't need web dev.
I built one of those in R and the boss loves it but it would have been a lot easier if I had a stronger background in Python and web development
>but in a broader term people who are in core Machine learning/deep learning don't need web dev.

Oh I completely agree. You definitely don't *need* to understand web development in order to be a data scientist. It's just that I run projects now where it would be really nice to know more. I work with the company's Creative Director on projects, and I'd like to better understand her capabilities. Plus it would be cool to start making data-driven websites for side projects.
glad to meet you, and yes it's amazing to get to know working of her side, I believe it'll help you present your data in even more creative way, plus the learning experience for data driven websites is what the need of the hour is, and also is fun.

good luck <3
Thanks!
I haven't had time to read the regex book, however your 'entire book link' (from your previous post) finally inspired me to look into Markdown (which has been tremendous time save for me).

One suggestion would be to tie the books to a website, (preferably yours) where someone could directly test and implement your regex examples. There are certainly third party sites that do this, however directing someone away from your publications can lead to lost sales.

You've put a lot of work into the book and you can maximize your visibility with this sort of option as we all want instant gratification these days.

You may have already done this, although if so I couldn't find an easy to access link to do so. 

Also, github is sort of a place for people who already know some of this stuff, I skimmed the first few pages of text and it seems you are writing towards a more advanced user. If that is your intent then that is great. 

I'm a haphazard programmer who tries to use the easiest tool (for me) available. PHP, javascript for web stuff, C for embedded, and Python for everything else. I go to stackoverflow for most of my immediate questions, especially regex. I'll install Pandas before thinking to hard about regex to sift data.

I guess what I am trying to say is your book might be too in-depth for many people. Maybe you would consider adding a 'beginner's tutorial' that later references your more advanced material?

Tie that into your website and you've got your self a winner.

Regardless, thanks for making your ebook free!
Took a quick glance through it, and I'd argue its actually just the right level of depth for beginner users, and the more adept user. It has all the basics, and later on, goes into some of the more advanced/extensive uses you can have with regex (and additional reading for anyone who wants more advanced uses).   


However, there isn't quite an introduction. The book is partitioned less like a book, and more like documentation (i.e. here is first regex function, lets break down this function, then next function, etc.). If people are looking at this with no knowledge of regex, they are immediately thrown into a rabbit hole of different uses of regex, without understanding why they'd need it in the first place or what it can do. 

I'd recommend adding a brief introduction, i.e. regex is this, and it can do something like this. If you take:  [https://www.w3schools.com/python/python\_regex.asp](https://www.w3schools.com/python/python_regex.asp)  as an example, right off the bat you can see a very simple straightforward breakdown, and some very basic demonstrations of regex right off the bat (without going into any detail,ignore their table). Thus, now the user knows at least what regex can do, and they will read further if they wish to use the tool.   


To add on to the introduction, I believe most people just don't know *what* regex is capable of. And again since your book is formatted similar to a doc, I still wouldn't get to know *what* regex can do, without reading at least 20+ pages. I think it'd be nice to have a section (could be the intro) that actually goes through 1 simple example that summerizes the idea of each section in your book (again like the above link, search, find, split, etc.), and maybe a hyperlink that jumps to that section. But this is just a personal preference, I'd like to see what the book can offer right off the bat, otherwise I probably won't go too into it. And, it'll be easy for me to look back if I ever forget (I forgot what re.search does, right in the intro there is a hyperlink I can click to jump to it0.   


Regardless, I think it's great, and I've personally bookmarked it. Thank you!
Thanks
Thanks OP!
Awesome, thank you. When I've made some use of them I'll come back and send you money :)
Saving bc I'll probably use this. Thanks OP
Thank you! Appreciate your wonderful gesture, God bless!
You're a saint
Thank you
Awesome very helpful
Awesomely nice of you.
Thank you!
Thanks buddy.
.
thank you!
noob question,  what are these regular expressions?
Appreciate it, read through the first bit and although I have implemented some RegEx stuff in the past I know there is so much more that can be done with it. Looking forward to saving some time, at the very least having a quick resource to go to instead of sifting through questions on stack overflow. 

Seems like its quite well written, though as another person mentioned probably more geared toward the intermediate to advanced user. 

Do a dumbed down "intro to RegEx" with examples pointing to your website. I highly doubt majority of intermediate to advanced users are going to navigate to your site to try examples anyhow. Most would likely see an application from the get go.
>finally inspired me to look into Markdown

Yeah, markdown is increasingly becoming common.. it is used in reddit/hn/lobsters/stackoverflow/slack/github/gitlab/note-taking-apps etc. If you are interested in generating ebooks from markdown, I have a post for that (https://learnbyexample.github.io/tutorial/ebook-generation/customizing-pandoc/) - though I need to update it.

>One suggestion would be to tie the books to a website, (preferably yours) where someone could directly test and implement your regex examples

My initial plan was to create a GUI app in Python to provide interactive course. I haven't started it at all. Video course, again not started yet. I recently came across sites that can help with creating text-based interactive course with development enviroment baked in the website itself. I'm currently leaning towards this because they also would do the marketing stuff and provide initial review before publishing.

>Also, github is sort of a place for people who already know some of this stuff, I skimmed the first few pages of text and it seems you are writing towards a more advanced user. If that is your intent then that is great.

I'm using GitHub to provide the markdown source of the book and an easy access to code snippets, exercises, etc. My intention is to cater to primarily beginners to regex, provided they are already familiar with Python syntax and programming basics. Another comment suggested that I improve the introduction chapter to show *what* regex can do and summarize the book. Hopefully, that'll make it more accessible to beginners.

Thanks a lot for the feedback and ideas. I'll take some time to reflect and make changes accordingly.
Thanks bud!
[deleted]
> However, there isn't quite an introduction. The book is partitioned less like a book, and more like documentation (i.e. here is first regex function, lets break down this function, then next function, etc.). If people are looking at this with no knowledge of regex, they are immediately thrown into a rabbit hole of different uses of regex, without understanding why they'd need it in the first place or what it can do.

This has given me a lot of thinking to do. Thanks a lot for taking the time to go through the book and the detailed feedback. I'll go through the w3schools link as well as try to gather some more information about how to introduce *what* regex is capable of.

>I think it'd be nice to have a section (could be the intro) that actually goes through 1 simple example that summerizes the idea of each section in your book

This is another good idea and easy enough to do. Thanks again.
You're welcome, happy learning :)
You're welcome, happy learning :)
You're welcome, happy learning :)

I'd appreciate feedback more than money, so if you do get some time to read the book, do let me know how you found it :)
make sure to "buy" them not just save the link as they wont be free forever.
You're welcome, happy learning :)
You're welcome, happy learning :)
You're welcome, happy learning :)
You're welcome, happy learning :)
You're welcome, happy learning :)
You're welcome, happy learning :)
You're welcome, happy learning :)
You're welcome, happy learning :)
did you accidentally overwrite the comment, I'm seeing only `.` character
You're welcome, happy learning :)
From https://en.wikipedia.org/wiki/Regular_expression

>A regular expression (shortened as regex or regexp;[1] also referred to as rational expression)[2][3] is a sequence of characters that define a search pattern. Usually such patterns are used by string-searching algorithms for "find" or "find and replace" operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory.

`re` and `regex` are modules that help you with a wide variety of text processing needs. Here's some examples:

    # split based on one or more digit characters
    >>> re.split(r'\d+', 'Sample123string42with777numbers')
    ['Sample', 'string', 'with', 'numbers']

    # swap words that are separated by a comma
    >>> re.sub(r'(\w+),(\w+)', r'\2,\1', 'good,bad 42,24')
    'bad,good 24,42'

    # match if 'go' is not there between 'at' and 'par'
    >>> bool(re.search(r'at((?!go).)*par', 'fox,cat,dog,parrot'))
    True
Thanks for the feedback. I'll make some changes based on yours and the other comments. I certainly wish to convey that the book is for beginners to regex as well, provided they are comfortable with Python before starting my book.
Never read that book, but I think we do also need something that can break down some of the more advanced uses as well (which I think this book does a good job of). Most sites/books only cover the basics, and the docs for the later stuff is...definitely not designed for beginners.
Agreed. I'm on that chapter of the book right now. Al explains Regex and it's uses in a clear and concise manner.
I was having internet problems while downloading the book on phone. So the . is like a watch later. The table of contents look great btw.
Well I think that's my point, to be able to understand how or why you would need to use these you have to be quite familiar with python in the first place.
[deleted]
Oh ok :)

Thanks for checking out the book and feedback about contents, happy learning :)
Oh ok, I misunderstood your comment.

>I highly doubt majority of intermediate to advanced users are going to navigate to your site to try examples anyhow. Most would likely see an application from the get go.

Yeah, the other feedbacks also emphasized that showing what kind of things regex can do in the introduction chapter would be better. As well as to summarize what I'll be covering the book.
...okay? But this is not a post about Udemy courses, it's a bout a guy asking for feedback on his book. So...don't see the relevancy here.
This looks great! Congratulations :) I‚Äôm a beginner myself and been struggling with a lot of things you point out here (i.e. tutorial hell, github,etc.). How long did it take you to go from ‚Äúzero to hero‚Äù ? How much approximate effort did you put into this daily or monthly? I‚Äôm trying to do at least 5 min of code per day to not lose traction and would love to know if, compared to you, i‚Äôm on the right track. Thanks! And congrats again on this project!
Thank you for sharing.

I have started to learn how to program in Python and I feel like I'm stuck in the tutorial hell.
Thanks for sharing this. I was lucky enough to get a spot in the Stanford "Code In Place" class and have been wondering where to go next after the class ends in a few weeks. This gives me some good ideas.
Congrats!  


Is this your first time with coding or you had some experience in the past?
Congratulations and thank you for sharing :)
I see you're using `pyproject.toml`, so you might want to try out [Poetry](https://python-poetry.org/).  It'll let you move all of the config stuff out of `setup.py`, `setup.cfg`, and `requirements.txt` into that one `pyproject.toml` *and* make building & publishing easier.
I think the trick is to never only follow a tutorial, but always play around with the code to change or extend it once you've reached the end. People who get into the habit of following a tutorial and then moving on to the next are getting a false sense of accomplishment at that point, which reinforces the behaviour of doing tutorial after tutorial.

As soon as possible, you need to pick a small project and then only do tutorials which support completing that project.
Very interesting! Did you consider to dockerize your work? It's very easy, and using Docker you would be sure that anybody could run your project on any computer!
Thanks for sharing, i'll have to check out that problem solving book.

Do you think Python Crash Course was that helpful after getting through ATBS? I'm just not trying to cover the same material over and over
Congrats! Thats very solid bunch of studies you've made!
[deleted]
I feel like I‚Äôve learned the basics, but all of the code wars questions are tripping me up. Any advice that made you succeed in them?
I can‚Äôt even figure out how to navigate github, I was trying to find the Xenia emulator compatibility list yesterday and the repository was not helpful at all. If it was there I could not find it.
Following
Damn, this is incredible.  Nice job, OP!
Saving :) I'm on step one and have an idea for a project with GUI. Hoping to get there one day!
[removed]
You have done great job üëè 
I‚Äôm also learning python and have already learned the very basics. And looking for a small project to work on. Could you please suggest me any idea to work on? 
Thanks üôè and best wishes
good to see that, I remember writing a full guide for you few months ago.
Thank you so much for this post. I was about to make one asking on how to move on with my Python learning as I have been stuck in a stage where I know basic syntax and logic (that part was never hard for me since I am a Math major) but failed to be practical about it and move on in a sense that would make me feel like I mastered the language.

Also, the project I wanted to make seemed like too hard and too much consuming with me skill level.

Now, I have inspiration to move forward and sharpen my skills, thank you and good luck for the rest.
Hello! Beginner here, do I need github? What exactly do you use it for? Thank you!
Thank you for posting this! I‚Äôm a beginner too and I‚Äôm going to save this to follow for myself!
You nailed it with project ideas, I'm in a creative rut, considered dropping all things dev. Happy for your success regardless of my wall.
Bookmarking this.  I am doing the 100 days bootcamp on Udemy with Angela Yu and I would like to get some more stuff in to reinforce everything
Thanks for this man, I am in tutorial hell currently and looking for stuff to do so I don't get bored.
Thanks for the incredibly helpful post! I am in a very similar path and also found ATBS and PCS to be very helpful. I had the feeling that I was getting stuck (since I don't practise that consistently), so your suggestions with codewars and the "no zero day" idea in the comments are something I am now considering!

I have two further questions:
- Do you think the 3rd book is worth working through?
- How did you learn the last things (packaging, testing, documentation, using GitHub) you mentioned? I would also like to start a project and learn those things.
Thanks again!
Thank you! Very inspiring
I think you're well beyond beginner
Great path I'll say. 

I am a beginner myself, more specifically a self-learner, and although I am taking a reknown, online course of python on Udemy, I got stuck and I barely learnt and remember the previous lectures.
It is frustrating, that I need and have to start over, from the beginning.

I am looking forward to anyone who is barely started learning python and looking for a study partner or companion to share views and experiences, maybe to work together on a project as well.
am I too dumb that I didn't understand anything written here üò≠ I feel like Killing myself right now why even I started to study üò≠

that book on link only like few pages is available,is there a correct way I can start learning?
Any resources you found useful for web scraping and API?
Thank you! Means alot :)

Not quite sure I've made it to "hero" status yet but hopefully on the right track. So, I started learning on and off about 4 years ago but never really stuck with it for longer than a few weeks. It wasn't until my 3rd or 4th attempt to start learning that I finally finished Automate the boring stuff and went onto the rest outlined in my post.

I've been coding, or reading about coding for about 1-4 hours per day (4-6 days per week) over the last 18 months or so. It varies day by day but I at least try to get an hour or two in.

As for time spent on this project, you can see from the [commit log](https://github.com/sam0jones0/amazon_wishlist_pricewatch/commits/master) that it was about one month. But the vast majority of that was spent reading about how to document, type check and test code properly. Most of the functionality was added in the first commit, the rest was learning.

Doing 5 min of code per day is an absolute win and don't let yourself think otherwise. As per the famous reddit post, "[No zero days](https://www.reddit.com/r/getdisciplined/comments/1q96b5/i_just_dont_care_about_myself/cdah4af?utm_source=share&utm_medium=web2x&context=3)".

As I said above, feel free to reach out in a pm if you are struggling and need help/guidance/whatever.
Hello. I'd like to DM you about a python related question.
> github,

[https://git-scm.com/book/en/](https://git-scm.com/book/en/v2)
Very welcome! As I said feel free to message me on here or github if you're stuck.

What have tutorials/books have you done so far and how is it going?
I found it best to build something. Use the tutorial then try to build something simple. Like a calculator that can do 2 inputs. I did that and I learned a lot from it. Then you test yourself and something goes wrong. Like if I put a letter in the numerical spot, program crashes.  How can I fix that? And so on. 

At least to give yourself a bit of change of pace.
No worries! That Code In Place class looks cool, thanks for sharing that.

Best of luck with the learning and do feel free to reach out :)
Thanks! I've been using computers since I was very young, and got into Linux/servers/self-hosted about 6/7 years ago. Only really got into coding about 18 months ago though.
Thank you!
Thanks for the suggestion! I did look into Poetry and it seemed like a really good choice... I'll be honest, learning about packaging was mind-bendingly confusing at times, there are SO many conventions and competing factions regarding best practices. I think I wanted to try and do it the "one‚Äî and preferably only one ‚Äîobvious way to do it " that would work on the most peoples configurations, but never really felt I found that "one way".

I will defintely look into Poetry for my next project, it can simplify packaging then I'm all over it. Do you happen to know if a project configured with Poetry requires the end-user to also be using Poetry or does it integrate well with the setuptools/pip environment?
I think that's fantastic advice. Take the material you were just taught and run with it as far as possible, extending/hacking/breaking it in any way you can before moving on. It's more fun too!
Thank you! I didn't consider that actually, I've used Docker a little in the past, mainly for spinning up services like NextCloud on a server. I did try to keep the code platform-agnostic so it *should* work on any computer but you never know.

I'll look into dockerizing though, thanks! What has your experience been like with it?

One extension I had in mind was to make it more approchable for non-technical/non-python people by adding a GUI to enter the config details and packaging it up into an executeable installer.
The problem solving book really is great, learnt so many things I would never have thought of about program design. If I could only take one thing from that book it would be the [chapter on algorithm analysis and Big-O notation](https://runestone.academy/runestone/books/published/pythonds3/AlgorithmAnalysis/toctree.html).

For me, Crash Course was absolutely helpful, I went over the first half much quicker as it does go over the basics again. As great as ATBS is, it doesn't contain much beyond single-file scripts, while very useful I felt lost regarding multi-file programs/projects. The second half of Crash Course is perfect for this, goes into enough detail without forgetting it's still a beginners book.

Check out the chapters under "Part 2" of [this table of contents](https://nostarch.com/pythoncrashcourse2e).
Thank you!
In the order I did them in I'd say Crash Course is certainly worth doing after Automate, just for the project-orientated stuff. If you've already done Crash course there isn't as much reason to go on to Automate, it is the easier of the two books I found. To me, Automate served as a gentler entry point and quicker access to actionable/useful things.

So yeah I'd move on to that data structures book, codewars, small project or any other "next-step" in line with your interests.
When I first started Codewars (in fact this still applies now) I was Googling everything and anything related to the problem. I don't mean Googling solutions, but methods to best accomplish the task. Don't expect to be able to finish all the problems "closed book", some of them took me days to finish, and still do. Get lost in those rabbit holes pertaining to one particular aspect of a problem. 

There is a lot of banging your head against the wall and feeling hopelessly stuck when learning to code (at least there was for me, pretty sure this goes for everyone), totally normal. Sometimes it's a temporary gap in knowledge, or sometimes its a misplaced colon. Each time I got stuck in one of these moments, I'd remember how many times I've been in this position before, and that I eventually always found a way out. Remembering that each time worked a slight sense of comfort into the extreme discomfort of feeling that stuck.

If you feel stuck I would suggest continuing with a mix of guided learning (books/tutorials) while ([as another commenter pointed out](https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/gxayrwr?utm_source=share&utm_medium=web2x&context=3)) extending the code taught to you in the tutorial as much as you can before moving onto the next section. I spent months reading through books/tutorials while eeking my way into codewars.

Beyond that, remember to reach out and ask for help here or otherwise. As I said in my original post, you can message me with general and/or specific requests for help any time!
> Xenia emulator compatibility list 

Yeah it can be a bit confusing to start off. Had a look for you and they haven't clearly stated in README where that list is! It appears they use github issues, with one "issue" for each game.

[Here's](https://github.com/xenia-project/game-compatibility/issues) the complete list of games. You can use the "labels" feature to filter the current working state of the game, and the search bar to search for any particular game - [like this](https://imgur.com/AqytoBN).
thanks!
Well thank you very much kind person!
Thanks for the save! That's awesome, remember to keep a note of that project and any others you think of during the learning process. Best of luck with it and looking forward to seeing your project here some time soon!
It took me around 1 month to complete this project, but 18 months to reach the point I am at today.

I answered this is more detail [here](https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/gx9xtb4?utm_source=share&utm_medium=web2x&context=3) :)
Thank you thats very kind! Good job on learning the basics and for sure finding a project is a great next step.

It really can be difficult finding that next project. In fact I just posted a comment to someone else on this thread about how I found this project and general advice on how to find your next project. Instead of pasting it here I'll just [link the comment](https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/gxdeyx2?utm_source=share&utm_medium=web2x&context=3), hope it helps!
Can't say I recall that specifically but if it was on this sub I have no doubt I read it and benefitted from it, so thank you!
And thank you for that message! Really nice to read :)

Hopefully you will keep a note of that project and come back to it some day. You'll find yourself looking back confidently on things you used to find hard, it is very rewarding after the struggle the learning process can sometimes be.

Best of luck and feel free to reach out should want/need!
Hey! You don't *need* github in the early stages of your learning, I didn't start using it until I was comfortable with the basics/core concepts. That said, consider it like an "oober-powerful-quicksave". It lets you save the exact state of a project at a point in time.

So lets say you "commit" (save #1) your work so far and then continue working for a few weeks on some new features. You realise that your new features completly break the whole project, uh oh. Thankfully, you can easily roll back your project to the exact state it was in when you made that first commit (save #1) a few weeks earlier.

Lets say that you want to keep those new features you made in case they come in useful later. But you still want to roll the project back to that first state (save #1). Well, you could make a new "branch" and save/commit the broken codebase (with the new features) there. You then continue working on save #1 and are free to revisit those new features at a later date, perhaps even "merge" the two branches together at some point.

There are many more advanced features to git (github is a git "repository" hosting service) which I'm not even close to understanding. All you really need when getting started is to get into the habit of comitting your changes on a regular basis so you can always roll back when needed. Plus, "pushing" your commits to somewhere like github gives you an off-site back-up to protect against hard-drive failure etc.

I'm sure there are cleaner explanations of git and github out there, and you should have a google when you feel you've got the core python concepts down.

Best of luck! Feel free to ask any questions.
You're welcome, and best of luck going forward! Feel free to reach out should ever need/want :)
Thank you! And ahh I'm sorry to hear that. I spent so long looking at those "10 projects every beginner dev needs to do" lists you'll find online, but couldn't bring myself to make another calculator or to-do list, as benefical as I'm sure writing them would be.

I wanted something with an actual use case, even just for one person. What helped me was asking friends if ... In fact I'll just copy-paste the message I sent them in a whatsapp group chat:

&#x200B;

>Sup everyone, I'm having somewhat of a coders block. Want to code something to beef up my portfolio but haven't trouble thinking of any actually useful projects. Rather than just make another calculator app or something.  
>  
>If anyone has any ideas (no matter how domain-knowledge specific e.g. music, journalism, gaming whatever) let me know please!  
>  
>Think in the domain of "is there some thing I do which I wish was automated". It can be something that works on files, spreadsheets, databases, websites, runs in the background or needs a GUI... whatever!

&#x200B;

That got quite a few responses thankfully. If you don't have many friends or don't want to ask them perhaps ask something similar in a subreddit of a niche interest of yours?

One friend needed help working with excel sheets for his job, another suggested the amazon wishlist project I ended up going with. Another idea suggested I was thinking about, but haven't worked on yet was: "I've always wished there were an app that could tell you when it's ok to go pee in the cinema without missing anything important". Your welcome to that if you want :P

Best of luck whatever you decide to do! And of course you're always welcome to contribute to my amazon wishlist project
Sounds great! Best of luck and do reach out should you wish :)
No worries! Hope it helps :) I always found web scraping to be particularly fun. Maybe make a personal dashboard where you collect information from your favourite sites and display them as your browsers homepage? 

I'll also share a link [to a comment](https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/gxdeyx2?utm_source=share&utm_medium=web2x&context=3) I made regarding figuring out what project to do (and how to find a project I'd care about). Best of luck!
You're welcome! And thanks for your comment :)

There is definite value in doing just 5 minutes if you're finding it hard to get motivated. It gets the cogs turning in the subconscious/background and keeps it fresh. Also, if you convince yourself you're only gonna do 5 minutes you can often trick yourself into working for longer -- "now I've started it's not so bad". And codewars is great for this, you can drop in, read the problem and think "hell naw"... then lo and behold you'll be on the toilet a few hours later and a spark of inspiration will come and off you run to the computer (trousers round your ankles no doubt) to have another go at the problem.

Regarding the questions:

&#x200B;

1. &#x200B;

The 3rd book doesn't contain much you'd actually be writing in a standard programming role, but it introduces concepts that *will* make you a better programmer overall. So I would say yes, it is worth working through... But don't get too hung up trying to remember how to write all those algorithms, rather the concepts the author is trying to get across on good program design. I mentioned in another comment recently that if I had to pick just one chapter from that book it would be the one on [computional complexity / Big-O Notation / algortihm analysis](https://runestone.academy/runestone/books/published/pythonds3/AlgorithmAnalysis/toctree.html).

If you're still unsure how about reading these two (short) chapters first: 1) [Why Study Data Structures and Abstract Data Types?](https://runestone.academy/runestone/books/published/pythonds3/Introduction/WhyStudyDataStructuresandAbstractDataTypes.html) and 2) [Why Study Algorithms?](https://runestone.academy/runestone/books/published/pythonds3/Introduction/WhyStudyAlgorithms.html).

Learning about data types really helped me think about how to best organise data I'm working with and the algorithms are just darn cool if you ask me.

&#x200B;

2.

**Packaging**

Packaging is a bit of a mind-bender to get your head around as there are so many competing standards. But you'll only need to learn it once and it will seem simple enough after that. Have a read through another answer on this thread [I wrote on packaging](https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/gxedi3z?utm_source=share&utm_medium=web2x&context=3). Beyond that I would refer to [this awesome packaging guide](https://the-hitchhikers-guide-to-packaging.readthedocs.io/en/latest/) and the official(?) [python packaging guide](https://packaging.python.org/).

&#x200B;

**Testing**

I decided on PyTest after googling around and reading other peoples opinions on this very here sub. To actually learn how to do it I found the book [Python Testing with Pytest: Simple, Rapid, Effective, and Scalable by Brian Okken](https://www.goodreads.com/en/book/show/34695799-python-testing-with-pytest) very helpful. Also:

\- [This site](https://pythontesting.net/start-here/) is an excellent all around testing resource

\- And a shorter rundown of [pytest here](https://realpython.com/pytest-python-testing/)

&#x200B;

**Documentation**

There are a few different standards of docstrings, I ended up going with Google's style as it looked the cleanest to me. To get a good overview of documenting code and the various styles people use, I recommend giving [this page](https://realpython.com/documenting-python-code/) a good read.

If you decide to go with Google style docstrings, they are explained in [Google's python style guide](https://github.com/google/styleguide/blob/gh-pages/pyguide.md#doc-function-args) quite well. And check out [this page](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html#example-google) for some more examples.

[One last link](https://pandas.pydata.org/docs/development/contributing_docstring.html) for you that provides many more examples and guidance on "best practices" etc.

&#x200B;

**Git / Github**

Have a read of [this page](https://realpython.com/python-git-github-intro/) for a good overview of git. I also wrote [a comment](https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/gxdfw8d?utm_source=share&utm_medium=web2x&context=3) on this thread going over the general use-case for git for a beginner to Python. It may look like you need to learn a whole set of command-line commands to use git/github, but in all honesty I do 99% of my interaction with github through GUI buttons baked into my code editor (I use PyCharm, but most of them integrate well with git).

&#x200B;

Phew, I think that covers it! My fingers hurt!
No problem, glad I could help :)
Thanks! I really hope my wording in the title doesn't discourage anyone, it's so hard to judge where "you're at" on the beginner-->intermediate-->????-->expert scale and erring on the side of humble caution seemed the best way to go, for me.
Thanks! And oh man, as I said in another comment I must have started over at least 3 or 4 times before it finally stuck. It's feels hard to get past the initial point of grasping the syntax and moving into actually writing something useful, no matter how small. But if you just Keep At It‚Ñ¢ you get there soon enough.

Also worth mentioning that if a course doesn't work for you there is nothing wrong with ditching it and moving to a different one. The ones I outlined really worked for me. Automate the boring stuff is very highly recommended so give it a go if you haven't already?

I wonder if there is a place that precipitates meeting study partners at a similar point in the learning process. I'll have a look around and get back to you!

Happy to chat and/or work together on anything regardless!
Took me 18 months to understand anything I just wrote! As I said in another comment:  


>Doing 5 min of code per day is an absolute win and don't let yourself think otherwise. As per the famous reddit post, "[No zero days](https://www.reddit.com/r/getdisciplined/comments/1q96b5/i_just_dont_care_about_myself/cdah4af?utm_source=share&utm_medium=web2x&context=3)".  
>  
>As I said above, feel free to reach out in a pm if you are struggling and need help/guidance/whatever.

&#x200B;

I recommend [starting here](https://automatetheboringstuff.com/2e/chapter0/), the **whole book** is available for free from that link. Take your time and read through it slowly. Even if you only read one chapter, or even one paragraph a day that's still progress. And trust me, you're not too dumb! You don't need to be a math wizard to program. If anything I would say the most valuable skill to practice beyond programming itself is patience. It can be very frustrating at times!

Have a read through that first chapter and let me know how you get on.
Yo! My very first introduction to web scraping was [this chapter](https://automatetheboringstuff.com/2e/chapter12/) from Automate the Boring Stuff. It served me well and gave me enough knowledge to continue on my own while referencing the [BeautifulSoup documentation](https://beautiful-soup-4.readthedocs.io/en/latest/) and employing a little google-fu for everything else.

Hope that helps!
Absolutely incredible, the whole comment here, and then linking non zero days to it, thank you for the motivation and inspiration!
That's so true. I've seen people blabbering about coding for 4 or 6 hrs but I  personally i think an hour or 2 per day averagely also works fine as long as you're working consistently
The motivation I needed! I've been very on and off for the same time period as well. I put a study schedule together but after work I just turn off. Will get back on the horse!
Yes please do! I'll get back to you as soon as I can :) Just working through all the comments here roughly in order
I have started fairly recently and I am reading Automate the Boring Stuff.

I have watched a few YouTube videos and done small projects from freeCodeCamp.org but I still can't make a project on my own, I just wouldn't know where to start.
Yes, that's a great idea.

I have made a simple game with if/else statements and I learned a lot from it. I just need to find a new small project to work on, a calculator would be a great idea.

Thank you!
Poetry is just a wrapper script that the developer runs basically.  It sets up your virtualenv, installs and tracks your dependencies, builds your package and pushes it to PyPI.  As a user, you get a standard wheel or sdist package and install it with pip.  No requirement for Poetry at that stage unless they too want to develop your package.  Those people will be installing from source though (git checkout && poetry install).

If you're curious what it looks like, check out [one of my more recent packages](https://gitlab.com/danielquinn/majel).  If you download the [package on PyPI](https://pypi.org/project/majel), you should be able to see the difference.
Interested in these answers as well. I've been getting stuck on packaging over the last few weeks. I just tried poetry out on a simple script and it seems really easy, but I need to test on other machines now.

@OP, any highlights or insights that got you through the packaging hurdle? I've tried following one of the HitchHiker's guides and the official python docs. Maybe I need to try harder.

Thanks
Docker is fantastic. I wish I would have learned it sooner.

Start with learning how to write and build a simple dockerfile. After you have that figured out, connect your Docker account to GitHub and watch the magic happen. When you commit changes to your code, Docker will automatically update the image.

Just my opinion here but when you are looking at a GUI for docker think web based. Maybe Flask in this scenario? Your project looks great by the way. Good work!
Thank you. That's really nice of you. I'll follow you to update once I have significant progress in my project if you want to see. \^\^
Wow ok! Thanks for all the info, much appreciated and congrats on finishing your project!
So here is a question.   Have you seen an easy intro to Object Oriented Programming?   (OOP). 
It isn‚Äôt sticking for me yet and I have to refresh or start over the videos cause man.   That was a nightmare
Great! Thank you very much for taking the time to give such a thorough answer!
Do you have any plans on moving forward? Like getting a job or keep improve your knowledges?
That's awesome! Looking forward to chat or anything else regarding python and learning.
Thank you very much! That no zero days comment really helped me out once upon a time. Best of luck and do reach out should you wish!
Absolutely re consistently. I mean sure, somethings I'll go for 6+ hours if I'm in the zone, but thats more "executing" rather than "learning". When it comes to learning there is only so much your brain can actively absorb at once, it needs to simmer in the background overnight to really seep in to understanding.
That's great to hear! It certainly was very stop and start for me until I felt like the train was finally leaving the station. Keep me updated on the progress!
It sure is intimidating going from writing a few lines to a project. I didn't get into my own project for quite some time. I wouldn't worry about projects initially and just get really comfortable with the basics. 

A project doesn't have to be big, it can be a ten line script you wrote to automate something random that came to mind, thats a win.

Keep a folder of all the things you make over time and soon enough you'll have a repo of snippets and useful tools that could coalesce into something bigger.

Once you've finished with Automate the boring stuff I really recommend [Python Crash Course](https://nostarch.com/pythoncrashcourse2e) as it does go into project-orientated territory. It goes over the core concepts in the first half so if you're not feeling Automate the boring stuff for whatever reason feel free to move right on Crash Course.

Reach out in a pm here or on github if you ever need any help!
Thanks for the response and yeah wow Poetry sounds like it simplifies the whole process. Had a look at your repo (cool project btw!) and it seems most (all?) config is moved to pyproject.toml and then I assume Poetry creates that .lock file for you.

If that's the case then thats pretty cool, having all config in one file. I'll be sure to check it out in more detail.
Hopefully my [answers ](https://www.reddit.com/r/learnpython/comments/n6yd44/-/gxbb4gd) help, but building a package in Poetry usually as easy as `poetry build`, and pushing to PyPI is just `poetry publish`.  The trickiest thing I've seen so far is the defining of a command line program (where you're not just building a library, but a program people can call on the CLI). There's an example of this in my referenced project though if you're going down that road.
Just wanted to let you know I've seen this comment but I've got to pop out for a bit so will respond with my best interpretation of the packaging situation a bit later on!
That all sounds very interesting, so long as the mainteance overhead isn't high it's always worth adding extra distribution methods. 

I suppose that github/docker sync uses github actions, which I was meaning to look into to see if possible to run the tests / build to PyPI automagically after pushing to git.

Haven't used Flask, have used Django so I'm sure it won't be too much of a paradigm shift :)

Cheers for the tips and the compliments!
That's great! Best of luck and you can always message me if you're in need of any help :)
No worries! And thank you :)
So, I first learnt OOP from Chapter 9: Classes of Part 1 of [Python Crash Course](https://nostarch.com/pythoncrashcourse2e), supplemented with [this](https://www.youtube.com/watch?v=ZDa-Z5JzLYM) and [this](https://www.youtube.com/watch?v=BJ-VvGyQxho) video(s) from Corey Shafer. I also read through [this](https://realpython.com/python3-object-oriented-programming/) Real Python page.

It certainly is confusing when starting out, but I promise it does clarify in time. Make sure you're not *only* learning from videos, they are helpful but I think there is a real benefit in reading through a book/tutorial's trail of thought at your own pace, and then writing it up into your own code editor.

I can't recommend Python Crash Course (linked above) enough, it goes over the core concepts really well in the first half. But it's not until part 2 (the projects) where I really solidified my understanding of OOP as it's used extensively in each one of the projects.

Understanding won't come all at once, just keep working through and come back to sections you didn't quite grasp the first time round.

Let me know how you get on!
No problem!
I'll keep improving my knowledge for sure. Next steps are probably to add features to this project (like add a GUI and a one-click install for non-python users) and/or start a new project (ideas welcome haha). I'll probably look into contributing to some open source projects, which has the added benefit of getting me to read over other people's code and see what style/ideas I can glean. 

Need to improve my knowledge on concurrency/parallelism. Also need to learn what else I need to learn about, that's always a thing.

And yes the end goal is to enter a full time position with all this knowledge. In exactly what role I'm not sure. Either software dev/engineering, sysadmin, devops or whatever else is out there.

How about you? What are your plans going forward?
Absolutely!
!RemindMe 3 days

> I wonder if there is a place that precipitates meeting study partners at  a similar point in the learning process. I'll have a look around and  get back to you!
Going to save this post and come back to it in 3 months (7th Aug)
Thank you for your help!

I will definitely reach out to you in the near future :)
Thank you, for both answers. Checking out your package today \^^

In case you care to see my test build, one of my early projects spurned out of some tutorials: https://github.com/NBPub/CatterPlot

I successfully ran my script from my alt machine 1, installing dependencies using "poetry install". Now I'm going to test alt machine 2, without Anaconda and such.
I just finished simple course of basics and enjoying codewars(real gem, thanks to you :)) so I have a long way to go. 
I‚Äôm not sure if I really want to work in this industry, I‚Äôm only one month in this. But I know exactly that programming is the only available workspace for stupid ideas from my head. 
Sadly, I don‚Äôt have a profession or education in my 24 and my life is a mess. Who knows, maybe Python will help my get out of a pit I fall when I was younger. 
Anyway, I want to say thank you again. You gave us information I‚Äôve never seen in Python related videos. NoZeroDays and codewars were really eye-opening for me. Maybe one day you will made your own educational course or app.
(Sorry for grammar)
There is a 14 hour delay fetching comments.

I will be messaging you in 3 days on [**2021-05-10 19:05:31 UTC**](http://www.wolframalpha.com/input/?i=2021-05-10%2019:05:31%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/n6yd44/finally_feel_ive_graduated_from_complete_beginner/gxb1o02/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fn6yd44%2Ffinally_feel_ive_graduated_from_complete_beginner%2Fgxb1o02%2F%5D%0A%0ARemindMe%21%202021-05-10%2019%3A05%3A31%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20n6yd44)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
!RemindMe 3 months

;)
How are you getting on?
While you watch tutorials - try to modify the code from videos a little bit, give it your own names etc. It works great for me. Just don't blindly copy a code - write it in your own way
welcome, and cool!
Yeah.. after reading u/searchingfortao's comment it seem Poetry might be the best way to go. I must have spent the best part of a week reading about packaging for this project.

All the following assumes you don't just go with Poetry. The key takeaways from my research were:

I found [this thread](https://discuss.python.org/t/where-to-get-started-with-pyproject-toml/4906/6) helpful explaining the differences and use cases between these 3 files. 

There are 3 main files used in packaging/building. setup.py, setup.cfg and pyproject.toml. People are moving away from setup.py, although there are still reasons to keep it around but usually it's pretty empty, only containing one or two snippets if anything at all. It seems the main reason setup.py is kept around is to retain the ability to do editable installs (pip install -e .).

If you're not interested in editable installs then you can do away with setup.py entirely (unless some other part of your build explicitly requires it for whatever reason). [This article](https://snarky.ca/what-the-heck-is-pyproject-toml/) clearly lays out out the case for a pyproject.toml / setup.cfg project.

&#x200B;

As per [this link](http://ivory.idyll.org/blog/2021-transition-to-pyproject.toml-example.html):

> The future of Python packaging is pyproject.toml, and (for now) setup.cfg, based on [PEP 518](https://snarky.ca/clarifying-pep-518/) and (soon) [PEP 621](https://www.python.org/dev/peps/pep-0621/). 

&#x200B;

So, with a mostly empty setup.py. You can put the majority of your configuration in setup.cfg and/or pyproject.toml. They accomplish similar things, but depending on your setup (which tools / packages you're using) you may have a need for both. 

Here's a couple more links I found helpful:

\- [https://stackoverflow.com/questions/64150719/how-to-write-a-minimally-working-pyproject-toml-file-that-can-install-packages](https://stackoverflow.com/questions/64150719/how-to-write-a-minimally-working-pyproject-toml-file-that-can-install-packages)

\- [https://packaging.python.org/tutorials/packaging-projects/](https://packaging.python.org/tutorials/packaging-projects/)

&#x200B;

Hope this helps rather than complicates your train of thought. I'm defintely looking into Poetry for my next project.
Thank for the wonderfully kind message, means a lot.

For what it's worth I don't have any formal education in this space. I did maths at A-level (the UK equivalent of first year of college) and a BSc in Psychology.

If you're enjoying codewars after only one month studying I'd say you're doing very well indeed, so keep it up!

Each non-zero day you have is a concrete step forward :)
Well, not been having much progress. Work has been hectic since I've got promoted a couple of months. But I am back on it! I've sketched out a project so will be working on that starting this week. Wish me luck. Check in 3 months :)
I also do that.I try to add my own touch to the code.

Thank you for your advice.

Maybe I'm doing something right after all xD
Thank you so much. The context with the resources is extremely helpful! Now I'll see if I can make anything juicy enough for someone to test out.

Poetry does seem to be the future then, neat.
Hello again :) how is your progression for past 3 days? Learned something new? 

What‚Äôs your opinion on JavaScript? A lot of job offers and lack of programmers . Some say that‚Äôs the fastest way to join IT community .
No worries! And yeah I'm defintely giving Poetry a go for my next project.

Look forward to seeing what juicyness you come up with!
Hello mate!

Sorry for the slow response, have been busy!

So I spent some time thinking about what the next best step is, and aside from thinking of more projects, I decided to learn about software engineering best practices and "design patterns".

I'm reading "[The Pragmatic Programmer](https://www.goodreads.com/en/book/show/4099.The_Pragmatic_Programmer)" which is great so far, doing some more Codewars ([my profile here](https://www.codewars.com/users/sam0jones0)) and reading into [design patterns](https://python-patterns.guide/).

How about yourself, how's it going?

I don't have any interest in javascript at the moment, but it's certainly a fast evolving and powerful language. My only exposure to it at the moment is using [bootstrap.js](https://getbootstrap.com/) as part of a "Python Crash Course" book project. As you may know, javascript is heavily focused (but not exclusively) on the web browser.

If I do move on to another programming language (which I almost certainly will once I'm really **really** comfortable with Python) it will probably be a more powerful and statically / strongly typed language such as C++ or Rust.
Wow, you have 5 kyu! I bet you tensed your brain so hard sometimes.   
  
 As for me, I stick to learn JS for past three days. It's a lot easier than my first experience with Python. Guess I will continue my journey to web.  


Funny thing came to my mind. When you learned basics of Python, you be like "Ok, I can swim" and then you look around and realize that you in the middle of the ocean.  


 I hope we swimming in the right direction where beautiful sand beaches wait for us. Best of luck to you and your learning! I'll write you in one month to check if you ok :) (If you don't mind)
Ahaa yes some of the challenges certainly do strain the brain. Can take a good few hours over a couple days to finish some of the katas without googling the specific answer.

Sounds like you have a plan with javascript and if you're enjoying it then by all means stick with it!

Very, very true @ the ocean metaphor. This field is as wide as it is deep, so long as you keep working on it you can be sure your skills will be unique amoungst all your fellow ocean-dwellers. Perhaps thats another way of saying every direction is the right direction if you work hard, as cheesey as that is, ha.

Absolutely check in whenever and as often as you like, I am interested in hearing how you progress :)
make sure your playlists are backed up, spotify tends to outright ban users who skip ads

https://www.theverge.com/2019/2/7/18215845/spotify-ad-blockers-terms-of-service
[https://tizonia.org/](https://tizonia.org/)

maybe a wrapper on top of tizonia rather than spotify directly?

and use threads.

&#x200B;

so u don't have to hijack the keyboard events.

and can play it in the background.

at 10-20%.

&#x200B;

could be fun.
You are the hero that world needs
Thats hilarious and really cool man
Nice work, now I can FINALLY stop using Apple Music
This is great, the alternative is Ghostery add-on
Sound good. Just curious, how long does it take to restart the app and continue playing on average?
Spotify should hire you.  Your first task would be to update the api so this is no longer possible.
saving this sounds awesome bud
Haven't checked it out cos I pay for spotify, but wouldn't killing the app and restarting it itself be an interruption? I suppose it's less of an interruption than a 10-15s ad, but still.
Sounds cool.
So cool!
Nice thanks!
This is great if it works :D
Very sick. Hopefully it will work for a long time. An acquaintance of mine wrote an ad skipper a few years ago that worked great until something major eventually changed in the spotify code that compensated. I don't know how it worked exactly.
Nice!
Now I just need a sound cloud one üòÇüòÇ
impressive üëçüèª
Why is that gitnore packed with so much shit?
Great Work
So u don't want the artists being payed? Spotify doesn't cost that much.
jesus christ i didnt know spotify would go this low
I took a look at Tizonia, it looks like it requires Spotify premium, which im pretty sure doesn't have adds anyways. 

Also biased on how OP kills the Spotify process they're working on a windows machine.
I'll surely look itno that, Thanks for the feedback.

If you have any resources than that will be very helpful.
thats too much but thanks for the appreciation =)
Thanks Mate
I'll check that out
Isn't ghostery browser based?  What about desktop or phone apps?
Based on your conputer it will
Min 5 sec
No Lmao this is Windows automation. Spotify is in C++ and the API is most likely Javascript
Thanks buddy appreciate it
Actually its pretty quick 
Depends on computer but my 8gb ram pc resumes music in 5 sec
It's also useful just so u don't have guests that roast u for having free Spotify and just assume it's lag.
ikr
Thanks man
Np
It does. It works great! =)
[deleted]
i think spotify canceled the legacy api that let u play and atm its only the web one.

that seems to get reset on the token. then u get the ads.

op needs to figure out a better way than to hijack the keyboard events :P

&#x200B;

after a bit of searching seems to be an old lib still around that isn't deprecated yet. barely. but that isn't going to last.
Bro they still, have, ads, in premium
Not all heroes wear capes.
Brilliant effort
BlockTheSpot for desktop
That's pretty quick. Nice work!
Also there‚Äôs already systems in place to detect abusers. Spotify will see logs where a user exited and came right back in when an ad should have been playing. Happened once? No worries. Happened 200 times in a row with {time_to_ad - terminate_spotify_instance == k}? Bot behavior detected. It‚Äôs in their best interest not to ban abusers immediately but to gather data first and strike when they have enough data to come up with a countermeasure
Ok, so it's still interrupting you. I mean I'm not knocking your code, but the solution is less than ideal.
Is that a thing?
ooh okay i get it now
Nope
Merry cake day.
I didn't get the impression that OP was trying to find a solution to something. It sounded to me like OP was experimenting with the Spotify API, figured out how to do something pretty interesting, and shared it.
It is an automated way to not have to listen to advertising.
Give it a try =)
Sure but at least you dont have to listen to the stupid ad. I pay for spotify tho
Yep, it's most def a thing.  Also I rather a silent pause between songs than ad, kinda kills the mood especially in group setting.
Thanks very much
I pay for spotify, its like $3 a month, so don't really need it, sorry.
Yeah that's ok
It's ten bucks, rover?
Are you always this miserable? Lmfao
Not miserable at all. You don't get how stopping interruptions by interrupting you is not an ideal solution?
Got it. Always extremely miserable. I'll pray for you.
The biggest problem is the ability to actually formulate the problem as a search. The specific syntax isnt known well to beginners.

Secondary problem is Google itself, with 2-3 pages of medium articles without any relevant content and full of ads. Unless you managed to find the correct stackexchange.

I can only speak for myself but i think most documentations have too little examples to complement the explanations, so i get increasingly frustrated reading them. I learn better if i see a few ways to implement the specific method/feature.

One of the better docs ive read is beautifulsoup.
[deleted]
You're also forgetting that people really want to fit in. They want to be in a community. They come here and see all these posts, comments, discussions, etc. So now it's their turn. They have a question. They are going to generate discussions. They are going to fit in! 

That's why even if you have a weekly or daily questions thread, new people will always start their own post because they don't only want answer, they want to be a part of this community.
I have been in the IT industry for almost 20 years now. Most of my career was in Infrastructure and data center networking. About 5 years ago I made a hard shift into automation and development. 

As I grew in my networking career I became stronger and stronger at problem solving and figured it would carry over to other areas of IT. Not so much...

We forget the struggles of the entry level engineer in our field pretty quickly. It wasn't until I went through it again that I realized how hard it is. Very humbling.

Documentation and googling/research is 10x harder for entry level as they have no idea what they are looking for and what the correct terms to use in their search. I can craft a detailed search for complex routing topics and almost always have an answer in two clicks. For pytest I can search for hours on how to use a basic feature without any progress. 

Technical documentation has an assumed level of knowledge and few are good at catering to entry level.

With all that said, there is a balance you need to help your teammates with. Yes it's valuable for them to learn how to figure out a problem on their own, but you also need to mentor and help just as much. This is what we expect from leaders and our peers for our own growth. 

Learn to recognize when they are over their head and making no progress. Learn to recognize when they are defeated and lost. They might not know they are (they are learning this too) but this is when you step in. 

Teaching and mentoring does not have to come from Sr level roles. 9 times out of 10 someone is more receptive to someone right above their skill level than a highly skilled Sr engineer. That is because they relate more to you then them.
> As an intermediate programmer I find that many of my problems can easily be solved by just googling the problem

Forgive my snark, but congratulations, you're no longer able to empathise with a complete novice.

I'm very new to programming myself, and my primary issue is understanding how to word the problem that is causing me issues. How can I "google the problem" if I don't know exactly what the problem is? Sometimes there are obvious cases where i.e. I receive an error message and can google that, but other times I might be having problems with control flow/logic and it isn't immediately obvious what the solution is. 

I spent half a day last week trying to figure out why I couldn't get some code to count instances of a word in a list of strings. I thought I'd tried everything, I'd used the count function and failed to get it working with the way I'd structured my code, I thought my problem was due to control flow in my loops, I just wasn't able to get the output I wanted. When I searched online for answers, the results directed me to Regex and importing modules from libraries.

I asked a question here and it turned out to be a simple error with an implementation of my "occurrence counter" combined with a flawed understanding of membership operators. About two minutes after posting a question, a nice person replied saying (x won't work, it does y. Count() will work if you use z). With that insight, I corrected my approach in about 30 seconds and the code worked the first time I ran it.

Eight hours of head-banging frustration. Obviously the onus is on me to try and ensure I understand what the hell I'm studying, but the end result is I spent many hours searching for a solution to a misidentified problem.
I've got quite some questions at work that I basically solved googling the question my workmate asked me... I didn't know how to answer it, and my workmate clearly didn't think to just google it. In some cases I just literally pasted the question and added "python" at the end... no need for fancy knowledge on how google finds stuff.

Same with many of my own issues. I remember one of my first "big" issues was that I needed to minimize a function with respect to multiple dimensions. Just googling "two dimension minimization python" and browsing through the results gave me the answer. Back then it took me some time to recognize the most adequate solution, but that time isn't wasted if in the end you lear something.

Also by doing it on your own you learn how to quickly discard solutions that don't fit your problem, which is a very important hability on the long term.
Searching the Internet for answers is a wonderful researching tool. However, I would make the claim that it often pales in comparison to getting direct help from those experienced with the program. This, in my opinion, is because the Internet answers often give only a very narrow "slice of the pie" - - with the focus most often being on providing the solution rather than teaching the use of a tool.

From personal experiences, I've been self-taught in the majority of my sysadmin and developer work, with university only really giving the foundation needed. It wasn't until I joined a workplace that I realized how my knowledge was full of gaps... Because I would usually get solutions from the Internet or trial-and-error. The experienced members on my team helped fill in those gaps with better methods of doing the same thing, how to stay aware of security and performance, tools and resources I had never heard of before, and general best practices.

It's why I always applaud the wonderful Internet folk that go above and beyond in their answers, explaining not just the how... But the why, when, and where as well. Searching for answers is a wonderful quick fix, especially if you come across good posts like that, but nothing quite compares to knowledge passed down by a mentor.
I have no issues with asking. Programming is a beast of a mountain and I'm super thankful to anyone who puts out solutions, provides tips, and comments in a way that is useful to the progress of the community as a whole. I will piggyback off what others have commented as it is still a mild frustration of mine. The syntax in asking the question is something that I have had trouble with. I know what I'm saying but that doesn't relate to what Google finds for me. But, I've learned persistence pays off, the answer is usually out there.
As a middle aged person who decided, after losing my 20 year career in advertising due to COVID, to PIVOT really hard and go into coding/programming/webdev, whatever, I find it very hard to get over the imposter complex -  I am not used to not KNOWING what I'm doing.  The concept of not remembering everything and having to go search on Google for it is hard to learn.    Plus, knowing what to ask for on Google.   I've managed to find some really great resources but I'm still struggling with asking for help from people or Google.
Good to know i'm not a beginner anymore because i google literally everything
We're in a difficult situation here.

At one side i completely agree, learn to find answers, its important. Learn to find them in docs, comments and related forums. Be patient and read.

At the same time asking a specific question here or there will create the new, up to date answer, and with reddit not being SO nobody will delete and close your question, at worst no one will answer. Plus sometimes you dont know what to look for or how to ask question. And id rather have that instead of 'duplicate, closed'.
I only ask on here if I don't know what the solution to my problem is called or I just can't word it correctly for google.
I firmly believe 80% of learning how to program is learning how to use Google.
Well tbh you have to learn how to search (and please try using something else like duckduckgo)
I would say on any given day, I read tracebacks and error logs pretty much the majority of the time I do any coding.

The first few times, they're downright terrifying. A big wall of messy text that, as a beginner, shows just how little you know and understand about the technology you're using.

I'd say I'm only now starting to feel comfortable reading error logs in full and not just scanning right to the end in the hopes that the answer to my problem is just sitting there.

So I can really understand if you're using a package that it can be overwhelming.
Problem is at beginners have no clue what to search most of the time
> If u r beginner and find yourself pinned and u can't figure out the problem please do ask questions.

Yes. Answers aside, not asking questions also means missing the opportunity to learn to ask better questions.
I'm still a pretty beginner programmer, and I find that along with Google and SO, Youtube is a great resource when googling comes up short. Also reading documentation is pretty dry so a video tutorial with speech and visuals is a good alternate form of teaching.
Have you try stackoverflow, Instead of Google? They usually are straightforward. Just my 2 cents
I've been downvoted severely in the past for supporting someone else who was getting downvoted for pointing out how easy it was to google the very basic question OP had asked, kind of shocked me to see on this subreddit.

I'll never understand how people have the ability to navigate to this subreddit without being capable of googling basic things.
I‚Äôve come to learn that duck duck go as a search engine gives me much much MUCH better results to my problems. Google always leaves out the sites that actually give me an answer
So True! There is only so much you can try to figure out on your own. Eventually, you should know how much time you can spend on picking your brain and stretching it until you seek help on google or other references. Thank you for highlighting this!
The correct way to do it is "here's what I've got, and here's what I googled". And then in the meanwhile keep looking. 

If all you do is "Reddit, how to play sound with python?", of course people are going to tell you 'go google it'.


But if you show like 


"Google said to use playSound. Here's what I have so far.

import playSound

playSound(MyMusicFile.rar)"


Then we can help out and give hints like "you can't just use a module like a function.  You're feeding a variable name in instead of a file.  .rat is not a music file"

I mean, yeah, the person should Google to see why it says "playSound not a function", but a new user might not know that it's not a playSound error, but rather, a function lookup error because they didn't do "playSound.playSound"
I think asking google the right question and wording it properly is a really good skill to have.
On the other hand, some people might search for solutions too much (thinking about myself a little). It's also good to use your brain and see if you can simply solve it yourself using logic instead of just running to Google for an answer,  almost like how beginners will run to ask someone else before Googling.
Use google dorks:  
Eg:  
`google api upload site:stackoverflow.com`  

`google api upload "v2" site:github.com`

And if you know the answer to your problem partially search with the answer and not the question, that way you get more relevant search results.
At some point, you don‚Äôt even know what to search for, or how to frame your question. Realizing I knew how to frame a problem so that I could search for other people‚Äôs solutions was a big marker along the way for me.
As a beginner, googling and reading dozens of stackexchange threads is often not terribly helpful when I don‚Äôt even have the language to search. I‚Äôll spend an hour googling a problem only to find I‚Äôve been looking for the entirely wrong solutions when I ask a question, because I used one or two wrong words.
Google isn't always helpful neither is stackexchange
I google a lot. I guess my issue is that there are years and years of outdated resources for beginner problems which gets really confusing.

Also, there's almost nothing on how to develop the project that made me want to get into programming in the first place. I've searched my ass off for help and it's all either a completely different thing using a similar name or project repositories that were abandoned years ago.
This is completely correct. I can't tell you the amount of times a friend has asked me a question I couldn't answer myself, but a simple google search made it clear what the problem was.
This was 100% me. The problem with me was that I used to rage at my code if it didn't work after a few tweaks and would straight up start doubting my logical thinking and skills etc.

I didn't ask or google, not because of my pride, infact I was afraid of losing my sense of accomplishment and was just expecting too much too early from myself.

If anyone has the same problem I had, no you don't lose your sense of achievement infact you feel better as you've learned a new way of solving a problem that will surely help you in your future projects.
This is very true. I started studying python as a hobby during the pandemic. An online course in NumPy and pandas was riddled with many negative reviews because according to them, the teacher does not teach any of the concepts in the assignment. But he clearly stated that StackOverflow are good sites to look for answers.

While it is true that the learning curve for these modules is too high for newbies to overcome, I learned (it the hard way, of course) that a simple Google search will come in handy, especially when you do not know the next step. Chances are the questions you seek are already answered by others.
Hi, thank you, OP for this post. I'm asking my first ever question on this sub. I'm a beginner to python and data structures in general. My question is regarding the implementation of the graph adjacency list using linked lists in python! Basically, I was working on the code from geeks for geeks on adjacency lists:

""" A Python program to demonstrate the adjacency list representation of the graph """

    # A class to represent the adjacency list of the node

`class AdjNode:`

  `def init(self, data):`

`self.vertex = data`

`self.next = None`

    # A class to represent a graph. A graph is the list of the adjacency lists. Size of the array will be the no. of the vertices "V"

`class Graph:`

  `def init(self, vertices):`

`self.V = vertices`

`self.graph = [None] * self.V`

    # Function to add an edge in an undirected graph 

`def add_edge(self, src, dest): # Adding the node to the source node`

  `node = AdjNode(dest)`

  `node.next = self.graph[src] #Please explain`

  `self.graph[src] = node #Please explain`

\# Adding the source node to the destination as it is the undirected graph

  `node = AdjNode(src)`

  `node.next = self.graph[dest]`

  `self.graph[dest] = node`

In this code, I'm not able to wrap my head around the add\_edge method. I don't understand the lines that I've commented with "Please Explain". I know the comments in the code itself should suffice to understand the code but I'm sorry I couldn't understand. I researched on stack overflow, google, etc. There were answers available, but all were either too generic or not at all easy to understand. Experts, can you please help me understand what are those two lines of code doing? P.S - Sorry about the formatting and grammar. [Link to the program](https://www.google.com/amp/s/www.geeksforgeeks.org/graph-and-its-representations/amp/):
Guilty
I don't want to use google to much tough. If I am doing some exercises, I want to do it by myself to actually learn something. I will use the docs of packages I am using. But if I google the problem itself I most likely just find the solution and I learn less.
Something I've been saying for a long time. I was formally and IT guy, and now I've moved to programming. Is that the IT guy at a company is usually just the person who is best at getting results from google, and I find now that translates quite well to programming where the best programmer is usually the person who is best at google.
Maybe because I dont know what to ask?
Same opinion but also for the standard docs and reall python tutorials.
Python needs a powershell type ‚Äúget-help get-example‚Äù command. It‚Äôs great, is there anything like this in python?
Yeah but googling how to spell beginners is too hard for some people as well apparently
I actually got a banned from asking stack exchange questions because my Qs weren‚Äôt good enough. This is actually a blessing in disguise IMO. 

First, it has weened me off trying to take shortcuts when I run into problems of simply asking someone else and failing to do the underlying learning needed to solve a problem. 

Second, it will force me to fix my current questions to get unbanned which means I will need to put a lot of work into thinking hard about expanding the value of my questions for others and this will necessitate thinking hard about coding problems. A great learning opportunity.

Third, it has made me search for other ways to solve problems through breaking down code, reading up, slowly rebuilding and testing and reading more. I may spend a week stuck on one problem but that‚Äôs actually not bad, it‚Äôs progress. It may just be a week of reading and watching but it is contextualised and relevant and that is where powerful learning happens.

Ironically, getting banned from stack exchange has taught me more than having access every did. 

So thank you Stack Exchange for teaching me to code.
Beginners lack the ability to understand the problem in a way that they can make a good Google search. Being able to make a good search is a skill in itself. If you understand enough to make a good search, you will just do that, if you don't you post on /r/learnpython.
facts. They also don't bother searching r/learnpython to see if a similar post was answered 2 days ago.
9+ years experience of Python here. I just looked up how to save list to text file last night.
The issue is that the answers are bad because they just instruct rather than teach people to be better programmers (this is true for any area of study). If someone asks how something like importing a function from module works, show them what search term you would use and how you come to that decision. If you just say "from x import y", then that doesn't teach independence at all.
The hard part about being new to something is that it can be hard to know what you're looking for. You may even stumble upon the right search terms and even the right result and not know it.

When answering a beginner, I like to also include the "magic words". The name for the thing they are trying to find but don't know what it's called.
Begginer don't do it cuz they think seniors don't do it either and for them google makes you week and not fucking strong.
I can't tell you how many times I have googled only to get syntax errors because the example code uses deprecated functions or requires 19 other packages.
In our interview process, if the "interviewee" doesn't say they rely on Google (and stackoverflow), we usually don't call them back. You're not a computer, we don't expect you to know *everything*. I've 35 years of development, and I still will look up how to initialize an array.
I work in IT and I feel that this statement is wrong. The field I currently work in is customer facing IT.  Most of the things I troubleshoot are a Google search a way. 

Do I admit that beginners should utilize google more? Yes! 

But most new programmers don't know HOW to google. Especially those without any type of IT background. Imagine the learning curve, when you don't have experience in troubleshooting from a day job, and then you attempt to learn google and programming. 

People who come from a technical background start further along this path than those that don't. Those without an IT background are also more easily susceptible to just buying a course and being stuck in tutorial hell.
Now i'm in a same state of not well enough to frame a question, googling stuff and finding correct answer to my problem. How to overcome this..? Any tips/suggestions.
Ok yeah I have to push back on this.  Google search has NEVER had the answer to problems that I‚Äôve encountered.  It‚Äôs always been other colleagues that have helped me solve them.  Now that could be because I am doing more scripting than programming, but regardless Google has been as useless as a politician!
I don't mean to attack you man, but that is very presumptuous of you, and it sounds like you're not able to understand what it is to be a beginner.

It's not enough to Google, when you can't understand the effing jargon, yeah?

Too much documentation has jargon written all over it, no simple English, no examples of what you can actually do with this code, no context. Just the names of code and jargon to go with it.

Sorry, I know I sound  like I'm just ranting, but I needed to get this off my chest. You Python people, you're all the bloody same! You just ASSUME your jargon makes sense, *"yep no problem. No context, no examples, no simple English explanations, this will be PERFECT as it is!"*

Change my mind. This is the very reason I'm taking a pause from Python, because it's not "simple". What kind of effing idiot says it's simple? Compared to other languages? Maybe, but simple for beginners?

Anyway, rant over, I just thought some of you could actually see what it's like from a beginners perspective, rather than your own Python bubble.
As a beginner, I wasn't able to google things for the simple reason that I didn't know which key words to use.
Even people who program as a job Google constantly. With such a broad amount of tasks it is natural that we are always learning and searching for help.
I think beginners use Google search more and once they become habitual and start memorizing syntax, they write code themselves since it also saves times.

[Datasmartness](https://datasmartness.com)
I google search a *lot*, but I run into 2 major problems.

1. The answers aren't understandable. I just can't read through the code some people post and get it, or understand any part of their answer. Often I have to just sort of guess or try to pick out useable info. It only works sometimes.

2. I don't really know what/how to google. I have a more experienced friend who helps me sometime, and once I asked him something I didn't know how to do (and had failed to google). He didn't know either, but found it on google in 10 seconds. I just don't know the right terms to search for.
Phew. That's a relief. I'm glad I'm not the only wallflower. Still. That's my problem.
More importantly beginners don't read the documentation enough.
i'd post that on r/programming too as it will be viewed by more people and not only python beginners.
Dude half the shit on reddit could be Googled and researched in under 30 minutes. People are just fucking lazy and want other to do the work for them.
by the title it sounds like you would say something about google, but your point was just about asking stuff, lol.

anyway, this struggle is a very natural part of learning. It helps learning in so many ways that I don't even know if that's something wrong about it.
What this post illustrated is that sometime people want to communicate with people and not just bang on a issue. People more than likely but about issues for the same reason you post this. To get alternate opinions and to talk through an issue.
Asking for help through a search engine is very easy now. Just copy the entire error message line and paste it into the search engine's query string. The Google's AI usually does a pretty good job of figuring out a good response, If not, it can help to add some context keywords at the start. E.g. add Python3 if you are getting info for python2 or for another language.

Often understanding what an error message means, and why it is generated will point you in the right direction. If you get links to the Python documentation, definitely read them!
Yeah people get frustrated when someone that‚Äôs new to a concept don‚Äôt ask questions or write shit down. What they don‚Äôt realize is that knowledge need some type of context. You actually formulate more questions the more you know about a given subject, paradoxically
I can‚Äôt stress to you how much I HATE ‚Äúfoo-bar‚Äù examples. Why is it so hard to contextualize in either ‚Äúhello-world‚Äù or ‚Äú1+1=2‚Äù to illustrate the flow of any given function. ‚ÄúFoo-bar‚Äù means nothing and all it does is just confuse. 

And man aren‚Äôt you on the money with fucking medium articles. They‚Äôre all I ever stumble upon and I swear not one has ever helped.
Most documentations suck for sure.
totally this 90% of it is knowing what words to form your question, once you're in the throws the way you would ask a question in plain language vs technical terms makes a huge difference.

&#x200B;

When I learned SQL, this was a huge barrier I was thinking I'm the first running into the problem. Then I learned how to ask and google would back hand me with, "you fool here are 100000000 ways to solve this, you idiot and you forgot your comma."
Google, once a beloved source of answers, is becoming hijacked by irrelevant shiny content without any substance. There are websites which invest more in SEO than in content, and thus appear first in the results...
Just to add - googling and knowing how and when to read documentation, these are learned skills. The memes about googling all the time are true, but as others have said, it is something that takes practice. The more often you google and check documentation, the better you get at solving unexpected snags and errors from a library, and you develop an intuition about whether an error message going to be solved by google or if it's not the right kind of error and you have to read documentation and retrace your code, etc. There's no real rules here that'll guarantee anything; it's something you just have to get a feel for by experience.

Pro-tip: Use Google and stay logged in. Privacy and stuff aside, when their algorithms learn you are looking for programming questions they will give you better results. This is especially stark for the Rust language, for example, which is also the name of a video game. It is nice how Google search learns to filter the game from your searches (or at least, they are further down the results). "Rust raid array join docs" means the programming language, not "how to join a raid in the Rust video game". 

Other pro-tip: Medium articles are often by people who are copying existing tutorials, to pump out content and make a 'portfolio' or online presence. There are alternative ways to search for example code, like github gists and existing projects that use (and sample projects from) the same libraries. They are much better quality. Though they might seem at first to be less approachable, they are really great once you get a feel for navigating and using them.
Formulating an accurate search phrase is essential.

Speaking in more general programming terms (PHP, Swift, Vue, Node and so on) I've found that Medium does tend to wash out more reliable results, not to mention those sat behind a paywall.
>The biggest problem is the ability to actually formulate the problem as a search.

This, but depends how you look at it. I feel the bigger problem is with a proper learning/coding habit, and not because someone doesn't know the syntax. Coding is solving problems, syntax is secondary. This just translates into not properly trying to formulate the problem because you aren't breaking it down and you are doing too much at once.

A lot of people strive to find a solution but not understanding the problem. And the fact is, if you don't understand the problem you can't find a solution.

Personally, I find when I create a post when I'm stuck, a lot of times I find the solution myself fairly fast afterwards because creating a post pushes me to break down the problem better.
I agree with you 100% most of the time if they(beginners) knew what to call the actions they are trying to learn they would be just fine with google. I tell the kids I teach that " 90% of life is a vocabulary problem" if you know the lingo you can find the answers yourself
> I can only speak for myself but i think most documentations have too little examples to complement the explanations, so i get increasingly frustrated reading them. I learn better if i see a few ways to implement the specific method/feature.

This is me. Learning python to try to develop a display/interface for my custom ebike motor controller.

All the elements i need are working, but they're all rather procedural, and now I have hundreds of lines of code that can do either A, or B, or C, but not simultaneously. After a few ***days*** of hair pulling, a one-liner from this subreddit led me to realize I need asyncio and probably threading to do what I want. But finding relevant examples has been really hard! There's a lot to consider and the advanced topics like asyncio and threading are not described with beginners like me in mind.
>  I learn better if i 

Let me go ahead and stop you there. What you say may be true, but it's not strictly relevant. Documentation is not intended to be a tutorial. Writing documentation is a pain in the ass as it is, and too few developers write decent documentation at all. 

You cannot expect developers to include examples of every corner case because that's how you prefer to ingest the information. 

You would *actually* learn better if the documentation told you how the code is implemented and then you experimented with it until you figured out how it works for your problem. 

There are many valid points of discussion in this thread. But too often, these conversations do not emphasize the necessity for beginner and intermediate developers to learn to synthesize information. 

Examples are always good. More is always better. But you don't often get more. Which means you have to read the documentation that's provided and make sure you understand how the example is using the code and how you have to change it to match your use case. 

So, yes, I agree that the biggest problem is being able to correctly search for the information you want. 

But a very close second is the problem of reading multiple sources, including official documentation if it exists, and permuting that until you get your problem sorted out. 

There are so many examples of so many things out there, that beginners become irrationally annoyed when someone hasn't already solved their specific problem for them. This isn't learning.
Being told to ‚Äòjust google‚Äô something is like being handed a dictionary when you ask how to spell a word.

People stagnate on problems when they don‚Äôt know how to find the solution themselves and have felt discouraged from asking questions in the past. More often than not, that‚Äôs our fault, not theirs.
I actually feel like Google is getting worse lately. There are so many content farms stealing from one another, the same poorly written half a tutorial addressing the question you‚Äôre looking to answer. I was looking for something recently and the first two pages of search results, no joke, were filled with the same article with different page layout. And the article didn‚Äôt answer my question.

I can‚Äôt say for sure if google has changed the algorithm to depress stackoverflow results in favor of ‚Äòblog‚Äô pages, but it seems like it to me. And stackoverflow is almost always more relevant and more succinct than these content farms.
beautifulsoup has one of the easiest docs to read and understand
I can't see anyone mentioning this, but google is horrible (useless even) when searching for special symbols that you find often in different languages. Sucks specially if you don't even know the name of the role of the symbol.
mhm I second that
I'm a begginer myself but I found that going to the documentation first when I have a problem has been really helpful. Alot of the time I will end up having to search for SO answers etc. But the process of looking through documentation has really helped me develop my understanding even if it doesn't always get me all the way to the answer
This. But to Op‚Äôs point beginners also rely on video tutorials or forums too often when they can get a basic understanding by simply reading the docs.
>The biggest problem is the ability to actually formulate the problem as a search. The specific syntax isnt known well to beginners.

I've taken the exact sentence they used in questions here and plugged it into Google or duckduckgo and get several excellent hits in the top ten search results. Almost every time. And, the top comment is pretty close to one of these top ten search results. Almost every time.
I agree. Sometimes it's so difficult for me to even formulate what it is that I am trying to do in a way that I can search it. I constantly find myself reading about topics that may be of use to me in the future, but that are not relevant to the problem I am trying to solve.
> most documentations have too little examples to complement the explanations

Yes, this! Usually all I want is an example or two, it's just much more meaningful to me!
Beautiful Soup, while a very thorough in documentation, is a complete eyesore to parse through. I almost want to scrape that website to get better information.
I've seen some documentation where even after I've used the library for quite a bit, I still can't understand what it's saying
Pandas docs is pretty good
I don't understand why examples always use variable names so similar to what they are trying to explain.  Such as a string called "String" or a class called "Class"
Couldn't agree with you more. I'm a beginner and it's natural for me resort to Google, BUT how I type my problem in the search will depend on my result. It took me a solid 1.5 hours to find how to get several months from a time column and not before converting it to datatime object. There's still a ton of material out there online and offline that doesn't teach you how to ask a question for solving a problem while working with python.
I still use the old Google method: general, specific, extra specific.

Examples:    
Python loop for

Powershell user disable
perfectly put this is the exact issue I have with all programming languages I code in and i've never coded before it almost seems as though people forget they have to learn what (for example) liniar interpolation is
Oh yes. I just started my python class and I have to do an escape sequence. I‚Äôm super new so idk if I‚Äôll say with right but I have to add an apostrophe to a string and print it. However I cannot get it to work and all the examples do not have a string they just have the actual saying. 

So like 
Blah = name
And I need it to be 
Blah‚Äôs done 
Something like that idk it‚Äôs fun when I get them right but sucks when I‚Äôm stuck forever.
I find myself with the exact same predicament. I'm unable to articulate the code and ask the proper questions
Right, you'll see questions about why a line is being skipped in their program.

It's not.  It's doing exactly what you asked, but your expectations don't match with the language.

Anyone with experience would step through with a debugger.  Beginners don't even know what a debugger is.

We've all seen these questions, they end up being something like

    if answer != "X" or ‚Äùx":

Or

    if answer != ‚Äùans1" or answer != "ans2":

Both of which boil down to

    if True:
I was gonna say the same thing, as a beginner you just may not know what to actually search for or how to phrase it
Sounds quite wise and real !
One of the best things I learned in school when I was learning to code was what they called the 20 minute rule. Basically for any specific problem that acts as a road block if it takes you more than 20 minutes to actually make progress you go and ask for someone else's input. It's saved me hours and hours of going down the rabbit hole.
True, it helps to have someone around your level of experience in the field because it helps both. Both can relate to the struggle and will be able to help each other out when stuck.
Good point. It actually often raised on this thread. In that case u always have the community like this one to help.
Sometimes when I'm feeling snarky I'll send someone a lmgtfy link.
I totally agree however most of the time googling stuff is all u need. U don't always get to be helped by professional and Google is usually the best next thing.
I feel ur pain man. 
As I mentioned I too had this issue when I was starting out. This post is all about bringing attention off all beginners to idea that u don't have to know everything right away but can learn and adapt gradually.
Hah that is so cool.
Yeah I've found SO to be borderline unusable as someone who is asking questions. My first account actually got banned when I was first learning to program because I got downvoted enough that my question privileges got revoked and I could only get them back by answering questions. But then I had the issue of that I was learning and couldn't answer those questions. Sites like SO make it really hard for people who are just getting started.
[deleted]
Cannot agree more
Me personally yes, in combination with Google. 
Use Google search to find stackoverflow threads üòÖ
I mean i used this subreddit I'm the past as well. This page has great community and support. 
Imo somebody has already raised question it means he needs help and is counting on this community. For me telling him that he can just Google stuff is a borderline for poor taste and poor manners. Again, just imo.
Sometimes people don‚Äôt know how to search for things.. or what they see if confusing
Totally agree point is to know when to stop and ask for help when stuck.
That's exactly why you need to keep doing it. Knowing *what* to google is an essential skill and it takes time to practice but it's worth it.
Usually if Google/SO aren't answering your question either it is extremely specific or not worded right
No sarcasm is needed haha.
I was a complete begginer without any previous experience of programming. It is not so much about about if u read documentation more so if u find answers to what you look for. Yt tutorials are great when u start and stackoverflow is a great site as well.
Recommend splitting ur problem in to tiny pieces and googling those tiny problems.
If more advanced maybe try googling object type ur working with.
As a beginner self learning, I'm not sure how to read a lot of the documentation. 

I keep trying and every so often a couple of things click and I've learned a new thing and that sometimes means I can understand a tiny bit more of the documentation. 

But progress is slow and frustrating.
that sub is rather for news I think, just like r/python
[removed]
I'm a beginner and ask lots of questions.. I use python as a hobby. If I'm lazy I wouldn't even begin to learn python. Rude guy
[deleted]
this is why most examples of how classes and class inheritance work are bad. No sane programmer would see it necessary to learn how to make classes if they only had the examples shown in beginner guides
It depends which part of the docs you read and for what purpose.

Generally, documentation is meant as reference, for things you already know, but don't remember. And this is the origin of the meme about gurus being gurus not because they know a lot, but rather because they know where to look for what they want to remember.

Specific parts of documentation, like tutorials, getting started, cookbooks, howtos are much better suited for learning new stuff.
That is totally right with few exceptions like pandas documentation or some other truly big modules. I found that it so much faster to know stuff just googling for tutorial on yt that reading documentations
Thats also almost always true to a codebase which has been maintained by multiple people for 20 years.
Am wondering how you managed to overcome the barrier internally. Like how did you move from the obscure language of python to plain simple English?

Also are there any books that touch on this? I don't know how to create an internal monologue within to understand the code
And pinterest... fuck pinterest.
Yes you are correct, but often in order to understand the underlying problem is to know the interactions of several components, which is hard to formulate. Im guilty of sometimes only wanting the outcome of two interactions but caring less about the underlying logic, but i think this is because i learned a higher language as my first language.

I think we are trying to describe the same thing.
I think you're misunderstanding - as someone new to coding, I quite often goto google to look for things. 

The problem isn't syntax, it's knowing what something's called or what specific subset of something you need in order to get google to spit out the info you need.
> Personally, I find when I create a post when I'm stuck, a lot of times I find the solution myself fairly fast afterwards because creating a post pushes me to break down the problem better.

Can you give some examples of that? Because that just seems like you already have a decent amount of background knowledge and aren't just beginning. 

> And the fact is, if you don't understand the problem you can't find a solution.

That's not really a fact, just recently I needed to copy a file to the Java folder of code for Spark to authentication to work. I have no clue why or how the solution worked. But it worked.
I agree with everything you wrote, and the 'docs, experiment, Google, stackexchange, YouTube then back to experiment is the whole programming experience.

Its just not what i pictured at all when i started.
Yes, but if you dont know which exact terms and what kind of problem (by definition) its Hard to find the answer.
Thank you.

I understand where you come from, sometimes even I've wondered: "surely they could easily google that?"

I'll always refer back to this community when in need, but I do think there's something "missing" from the Python community, i.e. a massive repo of small code snippets for implementing x. I.e. loops, counters, implementations of functions and so forth. StackExchange is nice, but usually the top results are "high-level" explanations for why things work or won't work, but that explanation doesn't always seem immediately useful to a beginner (who lack the ability to translate their code based upon holistic explanations). Part of learning sometimes involves "using it before you understand it". 

Someone else mentioned it in this thread, but there really aren't enough examples of code out there to refer to. I would enjoy being able to look through (for example) *hundreds* of varied implementations of loops for different data structures, data types, and i.e. type conversion within the loops. Not all code examples are immediately identifiable as similar to my code which can cause some confusion.
From your mouth to God's ears.   I know I'll get there....some day!   :)
Its a combination of the 2. I've noticed alot of people beginning search very differently from more advanced people because they don't know what terms to use. And as a result of this they get frustrated and ask others.
I think if OP shows no effort of solving it themselves, and copy and pasting their title into Google results in the first result being a clear answer to the question, then replying with a lmgtfy link is more than fair.

Also, it's literally a sub rule.
But when copying and pasting the title they post on Reddit into Google gives the first result as being a crystal clear answer, then that's just ridiculous. If they posted saying "I read such and such article/documentation but didn't understand this part" then I'd be happy to help, but otherwise they're just violating the subreddit rules and being ridiculously lazy.
Also it teaches you how to see if the site is going to have the correct answer.
Very true initially when I started I couldn't read the documentation cause I didn't know what I was looking for.

After awhile I mastered how to Google them then now reading the documentation i know exactly what to look for. Believe me it took awhile but you get used to it after you actually read the documentation. Previously when I watch tutorials on YouTube and copied code I would never actually do this.
I've been programming for about a year now and I've been working as a developer for Walmart for a couple months and honestly I still don't get much out of documentation other than maybe method parameters honestly I'm not sure if the documentation ever becomes more readable it might just be that some people have the head for documentation. I need examples.
[removed]
This is not new. Before the web we used to notice an increase in trivial questions in the newsgroups in September when students suddenly had access to computers. Then came the eternal September as more people had home computers.
Maybe folks are not learning to use a library, how to read a book, how to properly ask for help.
Most answers won't fit in a tweet. Neither should a question.
I use duckduckgo but Google Search is better. When I'm trying to find a solution for a python problem I add !google in search bar
I'm forcing myself to use classes because, I kid you not, I think they're important to people who use them. Beyond that I am yet to figure out how they're practically useful. All my personal projects are one massive function divvied up into several tiny little functions.
Yeah sure, for starting fast is ks always easier to find a tutorial, but to understand the librabry and to be able to figure things on your own, the docs are always best.

Also consider creating expanding de documents your delf if you find something is not clear, the creators have their heads so in their projects that they have a hard time figuring out ehat details are needed in the docs.
I think the other guy got it pretty clear but me saying it again won't hurt.


You're going to google something in plain English and might get close enough to get an answer but read over the words used. 

You might ask how do I change numbers into words?

You'll see different words used in the answer you find and incorporate those into you new question and ask, how do I change integers into strings? Then you'll get much better answers.

You're not going to get that over night, and that's where a place like r/learnpython will close the language gap and interpret your question. 



Look through my post history, last week I asked about power automate one guy didn't give me the answer but have me a better idea regarding my Google question.

I think stack has a lot of dick heads who will always ask did you Google your question but they don't read the question them selves to realize this person has no clue what to google.

You have to be able to speak the language before you can ask questions in it, if you're not there don't worry you'll get there the more you learn.

FYI Technical terms and abbreviations help close that gap.
It happens over time with practice and reading. Eventually you see a word enough places and you decide to look it up, watch a video on the topic, etc... Its like learning a language, the fastest way to learn is through  total immersion. 
You read and watch enough, vocabulary becomes less intimidating and more understandable. Don't be afraid to go down rabbit holes looking words or phrases up on an explanation. You probably won't remember a lot but at least next time you see the word, you have a basic gist, and you can look it up again if you want.
You can block certain websites from appearing first in search results using Bing. Bing originally used to show me 3 or 4 ads before reaching any kind of search results till I started blocking them.
> The problem isn't syntax 

Yes, that was what I was trying to convey. Of course there are different kind of problems. But understanding the problem let's you ask the right questions to come to the solution, whether that's doing it yourself or using google.  I wasn't trying to imply I just solve all problems by myself, I use google plenty as I think trying to reinvent the wheel and tackle every problem yourself is probably a waste of time, depending on what your scope is. But its when google fails and I break the problem down even more that I can find a solution myself by asking the right questions.
>Can you give some examples of that? Because that just seems like you already have a decent amount of background knowledge and aren't just beginning.

I guess that's probably true, not really have examples at the top of my head. But what I was trying to convey is mostly that breaking down a problem can lead you to the solution, regardless of you finding it yourself or trough google or even trough asking the proper question. Just understanding the problem is the important part and doesn't necessarily imply you know how to solve it if you understand the problem. The comment I replied to mainly linked not being able to ask the right questions was because someone doesn't know the proper syntax, which isn't the case from my experience. 

  

> That's not really a fact, just recently I needed to copy a file to the Java folder of code for Spark to authentication to work. I have no clue why or how the solution worked. But it worked. 

There are outlier, of course. I also think understanding the solution can sometimes be separate from understanding the problem.
> I've taken the exact sentence they used in questions here and plugged it into Google or duckduckgo and get several excellent hits in the top ten search
I feel ur pain man
Oh for sure, but I remember looking stuff up when I was starting and I was so confused.  I am guessing it‚Äôs sometimes a problem for people who are completely new programmers
[removed]
Classes encapsulate both state and functionality associated by that state. Anything you can accomplish with classes can be accomplished without them as well, but sometimes it's neater to use classes to solve a problem.

The issue with how classes are taught is that they focus on real world objects rather than computer concepts. As an example of something that functions well as a class is a representation of a connection with something. An instance of the object is a connection to a discrete endpoint of some sort, and it's methods send(), receive(), close(), and status() are ways to get information too and from that endpoint as well as managing the state. Accomplishing this without a class is completely possible, but that means you have to maintain all the information about the state in the namespace of the program while using a class will keep that information internally in the object. In addition, having more than one connection means having to duplicate the state management over more variables, while with a class you just instantiate another object.

Classes have their place and they simplify a lot of things for you by abstracting things away, but they can also be very messy if you apply them to the wrong problem.
I try to use classes whenever possible to internalise the idea. But unless these guides wait for a bit before introducing OOP, and then make sure they show why using classes is better in a given case than an alternative, it won't help people learn.
Yes, but then I'd have to use bing...
Ah, I misread earlier. I somehow read your post as it being that people don't know proper syntax so they struggle to implement what they find on google.

No idea how. I think my brain may have gone on holiday for a bit there.
>The issue with how classes are taught is that they focus on real world objects rather than computer concepts. 

Exactly! Give me some examples of using classes to encapsulate blocks of code for Input or output or GUI operations not some made up a Car is a class and cars have attributes. I get that. What is not clear is how to apply that concept of a class in the context of moving data around for use in different parts of your application. Most of the tutorials I find are so simplified that they are meaningless once you get beyond a single frame or window and a single input or output. I need to see alternative ways to use classes in complex situations and I don't know how to search for them to find examples in existing code.
This was sensible.
but you'd get microsoft rewards
Inspiring read. This motivates me to keep learning.
go to your boss soon and ask for a raise and a chance to apply python, after making an impression is a great time!
Great job. Need more of this! I‚Äôm a newbie and Need more examples of how python can make things easier and amazing!
This is awesome.
Code (company data replaced by random values). Obviously it is dependent on all excel files being identical in layout.

Reddit code becomes a mess so here it is on pastebin

https://pastebin.com/8Vg85WBG
I work with a bunch of older developers. They're very talented and know what they're talking about but for some reason they only work with Microsoft products. Asp.net, ISS, windows, powerscripts, etc. I wish I could get them to recognize the power of python. Even now when Microsoft allows python to be used for data import scripts in power BI they would still rather use a power shell script to import the data into a sql server then make a view of the data for use in power BI. It's very frustrating.

Kudos for winning a victory for Python!

PS: you should check out power BI. It's... powerful
Happy for you and it's an inspiration for me to keep going forward. Hope one day I'll do something to make  my manager give me better appraisal. :)
Great story! Please share your solution when possible, I am sure others are interested.
Next up: Pandas. After that, they'll want a web app, so django or flask. But excel won't do for that, so a database. SQLite3, to start. But that won't scale well, so they'll want to implement a postgres database. But man! It's so hard to develop with some rando postgres database on my machine, so let's use docker and docker-compose. Way better! But now it's looking like a product, may as well put it up on the company's AWS account. So you start up an EC2 server behind a load balancer that is deployed all by hand. OMG that's such a pain, though, so you decide to learn Jenkins and github actions. Now people are seeing the web app and they want more features ... right now! So your company sends you to an AWS developers class and/or an AWS architects class and you learn about api gateway, lambda, fargate, eks, etc. You decide to use the CDK to develop a serverless application using Lambda because it'll be so cheap. But while you're researching that you found AWS Amplify and AWS Appsync and you decide to go for it. You set up a basic React single page app with Cognito authentication and AppSync GraphQL backend in 10 minutes. This is all supported by dynamodb. It's not the cheapest option, but it's still basically free given your limited number of users. Now you are in the position of being able to write schema and have AppSync automatically create the resolvers.

Congrats, you're a full stack developer. Don't forget the tests!
I work predominantly with Excel files at my job and encounter something similar.

VBA is good if you want to do things *with* Excel. I'm tempted to say ‚Äúgreat‚Äù and I got where I am now through VBA, but... no. It's not that great of a language anymore. But it's still very adequate for Excel automation (I just feel like washing my hands after writing some code).

Python is great if you want to do things with Excel *data*. This is a very good example of it.
YES! This is the best use of Python imo. I had a similar story with Python in my workplace. It started simply with some data extraction from a service we frequently used.  Now in that office Python is used as the primary way of building real-time data operations (Its a contact center so Python is feeding real-time BI displays)  


Keep chugging along! Python is a great way to automate any type of repetitive work.
Did you use for loop perhaps? I learned something like the rest of what you said in my R class in business school, but I have the Automating the Boring Stuff with Python book and online class in Udemy and would most definitely like to learn all this in Python!
I'm one of two Python users in my org. The others use SQL (which I also use sometimes) and VBA (which I avoid at all costs). I got the VBA people to admit that openpyxl and xlsxwriter are more useful than VBA for most of our applications.
> This opens up the option to efficiently extract tons of data in old excel files and get them into our SQL database.

Now THAT is a fantastic win.

Excel is a data representation tool. It is _not_ a data storage and hardening tool -- that's an RDBMS. Moving data storage into some kind of real SQL-based solution (postgres, hell sqllite is way better than excel at this) is a great initiative and python could be excellent for that. Hook up the data store over ODBC and you can keep using your fancy charts and graphs.
I‚Äòm curious how it works to automatically make a e.g.  a histogram out of a .csv file. Is it done by matplotlib? Any suggestions where I can look it up?
###PREACH!!!  [üôå](https://emojipedia.org/person-raising-both-hands-in-celebration/)
Any shot you could share the code you used? Seems useful
Awesome! What about the password protected excel? Can you overpass them with Python or something?
Heck yeah man! I just created a program to automate my reports. Have to get item specs to format reports off of and the only way is to look up the item to pull info from our website. Shit took way too long and frustrated me enough to learn how to solve this in Python.


Boy did I hit a lot of road blocks and learned a bunch.
Real world application is what everyone in this sub should be aspiring for, I think this contributes lots!
Congrats! 

I did something similar and took it a step further by building a web application that takes user input to manage the scripts. This allows anyone to use your code. I‚Äôd recommend Django or Flask. 

Good work though. Keep it going!
Nice job!!!!  Well done!
This is great. I have something similar for reconciliation purposes and I have no idea how to tackle it. This kinda gives me an idea so I know I just gotta keep going.
Great job!
Next step is using a proper database like postgres
I love it and and thank you for sharing. I'm trying to learn so I appreciate seeing what others do.

One thought - in one line you have:

`if not cell_val == None and cast_cell.year > 2000:`

As I read through your code the first time, it felt like double-negative. You're looking for where they are not equal, so would be smidge cleaner to do that straight in the comparison operator. Would it be cleaner like this:

`if cell_value != None and cast_cell.year > 2000:`

Not trying to criticize, but (A) help if that's a helpful suggestion, and (B) learn if there was a reason you put it just as you did. Thanks again for taking a moment to share.
That's so cool hope that you get a raise
It is gratifying when people suddenly see the value of something they've been writing off start coming up with ideas of their own. Nice work.
A very motivating post. I'm the same field and want to learn Python for some of the same reasons.

Now I'm wondering if we work for the same company!
You script doesn't show any password info being used?
This is amazing! I'm currently looking to put together a script that takes values from an excel spreadsheet and transfer those values into a SQL db, along with some basic logic thrown with some of the values. But I'm a complete beginner and dont know where to begin beyond a vague understanding that python is an option. 
*sigh
Great job. The definition of automating the boring stuff.
Vba makes me want to die
Good stuff man! And hopefully you just added a bunch of value to your name there.
Looking forward to seeing how you apply it towards microscopy! What sort of work do you do in geology? I‚Äôm in grad school now for geoscience and use python as much as I can for spectroscopy work and data analysis.
Good on you, man! I hope to make some tangible contributions like this soon
[deleted]
how long did it take you to learn and be able to script this python by yourself or to have enough level of confident to actually write the code
I am very happy for you!

It looks nice, when it comes to filenames I find it practical to use .endswith() to check last part of filename, like .xlsx or what ever you want. 

I think it is pretty nice to make methods to get a good structure. Even if you make it up on the spot it can feel nice for the mind to use methods so you have a nice list of what you do and can change details in each method in a practical way.
SQL isn't a programming language and VBA is one of the worst programming languages there is. Not trying to do the guy down - I'm sure he does a good job and has valuable knowledge to share - but if that's the extent of his programming knowledge I wouldn't worry too much about his opinions in that arena. Do what you know works. VBA isn't used anywhere but MS Office, whereas you'll struggle to find jobs that aren't amenable to a Pythonic solution. Until you get to low level stuff, and even then, Python often has some value.
/r/Excel needs to hear this :P
Any change you could drop a link to it? I would love to take a look and see how much i can understand.
Congrats! Being a programmer myself I know that feeling of creating something and watch people get amazed by it!

If the script you wrote is useful to a lot of people in your company then I would suggest learning Django or Flask and deploying the script on your company's network, This way everyone can use the script on their computers easily!
Export all these things to CSVs (on an encrypted drive partition, or on an air-gapped system, etc, if there are other security concerns) and then let python go ham on them. Generally way easier pulling out data than through excel sheets.
Do so. I am fully self-taught through the MITx 6.00.1x and 6.00.2x, Automate the Boring Stuff (Udemy + book) and this sub mainly.

A year ago at performance review my manager could not see the benefit of me spending time learning Python (but he couldn't prevent me from doing it on my own time obviously. So I did), now he is paying for e-learning and hopefully soon I can convince him to let me spend more time on it.
I thought so too!
[deleted]
If you haven't seen it, a good example of how python can make things amazing is flask. In 5 lines or less you can write a webserver.
It really is :D I am so hyped over this :'D
Thanks for this!
It's a common problem with older developers. They know what works and are really really quick and powerful when using the technologies they are familiar with. Which creates a big resistance to diving into new tech (they remember how long it took to get good at the tech they're currently using)

It's not that they don't recognise the power of Python the question is rather "is it worth it to spend time learning this new thing when the current tech works well". 

As for why they're all using Microsoft tech... Microsoft has always been extremely good at having HR trusted certificate courses, so knowing Microsoft tech is an extremely good way to open as many industry job opportunities as possible
I have actually played a bit with Power BI. It's pretty good for visualization but I somewhat dislike the way reports are created. I haven't spent much time on it though so it might just be lack of experience.
Will do. In my attempt to clean up the code I broke something so now I have to figure out how to fix it... Lol
Haha I don't think my career will end like that though. I am a geologist/chemical engineer by education and experience. I like programming and finding solutions, but we have a big IT and digitalization department that needs to do stuff like that. I would be the one demanding more features :D

I have played around with Pandas a bit, and am currently working with openCV, but I am happy making solutions for my department (15 people) and letting the hardcore IT guys do the bigger stuff :)
Yeah I fully understand what you mean. We have a LIMS system (Laboratory Informations Management System) to keep track of samples and some data. It is built on an SQL database. That system is having a lot of proprietary reporting features we do not use, instead we do a ton of calls to various excel templates for all our work. This includes a lot of VBA to talk to the db and with the LIMS system. It works but at times it is super clunky and slow.
I did use a couple of for loops. Code is edited into the OP if you want to have a look. Automate the Boring Stuff is great to get a quick feel for stuff like this.
nice! I think VBA can be ok for some things. Like I did my car gas mileage spreadsheet with some VBA to have a nice dashboard and a formula for inputting new data. Wouldn't bother building a python GUI for that. But as soon as we go to multiple excel files I am not sure I would want VBA as primary language.
That is a good point. We already have essential data in the SQL-db (I think it is an MSSQL but not sure to be honest - I don't usually work directly with it), but all intermediate data and calculations are often not transfered from the excel files. Which kinda makes sense for some data, but is often also just a matter of noone ever taking the time to implement it any further than the excel sheet used by our lab technicians.
Yeah matplotlib.pyplot.hist basically does it if you feed it a list of values. Obviously can be customized as infinitum then.
Sure. I've updated the original post with a link.
Apparently Python and openpyxl doesn't care about it at all. The password is just on workbook/worksheet level to avoid unintended edits, but a VBA code on open/save enforces the protected status. Apparently the data reader in excel itself respects this, but openpyxl doesn't. I honestly don't know the deeper reasons, I just found out it worked without issues. Keep in mind I am only reading, not editing the workbooks.
Awesome! I really need to work more on webscraping. I only just scratched the surface with Automate the Boring Stuff.
Thanks for the comment! I too am still trying to learn so any review of the code is helpful.

Yeah I am not always too consistent like that. I probably should be. I actually think I did have a != In there somewhere too for a while before I cleaned up the code.
Haha maybe! Our lab is pretty small though so would be a crazy coincidence :)
Nope. Turns out openpyxl complete bypassed the password. Mind you it is not a password on opening the excel file. That might be a different story. Only password on editing, which was enough to make the build-in power query dialog complain, which in turn was enough to make me say whatever and go do it in python.
Get your hands on automate the boring stuff. For something like this (and my example in OP) it is really good. I too were (and still consider myself to be) a beginner
I work in a lab for a provider to the mineral extraction industry. We do XRD, XRF, microscopy and various IR based methods along with wet chemistry and physical characterizations. We get lots of samples in from around the world. Yesterday I picked up and washed a few almost glass clear gypsum crystals from a sample we received from. Customer. It's a pretty great job if you can live without the field trips. My work is probably more chemical engineer than geologist these days though. I still have the geology part activated whenever we get unmarked samples though.

I hope to use it to automate phase recognition and quantification and in time maybe also have it determine various internal features. The minerals we look for are stained with an etching and it is often uneven in the coloration it gives which is a good example of a problem where human experience makes identification trivial, but it is hard to make a simple algorithm to deal with it. Eventually I may have to apply deep learning to the problem. So that is slowly what I am working towards with my studies.
I have looked a bit at Power BI. Not together with python though.my main concern with Power BI it seems well suited for finance, sales and business administration with KPIs waterfalls etc. I work mostly with t ok me independent chemical data and scatter plots are most efficient at telling the story for that. But scatter plots in Power BI does not really feel superior to other solutions.
Hard to say. I started a couple of years ago but have been studying on/off until about October where I decided to really push ahead on more courses. Could probably have done this after 3 months by lots of googling.

I have a background with some programming, using ASP and PHP 2 decades ago for websites and a course in Visual Basic 6.0 in highschool. So loops, if/else etc was not new concepts to me. I never had formal training in hi one to structure my code or workflow though. That is picked up by reading posts here to be honest.
Good point with .endswith(). Simpler than my solution.

I would probably do it differently if I were to rework the code. I just sort of did the import statements that I knew I needed and then winged it from there...
I think he has some background with other languages, but I am not sure which. He is the head manager of our laboratory data storage so his opinion matters quite a bit. He is usually also open to ideas though. And he is 65 and on part time. Last time it was discussed my manager thought it a waste of time for me to take over as my grad school education was better used on what I was hired to do, but if I can automate half of my standard assignmentse then obviously I will be more productive. Hopefully in a year or two that is where I am going to be.
Haha they are usually nice guys in there too, so probably wouldn't cause too much uproar.

There's a time for sleep, and a time for eating. Likewise there is a time for excel and a time for python ;)
I've updated the original post with a link. If you have any questions about it, just hit me up. I tried to comment it line by line, but will be happy to explain more if something isn't clear
Thanks! Yeah quite a few people suggested that. I might look into making a flask app and see if IT will allow me to run a server. We are a big international company and IT service out in India are not always too fond of things like this...
I would have preferred CSV's for sure. The sheets are automatically generated by a third party software and used by our lab technicians before I get my hands on them. I am not sure I can employ such a solution in my situation but I get your point and will keep it in mind as I move on.
[deleted]
One year? Not bad... Not bad at all. You're styling is consistent. Good balance of inline comments. Easy to follow flow. Meaningful variable names. I've graded 4th year CS students with much worse code. Kudos. It seems you have a bit of a knack for the what and the why of things.

As good hardening, look into main guard and move away from hard coding values. You "generate" random data (for distribution purposes likely), but you wrote it in by hand. See if you can create a handy little function for duplicating all those lists.

The benefit to you is really for testing. It'd let you try out your code and changes in a faster and repeatable manner. Plus, testing would scale faster.

But really. This is a good win for you. Definitely take pride in it and continue on your journey!
Similar situation except  I am new to coding. Everyone at my work is pretty satisfied with Excel, the data entry is killing me, I want to automate it all away. It's motivating to hear someone say it payed off.
That‚Äôs similar to how I started. Built a web scraper to get data for a boss who was very okay with manual effort / daily time suck
Can you pls share links of the MIT resources and where to learn? Thanks
Is there an order you would recommend for those courses? I‚Äôm interested in them all, but curious on your thoughts. 

Cheers
Obviously then, you were doing it wrong.

[https://xkcd.com/1319/](https://xkcd.com/1319/)
I would say that phrasing kind of hides the mechanics in favour of blindly impressing someone.

You only need 5 lines to get an instance of *flask's* web server running and serving the most basic of responses.
Omg. 
So instead of reading a huge book that I currently have on html css and JS, I should just learn flask?  
Although I only understand the basics of python
Some things are definitely "under-polished" for lack of a better term. Power BI is an early release app that's still in active development. They do big updates monthly and do videos on their YouTube channel.
I'm a complete noobie, but I know that if something works and then I want to make a change... Back it up first. 

But your story is inspiring to me.
Heh. Pandas is super nice. It can read from and write to excel, too. If I were you, I'd take the next step of pulling the data out of excel and putting it into a sqlite3 database. Though, if you do that, you'll have to either have a script that constantly does this for new data or you'll have to give people the tool to do this stuff without excel. And that leads you down the long and winding road above. So...
[deleted]
Yep, I bookmarked your pasteboard link! Thanks a lot!!!
If the inputs are already going into excel, that can make sense. I avoid excel too lol.
Where exactly to draw the line about what kinds of calculations should be in the db and which should be in the UI is a decision. I don't know a way to give an informed opinion about where to draw it in advance. But I've observed that many times, too much of this is in the UI because users are making these decisions and they want to do things with a GUI.

The point is, Excel is a UI with some extensions for persistent data storage and WYSIWYG editors for charts and graphs.
Thank you ! You gave me so much ideas. Have a nice day my friend.
I started with automate the boring stuff but ended up finding a course on udemy that had everything I needed and the instructor is very responsive. 

https://www.udemy.com/course/web-scraping-in-python-using-scrapy-and-splash/

And he just released another one to cover more advanced topics which is great!
Comparisons to *None* should be done using the *is* operator according to PEP 8 as *None* is a singleton and all instances point to the same object :)


http://jaredgrubb.blogspot.com/2009/04/python-is-none-vs-none.html for more info
Na, you described some of your data handling and importing with some 3rd party tools. We have some inhouse developed tools for handling that, so I work for the competition!

. My bosses would kill me for suggesting this....but may I suggest that looking at how you could inhouse this data management might be a path forward. These instrument files are all csv and this would work across multiple geographic locations
Ok thank you for the advice.
[deleted]
nice. im starting to learn python due to the work that i sm doing too but i am more on the further side of beginner and it is somewhat similar to the work you had dine here so thank you for the motivation post for me to keep learning python to know there will be isefull in the future
Automation is a great start at professional programming, even if it isn't what you were hired to do. My previous job was the first where I got to use any programming ability. I wasn't asked to do it or hired to do it, but when you save a company thousands of staff hours it makes quite the impact! It's often surprising that even in tech companies, there's an awful lot that could be automated but it's just never occurred to anyone. Keep it up.
I wonder, does your company mind you sharing code you made during work hours? Sometimes they claim it's company property because you made it on the job.
You're the first person i've seen that actually uses PEP 8 conventions to make their code readable, props to you!
Thanks for the suggestion :)

I actually have received decent raises every year for as long as I have been employed, and also got a few bonuses here and there for various things. I also already have a masters degree (geology) so going to computer science is more a step sideways than up.

It was my choice to start learning and then after having begun I talked to by manager about and he was dismissive about me spending work hours on it, but he was willing to pay for the courses.
Thanks for the detailed review. I have been doing python since I started the MITx in fall 2017, but I stopped and started several times due to lack of time and motivation. I finally did the followup MIT course in nov-dec 2019 and then it somehow clicked and felt more natural. Still have a ton to learn obviously though, but what really makes me happy is that I knew exactly where to go for examples of parts of my program so I could quickly whip this up.

Regarding the random data I actually made it with a quick for loop and the random module in my IPython console in Spyder. I just didn't think to put it in here. But your point is valid in general and I will remember it.

I have recently started using Jupiter notebooks for testing and it works fabulously, but I'll admit I didn't for this script.

Thanks for the kind words in general. Feels good to know I am getting somewhere üòä
They‚Äôre on www.edx.org
Search introduction to computer science and programming using python, which is starting next week. The other course is computational thinking and data science, next session starting in March and is the continuation of the first course.
Sure thing! Here you go: https://www.edx.org/xseries/mitx-computational-thinking-using-python

You can sign up for a certificate (I did) and get graded assignments and an exam, or you can choose to audit the course and just follow along for free.

They are widely recommended as an excellent introduction to python and computer science.
I did 6.00.1x first, then went to 6.00.2x but lost motivation. Instead I did Automate the Boring Stuff and a played with pygame for a while before eventually coming back to 6.00.2x and completing it. It is somewhat harder to follow conceptually than the first one, but very worth it in my opinion.
Your phrasing is more accurate but not laymen friendly
You still need HTML CSS and JavaScript. However you can write less if you use a webserver with a templating engine. Flask uses Jinja2.
Flask is used to serve those 3 things, it doesn't replace them.
Haha Yeah.

I had some redundancy and well turns out it was not completely redundant after all.

Fixed now, just fighting with the Reddit code editor..
It is actually not that far from what we have with excel now. A test is initiated in the 3rd party software. The lab technician activate the test and it generates an excel-based worksheet which they then fill out (often printed so they can bring it along, then entering in the notes later in the digital copy). When that is done they will export the file or notify the engineer responsible for that test to review it. In the latter case the engineer then exports it. The export is a simple file (though I don't think it is a CSV - I have to check) and then that is processed by "The Importer" which is basically a computer running a small script (VBS I believe) that will scan a specific import folder for new files, then read them, import them correctly into our db and then delete the file and go back to waiting for a new file to show up. This is great for all our new data, and I doubt we can live without excel for this workflow (: There has been talks about building a whole system in Excel only and ditch the license-heavy 3rd party package). What would be natural in that situation is to let Python do some of the heavy lifting and putting much more of our data into the db rather than store it in the worksheets. The good thing about Excel is it is easy for most of our employees to handle, some of them comes from backgrounds as a mechanic, blacksmith etc. They are not necessarily that comfortable with computers in general, but the excel thing works for them.
I can! The problem with the data needed in this case is it was for some reason not considered important in the past so this was never transferred to the dB. Instead for some reason we transfer another number which is always the same (dictated by the standard for measuring) so we have a LOT of 11.1% entries in the database üòÇ
That's a fair point. We are also moving more and more quality control parameters to the db too anyway, so might make sense to do more of the calculations etc. there too.
My pleasure!
Awesome. Thanks! Will bookmark it for when I am done with my current courses.
Thanks! Now that I think about it, that absolutely makes sense.
Heh I can see from your profile that you are from Canada? Denmark here. We don't have any competition in Canada. At least not my division of my company. Our competition is german and chinese. We are also overwhelmingly an internal lab servicing other departments in the company, so we don't really have competition, because top level management dictates other departments have to use us, and consequently we don't have time for many external customers :)

We have actually discussed this. The suggestion has so far been to build even more in Excel and then dump the 3rd party Lab management system. That could *maybe* be feasible with some faster behind the scenes python to support it. Otherwise it would probably be very slow and clunky.
Oh I didn't realise, but I haven't done much with it since I got into python. Will have to give it a look again. The relational TT avles are great, I fully agree.
Keep at it. I have a position where a lot of work is already automated so it took me a while to find a good use case. For stuff like this I strongly recommend Automate the Boring Stuff. Its beginner friendly and goes straight to useful programs.
Lets put it like this: I didn't ask. If I produce something during work hours they will probably claim it as theirs, but this is fairly basic stuff so I can't see them caring. Also I am spending plenty of my own time making work-related stuff because it aligns with my general interests/hobby. But I understand your concern, and that is also why I made sure to delete the company specific data and replace it by random numbers.
Thanks for commenting!

I actually never got around to rigorously read through PEP 8, I just catched what other people have been commenting here and on /r/python And I had a beautiful mixture of nomenclature for my variables before I brushed it up for publication here. But thanks again. I will make an effort to continue the good habit in the future.
Concur fully, but not about the computer sciences part. Learning programming *is* a step forward in your geology mastery too :-)
Ahhh gotcha. Didn‚Äôt mean for that to come off as snarky as it did. Haha
Thank you both. I signed up for both python courses.
Did you get the certificate?
Ok. I will start reading html css and js then.
I think that your scenario would be a great one for learners. 

Here's 100 spreadsheets, we need data from all of them

Follow these steps

Voila!

Wasn't that clever, give yourself a big pat on the back.
I was fighting it the other day.  Paste your code first.  Select all..  then hit the code button
It's a tricky balance between what the customer wants and can handle versus what the organization needs to do to make things scale better and to not have issues with overly complex and fragile processes. 

It sounds like that excel-based worksheet is a good candidate for a web-based form that could (and probably should) render "The Importer" obsolete. "The Importer" is probably complicated, hard to update, hard to maintain, and just generally fragile, I'm guessing. A web service back end could directly handle the insertion into a database and would give a ton of other advantages like logging and easy maintenance and upgrades.

But like I said, whether the investment this effort requires is worth it is up to your company. Maybe check with IT to see if there is a team that can help facilitate this. It could be that if you know the "right" direction, you might be able to get someone to implement it for you.
It was foreign to me but playing around with the *id()* function helped clear it up. I‚Äôd also really strongly recommend playing around with *pdb*, the debugger, to explore the way your script runs. The pattern to inspect your local variables is:

* import pdb; pdb.set_trace()

this opens a debugging prompt and you use:
* q - quit;
* n - next;
* s - step (jumps into a function call instead of just evaluating under the hood);
* w - where (where in the script are you);
* l - list (print the lines before and after current line);

and in conjunction with *dir()*, a built-in function that allows you to inspect all the names in the current scope, you can learn everything about how your program runs.
That's right, I am based in Canada though the company I work with has labs all over the world. Not in Denmark though, or at least I should say my division doesn't, so not quite the competition I guess :)

I would look to push away from Excel for managing the data. Perhaps think about how the data can be grabbed from the the instrument, parsed, automatic basic qc checks applied, imported to a database and then pushed to a data approver (a person). It should be displayed in a format where they can assess the quality of the data,likely a browser. They then assess for passing CRM, blanks, duplicates etc. Adjustments can then be made to the data if so needed. Everything is audit trailed for transparency and accountability.
Oh absolutely it strongly supports the geology aspect (I will have a solution to apply computer vision to microscopy analyses soon if all works out). But I think many other stories here are about people for where programming is a step up the education ladder, and I think that at least my manager sees it as a side step. He is showing some interest in learning himself now, so good times ahead I hope!
Hah no worries. Glad to see people in the community supporting each other like that :)
I did, yes. It opens up for graded assignments or problem sets and final exam, which I found to be good training exercises.
You still need some way of serving the HTML you write. Flask is a good place to start. Or Django. (But flask is better)
I might put something like that together. Just not with company-specific data in it. As I get more involved and learn more I have given some thought to documenting my learning path, so this might be a good opportunity to do that. Anyway for now I have posted a link to a pastebin with a working version, cleaned for all company specific values, and with more comments than I usually have. First time publishing any code like this :)
Yeah I tried that several times, and it kept messing up the numbering anyway. Some of it could be rectified but some of it seemed unfixable. Eventually I had to head home from work so I just put it on pastebin.
Hmm yeah. You have given me some talking points and things to consider for sure. I am actually not aware how much our IT department are involved in the stuff we run. Being a laboratory we have a ton of instrument specific software and their usual solution is a hands off approach and let us fix it ourselves, as long as we don't interfere with their deployments of updates to windows 10.

A web-based form could very well be a solution, but that would probably transform me into a front-end developer as I am the only one (that I know of) in my department with any kind of experiencein front end web solutions. And back end too to be honest. But then again I would like to play more with flask.
Nice! Will have a look at that when time permits. Bookmarked üòä
Awesome! Thanks.
Very good of you. 

Hopefully it has lots of comments explaining everything line by line. 

Keep up the good work.
Those of us who are front-end and back-end developers are called full stack devs. See my initial response above!

Nevertheless, if "The Importer" isn't causing issues, don't mess with it. If your team gets bigger or if the data gets richer or whatever, you might find yourself in need of a "proper" solution. Just keep this chat in the back of your head as to what a proper solution might end up looking like.
Haha yeah I know. I intentionally avoided that term there because I could suddenly see where that was going üòÇ.

I will! Thanks again. It might very well become relevant in 2-3 years whenever the old dB guy decides to retire.
"You purchased this course in 2019"

well shit that's not good lol
Apologies for the confusion with the code. I accidentally entered it as AUG2020FREE instead of AUG2021FREE.

This is probably a task I should automate.
[deleted]
>I'm also working on another Udemy course that follows my recent book "Beyond the Basic Stuff with Python". So far I have the first 15 of the planned 56 videos done. You can watch them for free on YouTube:

That's great to hear, thanks :)

I recently took 3+ hours to record a 7 minute video (as 7 parts) and then another hour to trim and stitch them together. I guess it becomes easier to plan and record with experience, just wanted to know about your routine for creating these video series.
Yay, thanks!
I‚Äôve read through beyond the basics and understand most of it (as well as having done automate‚Äôs content), what should my next steps be? I‚Äôm fairly new to coding but I have a maths degree and i want to end up in some sort of AI/data science role
Thank you!
Awesome! I've been using the book but could use a little extra. Thanks!
Fantastic, thank you.

Just started looking into python a few days ago for a project and not making much progress - looking forward to some structured learning rather than random googling.
You're the best, man. $50 is like a third of my monthly salary as an intern in Vietnam. I've gone through a few chapters of your book. It's great. Thank you for regularly giving out free courses like this.
really and truly thank you! This is awesome
Has the sequel dropped yet??
Code isn't working..tried both AUG2020FREE AND AUG2021FREE2
This coupon has exceeded its maximum possible redemptions and can no longer be used.
Thank you so much!
Thanks a lot : )
Hi Al, I just want to say that you have motivated a clueless teenager to pursue CS in college. I‚Äôm impressed to see how you hand out free coupons every month and post all your stuff online for the community. Thank you for being such an inspiration! Wish you all the best.
Thank you!
Love you
Super awesome! You are the man!
Thx, man
Thank you very very much :)
Hmm maybe could automate the coupon codes ü§î haha just kidding. Thanks for everything you do!
Oh my god this is great, thank you so much!
Big thanks! I've been wanting to do this one for some time now
Thanks bro
Wow! Thank you very much!
Legend üôå
Appreciate the good work, Thank you
Text based stuff is nice for learning the basics - but for "pretty" stuff that you can show off / impress your Significant Other, it would be *Really Nice* to have some GUI programming.  
Are you planning on covering GUIs? Or can you recommend a good reference?
Code isn't working. Both 2020 and 2021 versions of the code. Also, it says "This coupon has exceeded its maximum possible redemptions and can no longer be used."
Hi, just want to let you know that I appreciate your course! 2 sections left until I finish all of it!
thank you man!
Oh my god thanks so much for this promo and post and everything. I just started learning and several people have recommended this course and I was thinking about buying it but whole E shit it's free thank you thank you thank you
Thank you, Much obliged,
haha well, apparently I purchased this course 2 years ago, but never finished it. Gonna do that
The best time to work through this course was 2019.

The second best time is now.
i was the same but i think i purchased it the last time it was free.
I could recommend a book to do that for you.
I recommend [Regex101](https://regex101.com/). That site is incredibly helpful.
Heh, you'd think I'd get better at it with more experience, but it's always a slog. Your timing is about the same as mine: even a 7 or 10 minute video takes hours to record and then edit.

I used to write out a script that I would follow, which would cut down on the "uh" and "um" verbalizations, but I found that I was just re-writing my book. These days I'll copy/paste sections from the book, but mostly I have an outline of interactive shell examples to run through, images/figures/animations to show, websites to point out, etc. I try to make use of the visual medium as much as possible.
Yeah, reached it's maximum usage limit! :/
I just tried AUG2020FREE and it still works for me. What country are you in? Some folks outside of the US have reported the coupons don't work for them sometimes.
That's odd. I think they have country-based blocking of promo codes. Can you try the code again in a few hours or the next day and reply if it worked or not? The coupon code I made specifically says it's unlimited.
My backlog of projects is such that I probably won't do a GUI book. So much stuff is web based these days, I'd say that creating "browser apps" that just run on your local machine instead of a web server (like Jupyter Notebooks) would be a good idea.

I've worked with wxPython before and liked it. Especially since their documentation has an example app that you can copy/paste source code examples from for their various widgets.
Third best time is yesterday
Is there no option for Python 3 there?
Thanks :) 

ah/uh/um tripped me a lot, next time I'll see if I can get better at editing them out.
I am in India.
Same here, getting an error saying the coupon has exceeded its maximum possible redemptions, also in India.
Hi, thanks for sharing, the class.  I just signed up using Chrome on a Mac in the USA and it's working.  It didn't recognize there was a coupon when I tried to sign up from my iOS device.  So maybe some might have more luck with a desktop browser.  Thanks again!
It didn't worked. I'll wait for your next offer till then.
Regex101 does not have a Python 3 option. Fortunately, it doesn't matter. The Python 3 regex module uses extended regex expressions, which the default setting on Regex101 supports. Therefore you can simply use the site as is, no config required :)
It really does depend on what you want to do, but I'll give you a list of some of my personal favorites as well as the ones that I use a lot. (Includes standard library modules and stuff from PyPI)

 - `os`/`shutil` - The `os` and `shutil` modules are both built in, and they are super useful. The `os` module basically provides a bunch of interfaces to your operating system; you can get the name, environment variables, work with paths, and do stuff with files and directories. The `shutil` module is a bit smaller, as it just contains a bunch of high-level file operations, like recursive copying/removing, an implementation of the Unix `which` command, and an implementation of `chown`.

 - `re` - I might be a little bit insane, but I really like regular expressions. The `re` module allows you to work with regular expressions, and it can be super powerful. Regular expressions can be super confusing, but like everything, you learn over time. Useful tip: you can comment regular expressions in Python, which is really nice.

 - `flask` - This is the first module from PyPI. Flask is a backend web framework written in Python. If you are good at Python and want to do backend, Flask is super powerful and really good for beginners. Another thing, if you're working with bigger projects with big databases, you could also look at `django`, just its really just preference.

 - `configparser` - Going back to stuff in the standard library, we have `configparser`. ConfigParser allows you to read/write to `.ini` files, allowing you to easily save user preferences for your program. It's super easy to use so I like it a lot.

 - `decimal` - This one can be super helpful. Have you ever tried to do math in Python and it is almost correct but slightly off, causing hours of debugging with no avail? That's because of something called "Floating Point Precision Errors," and it's in most programming languages. Because of the way that computers add numbers with binary, when you do arithmetic on floats, things tend to break. For example, open up the Python interpreter and try running `1.1 * 3`. You should get something like `3.3000000000000003`. The `decimal` module can allow you to fix this. After importing `Decimal` from the `decimal` module, try running `Decimal("1.1") * Decimal("3")` and see what happens, it should be the correct answer now.

 -  `requests` - `requests` is a module from PyPI, and it is incredibly helpful. `requests` allows you to, well, send HTTP requests for one thing. You could do this with the builtin `urllib` module, but requests has more features and is so much easier to use. 

 - `argparse` - This one is built in, and it allows you to easily create command-line utilities. `argparse` will let you create different types of arguments, which can then be fed into your program to produce a result.

 - `PyQt5` - Interested in making GUIs but Tk isn't your favorite? Me too. I don't really create GUIs too often, but when I do, I like to use PyQt5. PyQt5 allows you to create Qt applications, and it is probably one of the most powerful GUI modules in Python. It comes with a ton of different widgets, and it's super easy to do stuff like multithreading with it. I personally like to use Qt Designer to create the GUIs, and then I use `pyuic5` to convert the `.ui` files to `PyQt5` code.

 - `colorama` - `colorama` allows you to easily add color to your command-line programs. Thats basically it.

 - `json` - The `json` module allows you to parse `json` into a Python dictionary, and then write a Python dictionary into JSON. Useful when paired with `requests` for getting API data, and just a useful module to know about in general.

 - `rich` - Rich allows you to create really nice looking console output, you can make errors look nice, render markdown, progress bars, and a ton of other stuff. It has support for 4-bit color, 8-bit color, Truecolor, and Dumb Terminals. I would really recommend checking it out.

 - `numpy` - NumPy is really good if you need to handle large amounts of data. NumPy also provides high-level mathematical functions to operate on these large, multi-dimensional arrays and matrices. Since a lot of it is written in C, it is super fast, and the only downside really is that the arrays are stored completely in memory, so it's pretty easy to run out.

**By popular demand:**

 - `itertools` - Itertools it's definitely an extremely useful module. It is used for creating iterators in a really easy way. For example, you can get all possible combinations of length `x` of two lists, get all the possible permutations of an iterable, and other really useful things. I should probably look more into this module myself.

In conclusion, there are a lot of different modules, and these are definitely not all of the useful ones, or even all of the ones that I use, but I figured that those are some nice modules to at least give you inspiration. You could also check out my GitHub for inspiration, if you wanted, and I have a few Python modules myself. I'll link my GitHub and some projects of note below, as well as all of the projects I mentioned in this comment.

----

[My GitHub](https://github.com/TabulateJarl8)

[randfacts Module](https://github.com/TabulateJarl8/randfacts)

[ti842py Module](https://github.com/TabulateJarl8/ti842py)

[ImaginaryInfinity Calculator](https://gitlab.com/TurboWafflz/ImaginaryInfinity-Calculator/-/tree/development)

----

`os` - [https://docs.python.org/3/library/os.html](https://docs.python.org/3/library/os.html)

`shutil` - [https://docs.python.org/3/library/shutil.html](https://docs.python.org/3/library/shutil.html)

`re` - [https://docs.python.org/3/library/re.html](https://docs.python.org/3/library/re.html)

`flask` - [https://flask.palletsprojects.com/en/2.0.x/quickstart/](https://flask.palletsprojects.com/en/2.0.x/quickstart/)

`configparser` - [https://docs.python.org/3/library/configparser.html](https://docs.python.org/3/library/configparser.html)

`decimal` - [https://docs.python.org/3/library/decimal.html](https://docs.python.org/3/library/decimal.html)

`requests` - [https://docs.python-requests.org/en/master/](https://docs.python-requests.org/en/master/)

`argparse` - [https://docs.python.org/3/library/argparse.html](https://docs.python.org/3/library/argparse.html)

`PyQt5` - [https://pypi.org/project/PyQt5/](https://pypi.org/project/PyQt5/)

`colorama` - [https://pypi.org/project/colorama/](https://pypi.org/project/colorama/)

`json` - [https://docs.python.org/3/library/json.html](https://docs.python.org/3/library/json.html)

`rich` - [https://pypi.org/project/rich/](https://pypi.org/project/rich/)

`numpy` - [https://numpy.org/doc/1.20/](https://numpy.org/doc/1.20/)

`itertools` - [https://docs.python.org/3/library/itertools.html](https://docs.python.org/3/library/itertools.html)
Adding on to the u/TabulateJarl8's post, I'd recommend you to also learn Pandas and Matplotlib. Pandas is invaluable for working with any kind of data, while Matplotlib is your go-to library for graphing/plotting everything.
Being aware of what's inside the standard library of modules, will surely help you down the road. Have a quick browse and see what's there.

The most useful built-in ones, that are useful to nearly all aspects of Python, are `itertools` and `collections`. To some extent `functools` and `dataclasses` also, though they are not super useful immediately, but very useful to know about.

- `itertools` provides advanced ways to combine, slice, flatten and group iterables and cycles. The `product()` function is very powerful, and can often replace nested for-loops in a compact way.
- `functools` contains decorators that help you easily create classes that can be sorted, memoize functions, etc. There are many videos on how to utilize dataclasses and functools to create easy, maintainable, and powerful objects with ordering.
- `collections` contains a plethora of useful utility tools. It has the `Counter` class, that can wrap an iterable and count the amount of each element, and return the top N most common items. It also provides `defaultdict`, which is a dictionary where unknown keys will have a specified default value. Saves you from writing code to check existence and initialize. Finally the `deque` object is a wrapper around a list, that supports lightning fast appends and pops, and the ability to rotate the lists.

For real-life scenarios, you'll quickly run into `requests` whenever you need to do interact with some website. It's a third-party plugin that builds on top of urllib, and removes the need for tons of boilerplate code. The `os` module will also be your way for interacting with the file system, together with `pathlib` and `glob` in some scenarios.
One thing I should have done sooner was learn to take advantage of python's built-in libraries, rather than implementing things myself because I didn't know about them. 

For example, if you have a list of integers, and you want to obtain their counts, you could build something yourself, or just: 

    >>> import random
    >>> from collections import Counter
    >>>
    >>> x = [random.randint(0, 10) for i in range(20)]
    >>> x
    [0, 4, 8, 10, 7, 5, 9, 10, 2, 6, 7, 2, 0, 10, 9, 1, 8, 10, 7, 0]
    >>>
    >>> counts = Counter(x)
    >>> counts
    Counter({10: 4, 0: 3, 7: 3, 8: 2, 9: 2, 2: 2, 4: 1, 5: 1, 6: 1, 1: 1})
    >>> counts[0]
    3
    >>> counts[9]
    2

the built-ins usually perform better than what I would have built, `itertools` is another good one, powerful stuff
Like others have noted, it really depends on what you need to do.   For generic recommendations, I'd say learn `os`, `path`, `datetime`, `shutil`, and `logging`.   These will give you a lot of power scripting on your local machine and interacting with the OS and local file system.

Me personally, most of my programming work involves integrations between systems and moving/manipulating files of various formats, or delivering data to a 3rd party.   For me, these libraries are must-haves:  
`requests` - anything HTTP, really useful for web API's.  
`paramiko` - a really good SFTP library.  
`ElementTree` or `lxml` - working with XML files.  
`json` - most API's use JSON data   
`csv` or `pandas` - working with delimited text data.  
`glob` - great for using wildcard pattern matching for filenames.  
`re` - regular expressions; invaluable when needing to do certain manipulation of data or extracting odd-ball pieces of data from files.  
`smtplib` - sending emails.  A lot of my automations and integrations use this for notifications or generating tickets.
I kind of depends on what you plan on using python for. There's some really usful general stuff in the standard library that's worth being familiar with. Learning regex and the re library, pdb is a handy debugger, collections has a bunch of useful stuff for working with lists sets tuples and dictionaries, unittest for code testing.
I posted something similar on this topic a while back:

1) Make sure you understand all the basic data structures, looping and flow control, have you mastered all the stuff here https://www.pythoncheatsheet.org/ ?

2) Make sure you have a solid grasp of list/set/dict/generator comprehensions, ternary expressions, generator functions, lambda functions, and slicing.

3) Start working your way though the more popular libraries:

Start with the [standard library](https://docs.python.org/3/library/) especially collections, itertools, statistics,  and functools, and then start pulling in things like numpy and pandas, before you start expanding into stuff that specializes in your area of expertise.

|basic|intermediate|advanced|
|:-|:-|:-|
|random|itertools|threading|
|collections|functools|subprocess|
|math|numpy|socket|
|sys (exit)|pandas|requests|
|datetime|tkinter|openpyxl|
|string|keyboard|django |
|pygame/turtle|statistics|flask |
|copy|csv|matplotlib |

Then start exploring external libraries that are pertinent to what you're specializing in. For example, maybe you go into data science?

More stuff I forgot about initially: try/except/finally, class, attributes, decorators, regex, packages, map, reduce, filter, probably more.
The standard library has lots of great content.  It is good to be familiar with it so you know what is there when you need it.  [https://docs.python.org/3/library/index.html](https://docs.python.org/3/library/index.html)

A few favorites include: pathlib, itertools, collections, functools, subprocess...

A nice resource for examples of the standard library in action: [https://pymotw.com/3/](https://pymotw.com/3/)
I recommend learning `pathlib.Path` and its many features. I can't stand seeing old (and new) code with a bunch of cryptic `os.path` code. The new Path class is so much nicer.

Additionally, you want to learn `argparse` for command-line arguments for your scripts.
Check out automate the boring stuff, it handles most of the useful libraries, also a few third-party ones
Pathlib
It is really dependant on what you intend to do with Python.  
Pygame is probably a reasonably good bet even if you dont intend to make games just since being able to put a GUI to your python is a good thing to be able to do.
Py game it's pretty good
`itertools`!!!
I'm a web developer at a university where I work a lot with scientists who use Python.  If you're going into data science or deal with anyone doing data science, I'd recommend numpy and pandas.  I don't know these and it's really becoming a pain point for me.

As for web development, I use Flask and all its plugins frequently.  I know a lot of jobs require Django, as well.
In addition to what others recommened: I'd learn WSGI over flask so you can get idea of how it works in case you want to make edits or changes. Cryptography. BS4 beautifulsoup and sockets if you want custom control in setting up your own servers for communication in app.  Then choose one of the universal GUI kits like kivy, pyinstaller. So you can compile programs for many OS's. Also struct, for binary data manipulation, ie: like creating your own database. sqllite or tinydb.  Requests,  \[ urllib3 & selenium \]  - if you're doing quick web crawls.
Sockets
I would argue Pandas is the most practical library you could learn. No matter what you do in life, you‚Äôre going to need to move some data around and calculate some stuff eventually.

This library is incredibly powerful, and just knowing this alone creates so many possibilities.
EXCELLENT question. I'm glad you asked it - I'm in the same boat!! Looking forward to reading all these answers!!
One good one is random
This is the best post EVER!
logging isn't particularly exciting, but it can be extremely helpful for investigating issues that you (or classmates/coworkers) run into when running your programs. It's a standard library module.
Less '''os''' more '''pathlib''' please
Not a library, but a Git repository like GitHub is phenomenally useful. NumPy is very helpful for all your math and calculation needs. If you are doing anything related to science or engineering, Matplotlib is your graphing library, and scipy has weird functions like Bessel functions, differential equations, and even some ML. Sympy is good for doing algebra and symbolic calculus. Pandas is useful for data science stuff,  but I have limited experience with that. I would recommend just doing projects you're interested in and you can find out along the way what you need for your own projects! Google is your best friend when learning to code, and when doing things you are familiar with in coding.
If you want to learn to make games, I'd personally suggest `Pygame`.
At least scan through the list of standard libraries so you have an idea what kind of stuff is in there. Then you can recognize when a problem comes up that there is a standard library that might be able to help.
One l highly recommend is `click`. It's part of the standard libraries.

It makes creating parameterized CLIs and help functionality extremely easy, and I use it a *ton* in creating tools for CICD pipelines since you can pass data into python scripts in an easy, standardized way.

I started using it once, and now I use it constantly.

IMO, it is much simpler than `argparse` and `optparse`.
random
Tkinter.
Click > argparse
Flask and sqlalchemy

Or

Django
collection
The comment by u/TabulateJarl8 told you everything you needed to know.
It's all about what you want to use it for. 

&#x200B;

If you intend to do data analysis, particularly with time series or financial modelling, then Pandas is a core package.
decimal

re

os

shiutil

json



And most controversial:

requests

bs4
pathlib
csv / pandas
There's no such thing as "must learn" libraries, you learn according to your needs.
Pandas - data stuff 

Asyncio - do stuff concurrently. 

Threading - also do stuff concurrently. 

Aiohttp - say you wanna scrape 1,000 web pages for a particular graphics card. Would rather not have them scrape one at a time.
I enjoy writing games in turtle and tkinter.. Both very simple libraries to get you started even though they are not 'must learn', it will give you a flavour how they are implemented into your code.   


My github has a bunch of turtle and tkinter games if you are interested in learning   


https://github.com/Ninedeadeyes
`requests, flask, os, Kivy`
For a GUI, Dear PyGui is a good pick!
The best way to go about this is to do a couple of projects and see if there are libraries to complete common tasks while completing those projects. You don't want to learn any argparse if you find yourself never making a command line tool.

It's worth keeping in mind that once you have a strong grasp of how to program and general paradigms, learning to use a library becomes laughably easy, especially with python seeing as how it's the language with the most penetrable resources for novices (realpython.com and Corey Schafer's YouTube channel)
Python Tutorial  Part: 6 Modules

https://youtu.be/MS2FqqoQNBE
Teste
+1 on the internal json, decimal and os libs that you will most definitely need at some point, and for requests.
I feel that the rest really depends on your projets but those 4 will probably pop in most of your pythonic life.
Thanks for the in depth reply, which makes me realize that I did lie (by omission) in the actual post. We did learn the basics of PyQt5 and QtDesigner during the course. Thanks again for all the info.
+1 on the Requests library. It‚Äôs not the ‚Äúsexiest‚Äù of all the ones on here but one of pythons great strengths is how it supports extensibility. API request are an immensely powerful tool and help you take all that awesome code you write and integrate it with other software, hardware, cloud services, etc. Chances are if you‚Äôre in IT long enough you‚Äôll find yourself doing some kind of sysadmin task at some point. Really good library to be very comfortable with!
Seconding `re`.

I have a background in writing parsers, and regular expressions are incredible tools. Most people who claim they're "hard" have never really sat down to study what they are and how they work. They're really simple once you "get it". I've cleaned up and condensed hundreds of lines of code down to 10-15 lines of code using regex.

The big issue is python `re` is not really complete compared to stuff like PCRE/C regex. The built in regex engine is also slow. There are some other regex libraries that address these. But generally speaking, you can get 99.9% of regular expression work done with the normal library.

Capture groups and named capture groups are insanely powerful.

I'd recommend learning regexes, then working on solving problems with games like "regex golf." (google it)
> PyQt5

Personally I'd replace PyQt5 with [Kivy](https://pypi.org/project/Kivy/) (and [KivyMD](https://pypi.org/project/kivymd/) - the modern stylized companion). Kivy is super easy to work with and KivyMD looks really great (abiding by Google's app stylizing guidelines).

@/u/TaranisPT
+1 to everything, I would only add the pandas library for handling table data, it is built on top of numpy so it keeps its speed, this one is mainly relevant if you are interested in the data science side of python,  match that with matplotlib and seaborn for visualization
What about pandas?
Pathlib is great for path stuff
Man, they really missed out on not calling it QtPy instead.
I'd like to add `itertools` to the list? I only discovered it fairly recently and wish I had known about it earlier. It's one of those modules you can really leverage in interesting ways, and I don't think I've explored its full potential yet.
In regard to requests I just ran into an issue where I had to create an event handler to intercept the http redirect when I was using urllib. Using requests I just set allow_redirects=False and then check the status code. Removed the need for 10 or so lines of code.
C'mon, this list is incomplete without `itertools` and possibly `collections`.
I would recommend Datetime and asyncio + aiohttp, Dataclasses, collections.
Nice list, I would personally throw out `numpy` and add in `pathlib`. I find people are fast to jump on `numpy` on extremely easy problems and making the solutions much slower and the project heavier.
Look into click instead of argparse
This guy pythons!
Damn dude.. nice one
What are some resources for learning `os`, `shutil`, `configparser` and `argparse`? I think these modules require knowledge of operating systems. Do I need to learn command line first?
I would add to the list :

- `lxml` : the best library out there to parse (X)HTML and XML. If you're not afraid of XPath, then it's the best library to scrape websites which do not have an API

- `FastAPI` : one of the fastest (after `blacksheep`) async web frameworks in python

- `typer` : my personal favorite way of making CLI programs. `argparse` is good too, but it doesn't scale well in my opinion

- `functools` : In the standard library, it's a collection of useful decorators, and syntactic sugar for your functions. 

- `collections` : This one is super useful for container data types (OrderedDict, Counter, defaultdict, deque, and ChainMap)

- `contextlib` : for all things context manager. contextlib.suppress is super useful to suppress an Exception, and way better than a `try...except Exception: pass` block.
Hey you inspired me to make a post but I also want to ask you directly: I want to make a data analysis oriented website and I am reading that flask might be a good candidate to ‚Äúspeak‚Äù with the web user. Is this true? Any basic conceptuals you‚Äôd like to clarify here? Also, what features would you most recommend out of it?
Why are you this good

We need more people like you
There is so much to learn everyday. Thanks a lot for this list
collections for leetcode
> Adding on to the u/TabulateJarl8's post, I'd recommend you to also learn Pandas and Matplotlib. Pandas is invaluable for working with any kind of data, while Matplotlib is your go-to library for graphing/plotting everything.

Another good alternative to matplotlib is [bokeh](https://docs.bokeh.org/en/latest/docs/first_steps.html) for anyone who doesn't really like matplotlib that much
I am just starting with pandas this week - any good learning places you can recommend?
I'm not necessarily planning anything specific right now. I'll look deeper in the ones you mentioned though as they seem just like good general knowledge about the language and it's pretty much what I'm looking for right now. Thanks for the input.
Wow thanks for thenin depth stuff and breakdown into level. Really appreciated
Thank you. I feel like those might be some of the missing pieces for me.
Hey, I know a little about how to use both of these.  Would you mind explaining why Path objects are nicer than os.path / different / what the benefits are? I only use os.path to find where my script is saved so I can change the working dir to there. (Pretty new!)
I actually picked up the course for free on Udemy and will be tackling it soon. Thanks for the input.
Great book - humble bundle is running an offer right now on everything from that publisher. I picked up everything for $25 - that would definitely be enough to keep OP busy for 3 months!
There are a lot better libs for GUI but it is fun to learn.
hellls yeee
This is my experience as a physics student, so the above is what I live on in the Python realm.
It‚Äôs just the [standard library](https://docs.python.org/3/library/index.html), singular.
As in the library or just to pick one at random?
it's an amazing HTTP library that supports API usage
requests is so crazy it can support HTTP authorization and even OAuth
Thank you for regex golf. The *ultimate* pseudoproductive procrastination tool.
Is Kivy targeted at mobile apps?
Thanks I'll look at it too üòä
Pandas is a great module, and when I used it I really enjoyed the simplicity, but if I were to include every great Python module in this list, it would be hundreds long (there's currently over 305,000 modules on PyPI). I mainly stuck to the modules that I use extremely often, and I think I've only ever used pandas once or twice.
Lol there's always this guy
I considered adding it, but like I said about pandas, if I added every great Python module the list would be hundreds long, so I limited it to stuff that I use a lot. I'm a bit old fashioned, so I tend to just use the os module for everything, even though pathlib would make things a lot easier. Saves me another import at least
The official one (from Qt) is called PySide. They also missed it.
That was my first thought!!
I've now added it to the list, thanks for the suggestion
One of the many reasons that I love requests. Another thing that I notice is that somethings requests will get the `Content-Length` header while urllib won't
Can you give an example of a problem where both could be used?
I have two reasons why I recommend argparse over click. The first is because argparse is built in, while click is not, so that means one less dependency. Another reason is because click works by decorating the function that is called under `if __name__ == "__main__":`, while in argparse you just have to call `args = parser.parse_args()` to get the arguments wherever you want.
Never heard of it. What's your elevator pitch?
Click has built-ins that make a quick CLI easy if you want to do it the click way. I like validating input better with argparse, and it's only a little more typing over a Click CLI.
I personally learned all of them from the Python documentation; I linked all of them in my original comment. It does depend on how you learn best though, because you might be someone who learns better from things like videos, in that case YouTube is probably a good and free option. I would say that I understand argparse a lot better from spending time in a Unix shell, because I understand generally how things are, but it's not really required. If you use a terminal a lot in Linux or macOS (counting WSL), it would probably help at least a little bit.
Interesting, I didn't know about `contextlib.supress`, maybe I'll have to try that out sometime
What specifically do you mean by "speaking" to the user? I'm a bit confused about that
Oh, I've missed that one, I've heard of it, but not learned it yet. Also, Seaborn is a great data visualization tool, especially for heatmaps.
I'm also a newbie, so I haven't studied it in depth, more of a "rise to the occasion" kind of learning, but [this](https://www.kaggle.com/learn/pandas) is a cool course.
One thing my instructor did that I didn‚Äôt like was try to redefine data management tools. Take some time to learn how data is handled in db languages like SQL and the rules of thumb they use, then apply them when using pandas.
Let's say you have a file at `/home/blah/dir/file.txt`. You want to create a backup at `/home/blah/dir/backup/file.txt`.

With pathlib:

    backup_path = file_path.parent.parent / 'backup' / file_path.name

With os.path:

    backup_path = os.path.join(os.path.dirname(os.path.dirname(file_path)), 'backup', os.path.basename(file_path))

In the end of the day it's "just" syntactic sugar, but it's also the difference between code that's super obvious and a jumble of function calls.

pathlib.Path has a ton of convenience functions. I use `.glob()` all the time, as well as `.relative_to()`, `.with_suffix()`, and my fingers type `path.parent.mkdir(parents=True, exist_ok=True)` on their own by now.
Don't know about the other titles, but the online version of atbs is free of course.
Oh! I'm not surprised but still, curiosity sake and for sale of the thread could you maybe mention some?
You could write a script for that, using [https://docs.python.org/3/library/index.html](https://docs.python.org/3/library/index.html) as a reference! Here's what I was thinking for a start and where I would start learning about it: https://docs.python.org/3/library/random.html
It is not targeted at mobile apps, but you can use it for doing so. This is from their official page:

"Kivy runs on Linux, Windows, OS X, Android, iOS, and Raspberry Pi. You can run the same code on all supported platforms.  
It can natively use most inputs, protocols and devices including WM\_Touch, WM\_Pen, Mac OS X Trackpad and Magic Mouse, Mtdev, Linux Kernel HID, TUIO. A multi-touch mouse simulator is included."
It's main mission (I believe) is to build apps across multiple platforms: MacOS, Windows, iOS, and Android.
You can also develop mobile apps with Kivy... its a great library that's constantly evolving and growing. I'm currently making an android app with it in my free time :)

One more cool library you can try working with bs4 (or beautiful soup), this is an html parser that can grab web pages and scrape data from them. You can use it to find any information from the internet without having to use an API. for example, you can build a weather app or a phone book finder with it.
Ok understood. It‚Äôs probably my second most used in python. But I am using it for dev work in an analytic environment before we actually deploy stuff onto the server. Maybe it‚Äôs just a very specific use case
I was mostly adding to the conversation.
PySide2 is the official open source Qt/C++ wrapper supported by the authors.
Both serve different purposes, I didn't mention `pathlib` because it could replace `numpy`. `pathlib` is used for file traversal (more modern than `os.path` and also OO) while `numpy` is used for mainly for complex math operations.
Much simpler and cleaner
For argument parsing, I like docopt. 

Much simpler and cleaner.

Jokes aside, it's not simpler. But as [docopt.org](http://docopt.org/) states:

* define the interface for your command-line app, and

* automatically generate a parser for it.
Like if a user wants to see a chart, they click a button that send information to my Python program, which will process it and return the image.
Seaborn, pandas and matplotlib had me making some cool data heatmaps by zip code. I could see what's the hot spots were for sales during each month.
PyQt5, Tkinter, Kivy, PySimpleGUI. Really just depends on what you plan on using it for. I know PyQt5 is very popular, but so are the other ones. PySimpleGUI is pretty simple(hints the name), so if you want to just make a quick GUI and you don‚Äôt know much about making GUIs, then maybe that would be good.
how would you develop mobile apps for ios/android without using android studio and xcode? how can you built a UI using kivy and somehow port it to mobile apps can anyone explain?

is there a record / list of apps that use kivy for their UI?
Ah, I see. Well yes, I agree with you
It's also for python. And there's also ~~PySide5~~ PySide6 now although I don't know how widespread it is yet.
So stick with argparse then, got it.
That sounds exactly like what argparse does, which I have never thought was particularly complicated.

I honestly don't mean any offense to people posting alternatives to argparse, but so far I haven't seen any compelling reason to use something else.

It is in the std library now, you can learn most of what you'll ever need in 5 minutes, and it's still fully featured if you have more complicated requirements.
Oh yeah, Flask is great for small projects and things like that, but since you're just writing normal Python code you could generate the graph with Django as well. Flask is really good for beginners, but it is also used by big companies like Netflix, Reddit, Lyft, and Patreon to name a few. As for features, if you're planning on making login stuff/admin-only pages, definitely use [Flask-Login](https://flask-login.readthedocs.io/en/latest/) instead of trying to fully implement it yourself, trust me.
I can't answer how it is done exactly, but here is a list of some of the most known apps made with kivy. I hope this helps.
 https://github.com/kivy/kivy/wiki/List-of-Kivy-Projects
Xamarin forms allows you create multi-platform applications but rumor in the street is that xamarin might get replace with Maui , I just took a class in College about xamarin and were told about Maui https://devblogs.microsoft.com/xamarin/the-new-net-multi-platform-app-ui-maui/ 

I am exploring kivy myself. And the other mobile dev platforms, my major is mobile development but I want to make python my main language with everything. 


In the python office hours with David Amos he also mentioned to me Beeware so i am exploring both right now.

VR 

Santi
Sure lol
It's the opposite actually, in argparse you initialize an ArgumentParser, and add arguments programmatically. In docopt you write the help text, and get the parser. 

If you build a parser using argparse, and then call: "script.py -h", and copy the help text, you would have written what docopt needs to build a parser.

argparse has the benefit of being python std lib, while docopt have the benefit of being available in multiple languages.
Ok. I can see the difference but you have to write the help text either way right? Either it's a parameter in each argument definition, or it's all in one chunk. Still seems like six of one, half a dozen the other, but I can see how people might have a preference.
[deleted]
I love the idea and execution. These silly projects make coding more fun and can make people excited about coding.

I made a twitter bot for my brother. He's a staunch Republican and I would grab Nancy Pelosi's tweets everyday and send them via text message to his phone.
[deleted]
Seriously for a second, I think you‚Äôre an absolute hero. 

You‚Äôve demonstrated the brass ring incredibly clearly to a learning sub: these skills mean you can change the world from your keyboard with your brain. We now have something new (and pretty damned funny) that exists because you thought it‚Äôd be cool if it did and figured out how to translate that thought to code. 

Taking this from what had to be one hell of a shower thought to an actual implementation and treating it seriously enough to have a repo, README, etc, is impressive work. Thanks so much for showing it to us.
This is the kind of quality ridiculous content I come here to see
Guido wanted it this way...
Reading the title is hilarious. Reading how it works is funny. Good on you.
This is the best post on this entire sub forever.
What did you use to execute the code once every day?
TIL: I'm old.
You should check if Nine Trey Bloods needs a software engineer!
This is just awesome
This is gold!
The streets is done lmao
Beautiful, champ
Where do you run code like this?
I've been playing around with code to grab tweets by really cool Spanish accounts and texting them to me in an attempt to learn Spanish bit by bit every day.
I think I read a Charlie Stross novel about this script and some decerebrated kittens.
Oh my god. . . You mad man. I LOVE this!!! XD
I love this so much!
Love this.

As a noob I'd have a few questions about the code:

1. Where do you search/determine the most famous person today? I don't see code for that
2. You don't download the images, right? It gets taken directly fro the site.
3. Are there any guides you would recommend for building bots?
This made my whole week
Just wondering, how did you put the posts on twitter? Is there a Twitter api or something?
That's too fucking funny.
lol great job!
Just saw today's tweet. Magnificent.
Yo. This is great
That doesnt sound like a nice thing to do
[deleted]
[deleted]
Elaborate pranks and code, the internet was made for this.
I need that code.
Monetise this, lmao
I need this code!!
Code? I have a friend...
Replying in case the code is posted later.
Is this the line for the code?
That's wild. My brother is a staunch Democrat. After cat facts got old I started sending Nancy Pelosi's tweets by text message as a prank. Now he's a staunch Republican. He said he had no idea what politicians actually said, didn't follow the news much. Results may vary.
And soon, stitching.
<eyes narrow>

That's exactly what a bot would say.
It runs via Cron on a Raspberry Pi Zero. I prefer this to the sleep method. If something goes wrong and you don't account for the error, your script will break. Running into an unexpected error with Cron is fine because it will run your entire script again later.
[deleted]
I run it using cron on a Raspberry Pi Zero which just sits on my desk. Don't even have a monitor connected to it, just use ssh and vnc when necessary.
1. So I'm not necessarily determining the most famous person myself. I'm actually just grabbing the first celebrity element on the page using Beautiful Soup. So, the first entry on the page is automatically the most famous person (according to them). You can see how I'm doing this in the `get_celeb_name_and_image_from_famous_birthdays(url)` function.
2. I do download the images, and they're stored in a local folder and uploaded. This is necessary in order to upload the media to twitter.
3. I've been thinking about making a video for my next bot, so watch out for that. I watched [this video](https://www.youtube.com/watch?v=W0wWwglE1Vc) when first starting out, and it helped me understand how to use tweepy and the authentication process.
There's a wrapper for the Twitter API called Tweepy that I use.
It is useless stuff for fun calm down
You must be fun at parties
If someone looks at the twitter account and lacks the intelligence to notice every tweet is formatted the same, then they have bigger problems than "spreading misinformation" on the interwebs.

If a post is retweeted and third party lacks the intelligence to check account before propagating retweet, your concerns for them also should be more along the lines of "oh no, you lack the basic intelligence needed for human survival, please don't get hurt, should I help you cross the street?" And so on...
Mission accomplished!
Python enables *memes*. It's perfect.
but cat pictures? what about those
    doLaugh(nervous)
    say(‚ÄòNo, no bots here‚Äô)
How does it work while the file isn't opened
Thank you.  
I was trying to interpret that function but as I am not familiar with beautiful soup I didn't manage. Will dive into this now.
ok thankyou
[deleted]
Close your terminals and shut your laptops. It's finally finished.
That reminds me of the bots on ICQ
Cron is a process scheduler in linux.  Or just runs a program at a configured interval.  So he can set it to run the command `python /path/to/69Snitches.py` every day at noon.  

Sleeping the program is a bad technique because the process would be running indefinitely, and if anything goes wrong, the whole thing stops.  While with a scheduler.  The script with just gets called again in 23.9 hours.

It's the same difference between calling your mom every day at noon and having an ongoing phone call where you never hang up, but just set the phone down and come back to it at noon the next day.  Which is silly.
Awesome! Let me know if you have any questions, more than happy to help.
So elderly have vested interest in 6ix9ine? Or care?  En individual is responsible for what they believe and do not believe, and to research on there own.

Even our ‚Äùelderly" population has now grown up with TV and raised kids saying ‚Äùdon't believe everything you see on tv".
I recall there being a Yahoo commercial in the late 90's that referenced reaching the last page of the internet. Lol.
[http://hmpg.net/](http://hmpg.net/)
[deleted]
I misremembered it being Yahoo. This was the commercial. So many nostalgic neurons fired. Thank you.
There‚Äôs a reason people are constantly hyping ‚Äúautomate the boring stuff‚Äù. Python is a tool. It should be used to solve problems. The best way to learn is to make scripts or apps that solve a problem that YOU are facing. Any seasoned programmers can weigh in and tell me I‚Äôm full of crap, but I think most programmers will be googling syntax for their entire careers, so‚Ä¶ don‚Äôt focus too hard on the memorization
I tried learning python for a few years and only picked up the basics until I found a valheim discord bot that tracked deaths and announced events from the game onto the channel. It was simple, read the log file, catch a phrase, do something. Data was all csv.

So I started modifying it to add things, and breaking it. I spent more time coding the bot than playing the game. I gave away server time for groups so I could mine data (I still feel dirty). I started with basic knowledge and now have a *decently* working full fledged tracker that -

* records log on/log off time
* tracks steamid, viking, connected status, how long they've played
* death tracker
* help page for the bot commands
* bot commands for last online, players connected, time played, deaths, 12/24/weekly player count graph
* an eviction checker for players not online for 5 days
* restart server, update server bot commands
* various bot commands to modify back end db
* magic 8 ball, yes/no, and coin flip bot commands just because

I started with migrating the csv to MySQL using pandas to read and mysql for writes. It sort of worked but I was chasing crazy bugs because I had no idea what I was doing. Spent a lot of time getting help in the Python discord channel, having discussions, lurking, and figuring out what I needed to learn next. Pandas basics - check. 

After a lot of hardship, I found the random bug problem. The main loop was an async function and all my functions were sync. WTF is async? So I learn about async functions and loops. Converted sync functions to async and it worked better, but MySQL doesn't support async. *await* Find a sqlite library that supports async. *await* Convert MySQL queries to sqlite. I learn db basics during all this.

I'm still learning. I'm still chasing bugs and random errors. I'm working on a log emulator with a graphical interface so I can trigger specific messages for testing. Now I'm learning django so I can build a web app to do this. I got the debugger set up to actually step through code and change variables, and I have a good reason to do it besides following another tutorial.

The more I learn, the more I connect the dots, and the light bulbs come on like a Griswald Christmas movie.

Find a project that inspires you, poke around on git, brain storm, fork someones idea because you can make it better, solve a problem that doesn't need to be solved.

I wrote all this simply because no one in my life can grasp the feeling of accomplishment it is to have a working program that is actually useful in some way. r/learnpython is a constant inspiration and will teach you the basic from just lurking, and I can't thank the folks on the python discord enough. Any tough problem I had, someone was willing to help correct code or give advice on the spot. It's a great place to ask questions or get leads on things you might not know yet. 

So OP is correct, get to coding to solve a problem. Now I'm integrating programming into my professional life slowly, just simple data analysis for now (thanks pandas), but it's like being the excel wiz in the office only better.
People need to stop RUSHING THROUGH COURSES without practicing like crazy at every single step. Slow the down and play with things. Blasting through the course shit will go straight in one ear out the other, guaranteed.
I don't even think I finished the python course I had started, it kinda seemed like a waste of time

And that was a decision made when I was a much newer programmer. In retrospect, it was the correct decision.
I couldn't agree more. I read and read and read and made zero progress. I only progressed when I came up with my own (admittedly extremely basic) projects. I'm not even a bigshot with Python; I still consider myself a beginner. But practicing outside of studying was when I made 90% of my progress.
correct, good call. 

newbies: this is good news, not bad news. you will find that it's so much more fun to build something because you want to build it. Figuring out how doesn't feel as much like work as your problem sets did.
It's like the 7th language I've gotten to, so I'm well past the hurdle of learning to code. I've discovered that Coursera/LinkedIn/etc video lecture courses aren't worth a damn for *my learning style*, give me a plain text tutorial instead. Then concurrently I start a project and switch back and forth, as practical use is important like OP says.

Next one is SQL, that one is so domain specific that I'm worried about a project idea.
Agreed.

Honestly, my best coding has been done with pen and paper. If you can figure out what you want to do ahead of time and figure out how to do it, then write down the code, you‚Äôre not just banging away at the keys hoping this time it will work.
Courses are great at teaching concepts and patterns and how to use the language, but without learning to think about solving problems yourself and coming up with your own solutions, you'll never actually learn.

Get outside the course bubble. Build your own projects.
I don‚Äôt want to practice rock, paper, scissors or some card game. It doesn‚Äôt interest me enough to want to spend the time to figure it out. 

I want to take real world problems and inefficiencies at work and find a way to use it. But when I start going down that rabbit hole there‚Äôs another 50 things it seems I need to learn. 

I really want to learn APIs, but even that starts making my brain hurt after a few classes. 

Any advice would be great.
Are there any websites that let you practice coding? If that makes any sense
The best way to progress is to just start working on real world projects that interest you, no matter how easy or challenging. I never finished the first python course I started - I did enough to learn the basics and I found my project to be way more interesting than listening to lecture after lecture.
the only time I started to actually learn python was when I started looking for problems to solve at work, now, I honestly can't live without it
Exactly! I think a healthy mix of courses to learn the concepts and projects to put them into practice is best.

I recently released a free follow-along project: https://app.qvault.io/project/59fbb2aa-7d67-4e88-bac8-42f49798a9f5/4a7010c1-e7d3-4cc5-9b1b-d1f4e9f9ce81

You build a little web scraper :)
cool man, thanks. I actually havent read any coursework yet but already used python to do two tasks. just file renaming and basically an rss feed to text file generator. but the rss feed has base64 substrings to decode and im having a blast figuring out regular expressions to track it down. was hoping this was the right path to learn python, just keep using it
This is one of those problems that you can't find a real good answer from posting on a forum. It is a problem that anyone on a journey: be it python, weightlifting, figure skating, learning guitar, etc., has to face. Some people step thru it and come out the other side, and some people get stuck. I recommend reading Seth Godin's *The Dip* when you're at this point.
Thanks /s
way i see it is courses will teach you common syntax you‚Äôll be using and the idea behind logic but making projects employs that, and really puts that logic into action as you can begin to visualize what your program is doing.
Totally. Plus it helps if you care about what you‚Äôre doing, so pick a task you want done and figure out how to do it.
Go find some old code for something you want to do, copy paste it and let the games commence trying to bring it up to date. Such a great learning experience. I've learnt loads about web scraping without having to read a tutorial. Trials and errors and fails. There is do and do not there is no try (unless you add it to catch an error). Also the documentation for the libraries is invaluable and being forced to read it to get it work makes it stick.
I'm new to Python and have been following two learning tracks. One is a Python foundations course (LinkedIn Learning) and the other is reading the book Python Crash Course and doing the practice exercises. I've definitely learnt at faster pace but simply following the book and doing the problem solving exercises. I doubt I'll bother to finish the LinkedIn Learning course because its been much faster to read about the fundamentals then attempt the practice exercises (rather than sit through videos of someone demonstrating how to code).
The way I learned with python is doing some book or course and not only doing the exercises, but messing around with them myself.  Sometimes I would go on an hour tangent just trying to get something to work.
I've learned a lot from reverse engineering code as well.

  


And repl.it has been a great resource for this...

  


It's a super easy environment to get going in and it's so easy to fork and look inside the code of other people's projects.

  


I really recommend it.
OP speaks truth. Courses are good for getting the basics down. Doing a couple is kinda good to see how people approach it.

If Google something, instead of opening up the first Stack Overflow link & copy pasting the top response. 
Open up a few links, read through the comments & see how people approach it. If you do copy paste, try to refactor it for you. 

Did they use mydict.get(‚Äòfoo‚Äô) but you prefer mydict[‚Äòfoo‚Äô].
Or did they use f strings when you like .format() or even did they do a ‚ÄúI‚Äôm a lazy string with {} {}‚Äù.format(‚Äúpositional‚Äù,‚Äùbraces‚Äù)
If you build it ‚Äî the skills will come.
What code would you suggest to write?  My problem is trying to figure out an application.  Would you suggest making a simple game or something?  Or taking a game code and adding to it to make something different?
I learned python by starting small. It‚Äôs extremely frustrating at first but after a while of doing work it just clicks. 

I came across a baseball statistics book on Facebook and spent the $50 on the book. It was one of the first books I ever read from start to finish. Granted it was only about 140 pages, but it held my interest. 

It‚Äôs all about pushing forward. It‚Äôs funny how day 1 you read the work, day 2 it‚Äôs frustrating and by day 5 it all seems to make sense. Just keep going, you‚Äôll get it. 

Failure is okay, and it will only help you learn.
Once you get down basic syntax, applying what you learn is how you're gonna learn how to code. You can watch someone play an instrument all day, study musical notation and history, but until you place that horn into your mouth and blow...

You will never truly learn.
Any open source that projects that someone like me could help in?

I‚Äôd still call myself a little novice. Some experience in SpaCy, Pandas, Numpy, NLTK, BeautifulSoup4, and Sammy of the other frequent libraries.
I always say, make a project. You will learn the craft.
Yea, I'm facing the same problem. I know what I want to use Python for, I want to automate boring stuff, or even better I want to learn Machine Learning. But these are advanced topics and to understand this, I will need to start from the basics and practice.  But currently I'm such a beginner, I can't see how I should practice like all people saying. I can't write a program or script alone.
I personally want to practice but my code is so bad that I feel like it would be better not programming at all than program like this
I was all prepared with my downvote button.

But you hit the nail on the head.

I spent considerable time unemployed because I moved continents.  I programmed almost every day during that time, usually for hours.
Agreed with all of this. From my point of view, there are two different skills at play here: Reading and writing Python code on one hand, and writing a solution to a particular problem. Following courses helps you build up knowledge of how to read and write Python, but at some point there is a fall-off in how useful it is to read more and more of that. 

Think of it as picking up cooking as a hobby; At first you have to get the recipes, get the utensils, get your kitchen ready... But unless you start actually cooking stuff, all that you'll achieve is that your kitchen is getting full of increasingly specialized utensils, that your bookshelves overflow with cookbooks, and that you're still not able to make much more than an omelet unless you take one of those recipes and actually try making it.
It's like learning new languages like France. 

You can take all the courses you can but you will never be able to use it without real practice.
if you really want to learn more about the lang you are using "practically" then do codewars.com
The only problem i have is imagination
What I‚Äôd love to know is how I can turn my nice working automation tool into a nice looking interface. I mean there is no reason to do it other than the practice. I have no idea what framework, coding language, programs I should use.

I‚Äôd want to make an exe file that when you run has a little interface with buttons and boxes where you input the variables you‚Äôre gonna pass in the main function(), and maybe have some sounds. Like if there‚Äôs an error do a ding!
Learning the reality of completing the course in a rush, a year ago. Never did I give a second thought of stepping up what I have learned to the next step (self-made project).

While also dealing with mental health, I made an attempt to make a web app that showcases machine learning performance on heart failure and deploy it to the cloud (this step took a great deal of effort). Next, I found a success to fetch covid data from API with some help of automation (actually adopted from 'for loop') and wrangling them into csv format. What's more delightful for me is that file I am working with is set to read two distant dates as inputs.

Glad to know that working on projects helps the learning progress becoming better.
You'll learn the language when you have a need to use it and start using it.

I read many "Teach yourself Perl in X Days/Hours" years ago.  I then needed to wrote programs to automate testing software.  That's when it "took."  Most of that code that was being tested  I eventually replaced with perl code.

If you don't have a need, you will not remember.  I read the Pascal books too.  Had no need to write Pascal beyond the cooks and college and could not write any Pascal today.
Courses teach you how to talk the talk. This is still essential because it gives you an idea of what to search when you run into problems.

Practice teaches you how to walk the walk. Knowing how to describe your problem to a search engine is only the first step. Once you have searched, you now have to evaluate your opinions and usually do a ton of debugging to factor what you've found into code that solves your problems. This means iteratively trying out different forms until it doesn't raise any errors, and semantically means what you want it to mean. Then you optimize.
Good explanation. But rather than calling it "practice" which makes it sound like they need to go solve some boring DSA related problems, I'd say go ahead and "build" something cool :)

It won't even feel like you are consciously practicing, Python will start to become like a third hand, you will stop thinking about small things like syntax and built in functions to do a common task, and you won't face basic errors like \`SyntaxError\`s or \`IndexError\`s , and your sole focus will be on completing the task at hand and implementing your solution will be a breeze
Courses are necessary but they need to teach the right way: By forcing the student to code a lot on their own. If you're not in a course that shows you some information and then gives you a project to complete on your own, it's not effective. Anyone can watch a video and track with what the instructor is saying but until you've had the real struggle of code you just can't get to work right, you've learned nothing. You have to write *a lot* of code over a long period of time to become a good programmer.
I learned more from writing my own web scraper than I did from multiple courses. Courses are definitely a good introduction to the language but you can‚Äôt learn anything without doing it.
At what point do you start 'using' python though? I'm brand new and just started Python Crash Course.
So i shouldn't rely on the course, and just kinda ditch it and find stuff I'd like to code myself?
How can I learn by not trying?
I was always a self-taught person. Me, I just grab some cheat sheets. Look at some beginner codes and run with it. I usually start by adding or removing some existing simple codes to find out what good or harm I just did. It's usually the trial and error method. Than figure out the rest by getting my hands dirty at all times. I learn much faster this way than some silly course I have to pay for. I grab a few books, mostly for references and continue learning this way. This method never fail me of learning of things I like to learn. Than I can continue to create my own stuff. It's the willing and full effort to learn. This is how I learn to code.
Some courses are a blatant cash grab. I'd suggest looking at free resources at youtube first.

The learning formula that better suited me was:

1. Find a real life problem I need to solve. 99% of the time it's automating some boring stuff.
2. Write the solution. Googling everything that I don't know. In the internet there's everything you need to know.
3. ***Refactor the solution until I feel there's nothing more I can optimize***. This is the part where I REALLY improve as a programmer.
4. BONUS: Look at challenges in codewars, etc. Look how other people solve the same problems and, if you find a better way. Add it to point 3.
5. BONUS2: ***NEVER*** copypaste code. If you need some exact code snippet then you should write it char by char. Hand memory is real in this case.
The problem is that people think that once they‚Äôve learned the syntax of a programming language then they are programmers. There is a lot more to programming than learning the syntax. Programming is an art and just because you know the names of the colors doesn‚Äôt make you an artist.
Yes, 100% agree.  Just find a problem that you want to solve.  I am currently working on 2 scripts and 1 application to save time at work.  I have learned alot from just doing those 3 things!
[deleted]
I do think both, the learning process, and the writing process is needed. I don't really think, it's a good idea to just create code. You won't progress that much. Most of the courses are pretty bad in terms of teaching the language interestingly, but there are pretty good courses too! If you just write code without learning the basics, you won't be a programmer. You will be a script kiddie. I do believe the big difference between a programmer and script kiddie is the level of knowledge of the basics. If you don't know what a variable is, you are a script kiddie. Nowadays, languages like JS or Python provide you a high enough syntax to just write code without thinking about the type of the variable. Of course, this comes with a price: Performance. And if you are programming with Python or high-level languages, it won't really matter if you understand how variables work, as the language takes care of that. But it is good to know what OOP actually is under the hood, how the language creates variables, etc. Scripting straight away will give you a lot of experience in debugging, but others, who took the time to read the specs and docs for the language, will be better in long term.
Thanks for the advice.
I would love to practice a lot more than I am, but I can‚Äôt find any projects that really capture my interest lol. I have a GitHub full of unfinished projects and discord bots. 

I have started to work on a version of the Game of Life with monogame that‚Äôs been pretty interesting.
I don't think Googling syntax is as common once you're experienced (unless you're jumping between weird languages a lot), but Googling library documentation and common pitfalls certainly is.

Ya, the memorization doesn't need to be focused on. You'll automatically memorize what you use often, and will memorize the resources for everything else. Like, if you have any question regarding HTML or CSS, MDN is your best first stop. You don't need to memorize everything the site holds are long as you memorize that it's where you should search.
You are exactly right. Without projects, whatever they may be, learning programming is kind of useless.

You are also right with looking everything up. I have to look up the arguments of functions all the time. Knowing that they exist is way more useful than memorizing the exact parameters. Close to 10 years in since I started out. Still the same, just less often.
agreed start building your own project and you will learn so much more than any course that already has the answerer. 

by doing so you are simulating what happens in the real world, you are given a problem and asked to solve it with python. 

just do it, it can be rewarding and useful for you. also gives newer devs something to talk about at interviews vs oh i followed a tutorial, and copied the code.
> There‚Äôs a reason people are constantly hyping ‚Äúautomate the boring stuff‚Äù.

The owner has a ton of reddit accounts and astroturfs here. I used to be a fan before I caught him using fake accounts.
Could you link to that discord bot? Id be interested in it.
This is what it's all about :), props üëç.
I don‚Äôt think there is a better answer to the question ‚ÄúHow do I improve my coding‚Äù. I think a lot of noobs would appreciate you sharing this, just so they know it‚Äôs okay to just, let it ride. There‚Äôs no correct path. Just try to solve or work on something you care about.

To share my story,
I loved playing StarCraft 2 (SC2), so my friend and I tried to make a SC2 bot that could play other bots. It helped me learn to work with another person (pretty much necessary in real world), taught me A LOT about Python and building large applications. Plus, there‚Äôs a whole community of people to help.
Agreed.  Play around with the code you are writing in courses or books.  Expand on the exercise in your own creative way.  You can learn a lot in a small amount of time doing that.
can you recommend some resources where i can play around with data or something to get my hands dirty with each chapter in the course?
I said "i want to make a blackjack game in python" then i did many multiple projects and never looked back lmao
I am still trying to finish ATBS because I started it about 3 years ago, and I kept jumping from tutorial to tutorial chasing something new because I would get stuck/bored, but then I would do even harder courses like the MIT and Harvard and I couldn't put the time because of work and indiscipline. 

it's more of a symbolic gesture for myself right now, but I am at the point where I see the final chapters, they are interesting but I don't myself using them yet, thus feeling the same as wasting time. Now I see tutorials as specialized documentation
You seriously could learn (or master) Python with just small projects ?? Or do you need the basics ? 

This course got me soooooooo bored, and I forget too quickly
With SQL, you can combine it with other programming languages to make a program that uses a database.
> Honestly, my best coding has been done with pen and paper.

This is probably the best way to get better at coding, using a pen and paper.

* Write out what the program will do in general terms.
* Sketch out the general flow of the program.
* Start writing each step of the flow of the program, tweaking as you go along.
* Then write code in an IDE.
I only learned this one (truly) just recently.  I finally did it.  I went to the store, got one of those 99cent notebooks and started hand writing all of my algorithms.  All the logic.  I had been doing it "sort of" in flow charts and other shit.  And, yeah that helped for a lot of stuff.  But, getting down to business and writing out everything solved MOST of my problems in a single week.  Now, I manage to accidentally find my problems in my logic before it ever makes it to the computer screen, and I quickly manage to go "oh hey, I'm gonna need a <insert concept here> to make this work."

I don't know the answer for everything yet, but it sure is getting a lot easier to articulate.
I would argue that it's better to write code on a pc, not on paper, because you can easily execute it and it doesn't encourage learning the syntax by heart, but if that's what works for you, then that's fine, as long as you are the one coding.
This, you sketch out something that resembles an adventure game path. Yeah Visio looks nice but not in my head. In my head I see what needs doing, when and in what order. On paper it looks like nonsense. Once I added OOP many years back it got even more silly but it works and it still makes sense.
> Honestly, my best coding has been done with pen and paper. 

WHY. 

I literally haven't done this since the early 1980s.  Why would you sketch code out on a medium without a delete key?  I type easily ten times faster than I hand-write.

Also, like most programmers, it is rare that I work alone.  If I write up my design on paper, what do I do then?  Send them an image?  What if they want to update it?
Sit down and make the damn card game. Just because you have tools in your tool belt doesn't make you a carpenter. You need to start small.
[deleted]
Solving real world problems is what really motivated me. But, it's not like you have to code a whole program up front. I started by just making the simplest script I could for a piece of what I wanted to do. So like reading data from a file and printing it. Then I built on top of that on step at a time.
[codewars.com](https://codewars.com) is probably one of the best. It has thousands of exercises organized by difficulty. And even better, you can see other people's solutions, which is one of the best ways to learn. Also, [leetcode.com](https://leetcode.com) is a good one as well.
[https://adventofcode.com/](https://adventofcode.com/) has been a favorite of mine. It runs for 25 days every December, but you can go back and do past challenges. 

The challenges get progressively harder. It is not specific to any programming language.
I'm building one called [Practice Probs](https://www.practiceprobs.com/).
You don‚Äôt need a website to do it, open a text editor on your computer and write programs in it and run them. ‚ÄúPractice‚Äù by actually doing the thing.
Tons of them.  That being said.  I recommend small projects and then ramp up slowly.  You tend to learn a lot of useful stuff writing an actual programs instead of solving puzzles.  I do like doing puzzles too though.
You can go to codewars.com ,theres a lot of exercises there grouped by difficulty. Also, you can google ‚Äúpython projects/exercises for beginners‚Äù.
Oh don‚Äôt worry, every beginner‚Äôs code is bad. But the only way you can make it good is by writing code anyway and getting advice from people who are more experienced.
Tkinter is what you are looking for.
Well, it depends what you mean by ‚Äúusing Python‚Äù. You could use it at a job or to automate certain tasks for example.
That‚Äôs not really my point. My point is that a lot of people ONLY do courses and no coding. What you should do is go through one or two courses and them start coding.
That‚Äôs not really my point. My point is that a lot of people ONLY do courses and no coding. What you should do is go through one or two courses and them start coding.
>d the syntax of a programming language then they are programmers. There is a lot more to programming than learning the syntax. Programmi

I do agree. Knowing the syntax of a language makes you a script kiddie. Knowing what is under the hood, makes you a programmer
I think part of the problem is also dealing with libraries when you need one to do something specific. Then it's almost like learning python all over again except there is less detail or examples. And that's where you need to be able to Google issues and interpret answers.
[deleted]
Generally, I don't look for simple syntax like assignment, loops, conditions...like you said, it isn't necessary. What I do Google on an almost daily basis is "JavaScript MDN Array", because I can never remember the order of args in `Array.prototype.reduce` (is the collector first, or is it the value?), or a similar story but looking up the keywords supported by the `Intl.NumberFormat` constructor, and other hyper-specific details.

Yes, I know this is a Python sub, but my current job is JavaScript, so that's what's my daily driver. I'd love it if I could do Python, or Go. Hell, at this point I'd even take C# over JavaScript, lol
googling syntax is fine or at least making mistakes is. Sometimes I right python when I mean to write in javascript
This is almost backed up by him having more than 3x the upvotes of the next highest post...
prove it or gtfo
Original work:
https://github.com/ckbaudio/valheim-discord-bot

My fork:
https://github.com/bayoumaroon/valheim-discord-bot

Note this is a hobbyist/beginner attempt so there are still issues, namely people logging in close together causes the same name to be assigned to 2 different players. That's why I'm building an emulator so I can trigger events for proper testing and likely rewriting a lot of the code.
codewars. com
There are so many datasets in stack overflow and Kaggle. If you have a laptop, you are ready to go.

There are also lots of public notebooks in Kaggle that you can follow in your learning process
I think I made a few discord bots, something with flask, dabbled with ML a bit, and since then I only make small scripts for fun but I'm pretty confident I could take on whatever I need to in python
Imo basics are pretty easy to pick up so you could probably go straight into a project, you'd learn basics from a project anyways as long as you use the internet effectively to search things up, if I was learning a new language, I wouldn't bother with any of these courses bc most high level languages are pretty similar in what they offer in terms of basics. If you're bored and breezing through it, you can probably just skip and start a project.

This is just my opinion but I find a lot of ppl especially on this sub are so focused on picking the right course when it doesn't matter that much, I think (not rlly for python but coding in general) it's much more useful to learn technologies/frameworks, especially if you're learning with the intention of getting a job/add to your resume.

Like for a lot of more advanced things in python, yea, they're cool, but you can accomplish the same thing just by using the basics. Also even if you are insanely skilled at using python, you can't have two lines on your resume saying, you're good at python and you're rlly good at python. Usually jobs are looking for what technologies you've used.

Even if you're just doing it for fun, I think it's better to learn new technologies/frameworks to open up many more possibilities for what you can do
Yeah, I'm still deciding what type of database I'd want, and what data. Whether it's something practical or just fun.
Did somebody say PsuedoCode?
This, and also just keeping track of bugs+fixes and how various changes affect performance is important for me. Can only recall so much
> using a pen and paper.

WHY!

https://www.reddit.com/r/learnpython/comments/tbba69/why_you_cant_progress_at_python/i082c6o/
It‚Äôs mostly when I‚Äôs struggling with an algorithm or how best to implement that I write on paper.

I think memorizing syntax is pretty important for a first language, honestly. 

Definitely should be on the keys practicing though.

Also, reading code and figuring what it does and how. You can‚Äôt be an author if you never read.
I don't think OP is referring to literally writing the functional code on paper first. Other comments, and my reading of it, is more along the lines of sketch your program before writing it. Draw up a project plan and flow chart so that you go in to write the code only having to think 'how do I write the syntax for the McGuffin' rather than sitting down to code and thinking both 'what am I doing here and how do I write the McGuffin once I know what it is supposed to do'.
I understand where you are coming from. I read the advice as being for people just learning the language and often working by themselves. Once you have been doing it for a while, or are just familiar with logic, it is probably better for you to actually type as you go. But since I am currently learning, sometimes it is hard to break down what I want to do properly in the way the language wants. So writing it out kinda helps me breakdown what I want more efficiently if that makes sense.

Edit.
 It's easier for me to focus on syntax and methods when I have the plan sketched out even in an abstract workflow, rather than worrying about both at the same time.
I used to work in data entry. As I learn more python I keep looking back thinking how I could've automated almost my entire job.
Yeah but websites give you challenges that you would otherwise not be able to think about.
If you could map out a way for someone who has no programming experience to learn python, what would you suggest?  I have watched many videos that discuss the things python is capable of (tuples, arithmetic etc.) but then I just kind of hit a "OK, now what?" phase.  Basically, I always get to the "hello world" phase and then get lost.  I appreciate your advice, I lurk here often.
Boss! Thanks
I mean actually writing a program as opposed to just learning.
Ohhh, alright
Ya, going between Clojure and Python was absolutely brutal. Print in Python: `print("Hello World")`. Print in Clojure: `(println "Hello World")`. It's frustratingly difficult to adjust whether or not you put the parenthesis before or after the name when you're on autopilot.

My point was though that once you know the language, those aren't usually mistakes you need to look up (or at least I haven't found them to be). I make the mistake during the transition, but readily know the problem as soon as I get the syntax error. Remembering the exact order of arguments in every function in all the languages I know though? Ppsh. I'll forget a function's argument order minutes after reading the documentation if it's not a function I use often.
I'm the same way with some of the pandas stuff. "Does drop\_duplicates use "subset" or "by"? What about sort\_values?"
This is insane

https://www.reddit.com/r/learnpython/top/?sort=top&t=all
I dont give a crap what you think. Next time he spams the board, look at the accounts praising him.
Codewars has doable and really hard challenges. Some of them are really not trivial.
thanks!!
The chances of me getting a reply are low but If by any chance you see this reply, a year later, please could you offer some advice. I went through most of the course at codeHS and I felt good about how I was learning, I wanted to take a break from just the constant problems and going through the course.  


So I decided to try projects. I don't know what's wrong with me, I cannot do any of them. I can do basic number generators and calculators but anything above that is just impossible. Right now I tried tic tac toe and I was so flabbergasted because HOW WAS I SUPPOSED TO EVEN KNOW HOW TO MAKE THE BOARD?  


I searched up a tutorial, only watched the first couple of seconds to get a small start and just continue off of there based on ideas.  But no, I cant, I'm stuck.  
I try breaking down the problem it does not work, I've tried everything.  


"Ok, I first need to draw the board. oh I ALREADY FAILED,"  "Ok what about user input" and then I get the user input and I am just clueless.  Watching a tutorial does not help because I won't learn. Man how can I develop, please help me.
Thank God, my brain is getting cooked and burnt to ashes going through these tutorials. I think the stimulation of any type of accomplishment and progress would motivate people, or atleast me more
I would start with something simple where you just want data that persists between multiple runs of a program. For example, a todo list application, where all you are storing in the database is a single table with a single column of strings that are the items in the list. Then figure out how to do things like add a priority to each item so you can sort by priority, add due dates, etc.
Phil Collins. Or was that PsuPsuedocode?
Pseudocode is great, but it‚Äôs also great feeling  to just copy from paper onto screen and it just works.
You mean "pseudocode".  "Psuedo" is not a word.  :-)
Yeah, I will look at the refs while I‚Äôm writing. My goal is usually to just copy from paper to the screen.
You mean you don't sketch out projects and draw up a project plan before you start? Pen and paper is obviously not the essential part, I 'pen and paper' my scripts and programs but I do it in Notepad because I lose paper immediately. Including writing actual code where it is helpful to be able to see it function.
>It‚Äôs mostly when I‚Äôs struggling with an algorithm or how best to implement that I write on paper.

Never tried that. Might give it a try the next time I'm struggling with an algorithm.
I automated probably 90% of my data entry job using nothing but ATBS and Google. It was glorious. I was down to actually, really working about 4-6h a week.
Generally just trying to write a useful program will pose plenty of new challenges.
I've never used Clojure, but seeing that syntax I hope I never have to.
>The chances of me getting a reply are low but If by any chance you see this reply, a year later

Lol it's only been a year, I'm still pretty active on reddit

>how can I develop

First off, this is a pretty open ended question, you'd be better off asking project specific questions, there are tons of subreddits with megathreads specifically for this. This is going to sound cliche but from your comment, it sounds like the main thing holding you back is your mentality that you can't, rather just thinking that you can't, just code what you can, figure out what specifically is blocking you, then ask about that

So let's take tictactoe:

- So you're stuck on the board, presumably how to show the board, you can go the easy route and make it all text based, so just print out the board after every turn, or you can have a fancier display (a GUI)
- Now you don't know how to make a GUI, let's say you didn't even know the word GUI, you can search it up, something like "how do to display my game python" (always add what language you're writing in)
- From there, you get a ton of pages talking about this library pygame, so you try mimicking what they're doing but it doesn't work, looks like you need more tailored help, so you can go on reddit and make a post. Something like "this is what I'm trying to do, this is my code, what am I doing wrong" there should be tons of ppl who can help you spot what's wrong with your code
- From there, you'd have a working display but it's just showing an empty board, of course, we haven't coded any state or game logic (aka remembering which squares are marked and what to do on certain inputs like the first 3 in a row), so from there you start adding more code, when you get stuck search up your problem and if you can't find any solutions, make a post and ask about your specific problem

I think those were all short logical steps that you could make. When you're doing a project, just think, what are you missing. For the things you're missing, what do you need to do before that. Do you know how to do it? If not, search it up. Like for tictactoe, I'd do the state and game logic first because for me, it's easier and I know how to do it whereas I'm not as familiar with pygame.

So overall, do what you can, if you can't figure it out, search it up, and if that doesn't help, ask online, the internet is your friend. Most of the time spent coding will be debugging, not typing out code and searching things up is natural. I currently work a dev job and I do significantly more debugging and searching online than straight typing out code.

You're not supposed to know how to do things from the start. There are constantly new technologies I have to use and obviously I'm not going to know how to do it. So usually I'll look at a tutorial first. Try to get gist for how things work. I like to play around with the code and adjust to really figure out what it does and how to manipulate it to do what I want. From there I try to adapt it to my needs. If there's something I don't know how to do, I search it up. For example "how do I display a video in React" (React is a technology for making websites) But without searching it up, there's no way I'd know how to do it.
Basically what you might use Excel for? Though SQL is too much engine for a small data set, it would at least get some practice in. And it's not like I haven't done tiny Data.Frames. this is a good idea, thank you
Funny enough that is the way I said it to myself as I typed it. üòÉüëç
Sue de Coade?
This just seems like a major waste of time. I guess if we are talking about super simple scripts
Probably similar to rubber ducking it.

Force your brain to slow down and think about it step by step. How it's supposed to work, and compare that against what it's doing, or actually logicing it out to see what it's doing.
Sure, but a beginner wouldn't know what programs to write. They wouldn't know that they should practice, for example, sorting algorithms. Or an algorithm that detects palindromes etc. That's why having a list of exercises can help.
It's actually a great language. I like it more than Python, but Python is more generally applicable. The syntax looks like that because the language is made up of lists. The code itself is just lists that the language can manipulate, so you can easily write code that can write/rewrite code.
The syntax is the easy part. It's like lisp and the only real syntax is parentheses. The hard part is not the syntax but getting your brain to work in the functional/clojure way of doing things.
Alright man I'm pretty miserable about it, I feel like even with help I somehow still get stuck and I try to limit myself to the help (specifically tutorials)  
because I don't feel like they can offer me anything really.  


But I really appreciate you replying back, thanks.
Yes, it would just be for practice, and like a "Hello, world!" where it forces you to set everything up correctly, issue SQL commands to the database, etc. without having to also worry about figuring out how to structure more complex data. Then once you understand the basic mechanics, build up from there.
They should try and write anything. It doesn‚Äôt really matter.
You can google "small projects for beginner programmers".  I absolutely recommend small programs first, but solving puzzles is fun too.  I just don't you learn as "densely" when you're doing the puzzles over doing a program.  Programs are a different beast.
maybe you just wanted to rename some files for example, basically a course in regular expressions and string manipulation to do this
Idk, you could try just sticking through with the tutorials until you feel like you understand everything
That's why you saw these kinda posts every day. It's easy to say 'anything' but actually came up with that 'anything' required actual coding experience and problem solver way of thinking, that they haven't gained yet.

I usually just tell em to start with automate their excel sheet if they got office job. I did mine and I seriously get a kick out of watching computer doing everything on their own. It's actually quiet cathartic in a sense lol.
>	 It‚Äôs easy to say ‚Äòanything‚Äô but actually came up with that ‚Äòanything‚Äô required actual coding experience and programming thinking that they haven‚Äôt gained yet.

I don't think these people don't have ideas - what they have is the mistaken notion that there are only *some* projects they should try, and other projects are ones they have to "level up" to be able to even attempt.

It's actually not like that - let your reach exceed your grasp. The point is not that you will *complete the project* (spoilers: you won't) the point is that programming is the art of problem-solving, and you only learn how to do that by encountering problems. Trying to determine a project that is "appropriate for your skill level" - that is, that won't cause you any problems - works at cross purposes to that.

What people make these posts to ask is basically "what's the pathway where I don't encounter any difficult problems that would impede my progress" and the correct answer is "probably one where you're not very good at writing software by the end of it."
I also agree that the people asking what project to do is because "anything" is too broad and they don't have a clue, or better said they don't have use for python in their day to day. They probably are just students looking to increase their skillset, which is good. But they don't know what to do with it.

I started python because I used to lurk the excel sub a lot, but they were always saying it's better to learn a programming language than VBA, so they were always recommending python. I always saw a use for it at work.
Maybe teach your kids python as you learn? That will only help to solidify your fundamentals
41 year old Dad here 2 years in. Keep it going brother!
I'm in my 50s and have landed in a spot where I'm having to basically start over and reinvent myself. I started with a freecodecamp.org YouTube tutorial yesterday, using PyCharm. What are you using to learn?

Cheers to fellow newbies!
you got this man
I'm about your age but have been programming my whole adult life. 

I can tell you for certain there is one thing that will help you get up to speed and be a productive programmer more than anything else. 

First a story.

I am not a sports fan. I do not enjoy watching sports at all. I do not like to watch them on TV or in person. I have seen major local franchises win it all and it did not effect me in any way. I have tried to make myself care, I do not care. I can not care, it isn't in me. It would benefit me greatly if I liked sports. I could bond with other humans, maybe make some friends, certainly have things to talk to others about. "Boy he really knows his sports" is something nobody has ever said about me. I would LOVE to be a sports fan, it looks like a lot of fun. I had long since let that dream go when I heard a piece of advice from none other than Artie Lange.

Artie said, and I'm paraphrasing here, something like this:

"Here is how you become interested in sports. Let's say you have $1,000 to your name. It's 100% of the money you have in the world. Now, go down to your local bookie and put $5,000 on the next game. You'll learn everything there is to know about that sport in one game and you won't miss a play."

What he is saying is simple: to become interested in something you need to have incentive. That's how you get started, you have incentive. How you keep going is you get good at it. Why? Because we enjoy things we are good at. Who enjoys things they are not good at? Nobody. The problem is when you start something new, you are not good, so it is not fun, ergo: you need incentive.

You want to be a Python programmer, but you do not know where to start? Eh, I don't buy that. Google "I want to be a python programmer but I do not know where to start" and you will find some place to start. That's not the problem. 

Your problem is twofold:

1. You do not have incentive.
2. You are not good at programming so it is not fun.

You really can not do #2 without #1, so let's focus on #1. Incentive.

This is going to be something you decide. Think about a simple (can't stress that enough) program that would make your life easier. Something you could run that would do some calculation or do some task that would be fun or useful to have. Don't worry about execution yet, just decide to write something that YOU need. You, personally. Now, open up a new word doc and write down, in plain english what that would be. Keep it simple. Do not add a ton of features right now, in fact, try to make it as simple as possible, but, something that is still useful. If you need to send yourself an email at 3pm every day that tells you the weather tomorrow, don't go adding in all kinds of colors and graphics in that email. That email should say:

    Red Maxx tomorrow it is going to be cold and snowy with a high of 32 and a low of 20.

No colors, no links, nothing fancy. It will do the one simple thing you wanted it to do.

NOTE: If you are not excited by this piece of software you are planning to write, start over and pick something else.

Now, you've picked the thing you want to write.

You will be amazed at how fast obstacles fall away. You will surprise yourself with the sheer amount and type of code you write in a short time. When you look at your code from a month ago you will wonder how you were ever that dumb. This is the path to becoming a good programmer.

Once you are a good programmer you will be having a lot of fun and the amount of personal excitement and interest you need will give way to something else: intellectual curiosity. 

You see, I tricked you a bit there. Not only were you getting good and having fun, you were also being exposed to new things in your language of choice (Python) and you will start to broaden your knowledge of what is POSSIBLE. That alone will keep you rolling on new, esoteric, interesting projects.

Don't believe me?

Buddy an entire ecosystem of code has been built this way, it's called 'open source software'. 

Do you think for a minute all those nerds writing all that code weren't learning and becoming interested? 

The servers that are running the website we are chatting right now were built because nerds were simply interested in IF they could do something.

Believe me once you are rolling, you are going to wonder how you ever did anything else.

The 3rd and final piece of advice I will give you is this: If you want to solidify your knowledge in your own mind and in a very formal way, teach Python to someone else. That will lock concepts into your brain in a way that nothing else will.

Godspeed and good luck.
Awesome! If you ever need any help you can DM me (on here or Discord `Iapetus11#6821`)!
I would learn some sql, get a job, then python.

Easier to get your foot in the door with some reporting job that uses sql.

Then while on the job, learn python to automate things.
This is good, and free I believe as it was just posted. 

https://www.reddit.com/r/learnpython/comments/la98y1/automate_the_boring_stuff_with_python_online/?utm_source=share&utm_medium=ios_app&utm_name=iossmf
Good work. I'm 33 and have just started learning Python as well because my job in music industry has pretty much been destroyed.  I've used the data quest course which was ¬£50 a month but then bought the A-Z of Python on Udemy for ¬£12.99.  It has been great and I would highly recommend it. Also, practice a problem with code wars everyday.

[https://www.udemy.com/course/complete-python-bootcamp/](https://www.udemy.com/course/complete-python-bootcamp/)
Don't give up, and Don't be afraid to google! Even the most skilled developers use Stackoverflow and google.
Can we stop for a moment and realize how many people on this thread get laid off btwn 45 and 55? And it seems be a trend everywhere. Happened to my father when I was a kid, too. What gives?
Check out Corey Schafer‚Äôs YouTube channel! He was an extremely helpful resource when I was first getting started!
One of us, one of us, one of us.
Sometimes the best way to learn is to teach others. You know what to do bruh
What materials are you using?
If you have the funds have a look at Raspberry Pi, never too late and there‚Äôs too much regret in the world as it is, be kind to yourself.
Maybe try Automate the Boring Stuff by al sweigart. It‚Äôll teach you enough to start building projects (which are including in the book) or if you want a more comprehensive in depth look at python. Try python crash course (by the same author).

And if you have any questions look things up on GitHub. 

Good luck!
We all regret not doing it earlier. You're in good company. You've got this
The wealth of knowledge that is out there now is crazy. I prefer projects as you see the final result. Anything that inspires is great. RaspberryPi was my way in.
43 year old dad here. Keep it up!üòÅ
I guess just being 75 years old all I can say is any new learning experience starts with deciding what makes you more comfortable and can turn into an enjoyable activity - in my case two areas that I‚Äôm still working on ( programming is a lifetime learning trip!) and they are - sql frontend and backend development and data wrangling - analysis - ml and ai by extension ! If there any question please don‚Äôt hesitate !! Good luck
36 year old dad of 3 here. I‚Äôm right there with ya bud, just started and I‚Äôm kicking myself in the ass for not starting sooner.I‚Äôm on mobile and unfamiliar with cross posting on Reddit but, there‚Äôs a code for a free Udemy python course on r/learnprogramming right now. I just picked it up for after I finish the web dev course I started last week.
Check out this thread from today: 

[https://www.reddit.com/r/learnpython/comments/la98y1/automate\_the\_boring\_stuff\_with\_python\_online/](https://www.reddit.com/r/learnpython/comments/la98y1/automate_the_boring_stuff_with_python_online/) 

have fun :)
You got it, sir! This is one really helpful community and I hope you don't face many problems :)
I am 49 and doing the same thing. I would highly recommend starting with the book Python a Crash Course. After that you can go on Udemy and get a bootcamp course for around $13 if you put chrome in Incognito mode.
46 here this actually makes me feel good :) good luck.
It's never too late to learn anything new. There are people on my university course in their 60s and who have kids. You can totally learn Python!
I am very happy to see this and kudos.  I hope to see some posts about your progress in the future.  

I am 45, dad of 2 and trying to get into Python.  I think Python (and programming in general) would be a good change and offer a lot of future growth for a job change.  I did the Self-Taught Programmer on Udemy, but I do not think I got enough out of it.  I am now doing Tim Buchalka's Learn Python Programming Masterclass, but I haven't gotten far into it, but it is comprehensive so far.
Good luck, its never to late. 45 aint that bad to start learning anything. Fullspeed ahead
Better late than later!
Nice
Good on you! All the best man
Hi, you cna do this üòä we are always here to help you out and seek help ourselves‚ù£
I'm with you on this. Know exactly what you mean.
This is so wholesome. :)  
It's doable.
What are you using to learn?  Im using Udemy and Learn to code Python the Hard way but its a b!tch trying to teach my children the same methods Im learning.  I wish there was a simple website that steps through things so my kids can stay "more engaged!"
It's never too late sir, you will nail it I know.
Appreciate the help
[deleted]
Respect my man!
Keep it up! Cheering you on ü•≥ü•≥ü•≥
I had a senior accounting position that I left, to take a Python focused Internship, a few months later I accepted a jr data engineer position and I love it. You got this u/Red_Maxx!
Haven't seen it mentioned, but Jose Portilla's class at Udemy is really good.  Maybe $12 or so.  Talks about IDE's but everything is through Jupyter Notebook.
python is always worth learning. Its not going to take time to get started.
You got this mate, keep it up!
I‚Äôm 43 with 2 young kids and not laid off, but have an IT skill set based on lots of proprietary software. I‚Äôm paid well but BORED.  It‚Äôs also been limiting as far as career choices go.

Ive realized that the projects I enjoy most are ones where I hack some code together, but I‚Äôm from from a legit software engineer. So I‚Äôve been waking up at 5 most mornings and working my way through Udemy courses and some books I‚Äôve bought. 

The biggest challenge I‚Äôve found (other than time) is there is so much to learn to become competent, above and beyond just the languages themselves. For example, I was trying to work with a repo at work but had to install a Docker image for local dev. So I realized I need to add a Docker course to the list cause that was a foreign language. And then there‚Äôs Kubernetes. And Jenkins.  And the list goes on

But good luck on your journey and know that you aren‚Äôt alone!
Are Jupiter notebooks more for data science than something like vscode?
I am new too, I am cs graduate, I am good enough in js and  started learning python parallelly.
Very nice üòâ
Best of luck on your Python adventure!
Good for you!  PyCharm is great and lots recommend it.  Have you looked at Anaconda too?  There are some friendly tutorials out there on using its platform to analyze large datasets
Good stuff and I hope your career outlook picks up soon.

I also left it late in the game and regret some of my choices in my youth. Hopefully it's not too late for us!
Never too late!
Scratch is good and fun to teach the programming fundamentals to kids. It is a drag and drop block-based system that a lot of kids use to make small games and stuff.
Good for you for starting it, it has its frustrations but keep at it and the community is always here to help!
You got this!!! If you want to get your kids more interested Minecraft has a coding thing for kids which if they already like Minecraft could get them into it. It isn't really coding but more building the logic and understanding of programs. I think it might be the best way to do it especially since kids hate learning things from their parents or maybe thats just me.
For me it was a project I thought of and I was on and off that project for about 3 months.
Now I'm in university learning computer science. That one project made me fly through programming classes like it's nothing.
The project was a scraper for videos on certain site and needed to manipulate strings. concatenating strings and lists. 
Now I'm learning classes, recursion, algorithms and sql
Love it.
Nearly the same, except I'm 46 nearly 47.  Don't mourn the time you weren't learning, celebrate the two year head start you got on me!

Similar story. Four years ago a friend, who was at the time in his late forties, and I were listening to Jeff Buckley. My friend  told me he always regretted not learning the guitar. I said, "Why not start now?" and he mumbled some bullshit reply about that ship having sailed.

I had never had an interest in learning an instrument but decided to learn that one guitar track to show him it's never too late. I haven't ever played that song to him but in the four years since there's probably been only twenty days when I haven't picked up a guitar and played. It's part of my life now and I absolutely LOVE it. I'll be pretty good in about five years, too.

The point is, four years has gone by and my mate would probably still say he regrets not learning the guitar when he was younger. We're always younger than we will be.

Fuck regret. Crack on.
I‚Äôm 35 got a wife three kids [‚Äò7‚Äô, ‚Äò11‚Äô, ‚Äò14‚Äô] just started my degree with Open University, learning Python on the side too! Can‚Äôt wait to switch from my job barbering to this!
Teach your kids! That will be the best for their future.
Check out this course, discounted for the next day or so! I‚Äôm not affiliated with the author in any way I just like the book he wrote a lot. 

https://www.reddit.com/r/learnpython/comments/la98y1/automate_the_boring_stuff_with_python_online/
I like w3schools and geeksforgeeks.

Main thing is to have a project to work towards.
And stackexchange. You can learn a lot there and it's also a riot.
New AF
Nice!!!!
codecademy is great and free, you can pay for more stuff to do if you want but it will cover the basics
I am a dad of 52, I am learning Python as well. I bought some Python books at the Humble Bundle. Python 101 and Automate the Boring Stuff with Python are good books to learn from.
Welcome man. 

30 Years old dad here :)
A smarter way to learn python is great for mastering syntax.
Welcome, been an engineer my whole life, but only got introduced to Python about 8 years ago.  It changed my life, literally.  I wouldn't have the job I have today without knowing Python.  There are just so many practical and real world applications for Python.  


My wife and I homeschool our kids I am in the process of putting a "summer school" Python coding course together for my 12 year old.  I'm going to open it up to other families we know that homeschool as well.  Its a work in progress because there are basic code concepts and things like understanding binary and hexadecimal that we will have to cover first, before we even get started.  But kids are smart, I think they will pick it up quickly.  Its probably sad how giddy I am to teach the kids how to code.
This is exactly what Im doing.  Im trying to teach my kids Python while I learn it but I wish I could find "a more" step by step approach on a website than just reading and following along.  I can learn this way but my young kids get too bored trying to do the chapter to chapter method of learning python.
That's very good advice.
Jupyter notebooks  - kids will like it, may be you as well
Yeah. I remember some of the really old text based adventure games ( much like some of the books where youd turn to certain pages and use pen and paper and dices ) It would be a great beginners project to make that kind of thing. Once having set the basics kids could write their own adventures. I had my 10 year old make a little program as well.
Curious- career change and how is it going now if so?
I use free code camp as well on youtube. Using IDLE
whether its pycharm or vs code i should not affect a lot your progress. also, its very hard to find jobs that only require python, so id suggest branching out into html or some other stuff
I am 32 and I need to reinvent myself. 
I think is a massive club this days.
Those tutorials are good if you are starting from beginner level.
Great job man. Encouraging and commendable. Keep going, you got this
I am also using pycharm. It‚Äôs pretty kool
Don't want to sound like a shill but check out Angela Yu's Python Bootcamp on Udemy. I am doing it right now and it's fantastic. Quite cheap too. 
 
https://www.udemy.com/course/100-days-of-code/
I don't have much time to really go into detail, but I think this reply might've just save my life. Godspeed, dude.
Appreciate it.
Second this. 
Got a position as a Financial Reporting Analyst. Learned SQL to output reports and analysis. Learned Python to automate that. Now I do Python data science & analysis full time. 
Didn‚Äôt even learn Python until my mid 30s. It‚Äôs doable.
what kind of reporting tools would you recommend for a beginner?
Checking it out
Yeah couldn't say more about codewars. If you stay with books and courses you will stay as a beginner, but doing Katas and seeing others solutions really takes you to intermediate.
Yeah, I live on StackOverflow... it is the greatest gift to coders
Part of it is that by the time you've got 20-30 years experience (and a family) you've built up a higher salary requirement and health insurance premiums go up, but when the economy tanks a lot of companies are willing to let go of experience for lower paid younger people. 

Also, in good times management tends to expand, then in bad times these middle levels get streamlined. Mergers cause this too.

Or sometimes industries pivot quickly or even disappear due to technology disruption - which is good, but you have to keep up!
Corey is indeed a fantastic teacher. Every video of his is gold.
Some YouTube videos and got a book loaned to me by a much younger workmate THIN PYTHON. Allan Downey.
Appreciate it if you've got something better.
What's raspberry pi? I never understood the Google results.
Appreciate the support
I must this is a helpful community.
Taken on board
üíó
I'm on your exact same path. Tim Buchalka is my jedi. I'm 46 (nearly 47 ) and 12 weeks in. Don't it make you feel young?
Funny you should say this.  I'm in the process right now of trying to put a small curriculum together to teach my kids Python coding.  I haven't found anything online that I would consider cheap, so I'm going to try and make one of my own.    


After teaching them the basics, one thing I'm going to try and take advantage of is the Raspberry Pi.  I have the Raspbian image and it comes with Minecraft Pi.  Most kids love Minecraft, so mixing something they love while they learn can't hurt
üíó
Loving the app.
üíó
üíóAppreciate it
[CodeCombat](https://codecombat.com/) is designed to teach Python and JavaScript to kids using an achievement-based game.
codeacademy is really good

[https://www.codecademy.com/learn/learn-python-3](https://www.codecademy.com/learn/learn-python-3)
Maybe pick a project to work on together? Each person could be responsible for a particular function which would lead to independent research. Then come back and share what was learned.
No career change for me. Learning python has helped me immensely in saving time in a part of my day to day role: Report generation that was done in Excel.  My regret stems from all the time I wasted accepting the 'This is the way it has always been done' and not striving to improve in life and work. In short, learning python has helped me get out of a rut and rekindled a fire for learning that I thought was dead a long time ago.
I personally would recommend getting a more featured IDE like PyCharm or VSCode. It just looks nicer and has more features. I use PyCharm but if you want to be flexible you can use VSCode.
Let the dude get started.  Us almost 50 guys are all ready overwhelmed about having to learn something that I think young cats should be REQUIRED to learn!  lol
I was thinking maybe html, or even blender, for working with data visualization. Thanks for your suggestions.
Thanks. It‚Äôs the first time I‚Äôve been this psyched about something for a while. OP‚Äôs post is good motivation
Will check it out, thanks.
Excel.lol

Don't worry about reporting tools, every company has or doesn't have one or they just use excel.

I focus on getting the basics of SQL, enough to talk about it in interview.

When I got my first job, I didn't have any experience with SQL, I just read a lot to answer questions and pass their tech interview.

Once I got the job, I focus my attention on learning their data, tables, relationships. Gotta know your data.

Then once I got comfortable, I learn python to automate some task. Work there for about 2 years or so, then started to apply for developers jobs.

I didn't get a job doing python, but it was c# that I needed to focus on. So it doesn't matter what programming language you learn, you will learn what your job is required. The basics of programming are very similar, with discipline you can learn your 2nd language within 2 months. The more languages you know the faster it is to pick up another.

ALWAYS CONTINUE LEARNING.

I am doing AWS Cloud engineer now.

I started when I was 32.
Don‚Äôt buy courses full price on udemy! There will always be a sale on. If you‚Äôre spending more than ¬£15 then you‚Äôre likely paying too much. There are usually lots of coupons out there that make courses free so just google around :)
Will check Corey out.
Go to automatetheboringstuff.com, great book and beginner tutorial.
Al Sweigart's Automate The Boring Stuff book (which numerous people have already recommended) is really good. It's largely application-based, since it's built around showing you how to automate this or that task. Think Python is also an excellent book and is more focused on teaching the nuts and bolts of the language. Not that Al's book doesn't also teach the fundamentals, but the books focus on different things. I think the two books go well together and aren't mutually exclusive.
Small (credit card sized) computer, has a basic linux based operating system and python preinstalled.  originally designed for education as you can attach sensors, motors and circuitry to it.

people make lots of different projects using them as the computing/controller base
I recently posted a question on this forum in relation to my question/statement.  Another person replied with exactly the same response with using Raspberry Pi and robotics.  I think its a fantastic idea and my kids love Minecraft too so Im going that route.

edit1:  I forgot to share the link that was shared with me: [https://www.learnrobotics.org/blog/raspberry-pi-projects-kids/](https://www.learnrobotics.org/blog/raspberry-pi-projects-kids/)

The more I look into this and asked my web/app stack developer coworkers... they recommended to:

1. Scratch.
   1. Teach Scratch first to learn the preliminary information and what it can do.  It will teach basic concepts.  It is really easy to learn since it is more visual based and have a lot of support on the iPad.
2. Supplement with Lego Boost and/or Mindstorms.
   1. I think Lego Boost is Scratch but maybe its Blockly.  I know that it can add a Scratch tool within the app so it supports Scratch in a kid friendly manner.
3. Buy a Raspberry Pi kit.
   1. What my coworker said is that her daughter picked it up faster because it was the next step to making it yourself.  She taught scratch, then showed them with legos and then said this is like advanced legos.
4. Python.
   1. The same coworker told me that while one kid is still making advances on the raspberry Pi... the older one wanted to do what mommy does and moved onto learning Python.  Her oldest wants to do more things in Minecraft but I think that minecraft is based upon Unity (C++?)

While I think its the long way around to learning a single language... I believe my kids can learn how to apply coding to objects and teaches problem solving skills instead of teaching them how to be coders.
I really like this methodology and would fit my kids perfectly.  But I really never heard of "CodeCombat" and find their website a bit "novice like?"  But, ill do my research and I thank you for pointing me in this direction.
Omg i was just about to recommend CodeCombat because I did some of their lessons. It is a great way to learn how code is implemented in a game.
Wow this code combat thing is sooo cool!   
I just learned python over the last 4 months and been learning machine learning like crazy the last few months. Almost ready to begin applying for data science jobs!   
I love games :)
Thanks.  Ill look into it.  Anything to get them started because now I think scripting/coding should be a requirement for elementary students!
While I understand what you are saying... but to

> pick a project to work on together? Each person could be responsible for a particular function which would lead to independent research. Then come back and share what was learned. 

This method requires previous knowledge or understanding on how to code.  With children, I believe, they need to go through the process from A to Z and grasp the understanding in their own way.  Unless Im missing something...

For me, my son learns very different than my daughter.  My daughter requires a lot of repetition to understand something while my son requires understanding to perform a specific function.  It would suck because while I can teach myself through repetition and it will work for one kid... the understanding/comprehension would not be there for the other child because I dont understand the code myself.  Im "forced" to need to learn node.js and AS3 scripting for my work but to teach my children the way I understand something is not fair to them and becomes more of a chore.  But of course... that is this old mans opinion.
Neither work for some reason, please check out my post on my second account if you can help u/yikes_coding.
I second VSCode! It‚Äôs a better look plus has some helpful plugins
no one requires us to learn anything, i just wanted to give some practical advice if he wanted to monetize his hobby, what's wrong with that? what 50 yo uses "lol"?
If you're serious about data I would recommend SQL first - the basics are pretty easy and SQL opens up a ton of possibilities in analytics.

If you're really interested in data viz specifically then you need to learn JS, which has HTML and CSS as co-requisites
[deleted]
Don't start with automate the boring stuff. It's a good book, but it rushes through topics to focus on its primary goal of practical applications for python. Start with *Python Crash Course* by Eric Matthes to get the fundamentals and then use Automate the Boring Stuff for some practical applications for your new Python skills (e.g. data analysis on excel spreadsheets).
That sounds cool. *Smacks roof of raspberry pi* you could fit so many automated robotic sex toys in this bitch.

Seriously, though, could you shove this in your computer and run Linux off of it?
And where should we start if we don‚Äôt have any idea whatsoever about it? Like books, buying the components, YouTube channels, etc
Thanks for the link.  I've toyed around with Scratch before and the Lego robotics stuff.  I think all 4 of the points you mention are great avenues to teach kids.  I would just say that as a parent you know you kid(s) best and where to start.  


But I completely agree, the problem solving aspect that is more high level than just coding is important here.  Once you know how to code, you can pick up almost any language pretty quickly because the concepts are mostly all the same, its just syntax you have to figure out
I'm a senior level developer, and sometimes I play code  combat for fun. You're never too good to practice fundamentals.
One approach could be to have each person describe what the function should do. This could be done in narrative or picture form. Then the learning could be focused and problem-based. Where there may be some additional fundamental knowledge needed that should surface during the exploration phase. Then some focus could be done on those scaffolding concepts together as a group. Just some thoughts for some experiential learning opportunities. I agree with you that teaching others is a great way to learn. It is also a great family bonding experience.
Maybe try PyCharm then. That error seems really odd and I don't really know how I would fix that. Also if you're wondering you don't need to get the paid version of PyCharm, I have it and I still haven't used any of the features that doesn't come with the free version.
Yea but he's having some problems with the Python extension. See his reply to my comment.
YOu must be really upset and then complain about me using "lol?"  Its a common acronym... pretty sad for you to retreat to "What 50 year old uses lol?" as the basis of your whining.  SMH  <-- OH LOOK ANOTHER ONE?!?!
Thanks for the insights. I had read that JS would be best but honestly I was kind of intimidated by it to start. I‚Äôll look into SQL too.
It could be any title.
You need to read the job description. 

I just search 'sql' on LinkedIn around your city and go thru them one by one. That's job hunting.
I mean, my main source was automate the boring stuff. Although I kept making programs applying what I learned so maybe that.
https://www.tomshardware.com/uk/news/raspberry-pi

If you‚Äôre curious the rest is up to you
> I would just say that as a parent you know you kid(s) best and where to start. 

!00%.  I apologize if I worded it incorrectly.  As parents, we "should" know how each child should learns best and how to guide them properly.  

For example, my youngest has adhd and if I dont keep her interested... its game over.  While my oldest is "knock on wood" pretty chill and level headed and can work best by himself and if he has questions... he will hit me up.
So as a developer... you would recommend Code Combat over Code Academy?

While I want to say price isnt an option... it is always a factor.  Code Combat seems a bit expensive but I thought about sending my kids to a bricks and mortar store like "Code Ninjas" but with Covid... thats going to the way-side.  So Im looking for the next best thing and I can get them a tutor?  Because I dont know if non-tutor would be better vs a once-a-week tutor?
Thx so much.  I get what you are saying and now I just need to put it in action!
Pycharm doesn't work either, it prints this:

    Error running 'test': Cannot run program [file directory to python.exe] (in directory [file directory to my python project folder]):
    CreateProcess error=5, Access is denied
Ahh fair point. True, Pycharm would be the next runner up then!
Did you have any computer programming knowledge before Python? If so, ATBS is fine but for someone completely new to programming, it would be a up hill climb.
It depends on a lot off things really. Your kids engagement level, time put in, mental complexity vs development... the list goes on. But if I had any advice to offer it would be exposure. I picked up coding in high school and couldn't do it. Tried again in college and sorta got it. Took a college course and it got the ball rolling. From then on it was years of learning one little thing after another. Point being, you don't just do a course and now you're a developer.  It just doesn't work like that. It's a skill and like any skill it needs practice and time put in. 

Code combat has a free route. I'd start there. If they're interested and you can afford it, a tutor or a more advanced course might be a good next step. 

Tldr; time put in is honestly more important then specific content right now. So just go with whatever makes them/you feel like you're having fun.
Looks like some permission error, what os do u use?
It looks like your user account does not have permission to run the python executable. Is it installed somewhere weird? If it's definitely in a folder where you have execute permission it could be the antivirus blocking it. (I'm assuming this is windows from the `exe`)
Try posting both of your problems in this subreddit, I'm sure theres people who know how to fix it
Have you added the Python directory to your windows path?
This could be an issue with Windows blocking execution of an internet sourced file or archive. Locate python.exe, right click it and select Properties. If it‚Äôs blocked, there will be an empty checkbox to allow it to be executed.
Nope, no knowledge before python. Although I was very interested in learning python so maybe that is why is was easy. I just read a bit, made a program, read a bit more, then made another program.
Windows. It also prints out a different error on vscode if you haven't seen my post.

&#x200B;

Edit: windows 10 64 bit.
No idea, is that what I should try to do?
Make a habit of posting your code on github where the community can make it better. Trust me I‚Äôve learned the most useful stuff from github
Sounds fun. Good job.
Congrats man! Proud of you!
I‚Äôm going to bookmark this. I need to seriously motivate myself to relearn/start coding again.
Congratulations, and welcome to the club!
Honestly, the feeling of finishing a project, no matter how big or small, is unmatched. I have very good memories of walking around my school trying to find someone to show my usb-stick contained text based adventure game or tic tac toe clone. As you said, its addicting
I am 1 week into my journey of learning Python and loving it. This is the same video lesson that got me started.

After a day full of going through Stack Overflow, I was able to complete a script for a task that used to take me a hour everyday. And just like that, one click and Boom! It's such an amazing feeling.
Congratulations on going through with it!
This is beautiful! Feel free to share your code on here for tips on improving it! I found doing the same helped me a lot in the early stages. Who am I kidding, I'm still in the early stages- lol.
Just want to say, thank you for reminding me how awesome my job is!

I get to code across different platforms, use some seriously insane technology that I just couldn't at home (no raspberry pi cluster will ever match an enterprise setup) and they give me some sweet-ass equipment to do it on.

I'm not paid the best for what I give back, but the money isn't everything.
Great write up! And congrats on all your progress, you have a fantastic road ahead.
Mike Dane is the man! His videos were my first introduction to Python and it's been an incredible roller coaster ever since.
I‚Äôve been stuck in almost this exact rut, I have been using python for awhile making simple scripts and tools alongside shell scripts and recently decided to make a lateral move in my career from sysadmin to developer and trying to wrap my head around OOP has been somewhat of a struggle. I‚Äôm trying to do just what you are, giving myself little projects to build and get a grasp of what I‚Äôm doing. This post gives me the motivation to continue on with the uphill battle! 

If you ever get stuck for ideas, check this out [here](https://www.linuxtrainingacademy.com/projects/) 

One of my projects pertains to this list, I am hoping to build a generator that pulls in all the projects from a CSV and pick a random one to complete. Do all the sorting by difficulty, show descriptions and storing the recently suggested projects in a database and somehow make it so they‚Äôre not suggested if they‚Äôve been recently completed
This genuinely made me smile, chuffed for you. Kudoz for making it work üòâ

 I always find the hardest part is the starting! How is the flow meant to go, what kind of errors could arise from doing it this way, how do I prevent them errors and so on.

100% with you on the addiction, its current 3:42am and I've only just closed vscode. Welcome to the club
That's the same video i used to get started as well! I struggle with coming up with the ideas. Once i have one, i'm off and programming, but I need help with ideas!
Omg I learned basics from your video
Congratulations! That‚Äôs the same tutorial I started with, I actually played the whole thing on 2x speed lol. Best of luck to you in your future python endeavors!
They do have a 13+ hours video on python too. Btw you can build several awesome projects in python. I'd suggest you to learn about tkinter to build projects with ui
[deleted]
Learning by implementing is far better than only learning without practically understanding what is going on ..
The feeling of completing your first project is the best!!  Keep the momentum going my dude! It will only accelerate from here. 

You are doing the right thing.  The one thing you have to do if you actually want to learn is apply it in your own projects.   If you compare someone who read all the books to someone else who has dozens more projects, I bet the person with more projects will be more creative in the workplace and have better problem solving abilities.   Good work!!
Thank you for the suggestion! I will look into doing that tomorrow.
So how does one go about doing this?  You need to make a github account and then what?  How do you advertise/point people to your code?
Thank you!
Thank you so much!
You can do it, I believe in you!
Do it, you will get a lot of with all the new stuff you will see everyday.
That's really cool!
script about?
Thank you! I have a pattern of starting and stopping a lot of projects so it really feels amazing to push through that barrier, even on a tiny project.
Thank you! I might do that tomorrow before work. I just have to go through it a few times and see if I can clean it up. I love this community, you guys and gals are the best.
Happy to spread some positivity! I bet your job is amazing and I hope to someday be where you are.
Thank you!
Keep it up! You got this!

Thank resource you linked is fantastic and your project sounds amazing!
Thank you! I feel ya. I got home from work around 5:30am,
I'm exhausted and should be sleeping but I just wanted to add a 
guess limit and some more text and tweak a few things.. I could sit 
here all morning.
Cool! It's so fun to hear that so many get into it the same way I did!
Avaholic92 [linked something above](https://www.linuxtrainingacademy.com/projects/), maybe you can find some fun
ideas in there?
It seems to be a popular one! I checked out a few but that one
was perfect in every way.
Thank you very much!
I will look into it, thank you!
I think it's fantastic. The lessons are easy to follow and give very good explanations of what is being done. Nicely paced and plenty of examples of "we can also do this and then this happens". I would definitely recommend it.
Yeah it really feels like the way to go.
this is a really great suggestion and saving your code on Github is useful.
You can create public repositories and share it with everyone, and most importantly, get feedback

Or you can just keep it private and have your projects just to yourself.

You need to learn from someone else, this is a great way to find new knowledge or teach someone else
Also, it's a really good idea to learn a bit about what git is and how it works. GitHub will be much more understandable with that background. (And it's really important for a professional developer to know git!)
if your code is in a public repo i would just make a post on this subreddit sending the github link and asking for feedback.
Analytics of multiple text files generated for a test equipment.
Once you push through it, it becomes easier next time! Good luck
Hey, I have ALWAYS had this issue. I wonder how to not be like that.
Yup, you've got the bug! Just woke up and already thinking about what I'm working on today whilst I drink the morning coffee.
GIT GIT GIT!!!!!!

Learned about it this year and it changed my life completely.  Especially useful if you program on two different computers and don't want to constantly switch files using a flash drive.   Also amazing way to promote code review and collaboration
I think the only answer is to find the discipline to power through. 
Hopefully if I start and finish smaller projects, finishing the larger ones
later on will be easier.
Yeah it just hit me, it's so much fun. Hope you come up with something fun to code!
Oh nice.  I do have the issue of programming on two different computers.

How did you learn about git? Just start googling and messing around with it or did you follow a specific tutorial/guide?
It‚Äôs really really simple.  Trickier for people that are not comfortable with the command line, but even still there are GUI you can download to make it easier.   Basically hit is a way for you to interact with your GitHub from your folders without having to individually upload each file one by one.   Just google git video in YouTube and watch a couple and you‚Äôll be fine.
Approved. Al has been a consistent contributor to the python community and his post is welcome here.
Well that‚Äôs embarrassing ‚ÄòYou purchased this course on Jun. 02, 2020‚Äô
Hey thank you so much!  This was very kind of you and know that some day I will pay this forward!
Yes! After trying for about 6 months I finally got this. Thanks Al!
so cool, glad I was able to sign up. Thank you.
Thank you!
Thank you! Bought the book a while back & this is awesome motivation to open it back up.
Al, you are the best
it says sold out
Thank you Al! Appreciate you
Got it this time.
#Anyone want to be coding buddies with me for this course?
[deleted]
It says 5 hours left at 14.99.  Anyone know what I'm doing wrong? :-\\
You hero <3
Thanks a lot!!! From Mexico
Still trying to charge me $15 after your code? Thanks sir
Much appreciated!
Apparently I've got this course a year ago for free as well and wasn't impressed by it. Not sure if 16 sections half an hour each would be able make someone capable of using python irl.
Thanks!
üêê
You rox!
Thank you!
This is awesome! Thank you!
Thank you so much !!
Remindme! 1 day
Thank you! Looking forward to starting it after finishing up a 'Python crash course'!
Thanks
Signed up! I really appreciate it, I have been doing some LinkedIn courses but I'm doing several beginner level classes til it finally "clicks".
Thanks, Al. I love the book and am looking forward to working through the video tutorials.
THANK YOU!!!!
Thank you!
Thank you soooo much !
Signed up! But, man, talk about the need to automate. I had to go through about 90 screens to complete the checkout! (And I already had an account.)
Where do you go from here? Are data structures and algorithms and asymptotic "O" notation what naturally follow from this, assuming more of a mathematical background to follow how it works?
This is great, perfect timing. Thank you.
Thank you so much Al. From Malaysia
Thank you!
Good guy u/alsweigart at it again.
Awesome. Thanks
This is awesome. Looks like I missed it but thanks for putting this out for people.
Thank you! What a great opportunity!
Just signed up, thank you kindly :)
Hey, this was super helpful! Thank you!!
Thank you <3
Thank you
I really appreciate it. Thank you a lot!
Thank you!!! ‚ù§Ô∏è
Got it, thanks!
Ty!
You rock al! One of the best Twitter accounts I follow!
You absolutely rule dude
thank you sm :))
Thank you so much! I rely heavily on free resources and its always so admirable seeing people like you take the time to make knowledge available for free for other people like me. Much love <3
If Al Sweigart never does another thing for the python community, his contributions will still never be exceeded by anyone else.  Just a damn good dude.  Thanks Al!
Thank you so much! Really appreciate it!
Yay I didn't miss it this month. Can't wait to get started!
I think i paid for your course but its on my list to complete after I finish my current one.
Thank you!
Thanks man!
My hero ü¶∏‚Äç‚ôÇÔ∏è
Thankyou so very much!!!! :D
Already got this in a previous giveaway, but just wanted to say how awesome it is that you do these giveaways. One of the hardest things about starting self-learning how to code is knowing where to start.
You are God of this sub
It's super nice of you to share it with us I'm truly grateful
50‚Ç¨ üò£
Both have been used :(
Top G! Thank you.
One time I tweeted back at Al that I though crypto was interesting and he auto blocked me lol, love the books though man
Has this course been updated? Last time my gf enrolled, the videos were using something like python 3.5 and teaching some outdated ways of doing things (like str.format instead of f strings, os.path instead of pathlib, opening files without context managers, etc)
Darn -- almost bought this the end of last week and somehow missed this offer yesterday
Will there be another one tomorrow?
June 19th, 2019 here...
So it's free to 2022 you.
Lol I‚Äôve been waiting every month for it like a hawk and it says I got it in march of this year. Probably would have been done by now.
In that waiting time you could have also finished his [Automate the Boring Stuff](https://automatetheboringstuff.com/) book. This isn't a personal comment to you, but seeing this is the most up voted comment so far, I just want to let the other people waiting for the "free" online course know that the book is also for free.
Same!
Same. Perhaps they reached the limit. Can someone confirm please?
I will be messaging you in 1 day on [**2022-09-06 21:34:14 UTC**](http://www.wolframalpha.com/input/?i=2022-09-06%2021:34:14%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/x6px4m/2000_free_sign_ups_available_for_the_automate_the/in8h530/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fx6px4m%2F2000_free_sign_ups_available_for_the_automate_the%2Fin8h530%2F%5D%0A%0ARemindMe%21%202022-09-06%2021%3A34%3A14%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20x6px4m)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Pick some projects and go.

What you study is largely dependent upon what you want to do. Machine learning, game design, data analysis... The world is your oyster and the best thing to do is just do something.
Al has a follow up book called [Beyond the Basic Stuff with Python](https://inventwithpython.com/beyond/). However it isn't about DSA. There's a reason for this though, Al's books are more aimed for the laymen wanting to learn how to be efficient with Python fast. DSA is more relevant for someone pursuing a CS degree.
It just worked for me
Yeah try again with the second code. It worked for me just now.
this happens often?
>Thank you!

You're welcome!
is august 9, 2022 better or worse here? :') I neither touched it nor remembered its existence
This should be the top comment. Personally I already have the book but was wanting a more interactive way to learn (now I have both), but these free codes always seem to disappear in the flash.

I believe all of Al's books are free to access online, which is a great resource in itself
Once a month! Start of the month
[removed]
Great advice but do not do this for an assignment/school. Trust me I've made that mistake. Handed in an assignment with some pretty vulgar print statements in there. Prof was not too pleased.

To clarify, i forgot to change the outputs back to normal. I didnt purposefully send it in with the vulgar language. Total accident but definitely avoidable.
My sense of humour is rather childish and I've found it really helpful to mess around like this. It was a bit embarrassing posting the code when I needed help though - you may want to change it to something sensible.
I‚Äôm so glad to hear I‚Äôm not the only one that does this.
 
I typically find myself cracking up with my wife asking me what the deal is. 90% of the time it‚Äôs me either making a program that says ‚Äúpeepee poopoo‚Äù or some childish reference to a meme. Can definitely say it‚Äôs helped with retention. Especially when the example given is something along the lines of: ‚Äúname‚Äù: ‚ÄúSally‚Äù, ‚Äúage‚Äù: 27. Makes it feel like learning elementary Spanish and learning how to ask where the library is.
Nice example to be honest, there are a ton of tutorials on yt of how to make a discord bot with python without knowing anything about programming you could simply follow this tutorial. But combining it with other things really makes it interesting, I made myself a Bot named C3PO he translates all our languages and languages like Geonosian or Huttese for example. Very entertaining
Reverse the following integer: 5318008.
I put memes and pop-culture references into my instructiton all the time. I think I am at my best when I intentionally get the meme/reference wrong as a hook for someone to correct me and then I smile and dab them. 

It helps keep me entertained :)

I would be cautious on putting lewd or rude terms in there though. We once had a student group present a website that broke during the presentation and all of the exceptions were things like "exception F  King C  T piece of S  T", and calling the lectures/tutors "F  Ken C  Ts" and you can fill in the gaps
Thats great advice, I was watching some youtube videos when learning and it was teaching how to make a simple multiplication using a variable and printing the results, just one variable, user input and operation, the example used interest and the amount of money in a fixed amount of months. I decided to go a bit further and make it "usable", request the user imput for the number of months, request the amount of money, only accept numbers as an input or throw an exception error and then store each month in a list and print the entire list at the end. So i learned lists, variables, userinput, exception error, while functions, and a lot more, I think this is how all learning is done, you should be proactive in searching and finding what you wanna do and have in your program, taught me a lot of things from further ahead in the course by quickly googling an idea and applying it to the project.
I'm still just starting out but 100% this. I used to do this in college years and years ago when I was learning other languages and some of it still stuck with me all these years later when it's not even relevant to me because of it. 

Even just simply changing it to relevant cases can help so much. Instead of name = "mike" changing it to your own name instead of copying the instructor to the dot will help a lot.
Ha! I do this all the time even with code I‚Äôm writing in my own from scratch, especially when I‚Äôm frustrated and cleaning up bad data or something. 

I‚Äôm self taught and had to share some early code with someone at my company who was professional. Found myself spending quite a bit of time renaming things like this. 

for word in word_list:
    if shit in word:
        Shitty_word.append(word)
        word.replace(shit, not_shit)
        Unfucked_words.append(word)
    else:
        Unfucked_words.append(word)


(Pardon syntax/formatting errors, I‚Äôm on mobile and half asleep...hopefully the general idea comes through!)

Edit: spelling
I‚Äôve been doing a different Python course (I get Linkedin Learning through work - the quality is variable) and stumbled across this. It‚Äôs a really good way to test yourself, see what works and what breaks, and give yourself a mini goal. For example, one task was to calculate the days to/since April Fools. I played around with it using my birthday, Christmas, my wife‚Äôs birthday etc. And used comments in the code to make notes.
Lol I altered the program he uses to draw a line of stars to just spit out constant random swears back and forth
I totally did this with the Magic 8 Ball program. Changing a few responses to things like, ‚ÄúHell to the naw,‚Äù ‚ÄúYASSSSS QUEEN,‚Äù and ‚ÄúFuck outta here‚Äù somehow made it a lot more entertaining for me.

But yeah, do anything that keeps you engaged in learning.
I have tried this but I ran into new problems that were hard to troubleshoot or had another process to fix that weren‚Äôt directly part of the project before.
SPAM EGGS AND BACON
Made a hangman game following a book tutorial. Except swapped all the dictionary words with swear words. It was great!
And it works for me! Been following along Math Adventures with Python and even if the book gives me all of the material, I try to type it on my own rather than copy and paste. I then adjust it to see what numbers or results it gives me. It takes double time, but helps in the end.
yes I fully agree.. I remember relating the variable names to animals and their residing places made me feel more engaging with the code.
Took the words right of my mouth. The best way to make learning almost anything fun is to experiment with it; produce your own fun and interesting results.
I go for witty or *very* slightly risqu√© contractions for variable names when the opportunity arises. I've got to keep things humorous and imaginative to stay engaged, so I integrate it into my work. However, I've never rude, it's asking for trouble and not necessary. I think a while back someone got banned from contributing to open source projects despite being a very well known and proficient coder because his choice of variable names etc were very sexist. 

Coding should be fun and there is some scope to have it reflect your personality a bit, try to make it the best of you because you will be judged.
True
Ha, I‚Äôm working on a simple program that progressively insults the user if they continue to not answer ‚Äò69‚Äô for the question:

*What is the nicest number?*
Strongly Agree. Programming is a very artistic field, and examples with meaningful content from life definitely help learning ... Any complicated concept can be understood with the help of a simple story or game, and it makes the learning process much more efficient

&#x200B;

Top for beginners - Try to solve exercises that have a story behind them. Try to find courses that have more than just study material, with practical examples and detailed explanations
ATBS?
Personally I find upscaling to be a great way to genuinely learn it and cement more foundational skills as well. For example, I'm learning regex in ATBS right now and I'm making a program that identifies the telephone service provider a phone number uses or if it's a landline and such, using multiple regexes and other stuff. You could do something like this with a lot of the concepts you go over while learning, and it helps with actually learning the topics and shortcuts/optimisations when using them in actual code.
Definitely, as recall and memory updating are separate processes and in order to be able to use this knowledge again you have train your recall.
Yeah I'd keep the vulgarity out of print statements. I usually do that stuff only with variables because I always giggle when I make penis = [a, b, ...] And then I have to look for len(penis)
Been here. Done this.
It's completely ok to use humor for school/work projects, but obviously you should be taking a page out of the Python playbook for humor ("spam", "eggs", "African/European Swallows", etc.) and not Richard Pryor's.
1.88040334e-7
Right ? I did that too. It was fun just to mess with it at first. Look at me, I made this naughty thing
I mean even that. Like id just leave the vulgarity for personal projects and avoid doing it in school work at all. Like one time i printed the word bitch just to see how my program was operating and sent it in like that... She probably thought i meant it towards her but was just being dumb and having fun. Definitely regret that
100% ok for humour in school projects, just not humour you would get in shit for
Try again!
alright then string it is
To be fair I've done it in school projects too, but I usually make it colorful only (silly but inoffensive) and avoid the inappropriate unless it's a variable for testing a particular part of the code. Works for me, but this is probably the most subjective topic when talking about python lol
FastAPI. I find it much easier to use than Flask
Peewee for database management
[Pillow](https://github.com/python-pillow/Pillow), for image processing and manipulation.

Before I started using Pillow, if I needed to resize or convert a batch of images, I had upload each image individually to some online service, or download some batch converter and mess around with the config. But now I just write small Python scripts and my job is done in a jiffy.
[Rich](https://pypi.org/project/rich/) for better terminal output.
`pathlib`, simply because I wish I'd known it existed in the standard library before accidentally coming across it one day. Screw `os.path` and all the Stack Overflow posts with all answers using it!

And while not exactly a library, `ipython` has been a big help with quickly testing stuff out.
tqdm

How did I even live without progress bars?
selenium was a big find for me this year. It allows you to control a chromium/chrome browser from python.
[ipyvolume](https://github.com/maartenbreddels/ipyvolume) It allows for interactive 3d plots in jupyter notebook. It‚Äôs the coolest thing I‚Äôve ever seen.
questionary: amazing library for allowing users to select/input stuff easily. 


Pypi link:

- https://pypi.org/project/questionary/
Pygsheets - make google forms and sheets your bitch with python...
itertools
[Cookietemple](https://pypi.org/project/cookietemple/) is a nice project, that basically lets you create your project from nice, customizable templates (its based on [Cookiecutter](https://pypi.org/project/cookiecutter/)). There are not only python templates available, but also a Java (Cli with picocli or GUI with JavaFX) or C++ template for example.  
The templates have very strong GitHub Actions integrations and support (with many different workflows, for example for linting, building or syncing your project); through cookietemple, they also have a custom linter, customizable bump-version function and a sync feature (to keep your project up to date).
[deleted]
[deleted]
googletrans ... its free

Detects and translates languauge

[https://pypi.org/project/googletrans/](https://pypi.org/project/googletrans/)
loguru! 

Fucking how logging should be!
[deleted]
BeautifulSoup for HTML/XML parsing  
Tkinter for whipping up GUIs.

doctest
Selenium and Pyautogui baby! I‚Äôve automated all the boring repetitive tasks I do on my computer at work.

I built a bot to keep checking stock and then buy a PS5 from Bestbuy and Walmart, ended up not using the bots cause some personal expenses came up.

Lastly, I also created social media bots to track followers that unfollow and also to swipe on dating apps too! A tinder bot, a Twitter bot, an Instagram bot.

Selenium for web/browser automation
Pyautogui/Win32 for regular computer task automation
What people have mentioned are relatively new libraries.  So Im going to mention the not so widely known libraries that have been around a while I wish I had used sooner. requests-html because it handles javascript and sessions.  Dask is well known, but its task execution functionalities are not well known: Dask futures and Dask delayed for task execution. loguru for less boilerplate compared to standard lib logging.
itertools
Dateutil

I spent way too long pondering things like "ok, I need the date one month before this date, but then if it's January that will also be the previous year so..."

Of course someone already figured this out.
requests-html
pandas
Not exactly answering the post but y‚Äôall might like this: [Top 10 Python libraries of 2020](https://tryolabs.com/blog/2020/12/21/top-10-python-libraries-of-2020/)

HN thread here: https://news.ycombinator.com/item?id=25575505
Pydantic on its own for data validation.  I do a lot of integration work and it is a lifesaver.
Plotly over Matplotlib!
Typings
attrs!
Is there any library that supports data entry, like data validation, labels, or multiple responses...? Basically i'm looking for epidata/ redcap alternatives
[deleted]
if you're currently logging to a csv or txt you have no excuse to not atleast use [dataset](https://github.com/pudo/dataset) instead. Makes sql as easy as writing a dictionary.
Python libraries for DataScience You Should Know
#pandas #TensorFlow #NumPy #matplotlib 
https://datascience24.wordpress.com/2020/12/26/python-libraries-for-data-science-you-should-know/
`benedict` is great for all kinds of advanced dict operations.
[Discord.py](https://Discord.py) lmao
Numba
Speed up your code with zero extra work
I‚Äôm still new to python but random is very usefull
Numba, and the ahead-of-time compilation with [numba.pycc.CC](http://numba.pydata.org/numba-doc/dev/user/pycc.html)
[rope](https://pypi.org/project/rope/)

If you use vscode, simply `pip install rope` and you can click on a variable/method/class and press `F2`. It brings up a rename option and you can rename all occurrences of it with ease.
Pandas. Pydantic.
I wish i discovered BeautifulSoup earlier than re XD
!remindme 10 hours
Skimage. Skyfield. (Latest finds)
The public library
Import this!! A must read for every python developer out there!!
The library of congress
!remindme 2 hours
!RemindMe January 1st 12pm
[removed]
[`toolz`](https://github.com/pytoolz/toolz)
 !remindme 10 hours
!remindme 24 hours
Pyglet, pygame is hard to learn (or am I just dumb?)
tqdm ,saves the hassle of timing code with multiple iterations
!remindme 2 days
React, I used to make web apps in pure html and JavaScript... such a pain
[deleted]
Fastapi is awesome. But it did easily trick me into the feeling that asynchronous programming is easy like with JS. Throw async await and you are safe

I was dead wrong üòÇ asyncio is quite new and some libraries havent adopted it yet. It means you must get your hands dirty sometimes
What are the advantages? I'm doing a Udemy course on Flask now to learn some Pythonic web development and I'm loving it. I'd be interested to see what FastAPI has over Flask.
FastAPI 100%, their documentation and tutorials are absolutely magnificent and it integrates REALLY nicely with a lot of other libraries like Websockets

Also, Websockets is really cool
As a complete newbie, I dove into [Starlette](https://www.starlette.io)  head first this fall. AFAIK FastAPI is based on Starlette. Knowing nothing about flask, I spent quite some time making sense of it. (And still am.)

As an old fart who learned html 4.01 trans in school, async and websockets are really mind blowing.
This looks cool - I see FastAPI is built on top of Starlette. I‚Äôm familiar with using sanic, have you used that one? Would you say FastAPI has advantages over sanic? Just curious if it‚Äôs worth looking into.
Have you tried connexion along with swagger code generator?

It takes a swagger yaml and outputs a working flask server, input validation (incl type, required params, etc), swagger ui, response objects, etc
!remindme 10 hours
saved
Can you explain Peewee?  im just try to learn
Wish I had an award to give.
What's it, an ORM?
> Peewee 
looks like django orm.
ImageMagick isn't half bad either, for simple tasks (not a python library)
Have you tried opencv? It can function like Pillow but got some nice features for image processing

opencv-contrib-python
https://pypi.org/project/opencv-contrib-python/
The first alpha release of that library was barely a year ago. If you're using it  for the first time today, you're still an early adopter.
what does it do? it just changes colors?
That is amazing, thanks for the share!
Would this work in PowerShell?
I can ditch os.path? Oh boy!
I am with you!
as someone who has always used pathlib, what's wrong with os.path?
How have I not heard of this magic
Oh yeah it only existed starting from Python 3.4 (2014) so that's why there is a lot of StackOverflow answers with `os.path`. Luckily, I started with Python 3.5 five years ago, and hardly ever used `os.path` at all (but `pathlib`).
Yep, I started using it ~6 months ago and it is so so good.
I thought the same thing when I saw this post. It's so *fun* to use! So *easy*!
Yo tambi√©n te quiero demasiado
It's a great library, I see many QA jobs requiring it for automating tests. Also Selenium works with many languages, not just Python.
It works really well for Firefox too.
I've been using selenium more and more at my work to automate data entry into websites that have no API.  Really saving some staff's time.  (Most recently, covid vaccine info has to be entered into a registry within 24 hours of a mass event. When you have over 200 patients, that normally requires a lot of man power to punch all the data in within the timeframe. With a csv file and selenium, it's hardly anything)
Selenium is so much fun!
What did you Use to learn it
That looks like just the thing I need for a lot of the work I do. I've been using the 3D plotting features of pyplot for convenience, but they're rather lacking.
HOLY SHIT THANKS JSJSJ
!remindme 10 hours
Whatttt!!!
I wrote a library to do this. Then this came out and did it better.
how is this compared to  PyInputPlus ?
this is awesome, choices were something i was looking for. you never know what user will type.
This is where it's at. Quite the setup but I automated my job
Add more_itertools to that list
+1

And since we‚Äôre including gems in the standard library, rather than just little-known third-party packages, I‚Äôll add another that I wish I‚Äôd discovered earlier: `collections`
What does it do?
Huh I never knew about this one. I actually recently built a similar project called [krait](https://github.com/taliamax/krait)
Clap clap
Same with the library of Nalanda University
Snek
What was that
> burn down

"burn down"
To add on to this, the House of Wisdom of Baghdad
This is just what I needed. I hate trying to get the right date formats and alterations. Thank you.
Cool
Seconded, googletrans is awesome.
Streamlit is awesome and keeps getting better.
This is pretty lit
What does the tinder bot do? Keeps swiping right?
I see so many people use Selenium for browser automation and web scraping, when Selenium is a web testing framework. requests-html would almost always be a better choice.
I just learned plotly for some data visualization at work.  Gotta say I do love the output, and it seems to offer great control over many aspects of building a figure.  

I never got intimately familiar with matplotlib; but I would love to hear anyone's opinion on why they like/prefer it (just curious if I'm missing out on anything).
I think [questionary](https://github.com/tmbo/questionary) is your answer.
I'm also interested in that.
`unittest` over `pytest`? Why?
>Unittest

Is this suppose to check on how reliable your code is?
Not familiar with this one but I've been using pandas for this.
Never heard of tensorflow tbh
any examples of advanced dict operations?
[deleted]
I would not say zero.
Check out `numpy.random`. It‚Äôs like `random` but on steroids.
have you used that to make your own telescope by any chance?
Getting the dead tree down-low about long snek bois!! 
(Aka pythons)
> Flat is better than nested.

Sage words that more than a few coders could stand to be reminded of...
Oh wait. If i comment this, Reddit will remind me this post in 2 hours?
I will be messaging you in 1 day on [**2021-01-01 12:00:00 UTC**](http://www.wolframalpha.com/input/?i=2021-01-01%2012:00:00%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kmwrve/what_libraries_do_you_wish_you_discovered_earlier/ghivrhy/?context=3)

[**2 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkmwrve%2Fwhat_libraries_do_you_wish_you_discovered_earlier%2Fghivrhy%2F%5D%0A%0ARemindMe%21%202021-01-01%2012%3A00%3A00%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kmwrve)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Your [comment](https://www.reddit.com/r/learnpython/comments/kmwrve/what_libraries_do_you_wish_you_discovered_earlier/ghjehgo/) in /r/learnpython was automatically removed because you used a URL shortener.

URL shorteners are not permitted in /r/learnpython as they impair our ability to enforce link blacklists.

Please re-post your comment using direct, full-length URL's only.


*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnpython) if you have any questions or concerns.*
There is a 1 hour delay fetching comments.

I will be messaging you in 2 days on [**2021-01-05 22:19:39 UTC**](http://www.wolframalpha.com/input/?i=2021-01-05%2022:19:39%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kmwrve/what_libraries_do_you_wish_you_discovered_earlier/gi02prd/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkmwrve%2Fwhat_libraries_do_you_wish_you_discovered_earlier%2Fgi02prd%2F%5D%0A%0ARemindMe%21%202021-01-05%2022%3A19%3A39%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kmwrve)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
There is a 11 hour delay fetching comments.

I will be messaging you on [**2021-01-10 14:09:34 UTC**](http://www.wolframalpha.com/input/?i=2021-01-10%2014:09:34%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kmwrve/what_libraries_do_you_wish_you_discovered_earlier/gir9g67/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkmwrve%2Fwhat_libraries_do_you_wish_you_discovered_earlier%2Fgir9g67%2F%5D%0A%0ARemindMe%21%202021-01-10%2014%3A09%3A34%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kmwrve)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Why does it matter if the library you're calling it hasn't adopted async yet if the library is called from within an asynchronous thread? Maybe a dumb question; I haven't used async much yet.
Type checking, auto doc generation, easy async, etc.

Edit:
But learning flask is still an incredibly useful exercise and will give you a better understanding of what‚Äôs happening with FastAPI
FastAPI is to ASGI what Flask is to WSGI. FastAPI is by design, asynchronous (it can handle requests asynchronously, so that your app doesn't hang when a particular request takes longer to resolve)

The idioms are different too though. With flask, you use the `route` decorator to create new routes, with an argument for the verb of the request that route is allowed for ('GET', 'POST', 'PUT' etc). FastAPI has one decorator for each of these verbs (`app.get`, `app.post` etc). Furthermore, FastAPI generates a `/docs` route that autodocuments your app based on type hints and docstrings.

Type hints are a requirement in a FastAPI app, since it's how the framework determines which is the type of the argument, and how it sends the body of the request to a pydantic model/schema.
On top of the other things, the main thing is that the defaults are more aligned with creating a json api.

With flask, you need to add tons of exception handlers to make 4xxs and 500s return json, for example.

I'm really not sure why this isn't first on people's minds. Creating a production-grade api in flask is super annoying.
syntax is inspired by Flask but has tons of modern features. Only issue right now is ecosystem, not a ton of libraries and help is harder to find
I hate when people call themselves 'x' fart.

good luck though
Peewee is basically an ORM for databases. Which means that it simplifies a lot of the database stuff by mapping it and objectifying it, using models (I'm still learning as well so I might confuse you with a half explanation so I'll keep it to the basics).  
  
A silly example: Instead of using SQL syntax you could get a list of all the records using a list comprehension from a generator like `firstnames = [x for x in Users.firstnames]` where `Users` is the table model and `firstname` is just the column name.  
  
To store a new record you do something like `Users.insert(firstname="Has", lastname="been dead").execute()` and that's it. You don't have to define connections, cursors or anything to work with your database, except creating the database model (which is automatically created by a CLI command from an existing database).
I got you
Yes, http://docs.peewee-orm.com/en/latest/
I‚Äôve never used Django, don‚Äôt you need a server for it?
Damn people why down vote? Stop being so salty all the time.
What's the diff of contrib from plain opencv
Is that all? Feels like longer!
More than that. It allows you to have complete control over the terminal to do basically whatever you want. Some good features:



- print markdown with formatting

- print tables and update them in real time with additional rows & columns. 

- print progress bars with customisations 

- print local variables for a particular session

- print logs for each command that is run. Kinda like console.log() in JS.
Also allows you to print smileys and create animated progress bars for tasks whiles they load... it can also track how long a task is taking to complete!
Their overwrite of `print()` makes a lot of things nice to read, and odds are print is just used for the developer's sake anyway. 

I've used their `inspect()` a ton as I am learning new libraries and APIs.  Especially great on jupyter blocks.

The traceback is great and I use it everywhere now.

The progress bar is well, no tqdm, but its there if you want to avoid a 2nd dependency. 

But the big feature is the Console...   So useful when you are making a website or GUI, or just lots of instances of a class...  work on your model or controllers, and get a "cheater" cli view before you switch back to working on the GUI or html.  I'd used to make my classes dump to indented json to proofread...now just table in a rich console.
Yup. Rich is not shell bound. If your shell console supports color then you can use rich
What's wrong with \`os.path\`?
Yes if you're using Python 3.4+.
It's basically the old way of handling file paths. `os.path` takes more code to achieve the same end results (especially when using `pathlib` to its full potential), and `pathlib` automatically normalises all filepaths so you don't really need to worry about making it work cross-platform. With `os.path` it takes a lot more work.
There are some Windows specific weirdness, like sometimes (and only sometimes) producing four backslashes in paths, and some paths with diacritics in them were difficult to handle.
I just moved over personal project to pathlib and it's so much better
Well, you have now! ;)
You never used Python 2? I feel like five years ago Python 3 was not yet widely used.
Wish I could read
jajaja
While not as heroic as being on the front lines, I believe this little bit of python magic qualifies you as a hero of the pandemic. Thank you for doing what you do.
TBH, I don't remember the specifics. I did a lot of Google searching for examples, and then bent those examples to fit my needs.
It‚Äôs great. Be sure to check out the [catter plot](https://mobile.twitter.com/maartenbreddels/status/1060077836667641856)
I will be messaging you in 10 hours on [**2020-12-30 18:54:19 UTC**](http://www.wolframalpha.com/input/?i=2020-12-30%2018:54:19%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/learnpython/comments/kmwrve/what_libraries_do_you_wish_you_discovered_earlier/ghhfgqt/?context=3)

[**9 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fkmwrve%2Fwhat_libraries_do_you_wish_you_discovered_earlier%2Fghhfgqt%2F%5D%0A%0ARemindMe%21%202020-12-30%2018%3A54%3A19%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20kmwrve)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Lmao seems to always happen. Take pride in your own shit though!
Yup, but set it up once, use that setup everywhere.  Combine it with CRON jobs and people will think you are a wizard...at least in your typical office, not a softerware company :)
Then, bam...hit em with the yagmail package and tell them some info from the the sheets forms every Friday...
Really wish they would adopt this into the std lib.
[itertools](https://docs.python.org/3/library/itertools.html) is a part of Python's standard library and provides set of memory effect tools for different iteration tasks. 

For example, a really useful tool within itertools is [itertools.combintations](https://docs.python.org/3/library/itertools.html#itertools.combinations) which returns all of the combinations of items within a given iteratable. The nice thing about itertools is that because it is apart of the python standard library under the hood it is written C++ so it is much faster then any pure Python version you could write.
You are welcome to contribute to cookietemple!
I see you getting downvoted.  
Wonder how many you pissed :)
It was not an intentional burning, by all records.
It checks a couple things... like if there‚Äôs a bio, how many pictures the person has, etc. then it either swipes right or left
Agreed, I am on the verge to make a video for users on learnpython to consider using requests/requests-html before resorting to beautifulsoup/selenium.
Honest q: does it solve the Javascript problem like selenium does? Isn't that the main reason people use selenium?
Is there a good tutorial for this selenium has turned me off to learning from all the road blocks I've had. I'd love to do some web automation if I can
I'm still a beginner and what draws me towards Plotly is that it's far more aesthetic than Matplotlib. Also, `plotly.express` is easier to work with than `matplotlib.plt`. Making subplots is also far more intuitive in Plotly.

And then there's Plotly's Dash to quickly spin up a dashboard!
thank you, let me check it
[deleted]
[deleted]
Read the article for more about it
404? Its working fine for me, wym?
True, but you gotta admit it less work than Cython
in what way?
Not exactly. I found sci-kit when looking for a way to get 2-d contours from a [dataset](https://www.swpc.noaa.gov/products/ctipe-total-electron-content-forecast). I found that [skimage.measure.find_contours](https://scikit-image.org/docs/dev/auto_examples/edges/plot_contours.html) was a more reliable and flexible options than the matplotlib method. I forgot to mention another lib, called [shapely](https://shapely.readthedocs.io/en/stable/manual.html) which has proven to be a feature-rich lib I'm using in tandem with pyplot. Basically not a telescope but a hybrid view of a low key planetarium and some ionospheric data. I'm doing this for an art project. Thanks for asking!
Yes!
NodeJS is non blocking, Python is blocking, and in asyncio, we can only use 'await' with coroutine

If you use await with a blocking section like time.sleep(5), it will block the rest of the code.

A great blog series about asyncio:
https://www.roguelynn.com/words/asyncio-we-did-it-wrong/
Thanks! I'll look into it once I'm comfortable with Flask.
I‚Äôve seen a lot of Flask in production environments. Main reason I recommend it as the framework people should learn. It‚Äôs a skill that will get you a job. Tough to convince an existing team to switch to a new framework, even if it has a lot of useful features.
Flask 4 Life
The auto doc generation is just killer. I'm a node developer but had made a fastapi project for an interview. It's like a dream come true!
I don't think type hints are required, but they are a huge part of what makes FastAPI great. so eschew at your own peril
Is FastAPI akin to Express.js? They sound quite similar.
How is this better than the defacto sqlalchemy? Asking for a friend.
Thanks i understood
Thanks , nice
Only if you want to serve websites. You can use only django orm, without server
[deleted]
Its the same contrib lib from opencv. However, I found that:

1/ opencv is hard to install
opencv sometimes failed to install on windows(anaconda/pip)

2/ compile opencv can be time consuming & complicated
if we install opencv using pip/anaconda, it does not come along with contrib lib, so we have to compile opencv from source with contrib flag enabled, and copy the share object file (.so) into the python environment binary. This is time consuming and quite complicated

3/ ARM compatible
I do not know about the origin opencv, but opencv-contrib-python is ARM compatible, so I do not need to rebuild it on raspberry and its friends. It is frequently updated and is fast to make some experiments
Omg. The man himself is here. I just wanted to thank you for building such an amazing library! I use it in almost all of my projects and it has helped me immensely.
> print markdown with formatting

That is both awesome and worrying.
I love all of those things.
Nothing particular, but `pathlib` has a much more uniform API and it's much easier to read as a result.
search for "primitive obsession". os.path functions operate on strings. pathlib creates a file object and you can use methods to operate on that.
In principle, nothing as long as it works for you. But it has a lot more boilerplate compared to `pathlib`, and since it operates on strings it's very easy on Unix-like systems to forget to use `os.path.join` everywhere which can lead to bugs on Windows. `pathlib` automatically normalises everything so this is never a concern.

And the best part? `pathlib` also contains `glob.glob`'s functionality and you only need `shutil` if you need to copy a file or directory instead of moving it, so it's basically the go-to package for everything related to filesystems.
Oh yeah I remember the times.  Not all of the packages were supporting Python 3 yet at start of 2016.  I still thought that the future will be in Python 3 so why not start using it. I think my python programming course somewhere \~2014 used Python 2.x, since I remember thinking that the syntax for printing is odd.
Tq is our contraction for te quiero, which means I like you, but literally it means I want you. Demasiado means too much.
Use translate and tell us because im in phone lol

My sister knows some little spanish and she says he wants something.
Wow.  No one has ever said that to me.  I may disagree, as I work with people who I believe are the actual heroes, I'm going to take your sentiment and hold that close to my heart today.  Thank you.
Can you give me an example of terminology you used?
Brilliant. I'll be damned if I don't work this into a presentation one day
>!remindme 10 hours

!remindme 10 hours
I just used combinations yesterday for the first time- super useful
Python's stdlib is written in C.
> Python‚Äôs standard library is very extensive, offering a wide range of facilities as indicated by the long table of contents listed below. The library contains built-in modules **(written in C)** that provide access to system functionality...
[sauce](https://docs.python.org/3/library/)
I think the projects are ideologically different enough that I‚Äôd prefer to keep working on my own tool. One thing I‚Äôm working on now is to simplify and expand the template editing process, and writing documentation on how to create new plugins to allow individuals to extend Krait with their own code even if they do not wish to distribute their plugins more widely.
Don't really care about fake internet points. It's not like I said anything wrong
How do you make it work on your phone? What does it use?
I'd support that. It's a trap for newcomers. Not to mention how there's so many outdated selenium tutorials.
It does, the package has a `.render()` function that runs headless chromium, and it allows you to execute some javascript and get the returned value, and also arguments for scrolling down and even basic autopaging support. [see here](https://requests.readthedocs.io/projects/requests-html/en/latest/#:~:text=render(retries%3A%20int%20%3D%208%2C%20script%3A%20str%20%3D%20None%2C%20wait%3A%20float%20%3D%200.2%2C%20scrolldown%3DFalse%2C%20sleep%3A%20int%20%3D%200%2C%20reload%3A%20bool%20%3D%20True%2C%20timeout%3A%20Union%5Bfloat%2C%20int%5D%20%3D%208.0%2C%20keep_page%3A%20bool%20%3D%20False%2C%20cookies%3A%20list%20%3D%20%5B%7B%7D%5D%2C%20send_cookies_session%3A%20bool%20%3D%20False))
Looking over the docs I think so. I think it runs a chromium instance in the background to render the js.
> Where I work, it‚Äôs a pain to get additional libraries

That sucks. You are in my prayers.
Nice, thank you!
`numpy.random` can just do everything.

Off the top of my head: It can generate single integers/floats, or lists of them, or matrices of them, or tensors of them up to any arbitrary degree. It can also generate values from many different probability distributions, for example uniform (which is what `random` uses), but also normal, exponential, gamma, and many others. It can also generate numbers from an interval with the endpoints either included or excluded. You can also sample randomly from a distribution either with replacement or without (also possible with `random`, but requires two separate functions which is annoying). And none of this is even scratching the universe of what else is possible with `numpy` apart from `numpy.random`, like boolean masking (=selectively filtering your data using logical arrays), and every mathematical operation you‚Äôve ever heard of, again using inputs of any degree, and all blazingly fast.

To see the overview, start a Python shell, `import numpy`, and type `dir(numpy.random)` into your terminal. And if overall you‚Äôve just never heard of numpy or are unfamiliar with what it does generally, type `dir(numpy)` and BEHOLD!

No matter what you‚Äôre trying to accomplish, when in doubt, always check first to see if it can be done using `numpy`. More often than not, it can.
That sounds super incredible, please share when you're ready
The switch from a team working with Flask to FastAPI isn‚Äôt difficult at all, the design is very much based on Flask. That said totally agree that Flask is invaluable when working on existing/legacy systems (and of course if you need more than an API)
[deleted]
Idk, never used sqlalchemy. I am learning new stuff every day. Probably someone that used both can answer better
Oh, now that‚Äôs interesting
[deleted]
De nada
"Software engineering is the study of ugly trade-offs."

Wait what? Why is that worrying? Seeing properly formatted md is amazing
> it's much easier to read as a result

`pathlib` has its merits, but I'll never get used to the division operator overloading to concatenate paths.
> which can lead to bugs on Windows

In practice, it's actually pretty rare that even hardcoding / will break things on windows.  "/" is actually a perfectly valid path seperator on windows too, and has pretty much always been accepted by all windows APIs.

The only time you'll run into trouble is if you're using old DOS commands (eg. os.system(f"copy {path} {dest}") or something, which is pretty rare these days.

While hardcoding the seperator is probably still bad style, these days (since MacOS became BSD-based) all the major platforms accept "/" as a path seperator, so it's unlikely you'll run into *actual* issues.  The bigger issue is going the other way (hardcoding "\" on windows systems).
I had the same experience IIRC. I decided I wanted to learn another programming language one day in 2015, and heard good things about Python. I went to download it from the official website and wondered why there are two different versions, but decided to go with Python 3 because it was the latest. Then I found out that the old tutorial I was using was actually Python 2, but was able to figure out the differences and still follow along. The only thing I had to change at that level was the print statements.
I used combinations/permutations/product for the first time throughout this year's Advent of Code. If I'm being honest, there haven't been many times where I would have needed that other than for those puzzles, but it's nice to know how they work for when they might come in handy.
Perfectly fine!
I'll chime in on mobile app, mobile apps like tinder/snapchat/facebook/twitter/instagram they use http requests, so reversing the api to make your own isn't too trivial, but easier to do on desktop web browser.
I use it on my computer. I don‚Äôt think selenium has a mobile version... I‚Äôd have to check
90% what the user is trying to scrape, ends up being a payload they can make a request and receive it in json format. A lot of people I don't think realize that, and give up. Like you said its a trap for newcomers.
Here goes. If you're interested in what shapely is about, here's to posting a submodule that loosely involves structure packing. I've used shapely and the triangulation module of matplotlib to get the basics. Should be noted that this is PY3.8. Deps are numpy, matplotlib, and shapely. LMK if you run it :). Happy NY.

[flower-patch.py](https://pastebin.com/JNsMmccX)
Perfect answer, thank you for clearing that up.

Yes the documentation of SQL alchemy could be clearer, it's a nightmare for me to learn it from that alone. But its an amazing tool that helps me overcome my fairly basic SQL knowledge and I couldn't live without it.
yes it's easy, i do it all the time for scripts if need to use database. Never tried peewee or sqlalchemy, this works good
Heh, sorry about that, I'm also pretty new to this. I've also heard of GraphicsMagick, wonder if that's any better on the bugs side of things?
Yes.
Agreed. As an old fart coming in from using `dialog` or `cat` to create simple menus with `read -r -s PROMPT` in BASH, adding markdown as a "templating engine" seems both promising and over-engineered at the same time. Hence: awesome and worrying ;)
You can instead use the `joinpath()` method, or call the class with all the segments as parameters.
It's not too much of a trap if you're trying to get away from JS. Anything to get away from that dumpster fire of a "programming language".
No, I meant giving new python programmers the idea that the only way they can achieve anything http or webscraping related is having to use non elegant method, like selenium and/or beautifulsoup, BS does have its uses, and I'll admit that, I think you can do the same in requests-html, instead of BeautifulSoup.

Before any future readers see this comment, Im not bashing Selenium too hard, I just think its usefulness that  can't be achieved via requests is small.

Quick brainstorm, I bet selenium is great to use on web browser based games, hell I would code on for runescape and just make a auto bow crafter to get to 99 woodcrafting.
Yeah I'm all for having options, but I think it's 100% misleading to simply label Selenium as a trap without properly qualifying it. I think your follow-up comment does a better job though.
It took me 2 years to find a course that explained things the right way for me and in enough detail. Let google be your freind and  I found writing out definitions for things and what they did helpful now I basically have a personalised cheat sheet.

Edit: [EdX Python course](https://www.edx.org/professional-certificate/introduction-to-python-programming)

Unfortunately some of the exercises are now paywalled since I took the course but its still very good at explaining python for beginners.
I am 37 I took C++ classes 20 years ago and took me 4 times to pass C++ introduction class. After I pass I never wanted to code ever again. I took other classes to graduate and ran away from coding for 20 years.

Fast forward 20 years I started an online CS course out of curiosity and free time last month and I loved it! And I started to understand things that was impossible for me 20 years ago. 

What I am trying to say is just give it some time to click. Dont try to rush or feel bad about it. Just relax. Have fun with it...

Coding world is not running away. It will still be here in 20 years and probably will be better and easier than ever...
Nothing worth doing comes easy buddy! Don't Stop. You will make it.
Do CS50.

Great intro into maths and super basics of programming and the teachers has great energy and love for what he does.
Two weeks? 

Beginner and age mate here too. 

If you are not a Native Russian speaker and you were dropped in the middle of Kremlin after two weeks of learning Russian, you may hardly get across requesting for a glass of water. 

Keep on. 

It will make sense as you go by.
I did the Codecademy Data analytics track. Shit takes forever, but what else are ya gonna do? I found setting the goal of do x amount per period worked best for me. Some units were super simple and I could get through multiple in a day, some lessons took multiple days because each point was really hard for me. Some of their explanations are crap too.
I'm way younger and I too feel the same. The courses way of learning is just demoralising. Try free code camp or sololearn, they are much better for beginners.
[deleted]
Ignore the math. Learn the search engine.
I highly recommend [this book](https://www.amazon.com/Self-Taught-Programmer-Definitive-Programming-Professionally-ebook/dp/B01M01YDQA/ref=nodl_) honestly helped me get into Python which I‚Äôm a complete novice but have a way better understanding to the point I‚Äôve done a few personal projects that I improved on, I feel like most coding books/sites can‚Äôt help themselves and get overly technical where they nerd out when explaining things especially when you progress further 

Just take things slow and don‚Äôt feel like you gotta keep progressing like its a speed run, unfortunately I think classrooms hardwired our brains into thinking we gotta learn this now and keep going or else were gonna fall behind
Have you tried brick laying?
Honestly, what helped me unlock the programming part of my brain was taking a CS course. It was intro stuff but what it taught me was to think in computer logic. After that I kinda started figuring out that all programming languages do the same things but are typed out different. Try looking for something along the lines of that and you might get somewhere.
No pain, no gain!  The feeling stupid part doesn't go away, regardless what you've learned/know.
Programming is full of little Eureka moments, where stuff just clicks! Some people have to work harder, try pairing up with someone who gets it just a little quicker than you (someone who gets it too fast is just demoralising). Keep going over what you have been taught thus far, or just the basics until you figure it out. Don't get ahead of yourself and stop putting yourself down, it doesn't help.
I think writing everything down really helps me make sense of things, because I have to figure out things that I‚Äôm going to write down and also I have a reference to come back to if something I‚Äôm past doesn‚Äôt make sense. But most importantly writing things down helps me go step by step if there‚Äôs a difficult concept that‚Äôs hard to understand.
Some good posts on this lately. One tutorial hell really makes people feel like they are dumb and don‚Äôt know what they are doing. Two programming is very much a different way of thinking then most people naturally do. For those people that are even more on the creative side then logical it can be very daunting. BUT! They also make amazing programmers later because they have a unique approach to problems from the typical logical first person. 

Don‚Äôt give up, stick to it and always remember you can do a lot of different types of programming where math is other not needed or supplied when it is.
Feeling dumb is part of the process of learning. Don‚Äôt give up and keep going! JetBrains has great curriculum for Python and has mini quizzes and challenges after each lecture to refresh and help you learn, it‚Äôs free for few months if you sign up. Also, pick up Automate The Boring Stuff with Python book by Al Sweigart.
As someone whose been trying to learn python / general programming for the last 4 years+, I‚Äôve recently had a realization that a lot of it is muscle memory. 

The same problems show up again and again, only with different variable names. And when you first start out, you don‚Äôt know how to solve anything. But once you struggle and finally solve a problem, it feels great. Later, you may struggle again on the SAME problem (with different variable names), and that‚Äôs okay. Once you solve that, you may or may not realize it was the same problem. 

But, let‚Äôs say on the 10th time struggling to solve a problem, something clicks. And you realize you‚Äôve solved the same problem over and over again. That‚Äôs progress. That‚Äôs the muscle memory kicking in, and the development of intuition. 

In my experience, academic classes go too fast through too many concepts for the development of intuition. This intuition takes a lot of practice, concentration, pain, time, and sleep to develop. When I was in school I didn‚Äôt feel like I had an intuitive understanding of anything until usually I was forced to relearn something again and again for the next course. Or sometimes I‚Äôd just be doing some mundane task and I‚Äôd think about some concept and it would just click. 

Don‚Äôt beat yourself up about it. It‚Äôs normal. The worst thing you can do is isolate yourself from others in shame. Try and explain the problems you‚Äôre working on to a neutral friend, and sometimes that helps, even if the person only listens. Try and stay afloat academically, practice as much as you can. Let the problem solving muscle memory develop. 

Most importantly, ask from help from the instructor, classmates, or random strangers on the internet. https://pythondiscord.com/
Dude, I have one thing to tell you.  The people who are best in their fields, mathematicians, programmers, musicians, whatever - they are best because when they recognise that feeling you have right now, they lean into it, because they know that is what your brain rewiring itself feels like.  Yes, it is tough and draining.  It requires a lot of grit to come back every day and feel like that.  But if you can learn to seek out that sensation and welcome it you will go a very long way.  Most people do it for a while and just coast.
You don't need algebra unless you get to numpy or machine learning. Ignore that stuff and stick to vanilla Python until you feel familiar enough with it.
I was in the same spot last month, going through the online courses - datacamp and codeacademy - but still wasn't catching on. I think the best solution is to get a personal tutor who can walk you through every question that you may have. Tutors can get expensive but you can find a freelancer tutor from india/pakistan for around $100 a month which imo is worth it. In that month you will learn all the basics so you can make better use of the online courses after. Also, specialized learning is helpful.
i feel the same way
it's hard, I feel ya
Put something away for now,  focus on either algebra or python. If you really want to dive into code old school type,  try some pascal lessons for basics of code in general.
And it's OK to progress slow, forget about it and take your time.
I think people learn Python by doing. Practice and keep going over stuff.
Also if you don't understand something after 40 minutes on it, then take a break. Spending over 40 minutes on something you don't get is counter productive. Take a break and revisit that bit later.
All the best!
ive been working on c# and sql for more than a decade on and off. a bit of visual basic before that. 

i struggled with python and pandas for weeks: i had dozens of chrome tabs open, was googling like mad, poring through stackoverflow like my life depended on it. 

every little thing i did resulted in an error that i had to google and when i saw what was wrong it was often something why-didn‚Äôt-my-dumb-ass-think-of-that simple. 

it‚Äôs been weeks now and i still end up in hair pulling, teeth gnashing situations with python. 

kudos to you for taking the steps to learn. stay with it buddy. programming is hard. give it time
Introduction to Python: Absolute Beginners, was an excellent course on Edx. Well explained with examples. Its run by Microsoft. I definitely reccomend it if you are having difficulties.
Hey bro. 

Computers are literally dumber than a pair of shoes. 

Programming language is meant to translate plain English into code the machine can understand. 

In other words the computer will only do what you tell it to do and it will do it exactly the way you instruct it. 

Just keep at it. Python is one of my favorite languages to write in. Takes awhile before you get that click moment but it will happen.
Step 1: Take a deep breath!

Step 2. Don't compare your progress to others. 

&#x200B;

Hang in there.  For real.  I first started with python like 5 years ago and I was LOST.  Every new challenge felt overwhelming at first.  Every question you have, google it.  Even super basic crap; "Python 3.7 how do lists work" , "python how do I add add two variables", etc.  Google can be your best friend.  Ask it what you want to do in english (or common speech) and it should point you in the right direction.  Eventually, you will need to google less.  Or your google searches will become much more specific and detailed.  

&#x200B;

Remember to breath, tell yourself you can do this, and keep looking for answers.
Get automate the boring stuff with python and read it all and code the projects and demonstrations. There are links on every snippet that literally take you to a site that visually shows you what happens with each line of code. It is GREAT for learning and understanding what is happening.
One thing that helped me was realizing that if I try to learn to many things at once I would become a "jack of all trades master of none". 

I am on the self learning track also and focusing on one language and one tutorial has helped me make a huge leap forward.

You don't need to know a lot of math to start learning

Another thing is learning to use code to solve problems. You can't just mindlessly type code and expect something to come from it. You have to have a specific problem you're trying to solve.

For example what is the 86th entry in the fibonacci sequence? You can write a couple of lines of code to solve this problems instead of doing the calculations yourself.

You're not going to breeze through a tutorial while having lunch and expect to pick it up. At least I can't. A lot of times I need to give studying my undivided attention.

&#x200B;

TL:DR

Just keep going.
It's not that you're dumb, it's that most people teaching this topic don't put much thought into how to effectively teach it.  By the time they're able to teach the subject, they're many years removed from being a beginner themselves and likely forget what their first steps felt like.  This is actually something I've thought about quite a bit, and I've got some issues with how nearly every class teaches coding to beginners.  Several years ago I dropped out of college because of an "intro" CS class that was way over my head, but later decided that I still wanted to learn how to code.  I spent the next several years taking online classes (TeamTreehouse.com), reading books, then took a 3 month bootcamp course.  Every class seems to take  similar approach- they jump straight into teaching concepts and a language simultaneously without differentiating between the two.  They also start with very small topics without providing any context how these small pieces fit together to make an entire project.  It's like handing you one puzzle piece at a time without showing you what the finished puzzle will look like or even how big it's going to be.  It makes it very daunting and overwhelming when you're just starting out.  By the time I took the bootcamp course, I was pretty well prepared from all of the previous classes and took, but I watched many other classmates go through the same stress and hurdles that I did.  This approach to teaching just creates the habit of beating your head against a brick wall until things just click one day.  I'd recommend taking some time to just read up on concepts (loops, variables, arrays, dictionaries, functions), but try to ignore any actual language.  These are concepts that apply to nearly all languages, so they're more fundamental than the actual syntax of a language.  Check out [https://scratch.mit.edu/](https://scratch.mit.edu/).  It seems a bit childish, but it's a great way to practice using these concepts without getting bogged down by the syntax at the same time.  Once you get comfortable with that, try finding some resources that will break down file structures of projects and explains what each file does, and then move onto the actual syntax of a language.  And of course, practice practice practice.   Think of simple projects that will allow you to practice.   I wrote a simple script to help me budget and track bills.  Not only was it a good place to start, it has real world value and I still use it all the time.   Let me know if you have any questions.
Just watch the freecodecamp youtube video its really good
Hi! 34 year old here, working full time as a programmer (not in python mind you, but I am currently learning python) and I didn‚Äôt start learning anything about programming until I was also 28. Never took any classes and learned by simply figuring shit out as I went. Also, the highest grade I ever got in high school algebra was a C but I honestly think it is because everyone learns math completely differently because when I look at things now through a different lens they click but they would have not made sense to me in school. I don‚Äôt say any of this to humble brag by any means either, I had the exact same ‚Äúwhat the hell am I doing even attempting this?!?‚Äù moments too but looking back now the only thing I regret is that I waited so long to start learning because I convinced myself I couldn‚Äôt before I tried. 

Here‚Äôs the thing, you can do this. My guess is that you are getting yourself overwhelmed trying to learn to much at once. Programming is intimidating at first because there are LOTS of options. There are almost always multiple ways to tackle a problem, sure some may be better than others but you can usually get from point A to point B multiple ways and as you become a better coder, you will learn why different solutions are better than others. 

Don‚Äôt get discouraged! You can learn on almost any device these days and there are so many free resources available. The best thing I can suggest to you is to find a project and then start learning the pieces you need to make it work. Don‚Äôt get frustrated by what you don‚Äôt know, ask questions, be humble and things will start to click!
It just takes time.
Its like when you learn an instrument, you dont expect magic the first week but hang in there and try to code something everyday and build muscle memory.
Okay, everybody has already responded to this topic so why not me?

&#x200B;

If you feel lost, ask good questions (in this subreddit). Please, good questions.

  
("I'm lost, can you help me?" is not a good question for obvious reasons. Good question contains your code - simplified to get rid of anything not related to the actual question, an error message if any and the question, of course.)
It takes awhile.  One thing that helped me is coming up with a project that I personally think is cool and try and build it from scratch.  It helps you think through things better instead of just following what someone is telling you through a tutorial (although that is important too!)
Try the course by freecodecsmp on yt, i found it much easier to work with and not intimidating then read the book "automate the boring stuff with python"
On the same boat! Took an Intro to Python class @ my local college, and the prof was extremely unhelpful. Nice guy but he didn‚Äôt know how to answer questions, or explain topics thoroughly. I‚Äôll keep at it. Breaks ARE necessary.
It's supposed to be hard. Be glad that it is, that way you know your brain is learning. Also, don't buy into these ridiculous marketing claims, promising to teach you programming in 30 days / n amount of steps. That's all bullshit and it will only serve as an unrealistic mark. So stop referring to it, stop beating yourself up with petty shit and focus on the process. Repetition and perseverance are key. Every single day. If you never stop and never give up you will succeed. That is guaranteed. I'm speaking from experience. Also make sure to get enough quality sleep. Good luck.
just keep going...seriously...code, test it, fix it, test it, fix, test it until it works...it doesn't matter if you need to re do it all just keep going
I know exactly how you feel. I too am 28. And started trying to program on and off around Xmas and started trying more about 2 months about then a few weeks ago life got in the way so had to put it on pause.   
When I first started I got so confused by so much. Everything felt impossible. I really couldn't grasp anything. I kept trying, but it never sunk in. The part that made me give up is when I came across something called a function, and passing in things to it. This confused me no end. I didn't get it. I gave up.  
But for some reason I came back, I read around different places on the same ideas over and over until I got it, and eventually it clicked. Like never before. You can get there.  
I'm by no means amazing at python, but I am a teacher so I know how to explain things so if it's something super basic you're stuck on DM me and I'll see if I can help, or we can figure it out together.
Stop trying to learn. Seriously. I think the best way to learn is by being genuinely interested in what you are doing.

Develop this passionate interest and desire to know more and you will learn magnitudes faster and you will not feel as if it was this demoralizing ordeal that you're describing. It would be an interesting journey. 

It's like trying to catch a butterfly with your hands. You're never going to catch one by flailing around in a desperate attempt to catch one. If you just relax and stick your finger out, though, there's a much better chance of one landing on your finger. To catch the butterfly, you have to stop trying to catch the butterfly.
im with you buddy. Ive been doing it for 6 months and still don't get it. The one quote that made me feel better and i hope it does for you too is "You dont plant a seed then dig it back up after a day or so to see its progress, do you? Be patient and put in the work, it'll grow as long as you put in work."   


It's that you're starting somewhere. Dont quit now and think back what could have been when you're 35 or 40 or even 50.
I‚Äôm making many courses at Codecademy and although I love it, I found that many exercises  and explanations are not clear.
If you don‚Äôt understand something completely, take a time to search complimentary information in Google and even, recap over what you did until you feel you understand everything. I made two times the JavaScript course. Also, create your own cheatsheet. But don‚Äôt copy-paste. Explain it with your own words.

Finally, as someone told you before,try to learn having a project as a goal, something you would like to do as a motivation to learn because in that way you will put so much more energy, time, concentration and motivation in learning 
Also it will be easier to relationate everything  you are learning.

And test the code you learn, because Codecademy can give you a lot of syntaxis comprehension but not enough testing imho (however, the courses are great)

 
I tried to learn to code 4 or 5 times before, but never worked because I didn‚Äôt have a project in that time as a motivation.
Since you have mentioned that you need to learn algebra, I can safely assume that you are trying to do some complex project that probably involves game designing or some kind of machine learning.

 I have seen many people start programming as beginners (I know I was) and getting side tracked by some fancy libraries to try and do some advanced projects. This eventually ends up discouraging them because they haven't cemented the basics. 

If this you, I would suggest that you start with very simple projects and work from there to hone and sharpen your programming skills before you take on any advanced projects. I promise you will get there  eventually, but you definitely need a good grasp of the basics to get there and some patience. Cheers!
Don't be so hard on yourself!
I remember building my first project with python, it was very hard. Nothing to be done here than to iteratively work on it. 
I have been coding for 4 years now, and I saw my first project now, and I realised how stupid my code was, but trying to build that was very insightful and helped me grow as programmer leaps and bounds. So keep at it.
I feel the same way and I have 2 master's degrees (not that degrees make you smart). I have been meaning to learn python for at least a decade and I just find it so frustrating and demoralizing.
Go slow. Read every word and use the punctuation. If you do not understand each sentence stop and re-read and research until you do. I have to approach learning python this way - I am a professional have an under grad, post grad and 20 years in a professional career. It ain‚Äôt easy - chill and take your time, love the process of learning there is no rush
I keep giving up. Then I come back again a year later and wish that I didn't give up.
I tried Python early this year in Codecademy but I didn't get anything out of it. I chose Python because lot of people seem to recommend it.

I took HTML and CSS courses in Codeacademy as well and they pushed me forward to learn Javascript. I found a good hands on online course to follow and forgot about Python.

That is until I started banging my head against the wall with Javascript. I decided to do something completely else and enrolled in Harvard's Introduction to Computer science where later on the course I was reintroduced to Python and it made so much more sense.

I recommend taking the Harvard course, it's free and gives you a lot of important information about programming.
Let me tell you something. Coming from a procedural programing background i had a hard time understanding python concept. When i realized that it wasnt Python that caused me problem ut solved a lot. Then i started learning Object Oriented Programing principles. Now everything is much easier to understand! Once you know how OOP works,  a big part of the work is done.
I have something to say to you and is not complimentary. In my university I have had a course on C. Everyone understood the concepts except me. I wanted to die. But then a year later I sat alone and took a book and now I am good at programming. You just have to go for it man.
I can't see an introductory course in Python requiring Algebra. 

I'm just learning also. I found I was really struggling at first not having a good grounding in the difference between dataframes, series, tuples, dictionaries, etc. What works on one will not work on another and it was very frustrating particularly when trying to analyze bits of code, and wasted a lot of my time. I studied countless YouTube videos, took several Udemy courses, and this is what helped me the most and I feel got me pointed in the right direction. The cost is minimal, btw. 

[https://www.udemy.com/share/101txwBkUZdVlbRnw=/](https://www.udemy.com/share/101txwBkUZdVlbRnw=/)

I've found I have to go back and review it every now and then. Speaking of reviewing, one of the Python YouTubers that I liked a lot made the point that there is such a vast number of Python libraries and commands that it is impossible to remember them all, so get familiar with how to search on them and don't feel badly about having to do so.
I just started python a week ago, im finding this tutorial quite good
https://youtu.be/_uQrJ0TkZlc

I started learning C and C++ for arduino two years ago and still struggle to understand the basics 

It wasn't untill I starter python that I understood things in C and C++ 

Might be worth looking at how things are structured in another language 

FWY I failed math and am dyslexic so there is still hope
I was in your position before. I never got the hang of coding and barely passed my Python course. I was one of the few people who failed the test and exams yet managed to salvage it and pass thanks to my mates as the course was 70% coursework. 

I stopped coding for about a year, then decided to give it another go. It wasn't easy at first cause I had to relearn everything. Then one day something clicked in me. Now I can right simple scripts. Nothing ridiculously complicated or even remotely complicated, but still... 

My friend once told me, "coding is a way of thinking".
Good luck and keep going.
One thing I can tell you is, don't look at that time to completion metrics. Especially when learning, people are faster than other at some things, but slower at different ones. Just try to understand stuff ypu do and bot just copy pasting code from courses. This way if learning how to print hello word to the console will take you a week, it will still teach you something and next things will come easier
You are in the beginning of the *steep* learning curve. keep trying, the hard part is learning how to learn.
There are no short cuts to learning computer science, you have to put the effort in and solve problems with code and learn concepts behind efficient methods have already been discovered by others. Most newbies make the mistake of learning Syntax from a tutorial that is type what you see.. this is very poor way to learn. You have to solve actual problems designed to teach you concepts. 


There are a ton of computer science sites put there designed to teach concepts, my favorite is [Codeabbey](https://www.codeabbey.com/index/task_list). Challenge yourself, try and solve as many problems as you can in a month (without cheating, because you will only be cheating yourself) then report back if you are still having issues learning.
100% agree. Just remember that the code you see others write is the ones they chose to share. The bad code gets deleted 

Also remember no one is good at all areas of python. People have their specialties
Same dude, same.
I've tried a couple of phone based python learning apps and so far I'm liking Mimo. So far with the free version it seems to be teaching me all the basics, although be it in a different order then other apps I've tried; idk if there is a exact order of learning the different parts. It not only talks about what different things do but it shows examples, has you feel in some missing pieces, quizzes you, has you write most of the code for what your learning. The paid version has related projects that focus on what you just learned, plus included in the paid version you have access to all of the different course Mimo offers. If i had the money I would buy the paid version. 

Just my worthless two cents,

Unlovedcoder
Programming can be very humbling. We aren't born with knowledge, it's something that can only be attained through study, practice, hard work. If it were easy everyone would be doing it. Just start small and build up your knowledge and eventually the bigger picture will become clear. Stay positive,  keep at it, and eventually you'll get to where you want to be.
You sound like me trying to write OO python.
Learn how to program is **NOT** an easy task.

From the ground to the roof it takes time, effort, a passionate mindset and every drop of your sweat.

Obviously, it all depends on what your final goal is: If it's just to automate things or doing some utility for yourself, fine, some courses will be more than enough.

But if you REALLY want to dip in, you need to grasp information starting from the bare ground, something that a single course on udemy won't teach you for sure.

If dedication and time aren't enough for you to learn properly, don't worry: programming is a bitch at first and you need to enter the logic behind it; arm yourself with patience and give time to the time.

I got a bachelor degree in Computer Science and i can swear shit difficult, but not impossible: you need to be passionate and secure about what you're going to do with your time, spare and not.

Most of the people would reccomend to learn by yourself throu the internet, but as a someone that sweated for a lot of years on this subject i can only reccomend you, if you're really interested and motivated, to start an academical path.

If you have not enough time, i still STRONGLY suggest to start from basics and then moving to programming, like you're following a degree.

&#x200B;

Remember that knowing how to write a for cycle and some nested if's doesn't make you a programmer, but it's all the core behind.
Never took algebra classes and I'm programming for a couple of years now without any problems.

For me it's hard to keep engaged in the learning process and I'm very thankful I started with the book "automating the boring stuff" because it's not only a good starting point but the way it's written makes it about the only educational book that didn't make me want to fall asleep after 10 minutes.

I think the punctuation is a bit off above, sorry for that.
At 27 I was a kitchen monkey, went to college and took math for HS dropouts, English for ESL, and felt as you do. It gets better.
I got into coding when I was very young (around 7) because my uncle is a software engineer. I tried and tried but never got the hang of it. Last year I finally started to get the hang of it and this year I'm building an app in python using Kivy (for school). It took me a long time to get the hand of it, I'm mostly self taught (through books and online tutorials). Hopefully this serves as an example that good things take time. 

&#x200B;

(forgot to add I'm 15 now)
I tried codecademy python when I started. Out of all the websites, I never really liked it. Maybe you should try different websites. 

I mainly used Sololearn, but there's also freecodecamp, and Programiz (which has nice reference tools)
Getting emotional and punishing yourself are counter-productive :) 

&#x200B;

Some of my biggest takeaways from learning programming:

Learn to forgive yourself for not understanding. Failure is inevitable, so fail fast and fail forward.
It will click...it just takes time. I highly recommend getting on Discord and joining a python/coding channel. Most of them have mentors that will work with you. That's how I survived my college class! And just because you don't get something at first doesn't make you dumb. Stay determined.
It's hard man, don't beat yourself up. I was able to pick up some of the basics pretty quickly but the more you keep diving, the more intense it gets. Seriously, learning programming is one of the hardest hobbies or careers to learn.

You are right though, algorithms are just solved math problems that  you use to relate to real life problems or to w/e program you are making. Not all programs require a complex algorithm though, so keep your head up.
Never dumb! You will get there with time and patience. Don't be too hard on yourself \^\_\^
It‚Äôs not for everyone so if you ultimately decide to move on to something else, there‚Äôs no shame in that.

That said, give yourself some time. Learn a little here and a little there. Take small breaks and come back to it. Build a foundation over time. As much as those expensive code schools would like you to believe it, you really can‚Äôt become an expert in a few weeks or even a few months. Proficiency in high school-level math is a must though.
I feel like sometimes this sub goes too far with the unthinking, "You're great! Keep trucking!" stuff.

Yes, coding is hard and you shouldn't give up.  But people aren't really engaging with the specifics of a person's situation when they're just being generally motivational.

If you've genuinely spent 2 weeks on something that is reasonably predicted to take ~3 hours, that could be indicative of a fundamental flaw in your approach or a basic gap in your knowledge.  

Perseverance is definitely a necessary trait, but sometimes people can become fixated and there's a fine line between perseverance and unproductive stubborness.

Try posting your assignment, what you've tried so far, and your obstacles/issues -- including specific error feedback -- to this sub and asking for help.

Just blindly encouraging people to "keep going" or pointing them at other learning resources doesn't necessarily help.  They might be laboriously toiling up a mountainside when really they need a _specific_ nudge onto a smoother path right adjacent to them.
hey i think you are doing great. except for the part where you are hating yourself. Dont try to understand or learn anything in one go. try this 

[https://www.udemy.com/share/101W8QAEMZdVdRQXsE/](https://www.udemy.com/share/101W8QAEMZdVdRQXsE/)
Welcome brother
Honestly the people who say you don't need to know math for programming are straight up lying. Maybe you don't things like advanced calculus but you really need to know some concepts.
I'm also 28 and study Python, you do not need to study algebra to learn Python. To use Python for certain things (such as AI development) you'll need to be good at math in general. If you get into doing  algorithms you'll be problem solving in similar ways as to what you would do in algebra. But learning the Python library, not at all, and depending on what you want to do with Python you don't need tons of math skills. If you want to develop websites using Python maths isn't really a concern. Some courses you can study are designed around computer science and engineering courses, these courses will tend to explain programming in a mathematical context to appeal to technical students. Stay away from courses like that if you don't have a passion for math. It might not sound appealing, but books designed for kids or high school students to learn Python isn't a bad route to do down if you are really struggling to find something, this will give you the foundational knowledge to progress into more challenging material.
[Automate the boring stuff](https://automatetheboringstuff.com/#toc)
This is the best algebra-review resource I‚Äôve found.

https://www.stewartcalculus.com/_update/media/common/reviewofalgebra.pdf

Don‚Äôt give up!
Go to a youtube channel called the Newboston , he explains the basics very well.
You don't need algebra 

https://www.sciencedaily.com/releases/2020/03/200302103735.htm
you just have to keep going at it. usually ‚Äúgood‚Äù coders have something they wanna create and are motivated from that.
Hey, I really enjoyed this course https://runestone.academy/runestone/books/published/pythonds/index.html , where they explained things fairly well. 

Another decent book Is the Automate the Boring Stuff with Python.
But it depends. You mention it's for college. I'm studying electrical engineering, and I had an introductory programming class. Is it like that for you, or is it a compsci program? I feel comfortable recommending the latter if your situation is similar to mine, but the former if you're doing a compsci program.
Some days it be like that. Im a noob as well and understand the feeling. You just feel like the biggest idiot. You read something 5 times and know you are not comprehending. You get lost in the tutorial and can't get a pice of code to work. It shuts you down and shuts you off because no one likes feeling stupid. No one likes feeling new. 

The best tool I've got in the toolbox now is consistency. Consistency day in and day out will eventually lead to results. Even if you can only tough out an hour just force it. Something ive found is that ill feel like im getting nothing but then when watching a different tutorial I'll realize I DO know what's supposed to be happening and I just have to figure out how to execute. Its a lot of thinking and staring. 

Also- try to explain the concepts to someone else. Itll help you to solidify your personal definition of these terms. You are far more likely to have the information stick if you can do this. Tell your mom,  your SO or the cat but just try to explain it in your own words. I think when you memorize definitions word for word you are only memorizing you are not fully learning. 

In conclusion- Just keep going. Hard work beats talent when talent doesn't work hard. Meaning even if you were good out of the gate you won't get any better without putting in the time. If this shit was easy everyone and their mom would be at Google making 6 figures already. Head up my friend.
You're focusing on the wrong things. Do you want to program? Do you like programming? Then just keep going. Your post indicates a frame of mind that might bail if the pressure is too great.

Just keep going. It's going to feel hard a lot. That's just part of the process. Every so often, you'll find material that works for you, and you'll level up. Other times (many other times), you're just going to feel stagnant. This is a time-on-task game. The long you spend really trying, the better you'll get.
You might just need a different approach than you've been using.

Personally, I never fail to recommend Eric Matthes' \*Python Crash Course\*, which is a very gentle, reasonably-paced, non-technical introduction to Python. I read it having some (purely functional) experience in R and otherwise solely in stuff like SQL; after two weeks of working through the first third of the book, I was already programming stuff at work that is still being used today.
Hey, theres a common misconception of being a dumb or smart person, NOTHING COULD BE MORE WRONG. You have the potential, I believe in you. The truth is you can do it, you aren‚Äôt dumb, theres no shame in needing to go back through algebra, many of us willfully do the minimum work to be able to pass math throughout elementary school, middle school and high school, and thats not how you master something. Dont worry if it takes you a little longer to learn something than other people, it doesn‚Äôt mean you‚Äôre dumb, it just means you probably need to tweak your study strategy. Dont be too hard on yourself and always try to find a strategy that works for you.

tl;dr -> You aren‚Äôt a ‚Äúdumb person‚Äù nobody is. You have the potential, its just about using a study strategy that works for you and practicing lots. I believe in you!
I'll be honest i was definitely in the same boat as you as i'm sure many of us were. One thing to keep in mind is that even for the smartest guy in the world, it's not something you're going to learn overnight. It is tough to wrap your mind around some of the concepts and it's not just you.

Once you take a deep breather and realize this is a reality for everyone, then it just becomes a matter of putting in the work. It's overwhelming at first but trust me, you will get it with enough practice.

Personally i really do believe in the learn by doing method. I would find an easy project or something that you're generally interested and just jump in and try to code it. It could be as easy as a program which take an input number from the user and multiplies it by two, or something of that nature. And just keep adding onto the program, make it take multiple inputs. Adding some error catching, etc. etc.

From my experience, i felt like i could read material for hours and it never really clicked until i actually coded something out on my own. In which case i'd internalize what this course had been trying to tell me for hours, in just a few minutes..
Don't worry, if you hang with it for five years, suddenly other people will seem dumb.
Hey man, don't under-estimate yourself, try to enjoy the process, it is a long way but trust me the view gets better. Don't let go, you understand me ?
No need to take algebra for most python stuff. I have legit panic attacks in math classes and I‚Äôve been learning python for two years.
Python programming can seem hard, but it really isn't... What's hard is wasting tones of time and effort to grasp simple concepts, or understanding what is taught, because it is taught wrong and assumes you already know basic fundamental concepts

Find a mentor, someone you can reach to whenever you need to understand something. Within time, you'll see that it's not the material that's hard, it's the lack of detailed explanations and practicality
You should check out Dr. Charles Severance's python classes. Dude's amazing at explaining basic concepts and he even wrote a book for beginners called "Python for everybody ". You should also check out "Think python". It's good too.
Here's the book : http://do1.dr-chuck.com/pythonlearn/EN_us/pythonlearn.pdf

Check out his materials : https://www.google.com/url?sa=t&source=web&rct=j&url=https://www.py4e.com/&ved=2ahUKEwj9g5S99_fqAhVu4nMBHTPrDJEQFjAMegQIDxAB&usg=AOvVaw1WyfQwR-7lRQrYhxvKXiFY&cshid=1596213889446
Learning to program as well, I'm two semesters into my CS degree. Doing really well with basic programming things, I've done two things that were really helpful. I bought a python for kids book from No Starch Press and went through it. It gives you the basics of everything and starts to show you how they all fit together. The second was a piece of advice given to me by a programmer friend, break everything down to as simple a set as instructions as possible, like explaining it to a child. Use as much Pseudo code as possible, draw pictures to visualize things, etc...
Scrimba has a Python course. If you‚Äôre looking for a textbook with programming exercises after each chapter to practice the concepts, there‚Äôs ‚ÄúGetting Started with Python‚Äù by Tony Gaddis.
As a 20M, I‚Äôm currently enrolled in a programming related field. Originally I wanted to go into a more in hands on field but decided to change due to my interests. I have no connections and very little beginner knowledge with programming and after a couple years of programming (CodeWars, online tutorials, classes) I‚Äôm just starting to feel comfortable with the more intermediate topics. 

What I‚Äôm trying to say is that, programming is hard but it‚Äôs also one of the most rewarding things I‚Äôve worked with and I know I will only get better. Keep your head up and know your programming skills will get better but you have to put in the time.
Trust me, you're never too experienced to feel dumb and be demoralized when it comes to programming. After developing in python for 15 years and professionally for 10, I still feel dumb sometimes
Feel free to ask all the questions you need. Either here or pm me.
You seriously need to be kinder to yourself. Having grit and being stubborn will get you much much further in life than being naturally gifted as 'smart'. 

It also takes time. If you haven't touched algebra in years, you need to give yourself some grace and focus on learning, not on how much time it's going to take.

I have a learning disability, barely graduated college, and now I'm a chemical engineer that's starting to learn data science. Graduate schools don't want me because my undergrad GPA is too low. Isn't that funny? I'm doing more work and learning more than my colleagues, but I'm not worthy to be educated at a university. 

Traditional concepts of education are bullshit. You're going to hit every obstacle and you're going to fail and fail often. The people that get the furthest are not the smartest but the most stubborn.

Keep grinding!!
Honestly, I've been where you are.  A lot of programming languages that aren't HTML or CSS style building tools involve a lot of math, but the good news is, that most of what you need to know math wise isn't necessarily how to perform equations, but how to think about the result you want, and how to get to it logically.  I am horrible at math, and I'm pretty good at python, because I don't necessarily have to do math, I just have to know what result I want and how to look for it.

1. You should download  [Anaconda Navigator](https://docs.anaconda.com/anaconda/install/) , it has a utility called Jupyter Notebooks that allows you to code and run your code all in one page, making it much easier to see results quickly for code you write without having to resort to using  a text editor and testing at the command line level.
2. I highly recommend this course: [https://www.udemy.com/share/101W94AEEfclxXQH4H/](https://www.udemy.com/share/101W94AEEfclxXQH4H/) (since there are other comments recommending courses, this one is very recent, so everything in it is inclusive of the language the way it stands at the moment). The teacher approaches it from a complete novice standpoint, every single section has a fully complete manual you can read through while the videos are playing, or you can code along with the video, which I found extremely helpful when learning python.Additionally, this website is excellent for self practice once you've got the basics, and it's completely free.[https://www.practicepython.org/](https://www.practicepython.org/)
3. Remember that one of the biggest open secrets of coding is that you should never try to reinvent the wheel just for the sake of it.  If you need to solve a problem that someone else has already solved, then use their solution.  Google the issue, if someone has a fix, just copy and paste it, then look at their fix and try to understand what it's doing, and why it works.  This is also an easy way to learn, via reverse engineering.
4. Try to remember that you're learning a language, with it's own syntax, vocabulary, and logic.  If you tried to learn French in 2 weeks, you wouldn't be surprised if you were still terrible at it.  Learning languages takes time.  On the bright side though, once you learn one language, picking up others is easier, because they all share similar traits.

Coding isn't for everyone, but without the right resources, you won't know, so do yourself a favor and grab a good course, and give it another month.
I‚Äôm using Udemy. I bought a course from Colt Steel. He explains things as he goes and has exercises. Best course I‚Äôve found yet. Paid $16 for it.
>From the realization that I need to take algebra lessons

Why?
Hey man! Take a breather and realize you got this. It took me three times to pass the intro to Java class at my school (money maybe not spent well) and now I‚Äôm learning python. Python is easier for me to understand while Java was a nightmare. Just keep going and if Python still proves to be impossible for you or demoralizing, try another language out and see if the basics are easier for you! I may not know much about programming but I‚Äôm down to offer encouraging words if you need it!
I mean... It's hard, but you can learn something else ...?unless you really enjoy programming?
I'm 28 as well and empathize with your feeling. It is hard. Something that I truly recommend is try to grab a decent book. Automate the boring stuff it is a great one.

Other than that, be patient. Programming is like going to the gym. The firsts weeks you are going to lift 2 to 5kg as most, but after weeks of repetition you are going to be between 15-20kg. But, if it happens that you start to skip the training, you are going to start all over again. Programming is the same, be patient, consistent, and in few weeks you are going to be using classes and that kind of stuff.
Hey dude!  Programming languages are weird.  I've been programming since C in the early 90s, and I still have trouble getting started trying to learn a new one.  So I'm all too familiar with the feeling of putting effort into trying to learn it, but the pieces just don't come together, and you start feeling like "this is wrong and it's stupid and I'm stupid and I hate it."  You will likely get that feeling, I do and lots of people do, so there's no stopping it, but the key is to ignore it.  Ignore your feelings!

Then the next thing: I think you have to understand how you learn.  Meaning, how do *you personally* learn things easiest, and then find a python course that explains things in *that way.*  For example, I can learn about what variables are and how loops work, and it is important to understand them, yes. But at some point, I need to learn by *doing* rather than just reading about concepts.  So usually, getting started in a language, very early on I'll try to write a program that does something I do a lot, maybe batch-rename a bunch of files.  And then just google away about how to do something like that in the language I'm trying to learn.  Along the way, I'll see "Oh, they're using a loop here -- I remember reading about those" or "oh I see they're using a variable, but the syntax is different.. hmmm maybe I'll google what that is too."  From there, I can usually get into the "groove" of things.

Also, and this may be more controversial, but a lot of courses I've seen start you off by `pip install`-ing a bunch of third-party libraries and using those.  I think that's a really bad way to start off, because you're not learning python; you're learning how to use some third-party thing that some dudes wrote in their pajamas and of *course* it's not going to be as well-designed as the programming language itself.

So that's just me, but I'm saying that the key to learning a programming language (or anything) is going to be:

1: Ignore your feelings of doom. They're normal at this stage and they're meaningless.

2: Figure out how *you* learn best, and find a good course that works the same way you do.
A lot of the science done on our mindset and its impact on learning would say that thoughts such as these will hamper your learning. It's tough now but so is getting back in the gym off the couch after 10 years. You're weak, not stupid, and weakness can turn to strength with daily practice, and a trust in brain science which says your brain is not rigid and can change dramatically depending on use.

&#x200B;

Hang in there bud I feel you. Just keep your goals attainable and consistent.
Hey!
I've been there.

Had to learn Python from Scratch for a course I was in (which I did not know used Python).

It is perseverance for sure.

The language is very different compared to classic Java or C or whatever.

But, in most cases, it is very intuitive or straight forward.

Best way to learn is to take up a minor project, do it the dumb, first thoughts way.
Nothing like Tic Tac Toe or anything.

Create a calculator maybe, or, read some file on your PC and change its content or use it to find a specific item. Anything very simple.

Eventually, you'll get the hang of the syntax, the pythonic ideals, and the language benefits.

Then, you'll be motivated to do more.
This is when you simply start googling what you want to achieve and you'll see modules or libraries or stack overflow or Reddit questions on the same.
The beauty of Python is it can do anything and there's always something that exists that you can pick and use.

At this stage, you may continue the projects or do some leetcode or hackerrank exercises and you'll be good.

It is arduous but a fun journey and anyone can pick it up ;)
Mamma, there a libraries for any kind of math you need to do. You better get into it!
I feel many of us are easily distracted by more interesting things, at a point in time. Growing up, in my teens I had an interest in wanting to learn programming but I felt like you might be feeling. I completely ignored it after a few failed attempts.

I'm a few days away from turning 38. I recently picked up Python and I'm making some (but satisfying) progress. Go into the basics using the online courses, then try watching the fun, Python Youtubers - sentdex, Corey, Tim. They give you nice bite-sized lessons in 5-10mins. Don't over do it. Practice some. 
When you've gone through a few of those, try to find things (outside Python) that you find annoying or you feel, take too much of your time. It could be cleaning up data and plugging them into sheets, sorting your media folder, maybe killing a few processes before you start gaming, maybe a device status monitor. I mean, you figure!

Simplify, automate them using Python. Start with the simple stuff. You will be surprised when you find yourself going overboard trying to get something to do. Those difficult small steps expose you to much more than any Youtube, or spoonfed courses ever will. You will make a lot of progress, than tackle the bigger problems.
>Feeling too fucking dumb for Python and programming in general

Tried asking this on another r/ but never got an answer.  

Years ago, on TV, it showed shapes, simple black-and-white, 3 -dimensional line graphics that could string together.  When given the command to "move," over numerous repetitions, some actually evolved  various ways of moving.  One inched along like the proverbial inch worm.  Another wriggled like a snake.  One got itself upright and simply fell over.  

What kind of programming could do this?  (I don't know anything about programming.)
I would suggest going to the site [MathIsFun.com](https://MathIsFun.com) for any math concepts you may need help to understand.  I did and it has shed light onto calculating permutations and combinations for some of my Python code.  

Keep your chin up and put in the time.  Not only will it begin to pay off but it will also help with your neural plasticity.
Totally feel ya.  I'm a 45 year old female & have now been taking CS courses for almost 2 years, and am only now just starting to get it.  This is with absolutely no previous knowledge, not even peripheral, and working with 20 year olds who already know most of it.  It's completely demoralizing sometimes, lol, but I've stuck to it & it's beginning to make more sense.  You can totally do it if even my old a$$ can!!
What makes you think you need to take algebra lessons? Unless your project requires it, you do not need to do this.
Taking an online course is great for getting to know the syntax and the basic logic of any programming language. Coming up with an idea of a project that you should work on, is up to you. Otherwise, you'll just end up doing "Hello World" and "Create a website" projects with no interest, and eventually, you'll drop them.

My questions to you my friend - 
1. What do you find interesting?
1. Which tool would make your day-to-day work easier? 

After you answer those questions, we can find out together which programming language is suitable for your need, and the steps that are needed to take action.
Go easy on yourself. Write something simple and just build on it
You and I both buddy. All I can offer you is not to give up. Keep going until you find a course that suits your way of learning.
Hey, man - I'm you in 2 years. Starting learning python at 28 two years ago and never felt so stupid in my entire life. I have a liberal arts background with zero experience in computer science but wanted to pick it up to be better at my job as a linguistic data analysis. The most important thing i learned is that this, like everything hard, takes a lot of time. Here's what worked for me:

1. Get a mentor/buddy - I owe EVERYTHING to my work mentor who would have the patience to sit with me for 30 mins every week and umm and uhhh until i figure out the simplest shit. She would come up with an idea, let me work on it for a week, and then we would solve it from scratch together. This laid the foundation. 
2. Make small progress - Even when you get the basics down, there are a million things to learn. I like to write down things i dont know and when i have down time reference that list and learn something new. Relatedly...
3. Read read read - For a while I would read a python article (medium/towards data science, mostly) first thing in the morning. Sometimes i would try it out right there, sometimes i would read just to give myself more input. You'd be surprised how much stuff sticks that way. 
4. Try to do things from memory after you learn them - this was big for me. A lot of times i would see someone do something (at work, in a youtube video, etc. ) and understand it but not know what the fuck to do when i was asked to do it myself. I like to black out the code in my notes and just write the thing i "learned" how to do, then try to do it from memory a few times before i took off the black highlight. 
5. Lastly, ask for help - people love this shit & they love to share. There will always be someone who's willing to help if you're humble and ask nicely.
you are the victim of your own assumption that learning programming is a cakewalk, an assumption based of your desire for a result rather than based on facts

it is not like that. but once you learn new and new little things, it gets a bit easier, especially if you're learning mostly on your own
Anything worth doing is worth doing badly
i can teach anyone if you need a guiding hand
A common problem people have is that they do too much learning and not enough repetition. Courses like Codecademy, while good (and I recommend them), are guilty of this. Their teaching method is simply "learn A, then learn B, then learn C, then learn D", etc. Which seems good, but is actually really bad. The problem is, you are not really remembering and understanding things, you're just watching, going through the motions, and then moving onto something different (and it all washes off you).

You learn by practicing. You need to do simple things, over and over and over again, until you are thoroughly sick of them. Then you need to do them way, WAY more.

Pick a simple console game, like "guess a number, and I'll tell you if your guess is too high or too low, until you get it right". Or hangman if you want something more challenging.

See if you can make that. If you can't, learn inputs and conditional flow until you can. If you can, great. Now make it again. Now make it again. Now swap it around (i.e. computer guesses your number, instead of the other way around). Now make it again, but move code into functions, and have a simple main game loop that calls the functions (this is called refactoring: the game works the same, but the code is organised differently). Now make it again. Good job.

Tomorrow? Go through that whole process again.

See? You're probably getting very sick of this number game by now. That's a good sign you're on the right track.

Go check out Learn Python the Hard Way. It is based on a similar philosophy: simple boring exercises, done over and over. No copy and pasting. Type out simple functions by hand, over and over, until they become like muscle memory.

Before you yell out "but programmers don't to memorise everything, searching on stack overflow is fine!!!", I know that. But there is a certain level of intrinsic knowledge that you simply need to have a baseline level of productivity. If you need to google how to define a function every time you define a function, you will annoyed and give up. This way, you will end up getting bored and annoyed, but by the time that happens, you will have picked up a bunch of tacit knowledge that will make your next projects 1000 times easier.
Everyone feels dumb when starting programming (At least I assume so). With some work, making some projects and looking at code made by others, you can start to feel a lot more comfortable with your code.
It‚Äôs normal to feel this way when learning new things. I take a lot of online courses and I kinda got used to frustration that comes with acquiring new skills. Sadly, it doesn‚Äôt go away, but you can learn to accept it and it helps. 

Don‚Äôt stop, there is a lot of truth in the adage ‚ÄúFirst step is always the hardest‚Äù. The more you do it, the more comfortable you will become.

Programming has a relatively steep learning curve: you need to know syntax, think in steps, be familiar with command line, etc. It is also ‚Äútrial-and-error‚Äù process with huge emphasis on ‚Äúerror‚Äù. 

It is normal when your code doesn‚Äôt work first several times when you run it. It is normal to stare at your code for long periods of time trying to figure out where you made a mistake. It is normal to google your bug for hours. 

This process goes against what we all learned in school where doing it right the first time is the goal. 

Don‚Äôt give up
What really opened the door to programming for me was the free content on codecombat.com. It starts you out slowly and gradually introduces you to python.  Starting out with a limited feature set makes it a lot less daunting.
youll get there, coding if youre new is a hard skill to learn, I struggled my first year learning matlab. However whats important is that you like or interested in what youre learning and be willing to put in the hours. The learning curve is like an exponential curve, slow progress at the beginning and faster as you spend more time
Why do you want to code? Dont learn because you want to code but learn because you want to achieve something with it!
Just read and watch as much as you can. People teach the same concepts in different ways and maybe certain styles will click with you. I personally recommend not just relying on one or two resources. Sure there‚Äôs good books like Automate the Boring Stuff and Python Crash Course or courses, but they are not the end all be all. There‚Äôs so many teachers out there, you will eventually stumble upon great content that helps you better understand. Immerse yourself, go through YouTube, go through free content hosted on Github, sign up for free courses, etc... Also just can‚Äôt rely on watching or reading, comes a time where you actually need to code yourself. Jot down notes as you go, you‚Äôll have moments here and there where you get that aha moment. It takes time, you have to really get obsessed with learning. Train your mind to think in code, jk that‚Äôs a bit far. Good luck.
Dude Codeacademy Pro is amazing. I‚Äôm about a fifth done with the Python course (first time coder) and I am hyped to be learning as much as I am. Feels really empowering tbh; hoping to land a remote job coding or doing data science in the next couple months and that legit feels possible with this course.
Check out Corey Schafer's YouTube channel. Everything is free, and not only he explains basic python but he also has pretty decent Django tutorials for beginners. Some of the best educational python content out there. This guy got me started. 

Corey, if you're reading this, God bless you fam.
give [JetBrains](https://www.jetbrains.com/academy/) a try.
Hey man, we are around the same age. I used to feel dumb like you while learning programming years ago and nowadays I feel the same while learning music production. Skills aren't easy to acquire but I wish you good luck!
I created an account *just* to respond to you, lol.

Everyone learns differently. It took me a while to learn that lectures just don't do it for me--it's really hard for me to concentrate on a person talking if we aren't talking one on one. I thought I was stupid because I just couldn't learn from lectures, but really, I just needed to concentrate on the book.

I would recommend finding a really good book. The one I'm using for class is Starting Out with Python by Tony Gaddis (it has lollipops on the front). Make sure it's recent (not more than a year or two old). There are lots of free IDEs out there, so you can save your $$, but for me, following the book and not trying to concentrate so hard on lectures was LIFE CHANGING.

You're not dumb-- you just need to learn how you learn!
hahahahaha I know the feeling man, it's like when you watch YouTube videos there's so much stuff they explain seemingly in passing and you feel so dumb cos the most basic stuff holds you back while you research it. Keep at it though, it's true that skills take ages to develop - we don't fluently speak our 1st languages until we're about 5, (good vocabulary no grammar mistakes etc.) never mind a 2nd! Any new skill will take ages to master but it's time and trial/error that help you to develop an intuition for it. Don't give up! :D
After lurking on Reddit for years, this post (and its responses) finally motivated me to create an account.  I don't want to poo-poo *all* the replies you've received, but the overwhelming majority can be categorized as one of the following:   


1. "I, too, was miserable once. However, later I was not miserable. Cheers!"
2. "You can't expect to be an expert overnight."
3. "Sorry to hear you're having difficulty with your intro course, might I suggest this fantastic resource for intermediate concepts instead?"

IMO none of these types of replies meaningfully engage with your original post.  If I'm wrong, feel free to disregard this reply, but if I'm reading the sentiment of your post correctly, you aren't trying to be an overnight master programmer, and nothing in your post indicates you're adverse to trying something difficult. I mean, good lord, you've sunk 2 WEEKS into something that you were told should take you 3 HOURS to complete.  Sundlesticks to these unhelpful replies.

It's one things to have obstacles, it's another thing to have obstacles that don't feel like they're aligning with the difficulty you expected to encounter at this stage of things.  I'd be frustrated too!  Demoralized by confusion even.  And if you're further frustrated now because some of these replies look like little more than knowledge fetch quests, I don't blame you.  "False starts and rabbit holes" is a learning style that some people prefer - I'm not gonna knock learning styles, getting stuck occasionally is unavoidable - but it's honestly absurd the extent to which it's been assumed as the default learning style, and used to excuse poor teaching.

&#x200B;

Anyway, sorry for the rant, here are my explicit solutions to your problem:

1. If you're in an \*introductory\* programming course (Python or otherwise), there shouldn't any need for you to learn/relearn algebra.  Python \*can\* get mathy, but an intro course shouldn't require more than a refresher on basic arithmetic concepts.  If someone's told you you need to take algebra lessons, they're either a bad teacher or you've unwittingly enrolled in a more advanced Python class.  

2. Invest 4 hours of your time into the first two videos of Lynda's "Become a Programmer: Foundations" learning path ("Programming Foundations: Fundamentals" with Annyce Davis and "Programming Foundations: Beyond the Fundamentals" with Sasha Vodnik).  I cannot begin to express how many years of trying to learn programming in fits and starts could have been avoided if I'd have seen these two videos first.  They use Python as their main focus (so that's already a plus), but they also tie the material into larger programming concepts to give you transferable skills should you move on to other languages later.

&#x200B;

As a heads up: Lynda \*is\* paid (*$30/month*), but they do offer a trial month for free and a number of universities and library systems offer free access for students/members (even if they don't heavily publicize it) so those routes could help you sidestep the issue if you're on a tight budget.  (I'm currently using it for free through my local library)

Hopefully this helps (and apologies if I unwittingly projected too much of my own experience into what you're going through)!  \^\_\^;
Try the book Learn Pyhton3 The Hard Way by Zed Shaw.
Hey, this isn‚Äôt archived yet!

I wanted to say I‚Äôve had the same issue all my life, I literally just never got it. Up until this past October, Python just clicked and I‚Äôve been cranking out programs left and right. I‚Äôm 27, btw. 

PM me, I‚Äôd be happy to mentor you as best I can or at least answer questions.
We all are Dumb. But we become less dumb as we practice regularly.
Code isn't for everyone. Sorry.
I go to Georgia Tech and this is the official intro to python course that students take. I took it over the Summer online and it sparked my interest that is still going strong to this day. I would 120% recommend this course and David Joyner as an instructor.
[deleted]
$356.40 you say? I‚Äôll probably just stick to the YouTube videos........
Which course are you talking about?
[deleted]
Upcoming this. I just finished it and it was awesome. You will be able to re-enrol in it again very soon, it's done a few times a year.

I had some prior programming knowledge so didn't find it too hard. But it's very informative content and will serve you well OP.
This. Never stop searching for a course if you have hard time learning from the one you have come across. You will find a good course eventually.
I used the DataCamp and SoloLearn iOS apps to learn Python over one summer (last summer) while working a job that had a lot of downtime. Need to keep practicing
[deleted]
same, but I took CS classes 8 years ago, but programming and math just didn't click for me. I started a "hands on" sysadmin job instead and now tried some online CS classes again. and it just makes sense now for some reason :D

my gf was like "you didn't get it last time, why waste your time and try it now again?" but I actually got it now ^^
[deleted]
What online course?
Sometimes need to break
Fully agree. A mistake a lot of people make is assuming you'll get everything immediately.  It's a bit of a false expectation.  No matter how smart you are you'll find stuff that's hard.  That's in part because your brain has to physically build the circuitry required to be able to understand it.  It takes time and practice to do so. 

The truth also is if you can understand something immediately, you probably won't get paid much to do it.  Because if just anyone could understand it with little effort, I can probably do it so why would I hire you for a six figure sallary?

It's the effort of diving head first into a tough task, building up the skills that many others haven't, and making yourself standout from the crowd is what gives your skill set value. That will mean you'll struggle.  That will mean you'll find moments you don't know what to do.  That's normal and to expect otherwise is just flat out unrealistic.

But that struggle is what allows you to walk into a job interview and go "yeah I'm the one you want to hire, because you ain't going to get this shit elsewhere!" in a polite tone of course. :)
this, be glad it's difficult otherwise people wouldn't get paid so much to do it
[deleted]
I'm super curious about the cs50 course but have zero knowledge about programming. I really want to start learning and give it a shot though.

Is cs50 beginner friendly, or should I go into it with some kind of prior, foundational knowledge?
Tideman!!! Omg, the same nightmare again.
I find code academy‚Äôs explanations for things and  instructions to be infuriatingly misleading or badly-worded roughly half the time.
whatever age you are I'm younger and I'm the same.
Lol, in 6 months?
Proper answer tbh. I'm learning Python since November just from books and googling-fu, and I've already wrote like 12+ mini-software utilities for my Plex server, web scrapping, databases  and finishing a project atm for a business. I didn't have to use math for my use case, except +/- for transaction mechanics. So use case may vary. Unless OPs trying to learn something that requires math, OP can choose any other alternative learning path, and go with stuff like web-scrapping, or just getting grasp of non mathematical syntax. I've started with Python Crash Course, really well written. Automate the Boring Stuff is my second recommendation to skim through to reinforce the knowledge from the first book and learn few more utilities and see good use case examples in real life.
deep
"I used to be a hot-tar roofer. Yeah, I remember that... day." - Mitch Hedberg
https://youtu.be/eiRGRvE_Wqg
Does it matter which one or would most intro cs courses cover the basic stuff you're talking about?
This. I took Programming for Everybody on Coursera years ago. While I finished the course with a couple friends, Python never really clicked -- just finished the exercises and moved on.

Completed [Automate the Boring Stuff](https://automatetheboringstuff.com/) a few days ago and HOLY. SHIT. The regex section alone was worth taking Al's course by itself. He also regularly posts free codes for the [Udemy course](https://www.udemy.com/course/automate/) around here.

Lastly, /u/AlSweigart's working on new videos to the same course later this year; pay for it once, then receive fresh content in a few months' time.
He said algebra, not linear algebra.
I‚Äôm curious, where do you find them?
A couple of additional resources for when you feel confident enough with the basics to start honing your skills.  


 [CodeWars](https://www.codewars.com/) \- Escalating series of challenges that earn you honor and help build your skills with python in a variety of different ways, also shows you solutions others have come up with to help you learn where you can improve your own process and make your code more efficient.

&#x200B;

 [exercism.io](https://exercism.io/) \- Escalating series of challenges that comes with the component of forcing you to use your command-line utility so you learn how to do things like unit-testing and error analysis.
sorry see edit
You can audit the courses for free at the same link. It‚Äôs the certificate that you pay for
sorry see edit
sorry see edit
brain fart...

thanks for catching that.
Maybe some brains need more time to brew information into knowledge :)
Sounds like the next thing for you to "get" is a new girlfriend. Dump that Debbie Downer before it's too late!
any examples of topics that were hard to you?
CS50 from Harvard. You can take it feom Edx or directly from CS50 website. I dont need a certificate so it is free for me :)
Ya! That's important too.
To break what?
Just pause for a while, then come back refreshed and ready to code!
I've been delving into it lately and I think a lotta people do think they have to learn to do everything with Python. I have a use case (network automation), so I'm learning relevant libraries to do that. Having that narrow focus has made it a lot easier to use practically. I've made a few scripts now with actual useful work functions.

There's no need to learn everything. Learning to research is the best skill to pick up. And to use stackoverflow.
Very nice comment. Thank u
The only exercises that required a little bit of math, as far as I remember, were Credit Card and Image Filter.
I just started it this week, the first lecture is really easy to understand and I'm working on the homework now. I'm not sure how difficult it is going to get but the instructor makes the observation that 2/3 of the people that take the course have zero programming or CS knowledge so you are in the same boat as most people. This is also the most recommended starter course on reddit as far as I can tell from my lurking.
A lot of people do it with no prior programming experience. I'm almost done with it and just had very basic knowledge when I started. That being said, I found it to be pretty damn hard! But I did learn a lot. And asking for help on the Facebook group/ Discord helped me complete the projects A LOT. 

The teacher is really fantastic and passionate also. Makes the lectures easier to get through!
I came from zero coding experience as well and I'm nearly finished with CS50.

CS50 is great. Technically it is for beginners and the lectures excellent, but the problem sets are very difficult and frustrating. To complete them you'll need to do a lot of research on things not covered in the lecture. It's difficult but you'll learn a lot. I felt dumb because each PSET felt overwhelming and took a long time to figure out. The Harvard students have access to study groups and TAs so they have help when doing the PSETs, you will only have Google, Stack Overflow etc.

If you're coming from absolute zero, I suggest Automate the Boring Stuff from Al Sweigart. You can buy the book or read it for free on his website. I started CS50 in 2018 and had to put it aside many times because it felt way over my head. CS50 will teach you more about computer science than programming. What I did was to learn how to program first before returning to CS50.
Well, hope the best mate
I'm actually the youngest
That's a common project after 6-12 months in many unis/programs. Writing an OS was after 12 months of classes for me, but I worked with robots, not compilers.
Just curious but what do those plex utilities do?
I'll be posting a free signup code tomorrow (Saturday), as I do at the start of each month.
I just use FIVERR, I can recommend you the tutor I am currently working with if you're interested
Thank you!
Faces.
Loops
Programming or etc.
The wizard
Exactly
[deleted]
Thanks for your insight, I'm signing up as soon as possible!! You rock! Good luck on your studies amigo
I agree, a good engaging professor will turn a good course into a fantastic one. Thanks for your insight. I joined r/cs50. Can't wait to get started now!!
The problem sets are definitely difficult, but that made it even more rewarding to actually finish them. The DNA one was a bit tough for me. Spent hours and hours, and made no progress. Then wiped the slate clean, starter fresh with a new approach, and solved it in about a half hour. Felt good.
Any proof of that?
12 I'd buy, 6 not so much.  I get that every program is different - so it can be hard to apply experience from one to another - but even assuming we ignore that most programs front load a lot of gen ed courses, I just don't think there's enough time.

In my program, we did toy compilers in Computer Architecture.  I won't pretend to specifically remember the exact pre-reqs, but I think it was a 300 level course and I'm vaguely recalling it required at least: The 101 of whatever language is the core language for the university's program (Java, for me), Data Structures, and Algorithms -- and I'm fairly confident Data Structures had a Discrete Math pre-req too.

All of that would have to be completed _before_ starting Computer Architecture.  So to be doing a compiler as, let's say, an end-of-semester project in your second semester, you would have had to take all three/four of those courses your first semester.  

And that's assuming it wasn't actually a compilers class, which would definitely require more pre-reqs than a reasonable person could fit into their very first semester in undergrad.

So, it's conceivable I guess, but definitely not common.
Well, I don't know how deep you are in plex rabbit hole, but if you're familiar with Radarr, Sonarr, Jackett, plex_autoscan, cloudplow etc, then basically I re-wrote them (autoscan & cloudplow) for better windows support. In fact, my pure desire to learn python came from work of [l3uddz](https://github.com/l3uddz) who created great software for cloud support. I wanted to customize the fuck out of my media server and seeing what Python can do, I realized programming's potential and I binged through Python Crash Course in ~78h, wrote my first 'skeleton' project based on my knowledge grasped from tweaking l3uddz software, borrowing few great modules. Studied plexapi module, instead of doing repetitions on tutorials. Basically for me taking code and tearing it apart was a way more fun experience than doing tutorials. This way I instantly applied my knowledge for my media server, and my other hobbies, giving me gratification for my accomplishments. Dopamine reinforcement, yay! Sorry, got sidetracked.

So I rewrote a lot of stuff and made his software more windows friendly, added some functions, ported some from py2 to py3. Then wrote my own stuff. Added things like throttling for torrents, NVIDIA Shield/Parsec detection for bandwidth optimization and other little things. Then tried to create my own agent, disliked the result, created socket server (after 3 months upgraded to Sanic instead) and connected scrappers I wrote for websites with  requests and modified TVDB bundle to make request to server, which then scraps metadata I want and integrates to my library through plexapi module. I'm happy on my progress overall, still adjusting to writing better code.

My plan is someday to read the git manual, and actually commit my changes to branch on github to support open source and the guy who unknowingly got me into programming.
Oh wow! Didn't think you'd actually reply haha. Think it's a really classy move that you post codes every month. Thanks so much for your course! 

It's really made a difference in my understanding of Python, but especially the regex section.
Thank you for the Udemy free course, I‚Äôve learned a lot, it was compact and easy to digest!
Would love that, thank you!
Xd
It‚Äôs been a minute since I took the course, but I don‚Äôt recall NEEDING to use recursion for any of the lessons. Yes it‚Äôs one approach, but I‚Äôm like 99% sure that I completed every assignment without the need for recursion.
[deleted]
Ah that's awesome! I'm glad you could do it and you're definitely right about it being rewarding when you get all green once you submit üëç
Sounds like good stuff. Yeah I run plex with sonarr, radarr, and jacket providing content. Never heard of the other 2 you mentioned but will look them up. 

That sounds like a ton of work though. My stuff runs on a linux server, and I've never tweaked the programs themselves. They do what I need! Thanks for the write up, and definitely look into git. Sounds like you could add some good stuff to support the community!
Thanks for the additional resource, I'll check out Freecodecamp as well
Thanks for encouraging me. I'll go back in my hole. See ya!
Well, also keep in mind that you don't need to have been great at school. I totally sucked at school and math. CS50 is an awesome course IMO. You should take it
This repo has been setup to show some best practices, it helped me a lot. He also had an article detailing some of this but I couldn't find the link in my history anymore: https://github.com/thuijskens/production-tools
By coincidence, this morning I listened to the Python Bytes podcast, and they mentioned two very good libraries too learn from. They are `pathlib` and `statistics`. I haven't looked into the code myself, but I have used them both and they are very useful libraries that shouldn't be too hard to understand.
The requests library is often mentioned for this purpose: [https://github.com/psf/requests](https://github.com/psf/requests)
This might be all you need. There‚Äôs even an ebook but the website and code examples are more than sufficient enough to get the ideas across. [https://refactoring.guru/design-patterns/python](https://refactoring.guru/design-patterns/python)
Some people have already suggested some good projects so I'll propose something else. 

You can checkout pep8.org, it's a website containing good practices when writing code. I think it's more about how to name variable, functions and other recommandations. 

You probably already know it but if you don't it can be useful.
I really like the structure of [sklearn](https://github.com/scikit-learn/scikit-learn)

I still use it as a reference if I am not sure about a certain structure
I always used Anthony Shaw‚Äôs [wily](https://github.com/tonybaloney/wily) as a template. It actually inspired [my article](https://realpython.com/python-application-layouts/) on project structure in Python.
This may not be exactly what you asked for but I found contributing to open source projects really exposed me to different approaches I never would have considered and may not have fully grasped had I not had to actually dive into the code to solve an issue. [Falcon](https://github.com/falconry/falcon) is a great place to start and the guys are super friendly there.
I would also recommend taking a look at ["The Architecture of Open Source Applications"](https://aosabook.org) for some great examples of open source architecture.
Any project you're already using is a decent place to start, because you already understand some of what the code is trying to do.

I've also heard Django is good in this regard.
This page contains a list of reading recommendations
https://docs.python-guide.org/writing/reading/
IMO this whole site can be quite valuable
Any well established big library would be good. Something like matplotlib, flask or request. Come to think of it anything from the pallets projects is very well written. I'd steer clear from libraries like pytorch or tensorflow as their APIs are relatively new and change quite often, they don't always follow (and often can't)  the best practices. 
Also, Here's some good pointers on [how to evolve your API correctly](https://emptysqua.re/blog/api-evolution-the-right-way/).
I just refer to pypi packages some most used modules.
[deleted]
I love the Pynguin automatic test generation tool repository. [https://github.com/se2p/pynguin](https://github.com/se2p/pynguin)
"Move shit around until it feels right." - Someone I forgot the name of.

Best advice I have gotten when it came to file structures of my projects, for literally anything python/cpp/js related.
I had thought to come here to ask the same question. Thanks !
RemindMe! 1 month
https://github.com/frappe/frappe

https://github.com/frappe/erpnext

Here you go
Here‚Äôs a cookiecutter template that I wrote that can be used to generate a fresh python package project: https://github.com/albertorios/cookiecutter-poetry-pypackage

I think the format is pretty flexible and it lends itself to being easy to plug into CI/CD pipelines. I‚Äôve been iteratively updating the Makefile and structure to make it easier to lint, test, build and deploy a python package. I use it to jumpstart my projects at work so I don‚Äôt have to spend time writing boilerplate code.
Pretty sure this is a good one. Guy was in military and wrote his own firewall 

https://github.com/DOWRIGHTTV/dnxfirewall
RemindMe! 1 month
Not any of my repos
Mozilla's Kitsune project is often cited as solid example, [https://github.com/mozilla/kitsune/](https://github.com/mozilla/kitsune/)

And it is documented, [https://kitsune.readthedocs.io/en/latest/](https://kitsune.readthedocs.io/en/latest/)
This is the companion repo to the O'Reilly book "Architecture Patterns with Python": https://github.com/cosmicpython/code
This is an excellent suggestion! Exactly the kind of repo I was looking for. 

Thanks.
Can you explain to someone who's new to python where things are actually executed within that? Or would you run this from something else using the defined functions
[deleted]
And we use pathlib a lot nowadays.
Also an excellent suggestion! Thanks.
autopep8 is an amazing tool especially when trying to fix indention errors.
as PEP8 goes.. just found 3 mistakes  at a quick glance at their \`\_\_main\_\_.py\`
Just because they're used the most doesn't mean they're the best written. There's a good chance of it, sure, but not guaranteed.
Good comment üí™
As one of the developers of Pynguin, what do you particularly like/dislike about the repo?
I will be messaging you in 1 month on [**2021-06-05 18:44:30 UTC**](http://www.wolframalpha.com/input/?i=2021-06-05%2018:44:30%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/learnpython/comments/n5a6fo/do_you_know_any_python_projects_on_github_that/gx23wk6/?context=3)

[**7 OTHERS CLICKED THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Flearnpython%2Fcomments%2Fn5a6fo%2Fdo_you_know_any_python_projects_on_github_that%2Fgx23wk6%2F%5D%0A%0ARemindMe%21%202021-06-05%2018%3A44%3A30%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20n5a6fo)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|
Happy to help! Good luck!
This repo doesn't have a main function, so it's not supposed to run by itself, but instead is a pipeline for [Apache Airflow](https://airflow.apache.org/). But that isn't what makes this code good.

I love the consistent way of documenting the code, the use of testing, the conf file. It's not much code, but the code that is there is clean.
I have the same question
Bruh
Even though it's 3 years old they are still quite relevant... And this is an example intended for beginners/intermediate which I assume OP is
True. I recommend anyone who still uses \`os\` to handle paths to move to pathlib.
https://black.readthedocs.io/en/latest/

Black is the new hotness
I go against PEP8 all the time, feels good to be rebellious sometimes.

but seriously, from PEP20
> practicality beats purity.
Why do most beginners never seem to understand that pep8 isn't a set of **rules**... it's just a style guides!

Edit: If you're not a beginner, that'll be even more disappointing.
Yeah,agreed
So I was totally new to automated test generation, and I was trying some automated test generators for Java and it was a PAIN. Pynguin is so easy to get running.

When there was something I couldn't find in the docs, I always figured it out by checking into the source code. I also really like your use of the `simple_parsing` library. When I was creating a CLI I actually would look at Pynguin for some guidance. I guess I just found navigating the repo to be a breeze.

Also, just curious - can one give Pynguin an AST directly, instead of passing a file? And, is it possible to direct Pynguin to only generate tests for specific functions in a file? I never figured those two questions out.
just learned about pathlib the other day. it's so nice, way more pythonic than os library.
> True. I recommend anyone who still uses `os` to handle paths to move to pathlib.

I like `pathlib` a lot but the one use case it still really doesn't work for is writing scripts to scan your entire disk and make statistics on size or mtime etc.

The objects are too big and too slow when you need 100s of thousands of them compared to the string representation of paths. I find the performance is usually 10-1000x better when you stick to `os.path` and strings in this extreme use case.
Didn't know about this. Will check.
I owe you one! ;)
Thanks for your feedback.
As for your questions, sadly you can't give Pynguin an AST directly.
Limiting the test generation to certain methods or functions should be fairly simple addition. If you are interested in such a feature, you may open an issue in Repo.
Yeah I really need to do this myself...
Do you have any advice for learning discord.py, the API and so on? Not the whole thing, but just having a clue about how it works? The documentation is a bit overwhelming.
Very good. Remember to make embed a time sensitive fake error that throws and reminds them to request assistance from you in 2-3 years. Then charge 100x your current salary as a consultant.
Congrats op :)
Nice. Keep it up
Congrats man!

Also TIL that some business‚Äôs use Discord... lol
Congrats and same here! After toiling in tutorial hell for months, I just created a little script to basically... ‚Äòstart my day‚Äô. 
It launches all my needed apps, loads up frequent websites, checks a directory for a file, and then runs a connectivity check to my test devices
That's really exciting and must feel very rewarding, way to go!
I‚Äôve always wanted to create a discord bot, any tips?
congrats yo.
Greatest feeling ever.
Ayeeee congrats! That was a big milestone for me too, I now code in r, python, sql, Java and bash for my job and still vividly remember the first time I was able to use python for something useful!
Congrats! I'm starting to look into what python can do with Active Directory onboarding for my job.
That's amazing! I bet that was so rewarding. I'm looking forward to the day I get to use it as well. Way to go! :)
Wanna know how to guarantee a raise?


Write some information probing methods set to timers, so you can collect anonymized employee opinion data on important (yet touchy) matters.


Create a few methods that allow you to conduct polls, where employees can vote on serious, or silly, matters. Takes the edge off, and incorporates everyone into the equation..


Here is the kicker... write a sort of ‚Äúsecret Santa‚Äù  program that allows employees to anonymously send notes and/or reassuring messages to each other through the bot... and have them display when someone reports (n) amount of tasks have been completed.


Its called gamification, and you can use it to condition people‚Äôs behavior... in a good way.
Nice and that‚Äôs awesome your job uses discord lol...we use zoom and Skype also for some reason; enterprises are dumb
Ooo I'm jealous
[deleted]
Congrats Bro!!
How did you host it?
Wanna know the most critical python script we have my the entire company?

We have a bot that messages the entire IRC channel the "GNU/Linux" copypasta whenever someone uses the word Linux.
All I could say is just look up tutorials, copy what they do and then tweak it to what you need it to do. That‚Äôs pretty much what I did! Just start out simple and play around with examples.

[This is the one I started with](https://www.devdungeon.com/content/make-discord-bot-python) and reference it from time to time. Good luck!
The discord.py library is quite easy to learn. As suggested by other redditors, look up tutorials. I used the ones from Lucas on YT.

Learned to use it in about 2 days and I'm a beginner.
Start with the mentality of "i would like to..." and let that guide your journey through the docs, perhaps. Otherwise, "let's see what this thing can do" CAN sometimes be overwhelming. 

Another great thing can be gaining exposure to how some other people make use of an API, and through that, try implement the functionality yourself. If you'll pardon my two cents :-)
Tbh the docs of discord.py is the perfect place to start and very informative
The documentation is overwhelmingly wordy, however, the implementation is quite enjoyable :)

Some else said to think about ‚ÄúI would like to make a bot do this.‚Äù And then start there... I second that motion. Don‚Äôt get too crazy with it at first, just try to **make the bot send and read messages**. Once you understand async methods, your brain will explode :D
read docs
that is really naughty
Lol we have quite a few remote workers and we convinced our boss to use it instead of Flock, which was awful and costs money.
I just leaned yesterday that my Mech. Engineering Dept. uses Discord. More as a Q&A/ Discussion type of thing but still pretty cool
It really does! It‚Äôs not much, but it‚Äôs some that‚Äôs actually useful lol
I linked the tutorial I started out with in a previous comment! Just start out simple, follow the tutorials, copy them and tweak to what you want it to do, that‚Äôs what I did. Good luck!
Yeah, fortunately it‚Äôs a smaller business I‚Äôm working for so we were able to talk them out of those awful chat programs. Discord literally does all of it for free, at least on a smaller level. Saved them money and saved us all headaches.
Right now I‚Äôm just running it straight off my laptop while I‚Äôm working because I‚Äôm still kind of tweaking it while it‚Äôs going. I haven‚Äôt looked into hosting yet but that‚Äôs definitely on the to-do list!
I'd definitely also recommend checking out [this video series by Lucas](https://youtu.be/nW8c7vT6Hl4?list=PLW3GfRiBCHOhfVoiDZpSz8SM_HybXRPzZ) as another nice resource (as someone whose gotten a lot out of it!)
Oh brilliant - thanks for sharing that link üòÄ
Maybe I need to develop my basic python knowledge a bit more before looking again.
It‚Äôs called ‚ÄòRetirement Savings‚Äô
Wow, flock is dreadful looking üòÇ

Doing some quick searches, it‚Äôs surprising that flock and slack are more expensive per user than an office 365 business plan is, which gives you teams and obviously gives you the benefit of the 365 suite too..
Nice man! Congrats!
Good idea. Some mentioned this to me the other day as well.. we were talking about Google's api docs vs some community docs. What was said was that these video resources, Medium articles etc *are* the community docs. Sometimes the original documentation can be pretty terrible, community docs can help!

Edit: thanks for the link!
As a verified bot developer, and a regular in the discord.py official server; we always steer newcomers away from any youtube related tutorial - especially Lucas.

All of their code is not great and uses code that the lib does for you in a much better way.

We strongly recommend realpython‚Äôs tutorial (I‚Äôll get the link when I can).
Check out yt too cuz plenty of stuff on it but i personally prefer docs and i would suggest once u figure out a new concept on discord.py refer back to the docs just so u familiarize urself with them and pay attention to the format they r written in
Now this is something I can agree with!

I brute forced my way through learning Python and when learning javascript for some web dev stuff took a more structured route and it kept making things in python click in my head.

For example before using Javascript I wouldn't have used the map function in Python, but now it makes a lot more sense to me.
I started with JavaScript but it was confusing. Then I went to python which made sense. Then I went back to JavaScript which now made sense because I could see how data flows due to my ability to see how data moves in python
In my experience, exposure to multiple languages makes you a more solid programmer. It won't necessarily make your python skills better, but other languages can force you to think in a different way. That's another tool in you toolbox.
If you are into backend side of web development then good choice is golang.
[deleted]
C# with Unity and Java with Android SDK for my part. It was hard at first but I'm glad I did it.
Totally agree with this.
Learning different languages also causes you too understand different approaches to specific problems. Take Haskell for example, you have such different constraints that you have to think differently, which helps you get better at programming, no matter which language you are using at a specific time.
The problem with this is Python has specific idioms and patterns around them that don't work in the other languages; or patterns from other languages that are not pythonic, so you risk bringing over unpythonic or other bad habits over from over languages. 

Now, everyone can benefit from some basic data structures and algorithms knowledge; even though most of the commonly used algorithms on basic data structures are already implemented in lower level libraries and you wouldn't want to reimplement them for those structures, the design patterns anc concepts are useful for more abstract use-cases.
JavaScript is too cumbersome, I first learned Python with no real career related intention in mind, I learned just for the sake of automation. But in industry Python is used for data science and machine learning, both of them right now are not my cup of tea, since I really got interested in web apps, hence I have started learning JavaScript. Python is so beautiful and intuitive, that transitioning into a new language like JavaScript is difficult for me.
I'm currently taking another stab at learning to code after sabotaging myself yet again (discovered codewars.com) and I was wondering at what point I should branch out from python only and start messing with the next language on my list (probably C, maybe JS)
Where does Java fit into this? I thought Java was the web dev go to?
Right,
I had learnt C++&C basics before I took python course. So it all sank in beautifully.
There's so much _hate_ around C++ and Javascript. Wouldn't C be enough for anything out there?
will having a deep understanding of c make you understand python much better? Because I've heard that the python interpreter was written in C
I agree but my advice is to know your shit in one choice language before learning a new one. My first language was c++ python came naturally with syntax and name formatting being annoying and those will get confusing if you try to learn too many different languages. I'd recommend c++ it's powerful also kotlin is on my list of to learns
I‚Äôm just starting python, first language I‚Äôve learnt. Should I learn another at the same time? Or become competent with python and then learn another while developing my python skills?
How to write this into C++ code?


    import requests

    url = ‚Äúhttps://www.reddit.com‚Äù
    response = requests.get(url).json()
    print(response.content)

I do a lot of web scraping and API work, so I was wondering how would this work in C++
Thanks for the advice. I‚Äôm trying to learn flask however I‚Äôm realizing it would  be really beneficial if I knew JavaScript but kind of nervous to start that journey.
I learned the most about how to write Python from going through a book on functional programming with Scala.
Web dev is not JavaScript. JavaScript is more popular than Python for web dev.

Embedded is not exclusively C/C++ as well. https://micropython.org/
Agreed, i first starter learning python because people said that that was a good starter one. But i could never quite remember what to do without looking of up.

Now that i did some JavaScript in nodejs things starters to click and incould complete Euler challanges with ease in Java or python.

Learning different languages helpen me to know the pattens every languages is built on.
i forced myself to learn Swift and yeah I could agree with this one! haha
I'm learning Python now.

What language should I learn after Python, javascript or C++?
i get scared because everywhere i look, people are talking about python, javascript, & c/c++ being popular & well used... yet here i am learning java
saved, following, !remind me 1 day later
After python, learning javascript was relatively easy.
Just for curiosity, Python can be used for web frontend

https://brython.info/
Learning some basic Ruby stuff was a lot of fun. it's so similar to python and has some neat things it can do on its own.
there is also the factor that learning more languages requires learning that languages way of doing it, thus furthering your knowledge on how to solve a problem in more ways that may work better in certain situations
I learned OOP best from Java, and so I did the Python...
I learned HTML and CSS a few years back. Now that I am trying to transition careers I am refreshing those while learning python (the Hard Way) concurrently. Getting exposure to all 3 daily. And will start JavaScript soon as it follows in the freeCodeCamp curriculum.

It already seems very valuable being able to mentally switch back and forth as well as understanding the cross-compatibility between them (although I‚Äôm not ‚Äòquite‚Äô there yet).
I learn Markup language first. Learning how to build website with HTML and CSS. My very first real programming language I learn was Lua. Someone told me you can learn C faster if you learn Lua first. I say he is right, I'm not a C expert yet. But I believe when you learn your first programming language. The other's do come easier to understand. I dab in many programming languages. I'm one of those, Jack of all trades and master of none. I do know a little of Python, Go, Rust, C, Javascript and a few more.
this!!! i found that when i learned java i understood OOP so much more and resulted in better python code
Dude, learn Go, Go is so fucking goooooooood.

The language organizes itself via it's package system, you can write effortless multithreaded programs, and the language itself is so refreshingly simple.

I was a React dev having only professionally written Typescript, and Go is so much simpler than TS believe it or not.
So your advice to learn other language to know exactly and understand Python codes ?
Agreed. I definitely will use python when given the choice, but have taken on a few projects at work in C#. Learning the .NET infrastructure has been eye opening, challenging, but ultimately made me even better with python.
I'm definitely still a beginner, but I would certainly say Rust has helped me write better (less shitty) code. The compiler will scream at you for a lot of things that would be a-ok in Python, but it does often result in cleaner and more reliable code (and this is ignoring all the memory safety stuff and other compile-time checks that Rust adds). And this does translate over to other languages to at least some degree.
My knowledge of c/c++ kinda forced me to use decorators because I felt uncomfortable that functions just access variables in memory all Willy-nilly. Passing by reference/value really made me think about future problems
I agree! When working on my thesis in python, I had to do some pretty complicated stuff. I'm also a visual thinker, and I see the code before me as a landscape to walk through, so that becomes important for me when thinking through algorithms. 

To make the code more readable, I began structuring unnecessary statements into the scripts, like, superfluous stuff, e.g.: very specifically declaring the types of local variables; or regularly adding `continue`-statements in for-loops; or adding `# endif <code related keyword>` after if-statements. This helped, at least a bit. 

I later realized, that curly brackets, as seen in most C-derived languages, would have done a good job of visually isolating the components in the structure instead of the way I marked my for-loops, and the `endif`s were probably inspired through past experience in Fortran/IDL. I had basically recreated other languages' visual quirks within Python's ability: first by instinct, then very consciously, towards a noticeable improvement in my own visual flow. 

And so, of course, it clicked for me, how and why _other_ languages choose to _retain_ syntactic quirks; quirks that could be compared to as being inferior to-, or less modern than Python's own, even to the point of disarming my previously intense Python fanboy-ism
(of course, such syntactic retention also spring from the fact that when "something" becomes implemented, and it works, no one wants to change how that "something" works, preferably "ever")

However, that Python fanboy-ism reawakened when I later landed a job, where I was to learn and to do Cobol. 

The really weird thing is that I could easily see and feel the parallels in the "design intent" for both Cobol and Python as languages. In the end Cobol itself wasn't really the problem, but I couldn't stand working with the platform on which it runs, z/OS. In short, it felt as though my ability to code creatively was not only fading, but rotting. 

More and more, I longed for Python's elegance and ease of use, until I decided not to power through "it" [Cobol & z/OS] for any longer, and managed to change departments.

(...and I'm still looking for my past "spark", joy for coding, and lust for problem solving. So if any of you happen to have any advice on something like this, I would appreciate anything you've got!) 

To sum it up, and to reinforce @OP's post, learning other languages will indeed let you appreciate Python's own quirks, but also the quirks of its "parents", "siblings", and even some of its distant cousins n-times removed!
I want to learn other languages but tutorials and countless suggestions here in reddit say stick to one language first. Mine is python and currently I know the basic syntax but still leagues away from making my own project. Im in that gray area where I finished basic tutorials and finished part I of chapters in books that cover the basics but I would not say that Im an intermediate python coder.

At what threshold should I learn another language?
Friends don't let friends JavaScript.
Thanks. I agree, I've been learning java for the past few months too
C++ - idk about that. My productivity is pretty low with it.
no it won't - you can't use perl or shell script syntax in Python and your way of thinking changes (sed/awk vs Python).

what you should do is learn 1 language and library well - idioms, skilled use of classes/design. write code and poke around the language - by the time you are old, you'll know a smattering of languages that you use on and off (especially if you are on Linux and need to learn lisp and vimscript - lol)

(and read the PEPs)
Agreed, I learnt Python, then worked a lot with Javascript, then Java and then back to Python. The extra exposure really made me appreciate Python.

The danger is now there are a lot of incentives to stay in the Python ecosystem. For example, [MicroPython](https://realpython.com/micropython/) for the embedded market or [Python frameworks to run in the browser](https://anvil.works/blog/python-in-the-browser-talk). It makes it all too easy to never branch out.
You shouldn't use `map` in Python though, comprehensions and such are almost always better.
Yup same with me. Brute forced Python and now taking a C# class. Things are clicking for Python and C# is easier than if I would have started from scratch.
You should still not use it in python tho... We got list comprehension which is shorter and more readable
Haha I had this same experience. I'm still not very good with JavaScript, but like the Hulk, I am able to program in JavaScript if I get angry enough
Something I used that helped me learn how data flows is Raptor. I‚Äôm not sure if it‚Äôs popular here, but that program helped me immensely.
Why golang? I‚Äôve been wondering
[https://i.redd.it/wv5z7m99bgu21.png](https://i.redd.it/wv5z7m99bgu21.png)
I was looking for someone in this thread who would bring up Haskell ! I‚Äôm learning it at the moment for functional programming course. I don‚Äôt really like it but learning about its constraints has taught me how to avoid side effects when writing code. Recommend it for anyone who wants to get better at python or any other OO language.
I feel bringing in habits from other languages only happens when starting out or during unusual situations because the proper habits for the language haven't been developed yet. The code is going to suck at those points anyways and the only thing that matters is if you are learning the right habits instead of resisting to learn the language.
Many of Python idioms are borrowed from Perl and Lisp, so it depends on which other language we're talking about.
is there anything specific you have trouble with? Is it curly braces? Is it async nature? What did you do in Jaascript?
Maybe branch out when you start feeling bored with Python.
I‚Äôve delved quite far into learning C#. It‚Äôs a really interesting perspective that I never would have had the opportunity to learn through Python - always push the boundaries of your comfort zone. For example, once I became particularly confidant with Pygame, I‚Äôve decided to work on other projects.

I *really* enjoy Pygame, as well, and there were (and are) *many* different problems that I could easily learn a great deal from, or that would force me to solidify my knowledge of a subject or process, but those now have less to do with Pygame than they do with programming solutions to niche problems in general.

That being said, it‚Äôs not going anywhere, so I can always go back and find it right there waiting for me to pick it back up where I‚Äôd left off :)
That would be JavaScript, not Java. They are totally different languages, despite the naming similarities.
Java is statically typed and strictly OOP. It's a great way to learn good coding practices and design patterns that most Python learning resources neglect to teach.

It is way to easy to write spaghetti in languages like Python, JavaScript, and PHP where oldschool fundamentals like types, code structure, and Object design no longer matter.
JavaScript currently but used to be Java in early 2010s if im not mistaken
Outside of firmware, I don't know of anyone (individuals or companies) that use pure C.

You cannot do frontend dev without JS. I personally do think it has some deep flaws, but part of the hate is probably due to a lack of choice. If you're a backend engineer, you have tons of options for language. Frontend is basically always some variant of JS.

EDIT: I should have included "system" coding like Linux and Windows, but even that might be leaning towards... Rust... or is it too early to say that?
C isn‚Äôt OOP and has very few actual lessons to be learned that can be applied in today‚Äôs world. C++ is a much better tool to learn from in my opinion
I have only touched a little bit of C so I am no expert, but lets put it this way. Python is  a house. In house you see the wall and you hang a picture on it. Very nice. Good enough for most people. If you know the C you would know that wall is build with 8 studs, 6 sheet of drywall, inside is insulation and some wires, maybe pipes. You don't need to know exactly how to build it, but it feels good knowing what's behind and that you can hang a picture on the stud.


If you are really curious, try something simple: open a file and write text to it. Try in python and C.
Very deep then yes, since you can read CPython's C source to figure the magic out.  Note that it doesn't look like average C code since most trivial stuff in CPython are implemented in Python and C is used mostly for low-level code and hacks.
I would say to make few scripts or small projects in Python first. Then you will know what is what in Python. After that, you can try same or similar script to write in another language of your choice.
I've never done it, but check this code to get some idea: 
https://stackoverflow.com/a/26026828/1079002
Just take it slow and don't worry. I was angry and frustrated when I started, now it's ok.
Thats cool, how do you find functional programming?
That is for specific board only. You need c/c++ for almost all device drivers. Fast and reliable.
Dumb question: what does embedded mean?
Do you have specific interest (like web), or you just want to learn something?
Don't be scared! Is that your first language? It will teach you OOP and you will know how to apply it to Python (if you want) for example.
Don't be! Lots of companies (including the one I work at rn) use Java or Scala (functional Java) for backend and data engineering roles!
Ive heard a lot about Go being great. What are you doing with Go now? Are you not React dev anymore?
Yes, you should make few scripts or small projects first. Remember, you are not only learning the language, you are learning general programming. Tutorials are not enough. You need to make few projects of your own.
You're not technically wrong, but he meant actual programming languages. Perl is an outlier and nobody uses it unless they're maintaining legacy apps (ok, this isn't 100% accurate, but it's hardly got a market share compared to other languages in modern environments). Sed/Awk and Bash are scripting languages, so you're right that jumping between them and Python won't help.

OP meant OOP languages like Java, Go, C++, etc.
Anvil looks nice, but to bad its payment is based on database rows.

Will checkout the other frameworks though.
Better in which way? I use both, but it depends on the context. Not aware of any lost performance or anything but would be happy to learn!
Better in what sense? I tend to gravitate towards comprehensions and lambda functions
Lol I just started using map today. Looks like I can save myself trouble down the road by using other processes- thanks!
it's very good for concurrent processes. its threads (goroutines) are not full OS threads, so the cost of context switching is much lower. this means you can have a system with 100,000 goroutines running

the main annoying thing at the moment is the lack of generics, but they'll be coming next year iirc
What don't you like about it? I picked up haskell during a holiday in college and I don't think I've ever fell more in love with a language. Even to this day when I have to write out a quick program to calculate or test something, I write it in haskell. I know no language is for everyone so I'd love your perspective!
You‚Äôre definitely right here.
To me, when I read the OP's statement I died a little inside. 

Say you are coming from Java or .NET and you want to iterate over list, what do you do? for loop with index variables. That's not pythonic. The entire concept of iterators and generators is more or less Python specific, unless you're are using external libraries.

Or EAFP in general: not too many languages encourage this design pattern while EAFP is pythonic. Not many languages have default-yielding accessors either (`dict.get()`, `getattr()`. In ES5, the closest way is Oliver Steele's nested object access pattern that relies on `undefined` being falsey but that's still edgier: `obj.maybe_attr || default`. ).

I remember about a couple decades ago when I was starting out with Perl and PHP, it was very common to instantiate "variable variables" (e.g. `${$var}`) which was a major way to do dynamic assignment. In Python you quickly learn to use dynamic dict construction to accomplish the same goal.

Or recursion, which CPython is really bad at, requiring the use of iteration, vs. tail-call optimized languages in which you can happily recurse away.

Later versions of ES seemed to be getting a lot of hints from Python, like decorators.

Edit: Just because this post got me riled up, I decided to go read Raymond Hettinger's twitter feed. 
[Here's an example of an unpythonicity from OtherLanguage(tm)](https://twitter.com/Phaseit/status/1298675548491853824):

    class Whatever:
        def _blah(self):
            # Actual implementation
            ...
        
        def blah(self):
            self._blah()
that's not true, most of python idioms are borrowed from smalltalk.
As someone who's inherited a few JS/TS enterprise projects (backend and front). Its just a plain mess to work with... the million ways to do something, the messy ecosystem and packages, the wealth of random standards, the little quirks that bite you, all the builders/transpilers just to write modern code (frontend-wise).

I just feel greasy using it. Don't get me wrong through, it does what it does well. It's just not my happy place for development.
Its weak nature, scopes of variables declared using var, let confuses me. Though I'm just a beginner, there is still much to learn and get confused about.
If I start feeling bored with it before I've "mastered" it, should I still just go mess with another language or is it better to focus on one at a time when learning? Probably varies from person to person I guess.
Java at frontend? Javascript is the only language of the browser or client-side. Java is used at backend with spring framework.
We got some js alternatives emerging like Blazor and Wasm. And obviously typescript which you probably meant with "some variant of js" but which is, although transpiled to js for the browser, a very different language than  vanilla js imo.
CPython is written in C.
Great, thanks for the reply! Hardest part about coding is knowing where to begin and how to efficiently progress! Thank the lord for reddit lol have a wonderful day/night
I don't think functional programming is the end all, be all.

But there's a lot of good concepts that should apply to any code, like trying to maximize referential transparency or isolating side effect code. It's just good software engineering imo.
https://en.wikipedia.org/wiki/Embedded_system
My job requires the ability of data analysis, I need to process csv files.
yes my first. been very difficult road so far. discouraging to see practically everyone works in everything else
I'm a "Backend Dev" now, which means i do the same stuff as i did on the front end, but i don't have to think about design/visual paradigms.

My day to day generally revolves around building processes that receive a shape of data, massage/transform that data, then send said data elsewhere.

Our stack on my 4 man team leverages node modules, my plan is to use my react knowledge to improve the front of our app at some point, but besides that, no, I'm no longer a react developer (at least not atm)
Jumping between Python and Perl does help though, Python aren't always used OO'ly.
ah but those languages are largely similar anyways.. but sufficiently different to be annoying: 'self' vs 'this' You'd switch between them depending on what your end goal is.. C for speed, Python especially if you want to front-end your C/C++ library, C++ for Qt/GUI or complicated/large packages/Boost.

How could you mimic your Python style in C or C++ when the functionality is so different..

None of the Python idioms would work: none of the comprehension stuff and method calls would be all different except for a literal '.'

Languages are a reflection of the problem they solve.. so.. C for low level stuff because it doesn't hide the hardware; a lot of C++ stuff can be done in C with abstraction so learning C may make you familiar with a few keywords but you need to know how to create abstractions that are more natural in C++ - how could either help with python code.

Eventually you'll forget a lot of stuff anyway so the only purpose is confidence building and a moderately faster learning curve because of the stdlib that needs to follow (for each language).

Additionally languages change: C99 and new style Python classes or print keyword/function and you'd have to keep track of such things.

One thing that is advantageous is familiarizing yourself with Unicode or Internationalization so domain specific knowledge! (signals & slots mechanism in Qt) (regex - the various forms - pcre, glob, extended)
[deleted]
Comprehensions are pretty much made to replace `map` and `filter` with a clear and concise Pythonic construct.

What do you think looks better between

    addresses = (person.address for person in persons if person is not None)

and

    addresses = map(lambda x: x.address, filter(lambda x: x is not None, persons))

?
It‚Äôs great you love Haskell, the people who I have met who love Haskell have written some of the best software I have seen. 

I guess one of the main reasons I dislike it is because some data structures require impure functions that do have side effects in order to have better performance. For example if I was adding something to a list, I could have a seperate length variable being incremented by 1 at the same time (a side effect) so later when I check the length of the list I can just check that length variable instead of counting everything in the list.
>Say you are coming from Java or .NET and you want to iterate over list, what do you do? for loop with index variables. That's not pythonic. The entire concept of iterators and generators is more or less Python specific, unless you're are using external libraries.

Would you mind expanding on this for a newcomer?

A for-each loop in Java seems pretty much the same as in python. `for (Type item : list)` vs. `for item in list:`

Iterators have been part of Java since 1.2

Are there differences here that I am overlooking?
I don't think I understand why you "died a little inside". Just because other languages don't do things the pythonic way doesn't mean they don't help you improve. Maybe I'm misunderstanding what you're trying to get at, but your comment seems to be saying that because other languages do things differently, knowledge of them isn't valuable which I whole heatedly disagree with.
>I remember about a couple decades ago when I was starting out with Perl and PHP, it was very common to  instantiate "variable variables" (e.g. ${$var}) which was a major way to do dynamic assignment

As you say, you were starting out. I'd say this more to do with programming novices finding a way to do "*dynamic variables"*, rather than it being a recommended way. Perl and PHP both had hashes (dictionaries, associative arrays, what-have-you) but I suspect a large portion of the user-base - particularly in those early days - didn't really understand them or what to use them for.

Case-in-point, I was recently asked by a novice to help out with their Python script, and found the code was littered with, eg. `vars()[name]`... So it's not something that's limited to Perl or PHP, but rather a limitation of a beginner's thought patterns. This in turn probably leads them to search for something like "dynamic variables" and stumble upon an unfortunate way to solve their problem.
And Alan is a Lisp lover and model Smalltalk mechanics after Lisp.
Feels like gluing stuff together? I've never done enterprise project, but even these little ones can get quite messy too, so I get you. Gotta be pedant with documentation and organization with anything Javascript, very true
I see, well dont need to use var anymore, so that's one problem less. If you are beginner Javascript can be strange, although I suggest do not give up, but take it slow, in small doses.  Keep on learning with python and when you ready, you can try little bit C# or Java or similar for example? I think that would be good
Yes, I agree. It will probably vary from person to person.

In Python, if you get bored but don't yet feel "mastery", before branching out to a new language, maybe try branching out to a new Python library. Examples: Pillow, PyQT, MatPlotLib, Pandas, Curses, Pyglet, Django
With Microsofts blazor framework you can actually build frontend web apps with C#. A whole C# runtime is shipped to the client though.
You can write frontend in Java though. The browser still runs JS, but you don't touch it.
I didn't say front end neither did the comment author but ik Java was big in web dev yrs ago with jsp n that stuff
With web assembly it definitely looks like things are changing, but it's not quite there.

And yes, while typescript shares a lot with javascript it's definitely a very different language. When I was saying "some variant" I was more thinking the endless line of JS versions (which are also transpiled to older version), but I'll take benefit of the doubt :)

Back to the specific comment I was responding to, while my characterization of frontend languages wasn't fair, C is definitely not going to help you there.
.. and Python
Not sure what your point it. The Linux kernel is C and lots of compilers are written in C, but the fact remains that most people aren't writing in C. People went so far as to write all these other interpreters and compilers in C so they wouldn't need to write in C!
Was looking for an ELI5 but thanks for the link I guess
Why don't you try both? Try to process in javascript and then in c++. Something simple like sum column or similar and output to screen. You will find javascript strange if you've never done it so be prepared for that. 


Generally, I would choose Javascript.
If you know your goals it would be easier to decide. If you are just learning for fun then don't worry. You will learn easy next one. Most of the work is using libraries and frameworks anyway.
I'm sure it does! Jumping between any technology in general helps you appreciate and understand parts of whatever else you've been working with. The point I was trying to make was that he had cherry picked a bunch of languages that aren't really applicable in this situation.
Interesting read. Hm I don't use map frequently outside of a concurrent.futures thread/process pool but it does happen. Usually when I am going to have to apply multiple maps or something ugly and complicated where a list comprehension would also look like a complete shit show.
i guess it's `map(func, iterable)` so as to more closely mimic the mathematical `f(x)`
I always go for comprehensions. I only use lambda and map when I‚Äôm doing things with dataframes. Thanks for the explanation ‚Äî I wasn‚Äôt sure if you meant ‚Äúbetter‚Äù from a speed or efficiency standpoint or something else. I think there are more arguments for comprehensions than against them, so I wanted to see where you were coming from.
It depends, I'd go for `map(attrgetter('address'), persons)` over the comprehension equivalent anytime.  But yea most of the time comprehension is better.
`for (Type item: primitiveArray) {}` showd up in Java 5. if you're thinking of the Java 1.2 iterator, that only worked on collection objects. You could have converted a primitive array to a List or Stream using java.util.Arrays .asList() or .stream() which then had .iterator() methods to return iterator. Was that a common java pattern for primitive arrays though?
What I'm saying is that the risk of adopting unpythonic patterns from other languages outweighs any perceived benefits. How many other languages push KISS, DRY and EAFP concepts like Python? Like I said earlier, the best way to improve is to study more abstract computational and software engineering principles. And like I also said, there are some lifelong Pythonistas out there that demonstrate this, specifically here's [another example from Raymond Hettinger](https://twitter.com/raymondh/status/1254139958870171648): 
 that analyzes solutions for the very common question of "How do I test if all elements of an Iterable are equal to each other?". By putting together knowledge about Python, the theory of computation such as complexity and software engineering concepts such as interoperability and DRY:

> Thinking about the problem abstractly, the minimal amount of work required is:
> 
> * Examine input element one at a time
> * Use `__eq__` to determine if it has been seen before
> * Stop when a mismatch is found
> * Keep only one other comparison element in memory

[He notes that](https://twitter.com/raymondh/status/1254139958870171648) his favorite solution is:

    def all_equal(iterable):
        "Returns True if all elements are equal to each other"
        g = groupby(iterable)
        return next(g, True) and not next(g, False)

because of the functions following properties:

> * Accepts any iterable
> * Single pass
> * Runs at C speed
> * Has early-out
> * Only requires `__eq__`
> * Minimal memory

as well as the Zen concept of [The usual thing to do is factor-out the solution into a well named function.](https://twitter.com/raymondh/status/1254135046778220545)

Another example: the Python API for [splitting strings](https://stackoverflow.com/a/16645307/2718295). Compare it to the new hotness, Rust, which contaminates its namespace with [at least 4 methods to do the same thing](https://twitter.com/d_merej/status/1271721529659842562).
Well, doesn't really matter if it's enterprise or not. Its just a lot more code and depth with it. It just doesn't feel proper or clean. Just my opinion though! It gets the job done and obviously there's a huge market for developers for it.
That's a great idea, my mistake in the past we're biting off way too much way too soon. Like "ok I made a script to determine how old I'll be in x years, time to automate my whole job!" So now I'm taking it more slow and structured, focusing on the standard library first before branching out.
Similar I assume to pyodide? Basically python and a lot of the python data science stack compiled to web assembly

Edit: googled and yeah web assembly is one of the ways it can be delivered
Using some kind of framework?
Very true. And who in their right mind would use pure C in a situation where they *could* use C++? I mean for every "task" there are languages tailored to it and, as you said, the only real use case for C these days are maybe microcontrollers or firmware.
First paragraph of any wikipedia page is pretty much an ELI5.
It's another person, but I agree. Efficiency might differ, but insignificantly so for most cases. Profile when in need and doubt.
That is a fair point. There is really no reason to use an iterator for a primitive array rather than a for-each loop.

I will comment that java 5 came out 16 years ago. It is not really a new feature.
What I'm saying is that for the programming level of the people that this advice is geared towards, a lot of your objections don't make any sense. From what I've seen on this subreddit, many of the readers and poster are beginning self learners. While learning other programming languages may introduce some other stylings into their code, it also helps them see why doing things the pythonic way is a good thing. Most people, especially ones who are learning on their own, don't just "study more abstract computational and software engineering principles", it's not helpful. A lot of people learn best by doing.

&#x200B;

As for the engineering principals you mentioned, DRY and KISS are quite common. I wouldn't say python pushes them more than any other language. They are lessons to be learned by everyone who goes on this journey, not just python programmers. As for EAFP, although that is a more specific python paradigm, it isn't something that I'd fear to be lost by tinkering in other places.

&#x200B;

Finally I want to say that I'm not sure what the code example you gave is supposed to illustrate or add. I don't think saying an experienced Pythonista can solve a problem is a good yard stick for people starting out.
Perhaps. E.g. Vaadin.
I meant learning C could be helpful to understand basic - and perhaps abstracted/advanced - concepts in Python. I did not mean using pure C in any situation nowadays for people like "us". Guido himself still writes C and shell codes - depends on the task obviously. You borrow concepts from these low level languages.
C is very helpful for understanding how the computer actually works. There is very little "on top of C" the way the python and many other languages handle some of the machine's details.

There are definitely people that write C, but it's mostly just people writing firmware for embedded systems or the very small portion of the population that is doing things like inventing Python and Linux.

In our modern world, computers are fast enough that the slowdown from using an interpreter or JVM is probably not worth the time to write and debug an entire program in C. Technically, you *could* do anything in C, but you *could* just write in binary too :)

From an educational standpoint it's probably a great language. I have barely written any pure C, but writing C++ is definitely educational (especially if you stick to older standards).
That‚Äôs why I learned to code by making personal projects, I absolutely hated my programming classes, I hate learning concepts, but I love making something.
Its about the time that I started to realize how neural networks worked that I realized I was a neural network.
Yeah it takes a while but I recently got to that point as well. I don‚Äôt have much opportunity to use code for work but I genuinely enjoy tinkering with it in my free time. Potential future utility is just a nice plus.

That would also be my advice do most. Do it for fun, not as a career move. It will be easier if you allow yourself to take your time and enjoy the process of learning and building.
Thank you so much for this! Really needed it with the slow struggle of trying to grasp everything.
I can relate to this experience. When I first started out, I found learning to code kind of boring and tedious, and this made me wonder if I should continue. It's a lot easier to enjoy coding (or anything, really) when you find interesting projects to work on and care more about building things rather than just learning to code for the sake of learning to code. It gives the learning a sense of purpose. The thing is that when you first start out, you're too inexperienced to think of ideas for neat projects because you might not know how to navigate APIs, basic language features and constructs, syntax, how state is managed by a software application, etc.. To learn this, you have to push through the tedium. :-)
This gave me a self-confidence boost. I'm in my first semester learning Python and I've been picking it up OK but there are times I struggle and question everything. I guess practice makes perfect right? Thanks for the pick-me-up
I recently realized this too. I have been dabbling in python/Django for about two years. I know basic html and css because of this. Just started the Odin project, and my baseline knowledge got me through the foundations part very quickly. Python isn't Javascript, but as people have said once you know concepts, the syntax is the only difference. I'm enjoying the high of thinking im slick. Can't wait to start the node.js part and hit that brick wall of reality. 


The other downside is I've completely checked out from my day job. I know where I want to go now.
Yeah I am in the same boat trying to get a hang of coding. I must say the process is painfully slow so really need to be tolerant but hopeful.
I have a large hobby project that is in C/Objective C. Here is a screenshot: [https://imgur.com/LetT75S](https://imgur.com/LetT75S).

No one believes me when I say this - but it is 200k lines of code. It's an iPad game.

I'm going to caution you about loving coding.

You love HAVING coded something that works well. Coding itself sucks, and if you tell yourself you love it, you will be lying to yourself. I have had bugs that literally make me want to quit coding for good. I am not a professional programmer in large part because I hate coding.

But, I LOVE playing my game over the years and seeing tangible progress.

This is what it looked like 2 years ago: [https://imgur.com/tbnK3go](https://imgur.com/tbnK3go)

Day to day, the progress is negligible and at times zero. I divide it into 45-90 minute cycles and the most I will do in a day (like on a weekend) is three of those. I wouldn't do it for fun, and my goal is to never do this again (after its done).
Struggling with neural nets now and hoping to be at that transition point soon. Thank you for this post OP.
Thank you so much for this, I‚Äôm having self doubts but I‚Äôm slowly trying to better myself
Lol, I‚Äôm the same.  I‚Äôm feeling very dumb right now trying to learn react/JavaScript but in reality it‚Äôs only because I don‚Äôt know a lot yet.

The little I know now is leaps snd bounds over what I knew a month ago. 

I‚Äôve always enjoyed coding but I rarely have the time to keep at it snd then I forget what I‚Äôve learned.
Is there something you wish you knew sooner when you started, to speed up the learning? Or do you think programming beginners just over-estimate the time it takes to learn the language (learning French and Japanese also takes years - but programmers seem to think they can learn to be efficient programmers within a month or two)
Awesome! I've been a software engineer for 7 years and everyday I learn something new. That's why I love this career. And you have the knowledge to build cool shit that can possibly evolve into a self-sustaining business. Good luck!
This gives me hope!

Not long started and I'm struggling with a fair bit, making me feel a bit defeated but I'm not loosing hope coding every other day and the days I'm not coding I'm constantly thinking of how to try and do this and that, hopefully soon I can feel more confident!!

Thanks for the hopeful message!
It‚Äôs like solving sudoku  puzzles for a living or something
Aw, I am so happy for you! I myself love coding too, it is so much fun! Keep going buddy:)
Damn nice, I've realized I officially hate coding
I learned from people who hated coding beginning, but those who stuck it out apply it to personal project learn to love it. The common thing I found is engagement of the process to personal projects which they cared about. In today age we have many information and tools to teach people, but these instructors need to understand not all people learn one way to understand the subject.
Wait for him to know what debugging is
I'm so confused it ain't funny.... But I'll live.
I‚Äôm not ashamed to admit I‚Äôm the opposite. I find coding to be mildly interesting but frankly difficult to grasp. I learn it purely because every job needs it out there, but sometimes I wish I had been born before computers so I didn‚Äôt have to worry about learning this skill.
Just this week I was getting all frustrating with a little network automation script I've been working on. It's nothing special but has grown by double the lines as I've done exception handling, logging, and better flow logic.

It's my first public github repo. No one will clone it, cause it's basically the same as Ansible but without all the professionalism. Still, I like it and I'm kinda proud. It's also easier to use than Ansible, so I may distribute to my team anyhow.

Hardest part is to think of what to do next. Because I work in infrastructure I think I want to create my own AWS CI/CD pipeline, but I'm not that sure where to start.
So basically PyQT adds GUI to any type of script? Especially the Cybersecurity And automation related scripts?
5 years ? Sheesh man I still fucking suck but good job bro üëè
I signed up to my under graduate degree wanting to design software more than write it.  I hated java (my first language). It wasn't until we got into low level guts if the system stuff or jacky scripts to do cool things did I really enjoy programming.  

That's what I hate about the what language you should learn first debates.  I don't think the language really maters.  What matters is that learners learn cool shit. Even if it isn't their bag it has to be cool enough that they know that it is considered someone's bag.
Will you propose?
I don't really use coding for work outside of the occasional powershell script (I do clientside IT) but as someone with pretty bad ADHD coding is a really cathartic hobby because you're constantly triggering the endorphin reward mechanisms through solving repetitive mini problems. At the beginning of the pandemic I quickly got burnt out on gaming but discovered I actually enjoy making games more than I do playing them and now coding and designing game concepts is my new favorite hobby. I'm definitely not any good at it from a professional standpoint but I'm having a blast and may even someday try publishing something, but for now I'm just happy doing it for me.
What a coincidence! I am still stuck a the hating stage and need some help. How do I code a program that creates word documents out of different word components? Basically I have some word components and I want to build up different documents out of these components with a varying number and combination of them...
I appreciate this. I want to love it, but I‚Äôm just starting out with 0 background and can only fit in learning sessions here and there without a solid schedule which is frustrating because I end up forgetting most of what I learned.
Same! I do not code often but when I have something I can do it becomes super fun and interesting. Each time I learn something new whether it was my intention to or not.

I do want to learn how to build a gui, so maybe I can make my next project revolve around that.
can relate to this by a lot
Thankyou for this! I really needed to hear this!
I remember hating it when I started, but fu*k I just wa ted to learn it sooo badly. Only reason I hated it is cuz I didn't understand SHIT. 

List? Loop? For loop? What in the fuck is a function? Why is there self here but not there ? Class? 


But when the day came and suddenly something clicked it was was like the best high ever. Months of reading, coding, copy pasting code I didn't understand at all but worked. 


My attitude going in was all wrong also, I thought it was back to school as in "revise revise revise cuz everything has to be remembered".


Things started going better once i realized you don't remember coding, it's math, you understand it, but you remember "formulas" or say syntax/algorithm/why a x is there but using a y gives an ValueError etc.

Then one day I just got it. 

I'm faaaaar from pro, but I can actually make apps, software, servers, code etc knowing what and why I'm doing. Sure I use google, but I always make it a rule to understand WHY this code works and how I could have come to that answer myself before moving on.

Learning, and loving it while learning

Edit: 2 years in now, had a 4 months break in the middle but currently studying computer engineering now, all thanjs to me pushing myself through the phase were I felt like a retard
To quote Bob Ross. The hard part is not how to paint but what to paint.
That‚Äôs exactly how I learn.  I wanted to learn php years ago so I created an e-commerce platform that scrapped data from my supplier and imported into my store.  Never coded before but having to figure out a real project you start to learn how to diagnose and fix problems which is an invaluable skill when coding.
yes you are
If you dont need it for work, see if you can automate something at home or for someone else. Helps with the practice
I did is as both for For fun and as a career move
I‚Äôve always learned how to code by diving into a project to build. Definitely the best way to learn.
If you have free time you can try helping other python programmers who are making open source software
Hmm looking back, the most important thing is to not compare yourself to others.  It's very easy to get down on yourself doing that, everyone learns at their own pace.  I remember when I was a freshman in college I felt very stupid because I come from a low income background and didn't understand anything relative to my peers.  For example, I didn't know what the sum sign (sigma) is at 18 years old; I've never seen it until then.  I remember the Assistant Instructors in my class looking down on me around this time and I was questioning if I should even be in college.  I ended up graduating with a 3.9 GPA and most likely earn more than 90% of my graduating class.  I remember running into that same assistant instructor as we interviewed for the same job a few years later, and I had numerous internships under my belt at this time and was a better candidate than him despite him being my senior and I'll never forget the look in his eyes; he seemed like he couldn't believe I was doing so much better than him; angry, almost.

&#x200B;

Sorry for the rant, I think it's relevant though; don't let others make you doubt yourself.  As for speeding up learning, as soon as you learn the basics, create something you're passionate about.  Something that you'd use in your day to day life.  Do this for 2 reasons: 

&#x200B;

1) Creating projects from front-to-back are the best ways to learn how to develop professional code.  You'll run into many obstacles and learn how to pass them, and after building a few applications you'll have a much more professional skillset than if you simply followed a course.

&#x200B;

2) You'll be much more motivated to keep coding something you're interested in or that is useful.

&#x200B;

Hope that helped a little, good luck!
I  see debugging as solving a crime. Sometimes someone else is a culprit, but most of the times, you yourself are. However, the process is similar to solve a crime I guess. You look for clues, hints. Follow leads on the next possible module that is the reason of the issue. 

Also, it's in debugging that you learn most. Realize mistakes. Over time realize patterns that cause issues and so on
I'm still learning but I did quite a bit of research on what I should learn for building Python GUIs.  I researched PySimpleGUI, Tkinter, Kivvy, and PyQt.  PyQt seemed to be the best in my opinion for desktop apps, and for the most part yes you can build a GUI for most scripts.  Automation related scripts absolutely (that's what I'm building currently) and Cybersecurity I'm not too sure but most likely.
Trust me, I've been there.  You're at the hardest part.  If I could give any advice to you: give yourself time.  Be kind to yourself.  Even if you're forgetting a lot, you're remembering *some* and that's what matters.  Keep at it, get over that little hump where everything feels foreign, and once you have even a basic understanding it will open up a whole different perspective.  Good luck
a very good neural network
Which I do. Still, not as much time to put theory in to practice as I would like but as I said, I mainly do it for fun.
Same
Can you explain your process in more detail
Yes can u please explain, did u know the basics or u directly jumped to a random project and started working on it by breaking down the different functions, but what if u miss out some functions which are not present in that particular project but used elsewhere in other python projectd
Appreciate that! Definitely feels like a completely foreign language, I guess it‚Äôs all about practice and consistency like with everything else.
